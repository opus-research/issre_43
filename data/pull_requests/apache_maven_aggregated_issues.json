[
  {
    "_id": "66243ef9a14f302d393b5739",
    "number": 1474,
    "body": "https://issues.apache.org/jira/browse/MNG-8100\r\n\r\nhttps://github.com/apache/maven-integration-testing/pull/335",
    "head_branch": "MNG-8100-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8100] Upgrade default plugin bindings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243efaa14f302d393b573a",
    "number": 1473,
    "body": "https://issues.apache.org/jira/browse/MNG-8101",
    "head_branch": "MNG-8101-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8101] Upgrade Parent to 42"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243efba14f302d393b573b",
    "number": 1472,
    "body": "Avoid warning like:\r\n\r\n```\r\nNode.js 16 actions are deprecated. Please update the following actions to use Node.js 20: actions/checkout@v3, actions/setup-java@v3, actions/upload-artifact@v3. For more information see: https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/.\r\n```\r\nand be up to-day",
    "head_branch": "maven-3.9.x-update-gh",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update GitHub actions to v4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243efca14f302d393b573c",
    "number": 1471,
    "body": "Backport of simplex transfer listener.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8031",
    "head_branch": "maven-3.9.x-MNG-8031",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8031] Backport concurrent friendly transport listener (#1471)\n\nBackport of simplex transfer listener.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8031"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243efda14f302d393b573d",
    "number": 1470,
    "body": "The site already contains all the required information, point user at it. It would be insane for us to maintain all these information here as well (as example shows, it was totally outdated).\r\n\r\nKeep it short, and just keep pointers to proper info sources.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8011",
    "head_branch": "maven-3.9.x-MNG-8011",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8011] Neuter the README (#1470)\n\nThe site already contains all the required information, point user at it. It would be insane for us to maintain all these information here as well (as example shows, it was totally outdated).\r\n\r\nKeep it short, and just keep pointers to proper info sources.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8011"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243efea14f302d393b573e",
    "number": 1469,
    "body": "Backport of the Maven4 feature: ignore transitive repositories.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8030",
    "head_branch": "maven-3.9.x-MNG-8030",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8030] Backport itr: ignore transitive repositories (#1469)\n\nBackport of the Maven4 feature: ignore transitive repositories.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8030"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243effa14f302d393b573f",
    "number": 1468,
    "body": "That contains file locking bugfix.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8094",
    "head_branch": "maven-3.9.x-MNG-8094",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8094] Resolver 1.9.19 (#1468)\n\nThat contains file locking bugfix.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8094"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f00a14f302d393b5740",
    "number": 1467,
    "body": null,
    "head_branch": "MNG-8025",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f01a14f302d393b5741",
    "number": 1466,
    "body": "Clarify that the extension used outside repositories for pom files usually differs\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "clarify-pom-extension",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f01a14f302d393b5742",
    "number": 1465,
    "body": "This moves the repository metadata mdo + generated model into the v4 API.  This is a requirement before implementing the resolver provider on top of the V4 API.",
    "head_branch": "metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8084] Include repository metadata in the API (#1465)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f02a14f302d393b5743",
    "number": 1464,
    "body": "This saves 15-20% on the startup time on the maven project for example.\r\nOn bigger projects, most of time is spent in loading projects, so this becomes negligible.",
    "head_branch": "boot-jline-async",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Lazily create builders during transformations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f03a14f302d393b5744",
    "number": 1463,
    "body": null,
    "head_branch": "MNG-8043-doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f04a14f302d393b5745",
    "number": 1462,
    "body": "See org.apache.maven.internal.impl.DefaultTransportProvider",
    "head_branch": "component-by-mistake",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "This is NOT a component (#1462)\n\nSee org.apache.maven.internal.impl.DefaultTransportProvider"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f05a14f302d393b5746",
    "number": 1461,
    "body": "also drop model-transform deleted in MNG-7877\r\n\r\npublished to https://maven.apache.org/ref/4-LATEST/",
    "head_branch": "MNG-8084-doc",
    "is_a_fork": false,
    "comments": [
      "notice that there is a chicken and egg problem between resolver and Maven: api-impl depends on resolver supplier, which depends on resolver-provider",
      "Supplier is to be moved to api-impl, as it is not meant to be used in Maven (only in projects that \"run maven without maven\", ie. resolver integrations w/ maven models). The plan is to move supplier to api-impl, and have resolver supplier depends on api-impl instead. @gnodet ",
      "See https://github.com/apache/maven/pull/1460",
      "Fwiw, this will be outdated with https://github.com/apache/maven/pull/1465 and later https://github.com/apache/maven/pull/1457",
      "> Fwiw, this will be outdated with #1465 and later #1457\r\n\r\nAlso maven-compat is not used anymore (but only included in the distribution for compatibility).",
      "![maven-4 0 0-alpha-14-SNAPSHOT](https://github.com/apache/maven/assets/84022/021f8313-b34b-4b9b-95e1-ca6697745521)\r\n\r\nIt's not readable unfortunately, but it started from generated graph, so it's correct with current master.",
      "> ![maven-4 0 0-alpha-14-SNAPSHOT](https://private-user-images.githubusercontent.com/84022/321970671-021f8313-b34b-4b9b-95e1-ca6697745521.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTI5MjI3MDgsIm5iZiI6MTcxMjkyMjQwOCwicGF0aCI6Ii84NDAyMi8zMjE5NzA2NzEtMDIxZjgzMTMtYjM0Yi00YjliLTk1ZTEtY2E2Njk3NzQ1NTIxLmpwZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MTIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDEyVDExNDY0OFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTMxYzQwOGU4OTllNTZjYWNlMTMzMTFlMDc0Zjk2OTAwM2M5Mzc2NzE0NDBmNzRjYzhkMTU0YTg2YmZkMWYwMzYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0._SfX7Kr1noVKChnkU4nTEzkCp5I0vzeNivFk45WT03g)\r\n> \r\n> It's not readable unfortunately, but it started from generated graph, so it's correct with current master.\r\n\r\nNote that the ultimate goal would be, imho, to have a maven-compat3 with all the things from maven 3, and have `maven-core` not depend on the v3 artifacts / api anymore.",
      "PR updated https://maven.apache.org/ref/4-LATEST/\r\nobjective of this PR is to show what we have today, that will help us define targets: schema will evolve when useful",
      "I'm happy to update it if you tell me what remains to do: it's just a small update of an OpenOffice document, save as .svg and run the update `prepare-svg.sh` script\r\n\r\n> It's not readable unfortunately, but it started from generated graph, so it's correct with current master.\r\n\r\nBTW, I'd be interested to be able to create this type of automatic drawing as a reference",
      "> I'm happy to update it if you tell me what remains to do: it's just a small update of an OpenOffice document, save as .svg and run the update `prepare-svg.sh` script\r\n> \r\n> > It's not readable unfortunately, but it started from generated graph, so it's correct with current master.\r\n> \r\n> BTW, I'd be interested to be able to create this type of automatic drawing as a reference\r\n\r\n`mvn org.fusesource.mvnplugins:maven-graph-plugin:reactor` does render something automatically...\r\n![reactor-graph](https://github.com/apache/maven/assets/84022/5c08ebe7-3822-497f-9884-3a726dc3d48a)\r\n",
      "> > I'm happy to update it if you tell me what remains to do: it's just a small update of an OpenOffice document, save as .svg and run the update `prepare-svg.sh` script\r\n> > > It's not readable unfortunately, but it started from generated graph, so it's correct with current master.\r\n> > \r\n> > \r\n> > BTW, I'd be interested to be able to create this type of automatic drawing as a reference\r\n> \r\n`mvn org.fusesource.mvnplugins:maven-graph-plugin:reactor -Dhide-version -Dhide-group-id -Dhide-scope=test -Dhide-transitive` gives the following:\r\n![reactor-graph](https://github.com/apache/maven/assets/84022/f169795a-f77b-4594-8bb3-c7f3e02b6751)\r\n\r\n\r\n\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f06a14f302d393b5747",
    "number": 1460,
    "body": "~~Currently is under vote, so using staging repository, that will be removed once/if vote passes.~~ Vote passed, but Maven Central sync is busted.\r\n\r\nChanges:\r\n* update Resolver to 2.0.0-alpha-10\r\n* Maven must not depend on supplier, it should be other way around.\r\n\r\nOnce this is merged (and released), Resolver gets these changes:\r\nhttps://github.com/apache/maven-resolver/pull/454\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8091",
    "head_branch": "MNG-8091",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8091] Update Resolver to 2.0.0-alpha-10 (#1460)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f07a14f302d393b5748",
    "number": 1459,
    "body": "These are dependency types to be used when dependency is \"self contained\", or is wanted be used as such: handle if like it has no dependencies, if any.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8089",
    "head_branch": "MNG-8089",
    "is_a_fork": true,
    "comments": [
      "@desruisseaux ping",
      "I suggest to provide only the `fatjar` type, without the `classpath-fatjar` and `modular-fatjar` for now, and modify the Javadoc of `fatjar` for saying that it goes on the classpath only. The reason is that a JAR file can contain at most one `module-info.class` file. So either the `module-info` or all JARs had to be removed, or either they were merged in some way. But the latter would be tricky, and the result would still not be the same as the separated JARs. So I think it is probably safer to said that a fat JAR is never modular.",
      "This makes perfect sense, will do the changes soon",
      "Updated PR"
    ],
    "commit_messages": [
      "[MNG-8089] Introduce fat-JAR types (#1459)\n\nThese are dependency types to be used when dependency is \"self contained\", or is wanted be used as such: handle if like it has no dependencies, if any.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8089"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f08a14f302d393b5749",
    "number": 1458,
    "body": "fix to #1445 \r\ncherry-picked from 3.9.x #1456 done against #1444",
    "head_branch": "MNG-4840-4-update",
    "is_a_fork": false,
    "comments": [
      "@kwin WDYT, is it ok with this PR in this branch too?"
    ],
    "commit_messages": [
      "[MNG-4840] fix requiredMavenVersion description #1445"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f09a14f302d393b574a",
    "number": 1457,
    "body": "This provides a re-implementation of `maven-model-builder` and `maven-resolver-provider` on top of the Maven 4 api.\r\nAs a consequence, apart from projects, plugins and actual build, all the v4 api and resolution should be available outside of maven with just the api, `maven-di`, `maven-api-impl` and the resolver.\r\n\r\nNote that the builder and resolver provider are not yet used by maven.",
    "head_branch": "model-builder-v4",
    "is_a_fork": true,
    "comments": [
      "Maybe \"v3 mode\" should use old stuff, and \"v4 mode\" should use this new stuff? As we also have \"v3 scopes vs v4\" scopes, and v4 scopes should not be used with v3 modes...",
      "> Maybe \"v3 mode\" should use old stuff, and \"v4 mode\" should use this new stuff? As we also have \"v3 scopes vs v4\" scopes, and v4 scopes should not be used with v3 modes...\r\n\r\nHow would you decide which one is used ?\r\nThe `Maven3ScopeManagerConfiguration` is not used atm afaik.  I just copied those to accommodate the recent changes.\r\n\r\nI'm working on rewriting the ProjectBuilder on top of the new ModelBuilder, to at least fix any regression using unit tests and integration tests.\r\n\r\nOnce we have full support, we could think of having two different builders at the same time if we need to configure them differently.  What kind of changes would you see ?",
      "By project model version?\r\n\r\nThere is an important distinction:\r\n[mvn3](https://github.com/apache/maven/blob/master/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/scopes/Maven3ScopeManagerConfiguration.java#L137-L142) vs [mvn4](https://github.com/apache/maven/blob/master/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/scopes/Maven4ScopeManagerConfiguration.java#L165-L170) RUNTIME resolution scopes, former suffer from https://issues.apache.org/jira/browse/MNG-8041 while latter has it fixed.",
      "> By project model version?\r\n> \r\n> There is an important distinction: [mvn3](https://github.com/apache/maven/blob/master/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/scopes/Maven3ScopeManagerConfiguration.java#L137-L142) vs [mvn4](https://github.com/apache/maven/blob/master/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/scopes/Maven4ScopeManagerConfiguration.java#L165-L170) RUNTIME resolution scopes, former suffer from https://issues.apache.org/jira/browse/MNG-8041 while latter has it fixed.\r\n\r\nRight now, mvn3 scopes are not used, so we need those at all ?",
      "I think you are right: mvn4 scopes are \"superset\" of those of mvn3, plus, if you compare their ordering, they remain in same place (ordering by \"width\"), this is the two config \"dump\" output (they have main method that produces this):\r\n\r\nMaven3\r\n```\r\nMaven3 defined dependency scopes:\r\ncompile (width=3500)\r\n  Query : [ALL]\r\n  Presence: [main-compile, test, main-runtime]\r\n  Main project scope: main-compile\r\nsystem (width=2500)\r\n  Query : [ALL]\r\n  Presence: [main-compile, test, main-runtime]\r\n  Main project scope: main-compile\r\nruntime (width=2500)\r\n  Query : [BY_BUILD_PATH(runtime)]\r\n  Presence: [test, main-runtime]\r\n  Main project scope: main-runtime\r\nprovided (width=1500)\r\n  Query : [BY_BUILD_PATH(compile), SELECT(test, runtime)]\r\n  Presence: [main-compile, test]\r\n  Main project scope: main-compile\r\ntest (width=500)\r\n  Query : [BY_PROJECT_PATH(test)]\r\n  Presence: [test]\r\n  Main project scope: test\r\n```\r\n\r\nMaven4\r\n```\r\nMaven4 defined dependency scopes:\r\ncompile (width=4000)\r\n  Query : [ALL]\r\n  Presence: [main-compile, main-runtime, test-compile, test-runtime]\r\n  Main project scope: main-compile\r\nsystem (width=3000)\r\n  Query : [ALL]\r\n  Presence: [main-compile, main-runtime, test-compile, test-runtime]\r\n  Main project scope: main-compile\r\nruntime (width=2500)\r\n  Query : [BY_BUILD_PATH(runtime)]\r\n  Presence: [main-runtime, test-runtime]\r\n  Main project scope: main-runtime\r\nprovided (width=2000)\r\n  Query : [BY_BUILD_PATH(compile), SELECT(test, runtime)]\r\n  Presence: [main-compile, test-compile, test-runtime]\r\n  Main project scope: main-compile\r\ncompile-only (width=1000)\r\n  Query : [SINGLETON(main, compile)]\r\n  Presence: [main-compile]\r\n  Main project scope: main-compile\r\ntest (width=1000)\r\n  Query : [BY_PROJECT_PATH(test)]\r\n  Presence: [test-compile, test-runtime]\r\n  Main project scope: test-compile\r\ntest-only (width=500)\r\n  Query : [SINGLETON(test, compile)]\r\n  Presence: [test-compile]\r\n  Main project scope: test-compile\r\ntest-runtime (width=500)\r\n  Query : [SINGLETON(test, runtime)]\r\n  Presence: [test-runtime]\r\n  Main project scope: test-runtime\r\nnone (width=0)\r\n  Query : []\r\n  Presence: []\r\n  Main project scope: null\r\n```",
      "A few more changes seem to be necessary for allowing `maven-plugin-tools` and `maven-plugin-testing` to compile. I created a commit there, but no pull request yet because I'm not sure if I got the intent right: https://github.com/Geomatys/maven/commit/60a60503dda6e352a680774d7e3ab3b71c2b5c11"
    ],
    "commit_messages": [
      "[MNG-8084] New model builder and resolver provider"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f0aa14f302d393b574b",
    "number": 1456,
    "body": "fix mistake done in #1444 and clarify in javadoc",
    "head_branch": "MNG-4840-update",
    "is_a_fork": false,
    "comments": [
      "Thanks, looks good to me. But master needs partial revert as well (https://github.com/apache/maven/commit/740dae43ca3ccf7692f37edf3184387e5666ca6b)."
    ],
    "commit_messages": [
      "[MNG-4840] fix requiredMavenVersion description #1444"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243f0ba14f302d393b574c",
    "number": 1455,
    "body": "@hboutemy\n\n",
    "head_branch": "fix-split-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f0ca14f302d393b574d",
    "number": 1454,
    "body": null,
    "head_branch": "javadoc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "configure javadoc groups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f0da14f302d393b574e",
    "number": 1453,
    "body": "https://issues.apache.org/jira/browse/MNG-8085\r\n\r\nequivalent to #1452 ",
    "head_branch": "MNG-8085-4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8085] switch png+imagemap to svg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f0ea14f302d393b574f",
    "number": 1452,
    "body": "https://issues.apache.org/jira/browse/MNG-8085",
    "head_branch": "MNG-8085",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8085] switch png+imagemap to svg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243f0fa14f302d393b5750",
    "number": 1451,
    "body": null,
    "head_branch": "packaging-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Complete Packaging in v4 api (#1451)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f10a14f302d393b5751",
    "number": 1450,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "raw-unactivated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f11a14f302d393b5752",
    "number": 1449,
    "body": "Simple fix to handle the exception case correctly.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-8082",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f12a14f302d393b5753",
    "number": 1448,
    "body": "The lifecycle is defined as a tree, of phases, each phase being split with a `pre:` phase and a `post:` phase.  Each phase is given a list of timing constraints: a phase from the same lifecycle (`compile` must be executed after `sources`), a phase in project dependencies (`compile` must execute after `compile-only` project dependencies have reached the `ready` phase), or a set of children project dependencies (to re-define aggregators, not yet implemented).\r\nThe default lifecycle is defined in the [`DefaultLifecycleRegistry`](https://github.com/gnodet/maven/blob/lifecycle/maven-core/src/main/java/org/apache/maven/internal/impl/DefaultLifecycleRegistry.java#L225-L252)\r\n\r\nNote that there are a few changes with the Maven 3 default lifecycle: it's a graph, so `sources` does not always execute after `resources`, not `compile` after `resources`.  Also, unit tests and integration tests have been moved to the `verify` phase which is run last inside the `build` phase, but not in the `package` phase.  The goal is to have a phase (here, `package` which can run all the reactor with no tests).  In order to be compatible, old phases are mapped to new ones using [aliases](https://github.com/gnodet/maven/blob/lifecycle/maven-core/src/main/java/org/apache/maven/internal/impl/DefaultLifecycleRegistry.java#L258-L270).\r\n\r\nIt's missing the ability to create some scheduling constraints in the POM and to define custom phases.  All executions in a give phase such as `compile` or `process-sources` are executed sequentially, but it would be nice to be able to execute them in different subphases, so that they could be executed concurrently.\r\n\r\nWIP, related to #1411 and #1429",
    "head_branch": "dynamic-phases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f13a14f302d393b5754",
    "number": 1447,
    "body": "Using the available `ModelInterpolator`, evaluate profile activations after having interpolated any embedded property constructs among configurations of activations only.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [X] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\nICLA on file\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-5235@39x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f14a14f302d393b5755",
    "number": 1446,
    "body": "Evaluate profile activations after having interpolated embedded property constructs.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [X] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\nICLA on file\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-5235@4x",
    "is_a_fork": true,
    "comments": [
      "Second iteration:\r\n * test case fails without updated code\r\n * using `MavenTransformer` for interpolation",
      "The code looks good.\r\n\r\nHowever, what's the real use case for that ? It seems actually unrelated to MNG-5235, in a sense that the behaviour on this project is not modified by this PR. My understanding is that the use case for MNG-5235 is to activate profile based on project properties, while this PR is about interpolating activation property values (but not based on project properties).  Also note that properties defined from activated external profiles are already taken into account, see [MNG-2276](https://issues.apache.org/jira/browse/MNG-2276).\r\nShould this require a different JIRA issue ?  I'm not really sure to understand the use case, specifically why you'd want the activation part to possibly change from a maven run to another ?",
      "My use case is to be able to compare environment variables. Specifically, with GitLab CI, if `CI_COMMIT_REF_NAME` has the same value as `CI_DEFAULT_BRANCH`, then I want to enable stricter enforcer checks. For my purposes I'd rather the project make assumptions about the CI than vice versa.",
      "> My use case is to be able to compare environment variables. Specifically, with GitLab CI, if `CI_COMMIT_REF_NAME` has the same value as `CI_DEFAULT_BRANCH`, then I want to enable stricter enforcer checks. For my purposes I'd rather the project make assumptions about the CI than vice versa.\r\n\r\nNot sure how you'll model that with the limited support we have right now, do you ?\r\nMaybe we should extend the model activation to support a simple language which provide basic operations such as `=` and `!=`.  Something like:\r\n```\r\n<property>\r\n  <expression>${env. CI_COMMIT_REF_NAME} = ${env. CI_DEFAULT_BRANCH}</expression>\r\n</property>\r\n```\r\nAt some point, it may be easier to provide a custom Maven extension that would compute a system property based on those two variables so you can easily activate a profile based on the computed property.  Maven 4 added `org.apache.maven.api.spi.PropertyContributor` for such use case (to have a cleaner api, but it's possible in Maven 3 using the `AbstractMavenLifecycleParticipant`.  See https://github.com/trustin/os-maven-plugin/tree/master and https://github.com/trustin/os-maven-plugin/pull/74 \r\nAn example",
      "Hmm, my approach was, e.g.:\r\n\r\n```\r\n<activation>\r\n  <property>\r\n    <name>env.CI_COMMIT_REF_NAME</name>\r\n    <value>${env.CI_DEFAULT_BRANCH}</value>\r\n  </property>\r\n</activation>\r\n```\r\n\r\n...which seems fine to me 🤷 ",
      "personally i do it in the sh part of the yaml:\r\n\r\n````\r\ncase ${DEPLOY_ENV:-dev} in\r\n  dev)\r\n    export SCRIPTS_DEPLOY_DEPLOYMENT_PROFILES=\"-Pshared-dev -Dmonitoring.enabled=true\"\r\n    export SCRIPTS_DEPLOY_DEPLOYMENT_ALVEOLUS=\"minikube\"\r\n    ;;\r\n  *)\r\n    export SCRIPTS_DEPLOY_DEPLOYMENT_PROFILES=\"-P$DEPLOY_ENV\"\r\n    export SCRIPTS_DEPLOY_DEPLOYMENT_ALVEOLUS=\"${SCRIPTS_DEPLOY_DEPLOYMENT_ALVEOLUS:-all-in-one}\"\r\n    ;;\r\nesac\r\n\r\n# this shared script just runs mvn with the SCRIPTS_DEPLOY_... options but the magic literally happens in previous case and is open bar on the CI\r\n/usr/local/bin/deploy.sh\r\n````\r\n\r\nNo assumption needed all is detected in the build pipeline (where it belongs) and project itself just enables to activate it or not.",
      "@rmannibucau but your pipeline has to know/hope that the project has such a `shared-dev` profile. For my purposes my pipeline wouldn't know what such a profile might be named, but my org's projects do know what CI they run on (in the worst case, migrating to a different CI--which won't actually happen, but if it did--it would be pretty easy to make XXX CI emulate GitLab CI by setting the same environment variables).",
      "> Hmm, my approach was, e.g.:\r\n> \r\n> ```\r\n> <activation>\r\n>   <property>\r\n>     <name>env.CI_COMMIT_REF_NAME</name>\r\n>     <value>${env.CI_DEFAULT_BRANCH}</value>\r\n>   </property>\r\n> </activation>\r\n> ```\r\n> \r\n> ...which seems fine to me 🤷\r\n\r\nYes, obviously that'll work 😊",
      "@mbenson see it the other way, `if (magic) -DdoItSlow` then you can use this new fake variable accordingly. You can migrate but the easiest is a custom base image IMHO which does this for you and abstracts this logic.",
      "@rmannibucau I think it's okay if different users want to interact with Maven in different ways. Your preference does not invalidate mine.",
      "@gnodet I agree that MNG-5235 has a different ask than this PR addresses. I will open a new issue and rewrite this commit message accordingly (pushed to same branch name to keep using this PR).",
      "@mbenson well a mini language got rejected multiple times on the list - this is where this sh solution comes from. ultimately I'm for having a multipass filtering to filter as much as we can but my personal preference would be to do it on the full model and not specifically for profiles. That said, while v4 has the exact same code than v3.9 I'm happy.",
      "> @mbenson well a mini language got rejected multiple times on the list - this is where this sh solution comes from. ultimately I'm for having a multipass filtering to filter as much as we can but my personal preference would be to do it on the full model and not specifically for profiles. That said, while v4 has the exact same code than v3.9 I'm happy.\r\n\r\nIt seems it can be solved really easily though:\r\n  https://github.com/kpiwko/el-profile-activator-extension/blob/master/src/main/java/com/redhat/jboss/maven/elprofile/ElProfileActivator.java",
      "> > @mbenson well a mini language got rejected multiple times on the list - this is where this sh solution comes from. ultimately I'm for having a multipass filtering to filter as much as we can but my personal preference would be to do it on the full model and not specifically for profiles. That said, while v4 has the exact same code than v3.9 I'm happy.\r\n> \r\n> It seems it can be solved really easily though: https://github.com/kpiwko/el-profile-activator-extension/blob/master/src/main/java/com/redhat/jboss/maven/elprofile/ElProfileActivator.java\r\n\r\nThat makes we wonder if this PR targets the wrong location.  Should we modify the [`PropertyProfileActivator`](https://github.com/apache/maven/blob/83949a73841683fc5a3347d9c93a71737ed2911b/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/PropertyProfileActivator.java) instead ?",
      "That was what I originally considered, but I quickly came to the opinion that as soon as we did it that way, someone would want to use some such property to match a Java version, etc., and that this would be a generally applicable way to solve a broad cross section of similar use cases.",
      "> That was what I originally considered, but I quickly came to the opinion that as soon as we did it that way, someone would want to use some such property to match a Java version, etc., and that this would be a generally applicable way to solve a broad cross section of similar use cases.\r\n\r\nHow could that (solving similar use cases) be considered a bad thing ?",
      "> > That was what I originally considered, but I quickly came to the opinion that as soon as we did it that way, someone would want to use some such property to match a Java version, etc., and that this would be a generally applicable way to solve a broad cross section of similar use cases.\r\n> \r\n> How could that (solving similar use cases) be considered a bad thing ?\r\n\r\nThat's what I wanted to know 😮 \r\ni.e., I think this approach takes care of them in one place before everybody comes asking for similar changes to be made everywhere.",
      "From email thread:\n\nGuillaume Nodet <gnodet@apache.org> wrote:\n> I thought you were referring to having a small language in the\nproperty activation...\n\nI hadn't noted the discussion when it took place before, but fwiw I also lean in the direction that an embedded language might be going too far. At the same time EL, as in the extension you mentioned, seems a fine choice, but feels fine to leave that as an extension.\n\nMatt\n",
      "> From email thread:\r\n> \r\n> Guillaume Nodet [gnodet@apache.org](mailto:gnodet@apache.org) wrote:\r\n> \r\n> > I thought you were referring to having a small language in the\r\n> > property activation...\r\n> \r\n> I hadn't noted the discussion when it took place before, but fwiw I also lean in the direction that an embedded language might be going too far. At the same time EL, as in the extension you mentioned, seems a fine choice, but feels fine to leave that as an extension.\r\n> \r\n> Matt\r\n\r\n@mbenson  I just spotted that the model builder performs some interpolation for file base activation in https://github.com/apache/maven/blob/5029cc238ce5ce03b0fb431a278889f8b788c0a7/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java#L896-L943\r\nWould it make sense to move this code in this block to interpolate ?  It seems more intuitive that the two interpolations would actually be performed at the same time...",
      "That is possible, sure. I'll take a look in a bit.\r\n\r\nUPDATE: Yes, if there is already an \"interpolate activations\" activity taking place in the model builder, I agree it makes sense to add the expanded functionality there. In an early iteration of this work I encountered test failures relating to file paths when I allowed the interpolations to remain in the model, but reviewing this section of the code I see that that probably related to the relative path computation that's being done for file activations, so hopefully by taking that into consideration I can avoid such issues this time around.",
      "Here is the version that enhances `DefaultModelBuilder`. Can anyone offer ideas on the likely shape of unit tests for this approach?",
      "By way of [some] testing, I went ahead and expanded the profile activation model validation to consider the whole activation, similarly to how we are now interpolating the whole activation.\r\n\r\nHere I could be construed as misusing the `MavenTransformer` to walk the activation; if this is deemed offensive we could consider generating a similar `MavenWalker` class.",
      "Thanks @gnodet and @rmannibucau for the approvals! What is the next step?",
      "> Thanks @gnodet and @rmannibucau for the approvals! What is the next step?\r\n\r\nI'm nearly done with http://github.com/apache/maven/pull/1457, so as soon as that one is merged, we'll be able to port this PR to the new model builder easily.",
      "@gnodet do you have any thoughts on the best way to backport this feature to Maven 3? https://github.com/apache/maven/pull/1447 is my original PR, but a wildly divergent implementation may cause headaches in future. I wonder if it would make sense [from a future merge perspective] to stabilize the v3 impl and include the same commit in this branch prior to being replaced by the actual v4 implementation. 🤔 ",
      "@mbenson I've rebased the PR and ported it to the new v4 model builder, please have a look",
      "hi @gnodet ... so with the implementation having been largely duplicated from model-builder into api-impl, would the similar code remain in both places indefinitely, or will the model-builder code eventually point directly to api-impl?",
      "> hi @gnodet ... so with the implementation having been largely duplicated from model-builder into api-impl, would the similar code remain in both places indefinitely, or will the model-builder code eventually point directly to api-impl?\r\n\r\nThe code in model-builder should be deprecated, it will be kept for compatibility with 3.x plugins for some time, and then removed.  Not sure about the exact dates though.  The point is that model-builder is not really used anymore in beta-1.",
      "Incorporated `noneMatch` as suggested. IDK how I missed that pair of `Stream` methods all this time. 😕 ",
      "@gnodet again, thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f15a14f302d393b5756",
    "number": 1445,
    "body": "same as #1444 for Maven 4",
    "head_branch": "MNG-4840-documentation-4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-4840] document requiredMavenVersion in plugin descriptor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f16a14f302d393b5757",
    "number": 1444,
    "body": "https://issues.apache.org/jira/browse/MNG-4840\r\n\r\nbut not integrated in documentation until now https://maven.apache.org/ref/3.9.6/maven-plugin-api/plugin.html\r\n",
    "head_branch": "MNG-4840-documentation",
    "is_a_fork": false,
    "comments": [
      "@hboutemy I am confused by this PR. MNG-4840 iss not about plugin descriptors but about POMs. The required Maven version in plugin descriptors has been added in https://issues.apache.org/jira/browse/MNG-7570 just recently and is only evaluated in Maven4+.",
      "I see you added the field to .mdo in https://github.com/apache/maven/pull/832/files#diff-62346c3118817c527a41027bab54349b463add4c91df98f95984012304378c87\r\n\r\nthe fact is that mdo was not used to generate code, but only to document XML against existing hand-written PluginDescriptor class https://github.com/apache/maven/blob/maven-3.9.x/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java\r\n= something that IIUC changed in Maven 4 somewhere during the alphas\r\n\r\nthen the missing field in 3.9 .mdo was \"just\" a documentation bug that I fixed in this PR: now I understand that it became a missing field in code in Maven 4, and you already added it in #832 :)\r\n\r\n",
      "As you can see in https://github.com/apache/maven/blob/eae39474cbb5a88048cea76709321f20e2f42b0b/maven-plugin-api/src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptorBuilder.java#L42-L106 this field was never evaluated by the parser (although already contained in the PluginDescriptor object). Therefore effectively prior to Maven 4 it is only ever set via https://github.com/apache/maven/blob/eae39474cbb5a88048cea76709321f20e2f42b0b/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultMavenPluginManager.java#L191 through the according POM field.\r\nTherefore I would keep documenting that this is only supported with Plugin Descriptor v1.1 and Maven 4 only. Prior it was just a shortcut for accessing the plugin's POM prerequisites element.",
      "history is complex: when the fiels has been introduced in 3.0.2, it has been filled https://github.com/apache/maven/commit/40fb1880ae8ea832e822e975168919bc56239dca#diff-8a738ae425b439d6a5288b118ce793df13ee73db9cfcb183f7b41633e72abad9L141\r\n\r\nnot the place where I'd expect it, but used\r\nI don't know if this is still done in Maven 3.9: I'd be interested to see how the change in Maven 4 did manage the lacking field",
      "still there in Maven 3.9.x https://github.com/apache/maven/blob/maven-3.9.x/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultMavenPluginManager.java#L189\r\n\r\noh, now I see https://issues.apache.org/jira/browse/MNG-7570\r\nthe field is in plugin descriptor java code since 3.0.2, but not filled from plugin descriptor XML but from plugin artifact's pom.xml!!!\r\n\r\nthen now I understand that documenting the field in descriptor XML is a mistake\r\noh, I did not get that, it's something to be clarified in the field javadoc for 3.9.x and probably mdo\r\n",
      "and re-reading Jira issue description https://issues.apache.org/jira/browse/MNG-7570 \"there is currently no element for this on the plugin descriptor\", it was true for 4 but not completely for 3.x (field exists in java but not XML)\r\n\r\npfew, what a situation!",
      "I'll propose a PR to fix my mistakes"
    ],
    "commit_messages": [
      "[MNG-4840] document requiredMavenVersion in plugin descriptor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243f17a14f302d393b5758",
    "number": 1443,
    "body": "https://issues.apache.org/jira/browse/MNG-4840\r\n\r\nbut not integrated in documentation until now https://maven.apache.org/ref/3.9.6/maven-plugin-api/plugin.html",
    "head_branch": "MNG-4840-documentation",
    "is_a_fork": false,
    "comments": [
      "wrong target branch..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f18a14f302d393b5759",
    "number": 1442,
    "body": "This makes all the new scopes implemented out of the box, but MNG-8041 still stands (is unsolved).\r\n\r\nRelated PR https://github.com/apache/maven-resolver/pull/445\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MRESOLVER-512\r\nhttps://issues.apache.org/jira/browse/MNG-8088",
    "head_branch": "MRESOLVER-512",
    "is_a_fork": true,
    "comments": [
      "@gnodet ported over changes happened in https://github.com/apache/maven-resolver/pull/445 : removal of system scope handler.",
      "Added both scope manager config to maven4. \r\n\r\nIMO, when mvn4 builds mvn3 project (model Ver 4.0.0), it should use mvn3 scope manager, but when uses newer model, it should use mvn4 scope manager. But, Maven4 should _always_ use scope manager, to not let Resolver 2 fallback to \"legacy\" mode."
    ],
    "commit_messages": [
      "[MNG-8088] Using Resolver with MRESOLVER-512 (#1442)\n\nThis makes all the new scopes implemented out of the box, but MNG-8041 still stands (is unsolved).\r\n\r\nRelated PR https://github.com/apache/maven-resolver/pull/445\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MRESOLVER-512\r\nhttps://issues.apache.org/jira/browse/MNG-8088"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f19a14f302d393b575a",
    "number": 1441,
    "body": "First step at making the Maven 4 API usable outside a full maven process.\r\nThis PR includes:\r\n  * move Maven 4 api implementation classes from `maven-core` into a new `maven-api-impl` module\r\n  * implement native services for settings and toolchains builders, make v3 implementation wrap the new ones\r\n  * various API enhancements related to the two services above\r\n\r\nThe Maven 4 API is not completely usable outside Maven yet, but here's a [working example](https://github.com/gnodet/maven/blob/lw-api/maven-api-impl/src/test/java/org/apache/maven/internal/impl/standalone/TestApiStandalone.java#L39-L49):\r\n```\r\n        Session session = ApiRunner.createSession();\r\n\r\n        ArtifactCoordinate coord = session.createArtifactCoordinate(\"org.apache.maven:maven-api-core:4.0.0-alpha-13\");\r\n        Map.Entry<Artifact, Path> res = session.resolveArtifact(coord);\r\n        assertNotNull(res);\r\n        assertNotNull(res.getValue());\r\n        assertTrue(Files.exists(res.getValue()));\r\n\r\n        Node node = session.collectDependencies(session.createDependencyCoordinate(coord));\r\n        assertNotNull(node);\r\n        assertEquals(8, node.getChildren().size());\r\n```\r\n",
    "head_branch": "lw-api",
    "is_a_fork": true,
    "comments": [
      "IIUC, this moves things out from maven-core to somewhere at line of maven-resolver-provider?",
      "> IIUC, this moves things out from maven-core to somewhere at line of maven-resolver-provider?\r\n\r\nYes, the dependencies are:\r\n  * maven-api-core (so the whole maven api)\r\n  * maven-di (the dependency injection framework)\r\n  * maven-resolver-provider\r\n  * and obviously the resolver\r\n\r\nThe next step would be to make maven-resolver-provider and maven-model-builder built on top of the maven 4 model to make it even more lightweight."
    ],
    "commit_messages": [
      "[MNG-8084] Make the v4 api usable outside the Maven runtime (#1441)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f1aa14f302d393b575b",
    "number": 1440,
    "body": null,
    "head_branch": "unneeded-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unneeded dependencies in maven-di (#1440)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f1ba14f302d393b575c",
    "number": 1439,
    "body": "Bumps [ognl:ognl](https://github.com/jkuhnert/ognl) from 2.5.1 to 3.0.12.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/jkuhnert/ognl/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ognl:ognl&package-manager=maven&previous-version=2.5.1&new-version=3.0.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/maven/network/alerts).\n\n</details>",
    "head_branch": "dependabot/maven/maven-compat/src/test/resources/ognl-ognl-3.0.12",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump ognl:ognl from 2.5.1 to 3.0.12 in /maven-compat/src/test/resources (#1439)\n\nBumps [ognl:ognl](https://github.com/jkuhnert/ognl) from 2.5.1 to 3.0.12.\r\n- [Release notes](https://github.com/jkuhnert/ognl/releases)\r\n- [Commits](https://github.com/jkuhnert/ognl/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: ognl:ognl\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f1ca14f302d393b575d",
    "number": 1438,
    "body": "https://issues.apache.org/jira/browse/MNG-8075\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8075",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8075] Allow project.baseUri in repository.url"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f1da14f302d393b575e",
    "number": 1437,
    "body": "Currently there is some vague definition of a \"build pom\" versus a \"consumer pom\":\r\n\r\n- https://maven.apache.org/studies/consumer-pom/\r\n- https://cwiki.apache.org/confluence/display/MAVEN/Build+vs+Consumer+POM\r\n\r\nthere are also some plugins around to work with this e.g.\r\n\r\n- \r\n- https://tycho.eclipseprojects.io/doc/latest/tycho-packaging-plugin/update-consumer-pom-mojo.html\r\n- https://www.mojohaus.org/flatten-maven-plugin/plugin-info.html\r\n\r\nbut there are some issues:\r\n\r\n1. Maven makes some assumptions about its \"file\", e.g setting the file\r\n2. changes the basedir\r\n3. Even though there is a setPomFile method that do not change the\r\n4. basedir e.g. a parent ref by default would be broken\r\n5. once we change the file, there is a mismatch between the pom on disk\r\n6. and the model\r\n7. it is not possible for a plugin to know the original file and the\r\n8. consumer file, e.g. if I want to deploy the original file e.g. with classifier \"pom-build\"\r\n9. because of this usually \"consumer pom plugins\" generate the the new\r\n10. pom to a new file in the project root, where it actually not belongs to and leaves the file even after mvn clean if no special actions are taken.\r\n\r\nThis enhance the MavenProject with one more method set/getConsumerPom that fills this gap, then plugins working on the consumer pom can set the file there and where it then is used by other plugins.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-8072) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8072",
    "is_a_fork": true,
    "comments": [
      "Hi @laeubi , wonder how consistent it is with https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/internal/transformation/impl/DefaultConsumerPomArtifactTransformer.java#L94, shouldn't it hook there? We should also ensure the API is clearly defined for that part if we enable the consumer pom to not be handled automatically - guess we can let it be automatic for now since you can decorate the transformer but not 100% sure of the use case - typically flatten does not need this new API.",
      "I currently only looking at [3.9.x](https://github.com/apache/maven/tree/maven-3.9.x) where I can't see this is used right now?\r\n\r\nAlso here the problem is that it only ever will allow one transformer, iterative transformation is not possible and I can't access the artifact / file until it is finalized already.\r\n\r\nAnd integration would be quite trivial, e.g in this case simply replace `project.getFile()` by `project.getConsumerPomFile()` and you are done :-)",
      "> I currently only looking at [3.9.x](https://github.com/apache/maven/tree/maven-3.9.x) where I can't see this is used right now?\r\n\r\nWe should always start from master otherwise the method will be lost in a coming version and will be pointless for almost all users I fear.\r\n\r\n> Also here the problem is that it only ever will allow one transformer, iterative transformation is not possible and I can't access the artifact / file until it is finalized already.\r\n\r\nGuess it is a matter of extension wiring but ultimately we can discuss moving the transformation but doing it before limits the side effects of the new models which is probably good but my point was more to not add a new consumerPom file which is not about consumer pom and just yet another attached artifact - we already have this feature without this new method.\r\n\r\n> simply replace project.getFile() by project.getConsumerPomFile() and you are done :-)\r\n\r\nWaiting your PR on all existing plugins using `getFile()` ;). Switching a method is not that trivial there. For example you break flatten plugin.\r\n",
      "> but my point was more to not add a new consumerPom file which is not about consumer pom and just yet another attached artifact - we already have this feature without this new method.\r\n\r\nBut you can't modify an artifact (or should not) + there is no way for a plugin to participate as part of the mojo-execution with an extension but this is required as usually you want ti to be configured and you want to control order, e.g. usually one want maybe first tycho inject some things, then clear others with flatten-maven, maybe then finally something what maven do by default....\r\n\r\n> Waiting your PR on all existing plugins using getFile() ;). Switching a method is not that trivial there. For example you break flatten plugin.\r\n\r\nIt won't break anything ... plugins not supporting this will simply never set this and then getConsumerPom() will return the \"traditional\" file like today. Also not \"all\" plugins need to be adjusted, just these that care about build vs consumer pom...",
      "> there is no way for a plugin to participate as part of the mojo-execution\r\n\r\nYes, this is why I mentionned we can need to revisit a but the current API. Once again my main concern was that the \"consumerPom\" API has no link with consumer pom at all and we must converge to maven 4 (even if we backport to 3.9) cause otherwise your API will be dead, even in 3.x when we'll backport things.\r\nUltimately it looks more - in v3 world - to attached artifacts so it is doable without the new API to me - short term.\r\nLong term we need to find a better lifecycle but can need some list discussion?\r\n\r\n> It won't break anything ... plugins not supporting this will simply never set this and then getConsumerPom() will return the \"traditional\" file like today. Also not \"all\" plugins need to be adjusted, just these that care about build vs consumer pom...\r\n\r\nexactly so if you do you are no more compatible with the chain you describe earlier since the right pom will not be consumed downside so we need to be vigilant and see if it is an issue to break all the existing ecosystem or if we don't care plugins using this new (to be defined) API will not be compatible with existing plugins.",
      "Whatever we choose \"will not be compatible with existing plugins\", but without anything offered no plugin can be adjusted so we are in an endless cycle...\r\n\r\nAlso feel free to propose an alternative I just want:\r\n\r\n1. simple and 3.9.x compatible I don't want to wait for glorious future of Maven 4 where everything will be perfect an clean\r\n2. must work incrementally (e.g. plugin A can create an initial consumer pom and plugin B can further enhance/adjust that)\r\n3. no need for extensions, delegations, side effects (e.g. modify the original pom location is an undesired side-effect)",
      "1. for me it is the promise whatever great you do you will not be able to use it so \"-1\" (dont see it as a blocker more as a \"you can but dont cry later\") to work on anything not on master\r\n2. think it is thinking wrong, consumer pom should be automatically provided by the transformation of the transformed pom which guarantee the v4.0.0 compat - if it is incremental we loose that. So I think we should work on the native model then let the consumer pom be automatically handled\r\n3. +1",
      "1. You should not assume maven-core(-plugins) inability to adapt to never features to everyone, e.g. Tycho always uses latest maven and latest features\r\n2. \"by default\" Maven can't know what is desired for a consumer pom, and different users have different demands. It might can do some additional transformations (e.g. map 'new' constructs > 'old' constructs) but for example the initial model for Tycho is almost empty, then we will it dynamically of course not reflected in file as we don't want to dirty the build files of the user, what even maybe not exits at all as it is a pomless module... then tycho-update-consumer-pom performs some transformation (e.g. mapping p2 > real maven coordinates) and writes a new file, I can't see how maven could ever handle this automatically given that..\r\n3. ... where current solution has undesired side-effect and only looks at `project.getFile()` ....",
      "> You should not assume maven-core(-plugins) inability to adapt to never features to everyone, e.g. Tycho always uses latest maven and latest features\r\n\r\nI didn't at all, even the opposite if you read carefully. I just highlight you create a concurrent feature of something existing in latest version of the project - indeed it needs a few adjustment but it does not need the proposed PR.\r\n\r\n> \"by default\" Maven can't know what is desired for a consumer pom\r\n\r\nThen you don't speak about consumer pom which is well defined as a consummable pom by downstream builds (v4.0.0), anything else is not consumer pom and does not belong to core IMO - I suspect even if not sure you want some tycho meta but this is not about consumer pom IMHO, potentially main pom but consumer has another intent.\r\n\r\n>  I can't see how maven could ever handle this automatically given that..\r\n\r\nConsumer pom is built form the model, if you fill the model you get a valid consumer pom.\r\n\r\n> where current solution has undesired side-effect and only looks at project.getFile()\r\n\r\nIn maven 3 there isnt really a notion of consumer pom (we had some proto but no real API) so it is mainly about a single v4.0.0 pom you were able to mutate. Indeed it has side effects but similarly your consumer pom will have exactly the same since it has the exact same design and all plugins will not always agree on that (current pitfall).\r\nThis is why it is important to use the model IMHO and let the tranformer create a valid shareable and backward compat consumer pom.",
      "> Consumer pom is built form the model, if you fill the model you get a valid consumer pom.\r\n\r\nJust look here:\r\n\r\nhttps://github.com/apache/maven/blob/33788fd7fc33932639d1a600eada36e3cd015bfd/maven-core/src/main/java/org/apache/maven/internal/transformation/impl/DefaultConsumerPomArtifactTransformer.java#L79\r\n\r\nand here:\r\n\r\nhttps://github.com/apache/maven/blob/33788fd7fc33932639d1a600eada36e3cd015bfd/maven-core/src/main/java/org/apache/maven/internal/transformation/impl/DefaultConsumerPomArtifactTransformer.java#L109\r\n\r\nand finally here:\r\n\r\nhttps://github.com/apache/maven/blob/33788fd7fc33932639d1a600eada36e3cd015bfd/maven-core/src/main/java/org/apache/maven/internal/transformation/impl/DefaultConsumerPomBuilder.java#L201\r\n\r\nfor me it looks like it is reading this file, not the (in memory) pom ...\r\n\r\n> Then you don't speak about consumer pom which is well defined as a consummable pom by downstream builds (v4.0.0), anything else is not consumer pom and does not belong to core IMO - I suspect even if not sure you want some tycho meta but this is not about consumer pom IMHO, potentially main pom but consumer has another intent.\r\n\r\nI'm defiantly talking about consumer pom, because consumers ( == plain maven) wants to have a pom that they can consume without Tycho (Tycho itself don't need a physical pom.xml). So if you build some jar with Tycho you want it to be consumable after you deployed it to central by others (non Tycho users) like a traditionally hand written pom.xml",
      "> for me it looks like it is reading this file, not the (in memory) pom ...\r\n\r\nRight, it is an issue for any plugin contirbuting dependencies but we can solve it easily keeping a single consumer pom logic instead of duplicating it.\r\n\r\n> So if you build some jar with Tycho you want it to be consumable after you deployed it to central by others (non Tycho users) like a traditionally hand written pom.xml\r\n\r\nSame than if you build with model v > 4.0.0 you want to be consumed by v4.0.0 consumers (older maven, coursier, gradle, plain ivy etc), so the same solution should converge IMHO.",
      "That's why I started this PR, it maybe *could* be solved, but it currently is not solved ... so as soon as there is a solution this is probably obsolete ;-)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f1fa14f302d393b575f",
    "number": 1436,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove repetitive words (#1436)\n\nSigned-off-by: carrychair <linghuchong404@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f20a14f302d393b5760",
    "number": 1435,
    "body": "Currently if a multimodule build fails (either fast or at the end), the user gets a message in the log that reads:\r\n\r\n\"This project has been banned from the build due to previous failures.\"\r\n\r\nthis is correct but does not give a hint what has failed and one needs to investigate the build logs to get more details.\r\n\r\nThis now instead shows as part of the message the actual project that make it impossible to build this  one and is the reason for this project being banned.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-8069) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8069",
    "is_a_fork": true,
    "comments": [
      "Wouldn't it be better to add the cause when the project is banned rather than trying to reconstruct it later ? I wonder if we should enhance the [`blacklist()` method](https://github.com/apache/maven/blob/0b3246381d12e69deef63888d0db274fb49c6697/maven-core/src/main/java/org/apache/maven/lifecycle/internal/ReactorBuildStatus.java#L49) to be given a cause...\r\n\r\nAlso, what about providing two slightly  different messages, I think it's interesting to know if the project has been skipped because one project has failed (without the fail-at-end flag, do we actually need to display the failing projects for each skipped project, even unrelated ?) or it's actually an upstream project which caused the failure ?",
      "The problem is that if you have a multimodule build (lets say 300 modules) and use multithreading (so build messages are interleaved), and one of the projects fail in the middle you have a huge logfile full of \"banned\" messages but you need to find out what/where it actually fails, so the message without any context is quite useless and even if you find the erroneous project its not very helpful. So I though showing it at tat time might be more useful.\r\n\r\nAnother approach would be to simply not display the message at all, and instead give a summary at the end of build, e.g.\r\n\r\n ```\r\nThe following projects where not build due to previous failures:\r\n- a (depends on x that failed)\r\n- b\r\n- c (depends on b that was banned)\r\n```\r\n\r\nsadly currently this information is somehow spread across some places and I'm not sure why e.g. a listener was used instead of printing the message directly on `blacklist()` ...\r\n\r\nregarding `fae`/`ff` I think we can add such message of course but I didn't wanted to complicate things for a first draft, if you think its usefull I think it is quite easy to add,"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f21a14f302d393b5761",
    "number": 1434,
    "body": "This should be in fact prevented.\r\nAlso, model builder missed File uses are corrected.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8012",
    "head_branch": "MNG-8012",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8012] Warn if in-reactor BOM import happens (#1434)\n\nThis should be in fact prevented IMHO. Also, model builder missed File uses are corrected.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8012"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f21a14f302d393b5762",
    "number": 1433,
    "body": null,
    "head_branch": "fix-serialization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8024] Make WrapperProperties and WrapperList serializable (#1433)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f22a14f302d393b5763",
    "number": 1432,
    "body": "Session close may throw as well, factor that into global build outcome.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8062",
    "head_branch": "MNG-8062",
    "is_a_fork": true,
    "comments": [
      "I'm not sure I'm seeing the purpose of the new event, as the repository session is closed in a related code block.  In addition, this looks quite redundant with the `AbstractMavenLifecycleParticipant.afterSessionEnd` event...",
      "> I'm not sure I'm seeing the purpose of the new event, as the repository session is closed in a related code block. In addition, this looks quite redundant with the `AbstractMavenLifecycleParticipant.afterSessionEnd` event...\r\n\r\nAlso, considering the actual problem, which is https://github.com/apache/maven-resolver/pull/437, I wonder if the real need is to allow plugins to register callbacks to run at the end of the build somehow.  That's what was missing when writing this feature in install/deploy plugin and what caused the actual convoluted code.  We can think that other plugins may have the same need.\r\n\r\nFwiw, I'm not sure that the actual install/deploy of artifacts should be performed *while the session is being closed*.  I would assume such important task has to be done before actually closing the session."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f24a14f302d393b5764",
    "number": 1431,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-5726-maven3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-5726] Support regular expression matching in profile activation for (#1431)\n\nOS version\r\n\r\nThis requires using the reserved prefix \"regex:\" in the version element."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243f24a14f302d393b5765",
    "number": 1430,
    "body": "## ** ✅ The vote on Java 17 for Maven 4 has passed.**\r\n\r\nHowever, the vote was not for this PR in particular (code vote), but rather \r\na procedural vote.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-8061) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [X] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8061_java17",
    "is_a_fork": false,
    "comments": [
      "Related: https://github.com/apache/maven-site/pull/495\r\n"
    ],
    "commit_messages": [
      "[MNG-8061] Maven: Require Java 17 (#1430)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f26a14f302d393b5766",
    "number": 1429,
    "body": "This PR aims at defining a complete new lifecycle for Maven 4.  This lifecycle is enabled by default for easy testing  in this PR, which would be equivalent as running `mvn --builder=concurrent -T1C`.\r\n\r\nNote that the builder is fully concurrent, so that a project may not be executed in a single thread and continuously, rather, all mojos will be scheduled independently.  The builder displays a nice summary at the beginning (currently at `info` level).\r\n\r\n## Status\r\n\r\n* This PR suffers from bugs [MNG-7335](https://issues.apache.org/jira/browse/MNG-7335), [MNG-6843](https://issues.apache.org/jira/browse/MNG-6843) and all those long standing related bugs.  Those come back because the project lock has been disabled.  We may need to switch the other way around in maven-core, i.e. make `MavenProject` wrap `Project` which is immutable instead.  \r\n",
    "head_branch": "concurrent-lifecycle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f26a14f302d393b5767",
    "number": 1428,
    "body": null,
    "head_branch": "missing-annotations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Missing annotations on api (#1428)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f27a14f302d393b5768",
    "number": 1427,
    "body": null,
    "head_branch": "spi-service",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a SpiService marker interface (#1427)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f28a14f302d393b5769",
    "number": 1426,
    "body": null,
    "head_branch": "jline-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Extract JLine support into its own module (#1426)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f29a14f302d393b576a",
    "number": 1425,
    "body": null,
    "head_branch": "concurrent-cache-access",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix concurrent cache access (#1425)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f2aa14f302d393b576b",
    "number": 1424,
    "body": null,
    "head_branch": "pluggable-lifecycle-starter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make LifecycleStarter pluggable (#1424)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f2ba14f302d393b576c",
    "number": 1423,
    "body": null,
    "head_branch": "session-data",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use SessionData to store ProjectIndex (#1423)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f2ca14f302d393b576d",
    "number": 1422,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7976",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7976] Investigate MNG-6127 IT instability (#1422)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f2da14f302d393b576e",
    "number": 1421,
    "body": "OS version\r\n\r\nThis requires using the reserved prefix \"regex:\" in the version element.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-5726-regex-os-version-matching",
    "is_a_fork": false,
    "comments": [
      "Would it make sense to also support the easier `glob:` syntax then ?",
      "@gnodet Is there general support for matching globs built into Java (apart from Files NIO)? I haven't found anything and quick googling revealed https://stackoverflow.com/questions/1247772/is-there-an-equivalent-of-java-util-regex-for-glob-type-patterns. So I would say, regex is good enough for now.\r\n\r\n(I don't want to rely on external libraries like plexus-utils or maven-utils for such stuff TBH)",
      "> @gnodet Is there general support for matching globs built into Java (apart from Files NIO)? I haven't found anything and quick googling revealed https://stackoverflow.com/questions/1247772/is-there-an-equivalent-of-java-util-regex-for-glob-type-patterns. So I would say, regex is good enough for now.\r\n> \r\n> (I don't want to rely on external libraries like plexus-utils or maven-utils for such stuff TBH)\r\n\r\nFwiw, a workaround is already used in maven: https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/artifact/resolver/filter/ExclusionArtifactFilter.java\r\nMaybe we can move the code in its own class in maven-core and reuse it ?",
      "@gnodet Interesting. We can support `glob:` later once that refactoring is done. For now I would go with just `regex:`. Any concerns with that?",
      "> @gnodet Interesting. We can support `glob:` later once that refactoring is done. For now I would go with just `regex:`. Any concerns with that?\r\n\r\nNone..."
    ],
    "commit_messages": [
      "[MNG-5726] Support regular expression matching in profile activation for (#1421)\n\nOS version\r\n\r\nThis requires using the reserved prefix \"regex:\" in the version element."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f2ea14f302d393b576f",
    "number": 1420,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8060",
    "is_a_fork": true,
    "comments": [
      "@CrazyHZM I think we may conflict, but I'd really like to merge https://github.com/apache/maven/pull/1413 first as alpha-8 is out.",
      "> @CrazyHZM I think we may conflict, but I'd really like to merge #1413 first as alpha-8 is out.\r\n\r\n@cstamas \r\nDon't have any burden, merge yours first, I can resolve the conflict later :)\r\n"
    ],
    "commit_messages": [
      "Use isEmpty instead of length (#1420)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f2fa14f302d393b5770",
    "number": 1419,
    "body": "... else, the map seems empty and not dynamically populated.\n",
    "head_branch": "fix-property-contributors",
    "is_a_fork": true,
    "comments": [
      "This will actually allow https://github.com/trustin/os-maven-plugin/pull/74 to work"
    ],
    "commit_messages": [
      "[MNG-8006] Switch property contributors to use a lazy lookup (#1419)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f30a14f302d393b5771",
    "number": 1418,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-8057",
    "head_branch": "modello",
    "is_a_fork": true,
    "comments": [
      "Yet another case of https://issues.apache.org/jira/browse/MNG-7976\r\n\r\n```\r\nError:  Errors: \r\nError:    MavenITmng6127PluginExecutionConfigurationInterferenceTest.testCustomMojoExecutionConfigurator:66 » Verification Expected file was not found: /Users/runner/work/maven/maven/maven-integration-testing/core-it-suite/target/test-classes/mng-6127-plugin-execution-configuration-interference/project/mod-a/configuration.txt\r\n```"
    ],
    "commit_messages": [
      "[MNG-8057] Upgrade Modello to 2.3.0 (#1418)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f31a14f302d393b5772",
    "number": 1417,
    "body": "cherry pick for Maven 4 of #1395",
    "head_branch": "MNG-8029-master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8029] improve documentation about mirror settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f32a14f302d393b5773",
    "number": 1416,
    "body": "Just an experiment to have CI on Win run for this.",
    "head_branch": "why-not-file-toUri",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f33a14f302d393b5774",
    "number": 1415,
    "body": "For snapshot deploys\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8055",
    "head_branch": "maven-3.9.x-MNG-8055",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8055] Ability to force build number (#1415)\n\nFor snapshot deploys\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8055"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f34a14f302d393b5775",
    "number": 1414,
    "body": "For snapshot deploys\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8054",
    "head_branch": "MNG-8054",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8054] Ability to force build number (#1414)\n\nFor snapshot deploys\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8054"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f35a14f302d393b5776",
    "number": 1413,
    "body": "Make execution flow never invoke path.toFile, at least what model-builder and maven-resolver-provider matters.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8059",
    "head_branch": "paths-everywhere",
    "is_a_fork": true,
    "comments": [
      "@cstamas Seems my idea does work?",
      "@michael-o unsure, did you change anything that is in this PR? Maybe drive letter matters? As CI keeps talking about `D:`... I mean, why does the CI fail here if all ok?",
      "> @michael-o unsure, did you change anything that is in this PR? Maybe drive letter matters? As CI keeps talking about `D:`... I mean, why does the CI fail here if all ok?\r\n\r\nDidn't touch a bit. For me, your chagne runs locally with Java 11.",
      "Hm, I think CI uses Java 11 as well? :shrug: ",
      "~~This happened in resolver: it could allow now directory (classes in a directory) not only JAR files on \"system\" path:~~\r\n```\r\nMavenITmng3288SystemScopeDirTest.testitMNG3288:52->AbstractMavenIntegrationTestCase.fail:387 Usage of directory instead of file for system-scoped dependency did not fail dependency\r\n```\r\n\r\nThis change is undone in resolver: \"system\" artifact can be ONLY a regular file that exists.",
      "> Nice work\r\n\r\nThanks.\r\n\r\nSadly, this requires new alpha release of resolver (update + merge), so that is why would be good to have all Resolver PRs sorted out as I soon want to release it, to not have this PR rot for too long."
    ],
    "commit_messages": [
      "[MNG-8059] Paths everywhere (#1413)\n\nMake execution flow never invoke path.toFile, at least what model-builder and maven-resolver-provider matters. Using new methods from Resolver 2 alpha8 and also adding in relevant maven bits, as half of the work was already done.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8059"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f36a14f302d393b5777",
    "number": 1412,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/validate-ids-across-settings-and-model",
    "is_a_fork": false,
    "comments": [
      "@gnodet  ?",
      "If there are no concerns I am gonna merge end of next week @gnodet.",
      "@kwin Should we check that the repositories are actually not the same ? What's the problem is they point to the same repo ? If the user simply wants to override the policy in the settings ?\r\n\r\nBTW, I think the mapping from an `id` to a repository URI  should actually be defined in the local repository.  I think two projects using the same `id` but pointing to different repositories might be problematic too.\r\n",
      "@gnodet I now only emit warning if the URLs differ (https://github.com/apache/maven/commit/cd7aba6af6ff80a394e12b975a293fa07cb813c9)\r\n\r\n> I think the mapping from an id to a repository URI should actually be defined in the local repository\r\n\r\nNot sure how this can ever be achieved. I still want to be able to clone arbitrary projects and build it immediately without needing to tweak either my `settings.xml` or some other Maven configuration file.",
      "> @gnodet I now only emit warning if the URLs differ ([cd7aba6](https://github.com/apache/maven/commit/cd7aba6af6ff80a394e12b975a293fa07cb813c9))\r\n> \r\n> > I think the mapping from an id to a repository URI should actually be defined in the local repository\r\n> \r\n> Not sure how this can ever be achieved. I still want to be able to clone arbitrary projects and build it immediately without needing to tweak either my `settings.xml` or some other Maven configuration file.\r\n\r\n@cstamas can the resolver provide any help here ?",
      "Sadly nope.\r\n\r\nIMHO the best we can do is to accept the facts:\r\n* repository ID is the \"key\" (so assume URL is \"just\" an attribute) and limit ourselves onto ID clash checking\r\n* maybe as improvement, warn (optionally fail) the build, if there are two different IDs with _same_ URLs?\r\n* cases when same ID may be used for different reposes (or when different IDs are used for same repository) mostly stands for us, people that check out various project, having various \"repo naming conventions\" (as for example, ideally within one company or even forge, this should be unified) is we simply cannot handle.",
      "@gnodet I think we should also warn if the URL is equal but the `<enabled>` flags for either `<release>` or `<snapshot>` differ. Otherwise this might lead to subtle issues which are hard to debug.",
      "> I think we should also warn if the URL is equal but the <enabled> flags for either <release> or <snapshot> differ. Otherwise this might lead to subtle issues which are hard to debug.\r\n\r\nI decided to ignore those subtle differences for now."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f37a14f302d393b5778",
    "number": 1411,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-8052\r\n\r\n",
    "head_branch": "lifecycle",
    "is_a_fork": true,
    "comments": [
      "Mmh, it does not make sense to remove the new stuff from this PR, as the JIRA is about the new lifecycle.\r\nI'll remove the changes for #1457 so that it provide a simple API, and keep that one for the new lifecycle."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f38a14f302d393b5779",
    "number": 1410,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-8053\r\n\r\nFollowing up https://issues.apache.org/jira/browse/MNG-6609, we should now make the packaging activation for profiles a first class citizen in the model.\r\n\r\n",
    "head_branch": "profile-packaging-activation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8053] Profile activation by packaging in the POM (#1410)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f39a14f302d393b577a",
    "number": 1409,
    "body": "Before the upgrade to maven-resolver 4.0.0-alpha-7, it was necessary to go through the maven 3 layer to resolve project dependencies.",
    "head_branch": "use-v4-to-resolve-project-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use v4 api to resolve project dependencies (#1409)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f3aa14f302d393b577b",
    "number": 1408,
    "body": "https://issues.apache.org/jira/browse/MNG-8039",
    "head_branch": "MNG-8039",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8039] Don't change resolved artifact by DefaultProjectBuilder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f3ba14f302d393b577c",
    "number": 1407,
    "body": "- [DI] Fix constructor bindings, move discovery inside Injector, remove annotation processor\n- [API] Add a PluginXmlFactory\n- [API] Use ProjectScope for accessing compile source roots and resources\n",
    "head_branch": "di-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[API] Use ProjectScope for accessing compile source roots and resources\n\n# Conflicts:\n#\tapi/maven-api-core/src/main/java/org/apache/maven/api/services/ProjectManager.java"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f3ca14f302d393b577d",
    "number": 1406,
    "body": "This is just a hack, to test my theory. And it makes issue of the reproducer gone, it is working \"as expected\" and is not broken.\r\nhttps://lists.apache.org/thread/sgcqyz5trxngxb7r64hjnccb8btxhbrl\r\n\r\nThis PR makes the reproducer \"work as expected\", but is a hack. It produces output as this:\r\nhttps://gist.github.com/cstamas/ac44420f45b8f3e0a4d1ff285ff7bbde\r\n\r\nSo, module-a is reported as \"built\", despite being skipped. But the build time of 0.017s is telling :smile: that really nothing happened, but just skipped. Again: this is a hack, not a fix.\r\n\r\n---\r\n\r\nfull output of the build when using this PR \r\nhttps://gist.github.com/cstamas/81eaba944d6ffe695c6ed2a35a8b6d7f",
    "head_branch": "hack-for-skip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f3ca14f302d393b577e",
    "number": 1405,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8046",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8046] Upgrade github action version from v3 to v4 (#1405)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f3ea14f302d393b577f",
    "number": 1404,
    "body": "https://issues.apache.org/jira/browse/MNG-8045",
    "head_branch": "MNG-8045",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8045] Use DependencyGraphDumper instead of own implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f3ea14f302d393b5780",
    "number": 1403,
    "body": "As current one still blurs \"dependency scope\" and \"path scope\". Be clear about those two.",
    "head_branch": "scope-javadoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f3fa14f302d393b5781",
    "number": 1402,
    "body": null,
    "head_branch": "remove-empty-scope",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove empty dependency scope from the api (#1402)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f40a14f302d393b5782",
    "number": 1401,
    "body": "#1378  merged with master and pushed to maven so that we can actually collaborate on it (as the branch for #1378 is not writable)",
    "head_branch": "explicit-module-path",
    "is_a_fork": false,
    "comments": [
      "@desruisseaux fwiw, the failing test is [an integration test](https://github.com/apache/maven-integration-testing/blob/master/core-it-suite/src/test/java/org/apache/maven/it/MavenITmng5135AggregatorDepResolutionModuleExtensionTest.java). which belongs to the https://github.com/apache/maven-integration-testing repository and not https://github.com/apache/maven ...",
      "By looking at this PR, one thing occurred to me: today resolver-only users (those integrating Resolver w/o Maven) are able to fully resolve things as Maven would. If any of these become implemented in maven-core (as opposed to maven-resolver-provider), this \"functional equivalence\" is gone: JPMS will become handled by Maven, but Resolver integrators will not be able to resolve projects that do use these new functionalities. We need to keep eye on this fact.",
      "> By looking at this PR, one thing occurred to me: today resolver-only users (those integrating Resolver w/o Maven) are able to fully resolve things as Maven would. If any of these become implemented in maven-core (as opposed to maven-resolver-provider), this \"functional equivalence\" is gone: JPMS will become handled by Maven, but Resolver integrators will not be able to resolve projects that do use these new functionalities. We need to keep eye on this fact.\r\n\r\nIdeally, we'd come up with a way to use Maven 4 API outside of maven...",
      "> Ideally, we'd come up with a way to use Maven 4 API outside of maven...\r\n\r\nThat sound awkward to me :smile: like saying \"we will make servlet-api usable without servlet engine\", so something will need to implement it. And if not Maven, what?",
      "> > Ideally, we'd come up with a way to use Maven 4 API outside of maven...\r\n> \r\n> That sound awkward to me 😄 like saying \"we will make servlet-api usable without servlet engine\", so something will need to implement it. And if not Maven, what?\r\n\r\nMaven has all the container side: parsing the projects, analyzing the build and launching all the mojos in sequence.   That part is not really in the Maven 4 API which is about using maven model and resolver (well, apart from the Project).  But if we can provide a `Session`, the users should be able to use it, even if not running inside a plugin.  I don't see how it's really different from \"running maven resolver outside of Maven, but with the model and the resolver-provider\", i.e. Maven behaviour... without Maven.\r\n",
      "While I understand the technical relevance we should also likely discourage it since one of the goal is to own and not conflict without anything possible.\r\nThat said, this PR is way outside the scope of resolver users outside maven IMHO, it is very opiniated so shouldn't be a big blocker we cant compensate by a few standalone impl in practise as it is already the case, no?",
      "I'm not familiar with the relationship between Maven and Resolver. But if the `maven-resolver-provider` is used outside Maven with the expectation that it provides the same result, maybe we should move the PR there? It is not opinionated, as it is based on the intersection of two supplied information:\r\n\r\n* Which paths a JAR can be placed (information supplied by the JAR producer).\r\n* Which paths a plugin wants to use (information supplied by the JAR consumer).\r\n\r\nThe only heuristic part is what to do when the intersection of the above contains 2 or more paths.",
      "As a real world use case for testing the Maven improvements, there is the following scenario: a project depends on JUnit 5 with `compile` scope (because the project is a conformance test kit). Everything is JPMS: the project, JUnit 5 and their dependencies. JUnit 5 is itself splitted in many modules, including the `junit-jupiter-api`, `junit-jupiter-engine` and `junit-platform-commons` modules.\r\n\r\nFor a mysterious reason, Maven 3 places `junit-platform-commons` dependency on the module path, but `junit-jupiter-engine` on the class-path (verified with `mvn test --debug`). The consequence is that JUnit 5 cannot be launch. The JVM refuses to start with the following error message: _\"class org.junit.platform.engine.discovery.DiscoverySelectors (in unnamed module @0x3b2c72c2) cannot access class org.junit.platform.commons.util.Preconditions (in module org.junit.platform.commons) because module org.junit.platform.commons does not export org.junit.platform.commons.util to unnamed module @0x3b2c72c2\"_. Translation: **JUnit 5 cannot access its own internal classes!**\r\n\r\nThe reason why JUnit 5 cannot access its own classes is because `junit-platform-commons` allows access to its packages only to other JUnit 5 modules. It can be seen with the following command:\r\n\r\n```bash\r\njar --describe-module -f junit-platform-commons-1.10.2.jar\r\n```\r\n\r\nOutput snippet (reformatted):\r\n\r\n```\r\nqualified exports org.junit.platform.commons.util to\r\n     org.junit.jupiter.api\r\n     org.junit.jupiter.engine\r\n     etc...\r\n```\r\n\r\nBecause Maven puts `junit-platform-commons` on the module-path, access restrictions to that JAR are enforced. But because Maven puts `junit-jupiter-engine` on the class-path, that module is unnamed and consequently not recognized as a module in above list of modules allowed to access the `junit-platform-commons` internal packages. Thus the failure to launch JUnit.\r\n\r\nA workaround is to add the following lines in Surefire configuration for breaking module encapsulation:\r\n\r\n```xml\r\n<argLine>\r\n  --add-exports org.junit.platform.commons/org.junit.platform.commons.util=ALL-UNNAMED\r\n  --add-exports org.junit.platform.commons/org.junit.platform.commons.logging=ALL-UNNAMED\r\n</argLine>\r\n```\r\n\r\nWe should not be forced to apply such workaround. This real use case is another demonstration of the need to improve JPMS handling compared to what Maven 3 does. For testing if this pull request achieves that goal in Maven 4, we can test if it allows us to remove the above hack from [GeoAPI conformance pom.xml file](https://github.com/opengeospatial/geoapi/blob/9e4ff919ef56e52e05767cc85c88e5795081c883/geoapi-conformance/pom.xml#L133).",
      "@desruisseaux I'm not sure I understand the proposal, the \"workaround\" is needed per java, do you want surefire to do it implicitly or just use the right path? Isn't it solved by the type work you did and Guillaume reuses in maven 4? (trying to convert the statement in actions)",
      "The workaround is not needed per Java. It is needed because Maven 3 mixes class-path and module-path in an apparently random way. It is an example of case where putting the JAR on the class-path breaks the application. Just putting the `junit-jupiter-engine.jar` on the module-path, as it should be, fixes the issue and removes completely the need for the workaround.\r\n\r\nThis problem should indeed by solved by the path work. I reported this story as a real use case for testing that the proposal works. The criterion for considering that test as successful is to be able to remove any hacks in above-cited `pom.xml` file.",
      "Ok, so no action needed.\r\n\r\nside note: it is not random but an heuristic so does not always work indeed - don't ask me why default is not 100% the classpath, it is statically saner for 3rd parties even if it enforces more work for jpms apps, but we see the light so we'll drop it soon :crossed_fingers: .",
      "Should we go ahead and merge that one ? It does not really affects the current behaviour, so if we even find something missing, we can still fix it later...",
      "Fine for me. I added [one more commit](https://github.com/Geomatys/maven/commit/75d8e88046e38cb30134c34eb731c226f4dfce87) for allowing plugins to log warning to users when a dependency cannot be placed on any path.\r\n\r\nAfter the merge, I would like to try the new API in `maven-compiler-plugin` and create a new merge request for it.",
      "> Fine for me. I added [one more commit](https://github.com/Geomatys/maven/commit/75d8e88046e38cb30134c34eb731c226f4dfce87) for allowing plugins to log warning to users when a dependency cannot be placed on any path.\r\n> \r\n> After the merge, I would like to try the new API in `maven-compiler-plugin` and create a new merge request for it.\r\n\r\nSounds good.  You'll need to build the following branches:\r\n* https://github.com/apache/maven-plugin-tools/pull/242\r\n* https://github.com/apache/maven-plugin-testing/pull/39\r\n* https://github.com/apache/maven-compiler-plugin/pull/147\r\n\r\nThe above maven-compiler-plugin PR can be used as a basis, as it is already has all the migration to the v4 api.  If the underlying plexus-compiler API does not support the needed features to fully leverage the new jpms support, a possibility would be to change the m-compiler-p to simply wrap the `javac` compiler instead of trying to abstract all implementations.  The other one is the eclipse compiler, not sure they are really others.  If needed, we'd end up with two plugins, but they may ease the mapping of various options...    We discussed that with @cstamas ...",
      "WooHoo! :fireworks: ",
      "Thanks! I will try to start playing with the compiler plugin this weekend.",
      "> If the underlying plexus-compiler API does not support the needed features to fully leverage the new jpms support, a possibility would be to change the m-compiler-p to simply wrap the javac compiler instead of trying to abstract all implementations.\r\n\r\nI have not explored the Plexus compiler capabilities, but indeed I propose to use `javax.tools.JavaCompiler` instead. It is an interface, so it would hopefully be possible to create a wrapper around the Eclipse compiler. Maybe Eclipse would even do that themselves, since `javax.tools.JavaCompiler` is standard API."
    ],
    "commit_messages": [
      "[MNG-8015] Control the type of path where each dependency can be placed (#1401)\n\nCo-authored-by: Martin Desruisseaux <martin.desruisseaux@geomatys.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f41a14f302d393b5783",
    "number": 1400,
    "body": "This is WIP\r\n",
    "head_branch": "scope-manager",
    "is_a_fork": true,
    "comments": [
      "While I totally get the idea to refactor those bits in order to have a single source for scopes, this seems overly complicated and I don't see why the original enum is not sufficient.  The manager adds an additional layer for no benefit, as it does not provide any value over the enum definition."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f42a14f302d393b5784",
    "number": 1399,
    "body": "Followup of MRESOLVER-484:\r\n* move off deprecated resolver bits\r\n* introduce non-deprecated replacements\r\n* move existing to code to those new bits\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8043",
    "head_branch": "MNG-8043",
    "is_a_fork": true,
    "comments": [
      "@cstamas I've pushed an additional commit that simplify things a lot, let me know what you think, we can revert if needed.",
      "@gnodet looks good"
    ],
    "commit_messages": [
      "[MNG-8043] Dependency properties should be provided by Maven (#1399)\n\nFollowup of MRESOLVER-484:\r\n* move off deprecated resolver bits\r\n* introduce non-deprecated replacements\r\n* move existing to code to those new bits\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8043"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f43a14f302d393b5785",
    "number": 1398,
    "body": "This is just a attempt to fix reproducer, and to see what ITs have to say.\r\n\r\nhttps://github.com/cstamas/MNG-8041 is a reproducer: when asked `mvn provisio:provision` the lib will lack guava, while it should be part of runtime dependency (and actually IS, when the project is used as dependency!).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8041",
    "head_branch": "MNG-8041",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f44a14f302d393b5786",
    "number": 1397,
    "body": "Keep legacy/deprecated, but given it was marked as \"work in progress\" we may also just remove it.",
    "head_branch": "componentize-reader-source",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f45a14f302d393b5787",
    "number": 1396,
    "body": "This PR currently provides 3 unit tests for [MNG-7906](https://issues.apache.org/jira/browse/MNG-7906).\r\nThe first two tests (`testManagedDependencyBeforeImport` and `testManagedDependencyAfterImport`) work in an expected way, i.e. the managed dependency defined in the POM is the one used.\r\nThe third one (`testManagedDependencyTwoImports`) is the problematic one, showing that the algorithm used to resolve conflicting managed dependencies is almost (apart from the two first tests) a \"first wins\" and not a \"last wins\" or even better a \"closest then last wins\".\r\n\r\nIt was proposed to add a WARNING when such conflict happens.",
    "head_branch": "MNG-7906",
    "is_a_fork": true,
    "comments": [
      "I've added the improved unit tests to #1370 instead."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f46a14f302d393b5788",
    "number": 1395,
    "body": "https://issues.apache.org/jira/browse/MNG-8029",
    "head_branch": "MNG-8029",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-8029] improve documentation about mirror settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243f47a14f302d393b5789",
    "number": 1394,
    "body": "Update to Resolver 2.0.0-alpha-7, sort out TODO.\r\n\r\nThis is also one simple change \"sneaked in\" for RAT, to ignore local `.mvn` that is unrelated to all this, but does not make any harm. In turn, it allows dev local checkout to have various stuff set without\r\ndecorating those with headers or fighing RAT plugin.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8035",
    "head_branch": "MNG-8035",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8035] Update to Resolver 2.0.0-alpha-7 (#1394)\n\nUpdate to Resolver 2.0.0-alpha-7, sort out TODO.\r\n\r\nThis is also one simple change \"sneaked in\" for RAT, to ignore local `.mvn` that is unrelated to all this, but does not make any harm. In turn, it allows dev local checkout to have various stuff set without\r\ndecorating those with headers or fighing RAT plugin.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8035"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f48a14f302d393b578a",
    "number": 1393,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7954\r\n\r\nThis PR provides a minimalistic dependency injection library (the code is initially based on the ActiveJ project).\r\nThis provides\r\n * our own annotations for the user facing API in [`org.apache.maven.api.di` package](https://github.com/gnodet/maven/tree/dependency-injection/api/maven-api-di/src/main/java/org/apache/maven/api/di)\r\n * no dependency (especially ASM)\r\n * a simple programmatic access (not to be exposed, but used to actually populate the bean container) in [`org.apache.maven.di` package](https://github.com/gnodet/maven/tree/dependency-injection/maven-di/src/main/java/org/apache/maven/di)\r\n * an [index creation using APT](https://github.com/gnodet/maven/blob/dependency-injection/maven-di/src/main/java/org/apache/maven/di/processor/IndexAnnotationProcessor.java)\r\n \r\nThis is currently plugged into the plugin creation for plugins using the Maven 4 API.\r\nIt's currently not used for extensions or for the core maven components.  This would require extra support and a plexus compatibility layer (which is kinda what we want to get rid of).\r\n",
    "head_branch": "dependency-injection",
    "is_a_fork": true,
    "comments": [
      "> No strong issue for me but I'd like we review these points before merging then if it is ok just go:\r\n> \r\n> * do we want to copy all part of guice, guess in maven we just need a subtype\r\n\r\nThere's no guice dependency here.\r\n\r\n> * do we need bindinset notion, guess we can just lookup sets from a type now\r\n> * do we need all these flavors of structures (tuple for ex), using a list wouldnt be dramatic for us I think\r\n> * do we want all these notions in modules/binders \r\n> overall idea is to drop all we dont need from guice if possible to maintain the minimum we need\r\n\r\nAgreed.  There are a bunch of things that are unneeded to us.  That's because the library has been designed with programmatic definition in mind (using the ModuleBuilder DSL) while we need a declarative definition. So I do plan to trim down to what we really need. \r\nBut that's just a first draft and I need to try and plug this DI engine into plugin loading mechanism and see how it goes.  If I can port a few core plugins to this DI engine, I'll then start trimming it down.",
      "> There's no guice dependency here.\r\n\r\nWell some part of the code were highly inspired from Guice, this is what I meant.\r\n\r\n> So I do plan to trim down to what we really need.\r\n\r\nPerfect for me. Thanks a lot!",
      "Am just worried that we end up again as we did with old plexus: was our, but began to rot from one point... I'd be happies if we could simply circumvent this by something like https://github.com/eclipse/sisu.inject/issues/103",
      "> Am just worried that we end up again as we did with old plexus: was our, but began to rot from one point... I'd be happies if we could simply circumvent this by something like [eclipse/sisu.inject#103](https://github.com/eclipse/sisu.inject/issues/103)\r\n\r\nFeel free to give it a try, but I could not find an easy way without rewriting everything...",
      "Do we want something like `@Description` is? Or it was added to Sisu only as Plexus XML had \"component description\"? In fact, am unaware of any use of it, but still...",
      "Think we should start minimalistic, maven IoC need is actually pretty low - mainly bean definition + overriding - so less we keep better it is in terms of maintenance.\r\nRewriting from scratch gives the opportunity to drop guice and sisu at some point too so can be quite promishing if we manage to make plexus-world optional (realm = TCCL) but this is likely mvn 6 or 7 ;).",
      "> Think we should start minimalistic, maven IoC need is actually pretty low - mainly bean definition + overriding - so less we keep better it is in terms of maintenance. Rewriting from scratch gives the opportunity to drop guice and sisu at some point too so can be quite promishing if we manage to make plexus-world optional (realm = TCCL) but this is likely mvn 6 or 7 ;).\r\n\r\nYeah, I think I'll even drop support for scopes for now, we don't really need it for plugins.  Those are only needed when dealing with extensions or maven-core, as plugins are always bound to the mojo execution.",
      "Unless, as you mention, is an extension... and we do have quite some of those.",
      "Yes think extensions are in scope there and don't think scope is the biggest code (maybe guice made it verbose but the CDI way is actually quite light - `Context` usage in subclass proxies which can be done at build time, even if it is just dumping asm one at build time and not using an annot proc or sthg more build oriented). But if we want to split we can maybe start by param injection only."
    ],
    "commit_messages": [
      "[MNG-7954] New dependency injection mechanism (#1393)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f49a14f302d393b578b",
    "number": 1392,
    "body": "Maven should be fully in control regarding dependency scope definitions and their interpretations (and transformations). \r\nThis PR makes following changes:\r\n* no change in behaviour (all works as before), but\r\n* maven codebase contains now all the code related to scopes\r\n* no resolver code is in use that was deprecated (as it was wrong to have it in resolver), see issue [MRESOLVER-471](https://issues.apache.org/jira/browse/MRESOLVER-471)\r\n* this also stops scope definitions duplication as well, they are now defined in one single project: Maven\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8026",
    "head_branch": "MNG-8026-step1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8026] Maven drives regarding scopes (#1392)\n\nMaven should be fully in control regarding dependency scope definitions and their interpretations (and transformations). \r\nThis PR makes following changes:\r\n* no change in behaviour (all works as before), but\r\n* maven codebase contains now all the code related to scopes\r\n* no resolver code is in use that was deprecated (as it was wrong to have it in resolver), see issue [MRESOLVER-471](https://issues.apache.org/jira/browse/MRESOLVER-471)\r\n* this also stops scope definitions duplication as well, they are now defined in one single project: Maven\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8026"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f4aa14f302d393b578c",
    "number": 1391,
    "body": "Changes:\r\n\r\nStep1: basically moved (copied, as resolver bits are deprecated) all the classes dealing with scopes (and their interpretation) to Maven.\r\nStep 2: Properties moved to Artifacts from Dependencies, Snapshot check delegated to Aether Artifact, New types for build path, build path scope, dependency scope, language..., Changes propagated.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8026",
    "head_branch": "MNG-8026",
    "is_a_fork": true,
    "comments": [
      "The most important: `someApiCall(project + buildPathScope) == buildPath` but `buildPath` class is not done fully yet (just there as placeholder).\r\n\r\nThe from it, `classpath = buildPath(classpathFilter)`, and `modulepath= buildPath(modulepathFilter)` and so on, and classpath filter should filter out this based on information from https://github.com/apache/maven/pull/1378",
      "There is one maven-core UT failing as DefaultPackagingManager seems not set somewhere.",
      "@cstamas I see the 1-1 with what exists but I have some hard time - blame the hour maybe ;) - to see how we can make it consistent with the type work which is pending, typically build path will not be a build path but more a resolved artifact set totally unrelated to any path now, no? So for me scope becomes just a resolution stage more than anything else. Am I missing something?",
      "It was always \"build path\" but Maven internally called it wrongly \"classpath\" :wink:  (and/or was what was inherited from Maven2)\r\n\r\nBasically what we do here is laying down new API blocks for dep scopes and build path scopes.\r\n\r\nThe other PR is about \"filling in the properties\".\r\n\r\nAnd ultimately, you as for \"main-compile\" or \"test-compile\" build path, Maven calls into Resolver and it resolves those for you, and you end up with a bunch of artifacts (that are coming via project, so are dependency, hence, had type). \r\n\r\nThen, those collections are \"split\", filtered by various properties present in their artifact.properties that makes them \"fall\" into proper bucket, like classpath, modulepath, etc",
      "@cstamas does it mean we should fix the naming for mvn 4 and align it on what it is? Resolverpaths or alike since it is unrelated to any actual build and becomes even more ambiguous with jpms?",
      "> @cstamas does it mean we should fix the naming for mvn 4 and align it on what it is? Resolverpaths or alike since it is unrelated to any actual build and becomes even more ambiguous with jpms?\r\n\r\nI also find the term `build path` somewhat misleading... ",
      "> I also find the term `build path` somewhat misleading...\r\n\r\nAm completely fine to keep \"resolution path\" as well, but did not want to disturb existing classes...",
      "@gnodet and this is why I think that \"step 1\" should have been merged. This discussion will take some, and this PR will just potentially drift away from master (unless we freeze master, which I don't want).",
      "> @gnodet and this is why I think that \"step 1\" should have been merged. This discussion will take some, and this PR will just potentially drift away from master (unless we freeze master, which I don't want).\r\n\r\nMaybe, but there's no point in the first PR if we don't go further...",
      "> Maybe, but there's no point in the first PR if we don't go further...\r\n\r\nUm, the point of first commit is to move off from all the deprecated classes in resolver (see https://github.com/apache/maven-resolver/pull/412 and related JIRA), as currently, boundary of \"scope interpretation and transformation\" is completely blurred and doubled between Resolver and Maven Core. Things like adding new scopes is not trivial at all, as it requires changes in both projects, whereis Resolver should be really oblivious about scopes.\r\n\r\nThe first commit is really not related to 2nd step, it just does the right thing (moves all scope related logic to Maven Core), that in turn also effectively clears grounds for step2.",
      "I'm more than fine doing it by \"blocks\" - in particular the last part Tamas explained - but how can we ensure we don't get this PR without next one in terms of release to avoid to expose - even in an alpha - something we know we'll not keep like that and we'll break?",
      "Just a general remark: Am fine if we \"redefine\" here everything, from ground up, but IMHO \"safest\" would be to go \"resolver way\" (adhere to its abstractions closest as possible) as it is proven and works. And then improve it from there (consider \"resolver way\" as starting point), instead to try to come up with something completely new and different, and risk the problem of something (some use case, edge case) being forgotten, and then go thru pain of \"fixing it\" in upcoming API versions...\r\n\r\nAs Guillaume is right here: I am somewhat pushing for resolver-like way of working (and interfaces/services).",
      "First \"block\" or \"step\" is here https://github.com/apache/maven/pull/1392",
      "@cstamas I've removed `BuildPath` which will be provided by #1378 (inside `DependencyResolverResult`) and renamed `BuildPathScope` to `PathScope` to align with the other PR which defines `PathType`.\r\nLet me know what you think about the current state.",
      "Looks good! Sorry to be late to party, but we can improve all this \"on the go\" anyway..."
    ],
    "commit_messages": [
      "[MNG-8026] Maven drives regarding scopes (#1391)\n\nChanges:\r\n* new types for build path, path scope, dependency scope, language\r\n* introduce \"extensible enum\" and provides registries, SPI providers, etc...\r\n---------\r\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f4ba14f302d393b578d",
    "number": 1390,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-8036\r\nFixes: https://issues.apache.org/jira/browse/MNG-8017 and https://issues.apache.org/jira/browse/MNG-8022",
    "head_branch": "update-jline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8036] [MNG-8017] [MNG-8022] Upgrade JLine to 3.25.1 (#1390)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f4ca14f302d393b578e",
    "number": 1389,
    "body": "Follow-up to https://github.com/apache/maven/pull/1387\r\nJIRA issue: https://issues.apache.org/jira/browse/MNG-8037\r\n",
    "head_branch": "make-basedir-required",
    "is_a_fork": true,
    "comments": [
      "Just FTR as we discussed:\r\n* IMHO baseDir != \"pom file parent\"\r\n* especially as a project may (could) have baseDir but no POM file (but have model provided)\r\n* possible use case: generate some POM (ie is in tmp directory), create a Project that is \"placed\" on top of some existing module, and have it built?",
      "> Just FTR as we discussed:\r\n> \r\n> * IMHO baseDir != \"pom file parent\"\r\n> * especially as a project may (could) have baseDir but no POM file (but have model provided)\r\n> * possible use case: generate some POM (ie is in tmp directory), create a Project that is \"placed\" on top of some existing module, and have it built?\r\n\r\nSo we're looking at Maven being used as a library, right ? That's clearly not supported from the CLI.\r\nRight, now, in the Maven 4 API (let's limit to that use case) the only way to obtain a `Project` is by using the `ProjectBuilder` and the only way to use it is to give either a `Path`, `Source`, `Artifact` or `ArtifactCoordinate`.\r\nMy understanding (it closely maps the v3 api) is that it you pass an ArtifactCoordinate (or Artifact), that artifact is resolved (it must point to a POM), then loaded.  I need to double check, but this results in a `Project` which has no POM file and no BaseDir.\r\nI think that's the current situation, i.e.: either you have both or none, but it's linked.  The POM file cannot point to the local repository, it's *always* a build POM in your project file system, and it always define the base directory.\r\n\r\nI'll also double check the `DefaultMavenProjectBuilder`.  But I'm sure the use case you describe is currently supported.\r\n\r\nIn any case, the API is lacking some doc, especially this notion of \"transient\" projects which is not defined and very confusing/blurry.",
      "@cstamas I've removed the mutable bits from the `Project`, removed the optionals on `pomPath` and `basedir`.  I think we'll miss a `ModelBuilder` service to get effective models for artifacts, but I'll add those in a separate PR."
    ],
    "commit_messages": [
      "[MNG-8037] Restrict project to the entity being built and make it immutable (#1389)\n\n* Make POM and basedir required on the project\r\n* Remove the API to build projects from artifact coordinate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f4da14f302d393b578f",
    "number": 1388,
    "body": "This solves the two, but there are more...\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8024",
    "head_branch": "MNG-8024",
    "is_a_fork": true,
    "comments": [
      "We need to extend the unit test https://github.com/apache/maven/blob/master/maven-model/src/test/java/org/apache/maven/model/SerializationTest.java to exercise the actual problem.\r\n\r\n",
      "> We need a clear unit test. Basic serialisation is already supported, so something's wrong... The `WrapperList` and `WrapperProperties` should not actually be used during serialisation, as those objects are not present in fields.\r\n\r\nI wonder if the problem is when serializing part of the model instead of the whole `Model`.",
      "Yes, that is exactly what is happening, the incremental build basically taks \"bits\" of model and would like to serialize those with DataOutputStream...",
      "> Yes, that is exactly what is happening, the incremental build basically taks \"bits\" of model and would like to serialize those with DataOutputStream...\r\n\r\nI'm not sure we should support this use case, as I think the whole model will be serialised anyway.  The lambdas in the list/properties objects do retain a reference to the parent up to the Model.  This is needed in order to implement the modification methods while keeping the original reference.\r\n\r\nSo while this may actually make things work, I'm not completely sure we should do it...  It may be easier to simplify check if there's a `getDelegate()` method, and if so, serialize that object instead.",
      "> > Yes, that is exactly what is happening, the incremental build basically taks \"bits\" of model and would like to serialize those with DataOutputStream...\r\n> \r\n> I'm not sure we should support this use case, as I think the whole model will be serialised anyway. The lambdas in the list/properties objects do retain a reference to the parent up to the Model. This is needed in order to implement the modification methods while keeping the original reference.\r\n> \r\n> So while this may actually make things work, I'm not completely sure we should do it... It may be easier to simplify check if there's a `getDelegate()` method, and if so, serialize that object instead.\r\n\r\nAnother way would be to generate writeObject / readObject methods that will actually delegate to... the delegates from the v4 model.",
      "Superseded by https://github.com/apache/maven/pull/1433"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f4ea14f302d393b5790",
    "number": 1387,
    "body": "Introduce new method that returns POM and project Artifact in sensible manner (so install or deploy and other does not need to figure out anything).\r\n\r\nAlso, javadoc the class.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8023",
    "head_branch": "MNG-8023",
    "is_a_fork": true,
    "comments": [
      "~~Superseded by https://github.com/apache/maven/pull/1389~~ For start we go with this, and will see later on"
    ],
    "commit_messages": [
      "[MNG-8023] New method + javadoc on Project (#1387)\n\nIntroduce new method that returns POM and project Artifact in sensible manner (so install or deploy and other does not need to figure out anything).\r\n\r\nAlso, javadoc the class.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8023"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f4fa14f302d393b5791",
    "number": 1386,
    "body": null,
    "head_branch": "MNG-8014-multithreaded-builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8014] Fix multithreaded builder (#1386)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f50a14f302d393b5792",
    "number": 1385,
    "body": "Maven4 seems sets but then drops/overrides some workspace readers. Partially due hazy borders who or what manages them, as role is split between session factory and session factory caller.\r\n\r\nChanges:\r\n* session factory does NOTHING re workspace readers, it becomes fully the caller duty\r\n* two spots calling session factory (default maven, extension bootstrap) are now fully in charge to properly setup workspace readers\r\n\r\nCo-authored-by: Jonas Rutishauser <jonas.rutishauser@alumni.ethz.ch>\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8005",
    "head_branch": "MNG-8005-take-two",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8005] Fix workspace reader drop bug (#1385)\n\nMaven4 seems sets but then drops/overrides some workspace readers. Partially due hazy borders who or what manages them, as role is split between session factory and session factory caller.\r\n\r\nChanges:\r\n* session factory does NOTHING re workspace readers, it becomes fully the caller duty\r\n* two spots calling session factory (default maven, extension bootstrap) are now fully in charge to properly setup workspace readers\r\n\r\nCo-authored-by: Jonas Rutishauser <jonas.rutishauser@alumni.ethz.ch>\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8005"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f51a14f302d393b5793",
    "number": 1384,
    "body": "Create _aether internal_ \"extenders\" components to serve several purposes:\r\n* extender to meddle with exec request, for example to mediate between effective properties SPI (exec request extender)\r\n* extender to meddle with prepped session and related bits, for example to move out deprecated code from session factory (session extender)\r\n\r\nThis PR implements M4 API SPI for contributing effective properties and exposes method for effective properties on `Session`.\r\n* `Session` should expose properties service \"ready\" for interpolation, otherwise each interpolating code (plugin, etc) would need to construct the \"effective\" ones themselves, repeating same steps over and over again.\r\n* SPI can contribute to user properties\r\n* `Session` exposed properties are all immutable (sans effective, that is computed on each call).\r\n* and lastly, a cleanup: all packages within `o.a.m.internal.aether` are now package protected, to tighten internal encapsulation. New core package `o.a.m.resolver` introduced that contains 2 publicly accessible classes.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8006\r\nhttps://issues.apache.org/jira/browse/MNG-8021",
    "head_branch": "session-factory-extender",
    "is_a_fork": true,
    "comments": [
      "Fixing the UT (changed the source of props) is now beyond my current capabls :smile: but @gnodet i think you see what the goal is: have some _internal_ stuff that mediates."
    ],
    "commit_messages": [
      "[MNG-8006] [MNG-8021] SPI to contribute properties and more (#1384)\n\nCreate _aether internal_ \"extenders\" components to serve several purposes:\r\n* extender to meddle with exec request, for example to mediate between effective properties SPI (exec request extender)\r\n* extender to meddle with prepped session and related bits, for example to move out deprecated code from session factory (session extender)\r\n\r\nThis PR implements M4 API SPI for contributing effective properties and exposes method for effective properties on `Session`.\r\n* `Session` should expose properties service \"ready\" for interpolation, otherwise each interpolating code (plugin, etc) would need to construct the \"effective\" ones themselves, repeating same steps over and over again.\r\n* SPI can contribute to user properties\r\n* `Session` exposed properties are all immutable (sans effective, that is computed on each call).\r\n* and lastly, a cleanup: all packages within `o.a.m.internal.aether` are now package protected, to tighten internal encapsulation. New core package `o.a.m.resolver` introduced that contains 2 publicly accessible classes.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8006\r\nhttps://issues.apache.org/jira/browse/MNG-8021"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f52a14f302d393b5794",
    "number": 1383,
    "body": null,
    "head_branch": "make-artifact-filter-predicate",
    "is_a_fork": true,
    "comments": [
      "If they are needed, shouldn't all these classes be reimplemented on top of the v4 api instead ?",
      "Meh, this was just an experiment... am dropping this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f53a14f302d393b5795",
    "number": 1382,
    "body": "Update README.txt in 3.9 branch to mention that Java 8 is required.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.9.x-fix-java8-docs",
    "is_a_fork": true,
    "comments": [
      "Related issue https://issues.apache.org/jira/browse/MNG-8011\r\n\r\nHence, I'd trim this README even more, not just update. Just place a link to https://maven.apache.org/docs/history.html IMHO"
    ],
    "commit_messages": [
      "[MNG-6399] Lift JDK minimum to JDK 8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f54a14f302d393b5796",
    "number": 1381,
    "body": null,
    "head_branch": "bugfix/MNG-8019-streamline-central-update-policy",
    "is_a_fork": false,
    "comments": [
      "@gnodet was working on this or similar change not so long time ago...",
      "For Maven 4 both are already at the default (=daily), being applied in https://github.com/apache/maven/commit/fb612f5dbc89d8e268bc3581e538c392c1fff788. So this is basically the backport of MNG-6112.",
      "@gnodet If you don't have any concerns I am gonna merge towards the end of the week."
    ],
    "commit_messages": [
      "[MNG-8019] Rely on default update policy (daily) for Central (#1381)\n\nBoth plugin and regular repository should have the same policy.\r\nUnfortunately using \"never\" is not possible as long as resolver applies\r\nthis policy to both artifacts (immutable) and metadata (mutable)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f54a14f302d393b5797",
    "number": 1380,
    "body": "Simplify graph.\nFirst step before making it concurrent if possible.\n\n",
    "head_branch": "simplified-graph",
    "is_a_fork": true,
    "comments": [
      "I dislike last two commits, we are again getting over the fence here. Keep it simple, but not super-duper-1brc-smart :smile: ",
      "> I dislike last two commits, we are again getting over the fence here. Keep it simple, but not super-duper-1brc-smart 😄\r\n\r\nAnd it's actually slower. It was a failed experiment... I'll revert to the simple graph."
    ],
    "commit_messages": [
      "Simplify model builder internal Graph (#1380)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f55a14f302d393b5798",
    "number": 1379,
    "body": "Changes:\r\n* share \"full reactor loaded\" per build session, not per recursive call\r\n* make possible to disable model cache (mostly for debugging purposes)\r\n",
    "head_branch": "mt-model-builder-experiment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f57a14f302d393b5799",
    "number": 1378,
    "body": "Introduces new API described in JIRA issue [MNG-8015](https://issues.apache.org/jira/browse/MNG-8015):\r\n\r\n* `PathType` enumeration-like class.\r\n* `JavaPathType` subtype with values such as `MODULES`, `CLASSES`, `DOCLET`, `TAGLETS`, _etc._\r\n* `PATH_TYPES` dependency property key (as a side-effect, the `DependencyProperties` API is modified for making it type-safe).\r\n* `DependencyResolverRequest` API for allowing plugins to specify the `PathType` that the plugin wants.\r\n* `DependencyResolverResult.getDispatchedPath()` method for getting the result: the paths to dependencies for each path type.\r\n\r\n# Open issues\r\nCommit 9c5e9ff412718e4ad29299ea79ba0d158c27d43d (which add implementation) introduces a dependency to Java 9 or later (the `ModuleDescriptor` class). If Maven 4 decides to stay executable on Java 8, this part will need to be refactored in a multi-version JAR file. If Maven 4 decides to require Java 9 or later, the `source` and `target` options in the `pom.xml` file should be replaced by a `release` option.\r\n\r\nThe implementation has no JUnit tests yet, so it may contain bug. We may want to write JUnit tests before to integrate this pull request. Waiting to see if a discussion causes a modification of this proposal before to write tests.",
    "head_branch": "explicit-module-path",
    "is_a_fork": true,
    "comments": [
      "CI build has been successful on Java 17 and 21, but failed on Java 11 because of the use of the `{@return ...}` javadoc tag. This is a Javadoc issue only. Resolution depends on Maven PMC decision about which Java version to require.",
      "If am not mistaken, [this feature](https://bugs.openjdk.org/browse/JDK-8075778) is available since Java 16? Given master is still Java 8 (build time requirement is same I think)...  I'd stick with it.\r\n\r\nSo please use Java 8 conformant javadoc...",
      "Applied most of above comments (still thinking for a solution about the two remaining ones). The build continues to fail on Java 11, again because of Javadoc, but this new error is more annoying. The error message is _\"Header used out of sequence: `<H4>`\"_. This error happens when HTML title headers are used in Javadoc for clear separation of sections. Javadoc verifies that the numbers are used in sequential order: `<H4>` inside `<H3>`, themselves inside `<H2>`, _etc_. A difficulty is that Javadoc uses `<H1>`, `<H2>`, _etc._ for its own purpose, so the first level available in the Javadoc of a method starts at `<H4>`. Javadoc verifies that we use the proper level, which is good. The problem is that the expected level changed somewhere between Java 11 and Java 17 (I think it was around Java 13). Java 13 (approximately) and later expects `<H4>`. Java 11 expected something else.  All versions raise an error when the HTML header level is not what they expected.\r\n\r\nSo it is impossible (as far as I know) to have a code compilable on both Java 11 and Java 17 when HTML headers are used in Javadoc and Javadoc checks are enabled. If compilation or Javadoc generation passes on one, it fails on the other. Workaround can be one of the following:\r\n\r\n* Do not use HTML headers.\r\n* Disable Javadoc checks.\r\n* Requires Java 17 for compilation but target Java 11 or 8 with `--release` option.\r\n\r\nWhich approach should we take? The last one would be the one allowing most gradual transition to newest Java versions (by allowing the use of most recent conventions right now) while preserving compatibility.",
      "@desruisseaux I've pushed a small rework of this PR on top of #1391 on my fork.\r\nThe squashed and rebased commit can be found at https://github.com/gnodet/maven/commit/c535260586d7eb34c56e836b8385f97ee6c3b9a0\r\nThe branch merged fork is https://github.com/gnodet/maven/commits/explicit-module-path\r\n\r\nThe main change is that I removed the `DependenciesProperties` in the other PR, so there are some adjustments which I'm not completely sure are working.... But the idea is that `Type` is extensible.  I think `PathType` should be extensible too, but I could not find any location where that would be needed (apart when creating custom `Type`s)....  ",
      "Thanks, it look good to me. I will try to add a few JUnit tests today or tomorrow.",
      "Added Javadoc on shortcut methods in `Session` interface. Sometime I had to guess, and there is questions previously flagged by `@todo` tag in b72d1ce. The test case gives the impression that the answer to those questions is that the dependency given in argument is included in the returned list, but it would be nice to said that in the javadoc if it is the case.\r\n\r\nAdded a convenience method:\r\n\r\n```java\r\n@Nonnull\r\nMap<PathType, List<Path>> resolveDependencies(\r\n        @Nonnull DependencyCoordinate dependencyCoordinate,\r\n        @Nonnull PathScope scope,\r\n        @Nonnull Collection<PathType> desiredTypes);\r\n```\r\n\r\nExpanded an existing test case: after fetching the dependency paths, fetch again the same dependency paths but this time dispatched by type.\r\n\r\n* First invoke above convenience method with `Arrays.asList(JavaPathType.CLASSES, JavaPathType.MODULES)`:\r\n  * The `pom` dependency is excluded, because it is placed neither on the class-path or module-path.\r\n  * The `junit` dependency appears on the module-path because it has as `Automatic-Module-Name` attribute.\r\n  * All other dependencies are on the class-path.\r\n* Invoke the same method again, but this time with only `Arrays.asList(JavaPathType.CLASSES)`:\r\n  * The `junit` dependency is now on the class-path.\r\n  * This is the mechanism by which a plugin can tell that it is not interested in JPMS.\r\n\r\n**Note:** A test if failing in the \"Maven Core ITs suite\" module:\r\n\r\n```\r\nError: MavenITmng5135AggregatorDepResolutionModuleExtensionTest.testit:61-\r\nAbstractMavenIntegrationTestCase.assertTrue:359 [test-classes, classes]\r\n==> expected: <true> but was: <false>\r\n```\r\n\r\nI don't know what is happening here. A search for `AbstractMavenIntegrationTestCase` in my repository clone found nothing.",
      "@desruisseaux fwiw, I've merge master branch into this branch at https://github.com/apache/maven/tree/explicit-module-path",
      "Thanks. Closing this pull request in favour of #1401 then."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f57a14f302d393b579a",
    "number": 1377,
    "body": "The `ModelCache` is now bloated and can be simplified a lot.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8016",
    "head_branch": "model-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8016] Simplify ModelCache (#1377)\n\nThe `ModelCache` is now bloated and can be simplified a lot.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8016"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f58a14f302d393b579b",
    "number": 1376,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-8014\n\n",
    "head_branch": "MNG-8014",
    "is_a_fork": true,
    "comments": [
      "~-1. This is not problem of concurrent model builder, it is fine. Everything with Quarkus works if you disable this feature: `-Dmaven.buildconsumer=false`. Commented more on the linked JIRA.~ Agreed after discussing."
    ],
    "commit_messages": [
      "[MNG-8014] Workaround for deadlocks in model building (#1376)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f59a14f302d393b579c",
    "number": 1375,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8013",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8013] Integration testing process logs can be output github artifact (#1375)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f5aa14f302d393b579d",
    "number": 1374,
    "body": "JIRA issue: https://issues.apache.org/jira/projects/MNG/issues/MNG-8003",
    "head_branch": "MNG-8003",
    "is_a_fork": true,
    "comments": [
      "ITmng6127 again, sigh https://issues.apache.org/jira/browse/MNG-7976"
    ],
    "commit_messages": [
      "[MNG-8003] The Maven BOM should have a cleaner parent (#1374)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f5ba14f302d393b579e",
    "number": 1373,
    "body": "Update to alpha-6. \r\n\r\nAlso, move off from deprecated default ctor of def repo session in tests.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7994",
    "head_branch": "MNG-7994",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7994] Update to Resolver 2.0.0-alpha-6 (#1373)\n\nUpdate to alpha-6. Also, move off from deprecated default ctor of def repo session in tests.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7994"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f5ca14f302d393b579f",
    "number": 1372,
    "body": "This change should fix the regression introduced by https://github.com/apache/maven/pull/963/files#diff-c14736c8f0b57d9f26af7f81fff3114a217edbed2b42049aa3c746ddab38966eR245-R250\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8005",
    "is_a_fork": true,
    "comments": [
      "@jonasrutishauser an IT would be welcomed",
      "As requested I added a test: apache/maven-integration-testing#332",
      "> The IDE workspace reader is already injected in the repository system session:\r\n> \r\n> https://github.com/apache/maven/blob/732e3649e12ab9c6bce570340b83b7270d5c346a/maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java#L156\r\n\r\nThat's correct, but this injected reader is directly overwritten:\r\nhttps://github.com/apache/maven/blob/732e3649e12ab9c6bce570340b83b7270d5c346a/maven-core/src/main/java/org/apache/maven/DefaultMaven.java#L417-L422",
      "Proposed PR that is a bit broader (but performs bigger and IMHO \"proper\" cleanup in this area): https://github.com/apache/maven/pull/1385"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f5da14f302d393b57a0",
    "number": 1371,
    "body": "A wrapper listener that can receive events even from multiple threads, and passes them to wrapped delegate listener on single thread, keeping delegate implementation simple.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8007\r\n",
    "head_branch": "mx-transfer-listener",
    "is_a_fork": true,
    "comments": [
      "So the problem is that there's no synchronisation on the last resource being finished to erase the display.\r\nThis can lead to output such as:\r\n<img width=\"1142\" alt=\"image\" src=\"https://github.com/apache/maven/assets/84022/75d082fa-2493-4eaa-876a-8c90967a7835\">\r\n\r\nThe above has been generated by adding a timeout before the actual handling of the events to make the faulty behaviour easier to detect.\r\n\r\nToo bad, because this solution is actually much easier :-(",
      "@gnodet updated it to sync on last event",
      "Looks better.  I wonder if we should have a time-based windowing for batches, rather than based on the number (or not).  Or do you think it would be better handled by the wrapped transfer listener ?",
      "My experience tells to always keep simple as possible any concurrent code :smile: ...\r\n\r\nI don't think we need any extra thing, at least until someone finds a problem here. "
    ],
    "commit_messages": [
      "[MNG-8007] Maven TransferListener wrapper (#1371)\n\nA wrapper listener that can receive events even from multiple threads, and passes them to wrapped delegate listener on single thread, keeping delegate implementation simple.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8007"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f5ea14f302d393b57a1",
    "number": 1370,
    "body": "The artificial (or \"bolted on\") scope \"import\" behaves wildly differently that rest of Maven, causes surprise to our users. For start, we should emit \"actionable\" warnings about these, ultimate goal is to align this behaviour with \"maven way\" of working (\"closest occurence wins\" vs current weird \"direct occurrence then first occurence wins\" strategy)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7854\r\n",
    "head_branch": "MNG-7854-take-2",
    "is_a_fork": true,
    "comments": [
      "I've added a few unit tests.  I've slightly changed things so that the warnings are only created when the dependency is not directly managed.  The warning also suggests to add a direct managed dependency to get rid of it, so it's now helpful and actionnable.\r\n\r\nThat's clearly a good first step.  The next one could be to use a \"closest wins\" strategy instead of this \"direct wins, then first wins\" weird ad-hoc strategy."
    ],
    "commit_messages": [
      "[MNG-7854] Warn if imported dep is ignored (#1370)\n\nThe artificial (or \"bolted on\") scope \"import\" behaves wildly differently that rest of Maven, causes surprise to our users. For start, we should emit \"actionable\" warnings about these, ultimate goal is to align this behaviour with \"maven way\" of working (\"closest occurence wins\" vs current weird \"direct occurrence then first occurence wins\" strategy).\r\n\r\nWarnings are only created when the dependency is not directly managed. The warning also suggests to add a direct managed dependency to get rid of it, so it's now helpful and actionnable.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7854"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f5fa14f302d393b57a2",
    "number": 1369,
    "body": "Expose internally (not for plugin API) CoreRealm.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8001",
    "head_branch": "MNG-8001",
    "is_a_fork": true,
    "comments": [
      "Why is this necessary?",
      "> Why is this necessary?\r\n\r\nTo confine passing around PlexusContainer, basically to remove it (or \"hide\" it well) even in Maven core",
      "> > Why is this necessary?\r\n> \r\n> To confine passing around PlexusContainer, basically to remove it (or \"hide\" it well) even in Maven core\r\n\r\nOK, this basically applies a decorator here."
    ],
    "commit_messages": [
      "[MNG-8001] Expose CoreRealm internally (#1369)\n\nExpose internally (not for plugin API) CoreRealm.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-8001"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f60a14f302d393b57a3",
    "number": 1368,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-8000",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-8000] DefaultArtifact lacks constructors for version and optional (#1368)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f61a14f302d393b57a4",
    "number": 1367,
    "body": "This is an ongoing effort to confine Plexus, but also perform a bit of cleanup in Maven Core and around. No logic changes, just replacing Plexus with Lookup (that is a thin wrapper around it), and removing unused members, redundant checks, etc. Module maven-compat omitted on purpose.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7999",
    "head_branch": "MNG-7999",
    "is_a_fork": true,
    "comments": [
      "What about adding a specific exception inheriting `LookupException` for when the component is  not found when calling `<T> T lookup(Class<T> role)` ? ",
      "> What about adding a specific exception inheriting `LookupException` for when the component is not found when calling `<T> T lookup(Class<T> role)` ?\r\n\r\nOr maybe there's no use case for that and users should use `lookupOptional` if they intend to act differently. That would make sense too."
    ],
    "commit_messages": [
      "[MNG-7999] Confine Plexus Container as much as possible (#1367)\n\nThis is an ongoing effort to confine Plexus, but also perform a bit of cleanup in Maven Core and around. No logic changes, just replacing Plexus with Lookup (that is a thin wrapper around it), and removing unused members, redundant checks, etc. Module maven-compat omitted on purpose.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7999"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f62a14f302d393b57a5",
    "number": 1366,
    "body": "Just a minor cleanup regarding internals of \"tasks\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7998",
    "head_branch": "MNG-7998",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7998] Minor cleanup regarding \"tasks\" (#1366)\n\nJust a minor cleanup regarding internals of \"tasks\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7998"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f63a14f302d393b57a6",
    "number": 1365,
    "body": "* fix namespace location\r\n* remove unneeded CDATA\r\n* code formatting\r\n* use `{@code xxx}` and `@see`\r\n* generate location tracking classes\r\n* add location tracking to toolchain model\r\n",
    "head_branch": "clean-mdo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clean mdo schemas (#1365)\n\n* fix namespace location\r\n* remove unneeded CDATA\r\n* code formatting\r\n* use {@code xxx}\r\n* generate location tracking classes\r\n* add location tracking to toolchain model\r\n* Fix javadoc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f64a14f302d393b57a7",
    "number": 1364,
    "body": null,
    "head_branch": "remove-experimental",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7996] Remove experimental flag from build-consumer feature (#1364)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f65a14f302d393b57a8",
    "number": 1363,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Fixed a copy-paste error in ComparableVersionTest.java  (#1363)\n\nCo-authored-by: Olivia Lucca Fraser <lucca@mushussu.local>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f66a14f302d393b57a9",
    "number": 1362,
    "body": "It may lead to confusion as parameters (list) and\r\nparametersMap (map) may \"fall apart\" easily.\r\n\r\nAlso, parametersMap did not honor parameter\r\nordering while parameters list makes it look\r\nthat order is important.\r\nSimply, rebuild the map always and retain\r\nordering as well.\r\n\r\nAdded UT and also removed some cruft provided\r\nby java8.\r\n\r\nCo-authored-by: Marc Wrobel <marc.wrobel@gmail.com>\r\nCo-authored-by: Slawomir Jaranowski <s.jaranowski@gmail.com>\r\n\r\n(cherry picked from commit cc51006f2973356a1046ae0757325d5e9be75327) (cherry picked from commit 5ce5591ae341188230d6ecca76c90bd0a786fcb2) (cherry picked from commit 47e2d689d687358a85c2cdecc176cac36093817e) ---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7309\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6776-maven-3.8.x",
    "is_a_fork": false,
    "comments": [
      "@slachiewicz As requested..."
    ],
    "commit_messages": [
      "[MNG-6776] Inconsistent list of parameters for MojoDescriptor (#584)\n\nIt may lead to confusion as parameters (list) and\nparametersMap (map) may \"fall apart\" easily.\n\nAlso, parametersMap did not honor parameter\nordering while parameters list makes it look\nthat order is important.\nSimply, rebuild the map always and retain\nordering as well.\n\nAdded UT and also removed some cruft provided\nby java8.\n\nCo-authored-by: Marc Wrobel <marc.wrobel@gmail.com>\nCo-authored-by: Slawomir Jaranowski <s.jaranowski@gmail.com>\n\n(cherry picked from commit cc51006f2973356a1046ae0757325d5e9be75327)\n(cherry picked from commit 5ce5591ae341188230d6ecca76c90bd0a786fcb2)\n(cherry picked from commit 47e2d689d687358a85c2cdecc176cac36093817e)\n---\n\nhttps://issues.apache.org/jira/browse/MNG-7309"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243f67a14f302d393b57aa",
    "number": 1361,
    "body": "It may lead to confusion as parameters (list) and\r\nparametersMap (map) may \"fall apart\" easily.\r\n\r\nAlso, parametersMap did not honor parameter\r\nordering while parameters list makes it look\r\nthat order is important.\r\nSimply, rebuild the map always and retain\r\nordering as well.\r\n\r\nAdded UT and also removed some cruft provided\r\nby java8.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7309\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6776-maven-3.9.x",
    "is_a_fork": false,
    "comments": [
      "As a result of https://github.com/apache/maven-plugin-tools/pull/253",
      "@slawekjaranowski This is a cherrypick from master. It does not change behavior. Unmodifiables should on main only and require a new issue. Note that this will need special handling in plugin tools otherwise it will fail.",
      "> good, maybe it's also worth to backport to 3.8.x?\r\n\r\nI was thinking about the same. Will prepare after this one.",
      "@cstamas Any objections before I backport this one?"
    ],
    "commit_messages": [
      "[MNG-6776] Inconsistent list of parameters for MojoDescriptor (#584)\n\nIt may lead to confusion as parameters (list) and\nparametersMap (map) may \"fall apart\" easily.\n\nAlso, parametersMap did not honor parameter\nordering while parameters list makes it look\nthat order is important.\nSimply, rebuild the map always and retain\nordering as well.\n\nAdded UT and also removed some cruft provided\nby java8.\n\nCo-authored-by: Marc Wrobel <marc.wrobel@gmail.com>\nCo-authored-by: Slawomir Jaranowski <s.jaranowski@gmail.com>\n\n(cherry picked from commit cc51006f2973356a1046ae0757325d5e9be75327)\n(cherry picked from commit 5ce5591ae341188230d6ecca76c90bd0a786fcb2)\n(cherry picked from commit 47e2d689d687358a85c2cdecc176cac36093817e)\n---\n\nhttps://issues.apache.org/jira/browse/MNG-7309"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243f68a14f302d393b57ab",
    "number": 1360,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7992",
    "head_branch": "MNG-7992",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7992] Fix windows identified as dos (#1360)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f69a14f302d393b57ac",
    "number": 1359,
    "body": "Expose checksumming API (backed by Resolver).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7957",
    "head_branch": "MNG-7957",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7957] Checksum API (backed by Resolver) (#1359)\n\nExpose checksumming API (backed by Resolver).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7957"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f6aa14f302d393b57ad",
    "number": 1358,
    "body": "JIRA issue: [MNG-7983](https://issues.apache.org/jira/browse/MNG-7983)\n",
    "head_branch": "MNG-7983-slf4j-2x",
    "is_a_fork": true,
    "comments": [
      "Very nice. Let's wait for 2.0.11 release. ",
      "@gnodet  @michael-o [SLF4J version 2.0.11](https://www.slf4j.org/news.html#2.0.11) was released a few moments ago."
    ],
    "commit_messages": [
      "[MNG-7983] Switch to slf4j-api 2 (#1358)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f6ba14f302d393b57ae",
    "number": 1357,
    "body": "Resolver 2.0.0-alpha-6 introduced \"transitive\" switch to dependency Manager, make use of it.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7982\r\n",
    "head_branch": "MNG-7982",
    "is_a_fork": true,
    "comments": [
      "Hi @cstamas , what is the plan to identify mvn 4 consumed artifacts to switch the impl, using the mvn4 specific pom metadata file? in current state it breaks probably too easily IMHO and I didn't find how we enable this behavior in the produced pom for the consumed artifact - I don't think it is good to be a config prop, it should belong to the pom only to avoid a global toggle which will work only under a closed ecosystem.",
      "@rmannibucau this PR is draft on purpose. Actually, I'd say \"consider all resolver related Maven PRs draft\" I do, as am just throwing ideas or missing Maven features, to improve use of (so far unused or newly made) Resolver features in Maven, but HOW are they gonna be consumed/integrated into Maven I'd leave to @gnodet and probably you and others :smile: \r\n\r\nThis PR would fix for example these issues, reported by many, while providing \"escape hatch\" to go back to \"classic\" if needed:\r\nhttps://issues.apache.org/jira/browse/MRESOLVER-235\r\nhttps://issues.apache.org/jira/browse/MNG-7003",
      "> Hi @cstamas , what is the plan to identify mvn 4 consumed artifacts to switch the impl, using the mvn4 specific pom metadata file? in current state it breaks probably too easily IMHO and I didn't find how we enable this behavior in the produced pom for the consumed artifact - I don't think it is good to be a config prop, it should belong to the pom only to avoid a global toggle which will work only under a closed ecosystem.\r\n\r\nThe consumer has no knowledge.  I also kinda saw that as a problem...\r\nI wonder if this should be automatically toggled by the modelVersion of the root project: if using a 4.1.0 model, then use the new depMgr, if using 4.0.0 model, use the Maven 3 compatible one....\r\nThis piece can be easily detected very early at boot time and could be used to configure the resolver.\r\n\r\nRelated to [MNG-7984](https://issues.apache.org/jira/browse/MNG-7984).",
      "What I worry about it is the fact we are moving the current issues a step further but I don't understand yet how it does fix anything, this kind of configuration looks per dependency, so while I fully agree we can make it global or per version, it will keep blowing up as soon as you have > 2 dep there no?\r\n\r\nDon't get me wrong, I think the transitive feature is rather a good thing if we can instantiate it without more side effects than we have today but alone it looks like mixing behaviors which all have pitfalls and therefore just make it more complex.\r\nUltimately it can mean we become stricter on the depMgt and forbid not resolved conflicts (a bit like what enforcer plugin enables), this way the resolution of a built project (not transitive deps alone) is always deterministic at a little user cost.\r\n\r\nStill thinking out loud to try to get this feature onboard without realizing in some months we are back where we were in terms of issues with new ones due to the behavior change and \"resolution merge\" logic we would need from consumed poms.",
      "This setting cannot be per dependency, at least resolver does not support that. The depMgr is set per session. And what current PR changes is really only this: are depMgt sections obeyed only 2 level deep or to the end of the pit. The \"2 level depth\" comes from Maven2 times, and was artificial limit just to make Maven3 (resolver in it) work like Maven2 did. Unsure why Maven4 would need to work in this respect as Maven2 did.",
      "And as regarding \"blowing\", lets see what ITs has to say. Also we could maybe add IT for https://issues.apache.org/jira/browse/MRESOLVER-235",
      "@cstamas I understand that and ultimately I hope we reach your proposal I do like, but I don't want to be at the cost of making builds more complex and user most lost, this is how I end on the \"strict\" mode for depMgt in maven 4 but I'm not 100% happy with that so any idea welcomed ;).",
      "IMO, this change -- if goes in -- will just make POMs _simpler_ and not _more complex_. Essentially what this makes possible is that lib author (whos lib is used somewhere deep in your project) pass information to your project, instead to have those information ignored. Hence, your POM will need _less_ and not _more_ depMgt entries, that you had to add before to make up the missing/lost information.",
      "@cstamas right, now consider 2 lib authors for your project (3rd maven build to make it clear) and also maven 3 consumers (let's ignore 2, agree), it becomes a mess for us :(",
      "I see no difference to what happens if you use two libs that declare different version on some artifact, really. And depMgt (_unlike BOM imports_) let it all to you to sort it out in \"maven way\".",
      "ITs look good. \r\n\r\nAnd thinking more about this, this should be maybe just a boolean flag? `classic($transitive)`? As I would leave out completely the \"transitive\" and the \"default\" as they do introduce unwanted behaviour for sure (fail ITs), rendering existing healthy build broken.",
      "Hmm, still thinking a bit out loud but at some point it was discussed that the consumed pom would be \"cleaned for central\" (flatten maven plugin like etc) to ensure the consumers see it as the producer in terms of resolution, whatever version it uses, is it still in the scope? If so depMgt is maybe no more a thing transitively and then we just do what we want for maven 4, wdyt?",
      "> Hmm, still thinking a bit out loud but at some point it was discussed that the consumed pom would be \"cleaned for central\" (flatten maven plugin like etc) to ensure the consumers see it as the producer in terms of resolution, whatever version it uses, is it still in the scope? If so depMgt is maybe no more a thing transitively and then we just do what we want for maven 4, wdyt?\r\n\r\nKeeping deployed artifacts consumable by maven 3 is still the plan to day, and yes, this kinda imply we can't really bring-in  things that would require a change at consumption time in maven 3.  However, in Maven 4, the 4.1.0 model has a flag `preserveModelVersion` which can be used to force the usage of 4.1.0 model at deployment time.  This could be used to force the trigger of the new behaviour on the consumer side, at the cost of requiring maven 4.0.0.\r\n\r\nHowever, I have no idea what the impact is if one builds a project with the _transitive_ dependency manager, but uses it with the _classic_ one in Maven 3.  Could that break the consumer side ?",
      "> However, I have no idea what the impact is if one builds a project with the _transitive_ dependency manager, but uses it with the _classic_ one in Maven 3. Could that break the consumer side ?\r\n\r\nI don't quite understand: so _same project_ that is once built with Maven 4 and once with Maven 3? Or an artifact that is dependency once in Maven4 built project and once in Maven3 project? Or WDYM?",
      "Yes, we have separate issue for that https://github.com/apache/maven/pull/1373",
      "> > However, I have no idea what the impact is if one builds a project with the _transitive_ dependency manager, but uses it with the _classic_ one in Maven 3. Could that break the consumer side ?\r\n> \r\n> I don't quite understand: so _same project_ that is once built with Maven 4 and once with Maven 3? Or an artifact that is dependency once in Maven4 built project and once in Maven3 project? Or WDYM?\r\n\r\nI mean you build the project with maven 4, upload to central, and a maven 3 projects depends on it.",
      "> I mean you build the project with maven 4, upload to central, and a maven 3 projects depends on it.\r\n\r\nYes, in that case they may be differences. BUT, since we talk about _two distinct projects_: your, that is built with mvn4, and theirs (consumer) built with mvn3. So they will anyway have more dependencies, not just your lib, and they will anyway have to handle their transitive hull, hence _maybe_ will need to have more entries in their depMgt to make things work out for them. Just like things worked so far, no change here.\r\n\r\nIn general, I don't see this as an issue at all, here is why: consumer either suffered from issue like https://issues.apache.org/jira/browse/MNG-7003 and they had it fixed, or they do not suffer from this issue.\r\n\r\nI see this just like making maven \"more correct\", \"more convergent\", am pretty much sure we do not _break anything_ with this.",
      "There is a strange quirk with the `ClassicDependencyManager` used in this way, [due to these 3 lines](https://github.com/apache/maven-resolver/blob/32844e4eb8d444838953f1d49be2ecb71db15b78/maven-resolver-util/src/main/java/org/eclipse/aether/util/graph/manager/ClassicDependencyManager.java#L91-L93), it will ignore the dependency management just for the first layer of dependencies, which makes it quite inconsistent. More details in [my comment on MNG-5761](https://issues.apache.org/jira/browse/MNG-5761?focusedCommentId=17887084&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17887084) with a reproducible example.\r\n\r\nShouldn’t the `DefaultDependencyManager` or the `TransitiveDependencyManager` have been used instead? (The only difference between the two is the value of `applyFrom`, and the latter is actually the same as the classic but without those 3 lines)\r\n\r\nIt feels like the integration test from [MNG-4720](https://issues.apache.org/jira/browse/MNG-4720) is somewhat incomplete, but maybe it shouldn’t apply any more after this change?",
      "FYI @cstamas and @gnodet, I have provided integration tests for this in apache/maven-integration-testing#379, which show the current inconsistency."
    ],
    "commit_messages": [
      "[MNG-7982] Switch to enable transitivity in depMgr used by Maven (#1357)\n\nResolver 2.0.0-alpha-6 introduced \"transitive\" switch to dependency Manager, make use of it.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7982"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f6ca14f302d393b57af",
    "number": 1356,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7985",
    "head_branch": "MNG-7985",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7985] Provide project access to modified resources / test-resources and to the executionProject (#1356)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f6da14f302d393b57b0",
    "number": 1355,
    "body": "Extend version related types: Version -> VersionRange -> VersionConstraint.\r\n\r\nAdapt parser and relevant bits. Introduce rudimentary tests.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7969\r\nhttps://issues.apache.org/jira/browse/MNG-7981",
    "head_branch": "version-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7969][MNG-7981] Add missing information on Maven 4 version api to fix an exception (#1355)\n\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f6ea14f302d393b57b1",
    "number": 1354,
    "body": "If set, Maven will ignore all remote repositories introduced by transitive dependencies POM.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7980\r\n",
    "head_branch": "MNG-7980",
    "is_a_fork": true,
    "comments": [
      "This is a good idea.."
    ],
    "commit_messages": [
      "[MNG-7980] CLI switch to ignore transitive repositories. (#1354)\n\nIf set, Maven will ignore all remote repositories introduced by\r\ntransitive dependencies POM.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7980"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f6fa14f302d393b57b2",
    "number": 1353,
    "body": "Make Maven more friendly (and tunable) when ranges are being used. There new options are merely affecting range processing, allowing different narrowing strategies. Relies on latest Resolver alpha-6 features.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7960\r\n\r\n---\r\n\r\nDemo: https://gist.github.com/cstamas/e7c72ac2499f41f632fc4dc8290c1157",
    "head_branch": "MNG-7960",
    "is_a_fork": true,
    "comments": [
      "This PR depends on new Resolver alpha release."
    ],
    "commit_messages": [
      "[MNG-7960] Artifact collection filtering (#1353)\n\nMake Maven more friendly (and tunable) when ranges are being used. There new options are merely affecting range processing, allowing different narrowing strategies. Relies on latest Resolver alpha-6 features.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7960"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f70a14f302d393b57b3",
    "number": 1352,
    "body": "As it is actually not needed. This also \"pulls in\" all of VersionParser into model version parser, so Core implementation now 100% just delegates over there.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7978",
    "head_branch": "MNG-7978",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7978] Decouple maven-artifact from maven-resolver-provider (#1352)\n\nAs it is actually not needed. This also \"pulls in\" all of VersionParser into model version parser, so Core implementation now 100% just delegates over there.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7978"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f71a14f302d393b57b4",
    "number": 1351,
    "body": "Extra handling if redirection happens within same GAV.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959",
    "head_branch": "MNG-7959-fix-classifier",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7959] User controlled rewrite (#1351)\n\nExtra handling if redirection happens within same GAV.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f71a14f302d393b57b5",
    "number": 1350,
    "body": "Name the things.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959",
    "head_branch": "MNG-7959-name-the-things",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7959] User controlled relocations Addendum (#1350)\n\nName the things.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f72a14f302d393b57b6",
    "number": 1349,
    "body": "I had this change parked on laptop, assumed was pushed :(\r\n\r\nThe \"ban\" was unfinished and wrong: what is actually needed is to have exception with proper explanation instead.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959\r\n\r\n---\r\n\r\nNow the command line:\r\n```\r\n$ mvn clean install -Dmaven.relocations.entries=\"org.slf4j:*:*>>\"\r\n```\r\n(global ban of ANY org.slf4j group artifact) causes output like this:\r\n\r\nhttps://gist.github.com/cstamas/c57efa1e1d56ca605fdfa88c431eab97",
    "head_branch": "MNG-7959-addendum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7959] User controlled relocations Addendum (#1349)\n\nThe \"ban\" was unfinished and wrong: what is actually needed is\r\nto have exception with proper explanation instead.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f73a14f302d393b57b7",
    "number": 1348,
    "body": "There was a TODO in code that I missed.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7974\r\n",
    "head_branch": "MNG-7974-addendum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7974] Upgrade to Resolver 2.0.0-alpha-5 Addendum (#1348)\n\nThere was a TODO in code that I missed.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7974"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f74a14f302d393b57b8",
    "number": 1347,
    "body": "Expose ArtifactCoordinate creation out of standard string.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7972",
    "head_branch": "MNG-7972",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7972] Artifact coordinate out of \"standard string\" (#1347)\n\nExpose ArtifactCoordinate creation out of standard string.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7972"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f75a14f302d393b57b9",
    "number": 1346,
    "body": "Change existing API to expose Version instead of String.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7968",
    "head_branch": "MNG-7968",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7968] Expose Maven Version as Version (not String) (#1346)\n\nChange existing API to expose Version instead of String.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7968"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f76a14f302d393b57ba",
    "number": 1345,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7971",
    "head_branch": "base-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7971] Add Artifact#getBaseVersion (#1345)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f77a14f302d393b57bb",
    "number": 1344,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7965\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/327\r\n\r\n",
    "head_branch": "MNG-7965",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7965] Fix duplicate tags not rejected (#1344)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f78a14f302d393b57bc",
    "number": 1343,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7966\r\n\r\nThis is a bit of an ugly hack, but I don't think we should modify the Maven 3 api for the `ProjectArtifactCache`, so I introduced:\r\n```\r\n    interface ArtifactsSetWithResult extends Set<Artifact> {\r\n        DependencyResolutionResult getResult();\r\n    }\r\n```\r\n\r\nIf that's deemed too ugly, I can modify the `ProjectArtifactCache` to add a `DependencyResolutionResult` in the `CacheRecord` maybe...",
    "head_branch": "resolution-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7966] Augment api to provide a Map<Dependency, Path> in the resolution result (#1343)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f79a14f302d393b57bd",
    "number": 1342,
    "body": "Regular formatted stack traces do not have a space before the file/line section.\r\n\r\nbefore:\r\n`at java.util.zip.ZipFile$Source.get (ZipFile.java:1426)`\r\n\r\nafter:\r\n`at java.util.zip.ZipFile$Source.get(ZipFile.java:1426)`\r\n\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "evil-space",
    "is_a_fork": true,
    "comments": [
      "@mbien it seems there are unit tests that expect the space, they'd have to be changed accordingly...",
      "@gnodet I should probably also rebase to 3.9.x, right? This would require to force push. I used master out of habit.",
      "> @gnodet I should probably also rebase to 3.9.x, right? This would require to force push. I used master out of habit.\r\n\r\nMaster is required.  If you want it in 3.9.x, you need to raise a different PR for it too.  The code is quite different."
    ],
    "commit_messages": [
      "[MNG-7970] Remove extra space in MavenSimpleLogger stack trace formatter (#1342)\n\nRegular formatted stack traces do not have a space before the file/line\r\nsection.\r\n\r\nbefore:\r\nat java.util.zip.ZipFile$Source.get (ZipFile.java:1426)\r\n\r\nafter:\r\nat java.util.zip.ZipFile$Source.get(ZipFile.java:1426)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f7aa14f302d393b57be",
    "number": 1341,
    "body": "Returns the language property to Type\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7962\r\n",
    "head_branch": "MNG-7962",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7962] Return language to Type (#1341)\n\nReturns the language property to Type\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7962"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f7ba14f302d393b57bf",
    "number": 1340,
    "body": "Changes:\r\n* remove hamcrest 1.3 completely\r\n* set proc:none to prevent warnings (Sisu APT is on classpath), we do not use annotation processing, we produce Sisu index explicitly.\r\n* remove some redundant elements from POMs\r\n* internally switch to Sisu own annotations (Typed, PreDestroy, etc)\r\n* sort out Runtime DI and other\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7963",
    "head_branch": "MNG-7963",
    "is_a_fork": true,
    "comments": [
      "One requirement I have for the builds is that a subsequent run of `mvn package` does not change the jars if you run it.  Basically, running `ls -ltr **/*.jar` should give you jars which are all older than the time you launched the build.",
      "Ok, was unaware of IT MavenITmng6084Jsr250PluginTest, it is only failed. Will return javax.annotation-api then..."
    ],
    "commit_messages": [
      "[MNG-7963] Clean up the build (#1340)\n\n* [MNG-7963] Clean up the build\r\n\r\nChanges:\r\n* remove hamcrest 1.3 from scope\r\n* set proc:none to prevent warnings (Sisu APT is on classpath),\r\n  we do not use annotation processing, we produce Sisu index\r\n  explicitly.\r\n* remove some redundant elements from POMs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f7ca14f302d393b57c0",
    "number": 1339,
    "body": "With some improvements. It accepts user property with CSV entries for relocations.\r\n\r\nTo toy with it, use `-Dmaven.relocations.entries` user property, for example create `.mvn/maven.config` file with contents:\r\n```\r\n-Dmaven.relocations.entries=entry1,entry2,...\r\n```\r\nIt accepts CSV (comma delimited) of entries, while entry form is as:\r\n```\r\nGAV>GAV\r\n```\r\nWhere left GAV can contain `*` for any elem (so `*:*:*` would mean ALL, something you don't want). Right GAV is either fully specified, or also can contain `*`, then it behaves as \"ordinary relocation\": the coordinate is preserved from relocated artifact. Finally, if right hand GAV is absent (line looks like \"GAV>\"). the left hand matching GAV is banned fully (from resolving).\r\n\r\nNote: the \">\" means project level, while \">>\" means global (whole session level, so even plugins will get relocated artifacts) relocation.\r\n\r\nExamples:\r\n```\r\n-Dmaven.relocations.entries=org.foo:*:*>,org.here:*:*>org.there:*:*,javax.inject:javax.inject:1>>jakarta.inject:jakarta.inject:1.0.5\r\n```\r\n\r\nMeaning: 3 entries, ban `org.foo` group (exactly, so `org.foo.bar` is allowed), relocate `org.here` to `org.there` and finally **globally relocate** (see \">>\") `javax.inject:javax.inject:1` to `jakarta.inject:jakarta.inject:1.0.5`\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959\r\n",
    "head_branch": "user-relocations",
    "is_a_fork": true,
    "comments": [
      "@cstamas sound quite handy, I wonder if an extra file is required here (its often a bit hard to really reference \"right\" root as there is no official \"the location of the `.mvn` folder\") alos it adds maybe more stuff to the repo and hopefully user relocations should be rarely used!\r\n\r\nSo I would like to suggest to support (in addition to the file) support a syntax like this:\r\n\r\n```\r\n-Dmaven.relocation.banfoo=org.foo:*:*>\r\n-Dmaven.relocation.org=org.here:*:*>org.there:*:*\r\n-Dmaven.relocation.javax=javax.inject:javax.inject:1>jakarta.inject:jakarta.inject:1.0.5\r\n```\r\n\r\nso basically everything starting with `-Dmaven.relocation.` followed by any string will be merged with the content of a possible file given.\r\n\r\n",
      "I think you are right:\r\n* `-D` should be supported\r\n* **hopefully user relocations should be rarely used** -- this one especially\r\n\r\nHence, will drop this \"file\" stuff and support only `-D` provided ones. Still, this change in general is OK as it opens the doors to other (ie. new POM model changes) relocations as well..."
    ],
    "commit_messages": [
      "[MNG-7959] User controlled relocations (#1339)\n\nWith some improvements. It accepts user property with CSV entries for relocations.\r\n\r\nTo toy with it, use `-Dmaven.relocations.entries` user property, for example create `.mvn/maven.config` file with contents:\r\n```\r\n-Dmaven.relocations.entries=entry1,entry2,...\r\n```\r\nIt accepts CSV (comma delimited) of entries, while entry form is as:\r\n```\r\nGAV>GAV\r\n```\r\nWhere left GAV can contain `*` for any elem (so `*:*:*` would mean ALL, something you don't want). Right GAV is either fully specified, or also can contain `*`, then it behaves as \"ordinary relocation\": the coordinate is preserved from relocated artifact. Finally, if right hand GAV is absent (line looks like \"GAV>\"). the left hand matching GAV is banned fully (from resolving).\r\n\r\nNote: the \">\" means project level, while \">>\" means global (whole session level, so even plugins will get relocated artifacts) relocation.\r\n\r\nExamples:\r\n```\r\n-Dmaven.relocations.entries=org.foo:*:*>,org.here:*:*>org.there:*:*,javax.inject:javax.inject:1>>jakarta.inject:jakarta.inject:1.0.5\r\n```\r\n\r\nMeaning: 3 entries, ban `org.foo` group (exactly, so `org.foo.bar` is allowed), relocate `org.here` to `org.there` and finally **globally relocate** (see \">>\") `javax.inject:javax.inject:1` to `jakarta.inject:jakarta.inject:1.0.5`\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7959"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f7da14f302d393b57c1",
    "number": 1338,
    "body": "From 3.8.7 to 3.8.8, but these two minors have binary incompatibilities (in ctor), so ignores updated as well.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7961",
    "head_branch": "up-japicmp-baseline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Up japicmp baseline (#1338)\n\nFrom 3.8.7 to 3.8.8, but these two minors have binary incompatibilities (in ctor), so ignores updated as well.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7961"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f7ea14f302d393b57c2",
    "number": 1337,
    "body": "Update to Resolver alpha-5 and apply some cleanups.\r\n\r\nNotable changes:\r\n* update resolver to 2.0.0-alpha-5\r\n* detach model-builder from maven-artifact (this is important)\r\n* introduce model builder own VersionParser iface (implemented in resolver-provider)\r\n* API VersionParser implementation reuses VersionParser from resolver-provider to implement the service\r\n* various other cleanups, removal of old plexus, etc\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7974",
    "head_branch": "version-scheme-selector",
    "is_a_fork": true,
    "comments": [
      "What about all the usages of `org.apache.maven.artifact.versioning.DefaultArtifactVersion` ?\r\nThis is currently the one used in the [Maven 4 api](https://github.com/apache/maven/blob/8150c62749a637a98fbb9489fb8162034956220b/maven-core/src/main/java/org/apache/maven/internal/impl/DefaultVersionParser.java#L46) and also in areas such as [parent selection in model building](https://github.com/apache/maven/blob/69bc993b8089a2d3d1ddfd6c7d4f8dc6cc205995/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java#L1486).",
      "@gnodet see da737af2b728b1c81510d32911a45ec3c4a736c4",
      "I'm not sure I'm buying the use of the additional indirection for the `VersionSchemeSelector`.  I wonder if it would be just as simple to be injected with a `VersionScheme`.  If users want to use a different scheme, they just need to register one with a higher `@Priority`.  And if we want pluggability, we could also define a `@SessionSCoped`  component that would delegate to the `VersionSchemeSelector` underneath.\r\nBut at least, components would simply be injected with a single `VersionScheme`.",
      "The goal of this PR is to allow _transparently_ per-session choice of `VersionScheme`. The \"transparently\" means that even the constructed object graph can be retained, as all the selection happens at session runtime, hence this would work also in mvnd without any extra effort as well. Finally, yes, this opens ability for users to really shoot themselves in foot (which maven config does not do that so far?), but I think the benefit of this -- ie. to have some custom version scheme with project specific (fixed) version scheme outweighs that.\r\n\r\nAlso, don't forget that this allows now for a Mojo to customize session (and configure version scheme for use case) and then perform different queries against resolver... \r\n\r\nVersionScheme is a resolver interface, and while Resolver does not instantiate it anywhere directly, it is always client code that needs to set it (ie. see util filters etc), but as this PR shows, there are some resolver component implementations (am looking at maven-resolver-provider) that use it. Hence, this PR makes this feature available for Maven but also for any Resolver 3rd party integration as well.\r\n\r\nReason why would you use different `VersionScheme` is usually due comparisons between versions, ordering. And remember, Maven does not do such thing, as plugins in POM, dependencies are usually \"plain versions\" where simple string equality (or translation via layout and on retrieval equality) is applied, are mostly unaffected by scheme. Where scheme comes into play is version sorting, range handling and such...\r\n\r\nFinally, don't forget that currently regarding versions there are two \"parallel universes\" (both with own bugs), the maven-artifact Version and resolver Generic version scheme. This could also open a gate to drop one of them, and have two implementations of Scheme like \"generic\" and \"legacy\", that implements old one with all of it's bugs, hence users could choose \"modus operandi\", \"current\" or \"legacy\". ",
      "Reworked PR: stepped off selector, it was reverted (see https://issues.apache.org/jira/browse/MRESOLVER-457 and read why it was bad idea). All simpler now.",
      "I agree with https://github.com/apache/maven/pull/1337/commits/49cec292edce1b8aeb5d8f54a7e729ad70f00a5b commit: if component changed to session scope, no need for provider.\r\nBut I don't understand 2nd commit https://github.com/apache/maven/pull/1337/commits/5ce52798bea3c990bd407ef3b6cf2e5b6000e7fd that left components singletons, but you removed the provider. \r\n\r\nCan you explain that? As your 2nd commit makes mandatory to rebuild component graph in case of schema change, while with provider it was possible without doing that.",
      "> I agree with [49cec29](https://github.com/apache/maven/commit/49cec292edce1b8aeb5d8f54a7e729ad70f00a5b) commit: if component changed to session scope, no need for provider. But I don't understand 2nd commit [5ce5279](https://github.com/apache/maven/commit/5ce52798bea3c990bd407ef3b6cf2e5b6000e7fd) that left components singletons, but you removed the provider.\r\n> \r\n> Can you explain that? As your 2nd commit makes mandatory to rebuild component graph in case of schema change, while with provider it was possible without doing that.\r\n\r\nSo what kind of schema change do you have in mind exactly ?\r\n\r\nI'm not buying the idea to use Provider at the injection point to control the lifecycle of dependent beans.  If we suppose a plugin can register any kind of component and that it should override the default component set, then all injection points have to use Provider.  Such components are supposed to be provided by extensions, which do not change.  Fwiw, I think we do overuse the `@Singleton` and most components are defined as singletons but this is unnecessary because they are stateless.  `@Singleton` should be used for classes that actually need to be singletons.\r\n",
      "Ok, let's postpone this discussion, am completely fine if this PR merely upgrades Resolver to alpha-5.\r\n\r\nMy ultimate goal is to kill off \"parallel universe\" (two version implementations, resolver and maven), but for sure this PR is not fixing that. And agree with overuse of singletons as well.\r\n\r\nLet's move on with this if you are fine with it.",
      "@gnodet this PR became \"just\" update to resolver-5 w/ cleanup. So please review it as such."
    ],
    "commit_messages": [
      "[MNG-7974] Update Resolver 2.0.0-alpha-5 (#1337)\n\nUpdate to Resolver alpha-5 and apply some cleanups.\r\n\r\nNotable changes:\r\n* update resolver to 2.0.0-alpha-5\r\n* detach model-builder from maven-artifact (this is important)\r\n* introduce model builder own VersionParser iface (implemented in resolver-provider)\r\n* API VersionParser implementation reuses VersionParser from resolver-provider to implement the service\r\n* various other cleanups, removal of old plexus, etc\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7974"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f7fa14f302d393b57c3",
    "number": 1336,
    "body": null,
    "head_branch": "plugin-v4-classloader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f80a14f302d393b57c4",
    "number": 1335,
    "body": null,
    "head_branch": "version-resolver-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Version resolver API (#1335)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f81a14f302d393b57c5",
    "number": 1334,
    "body": null,
    "head_branch": "api-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Better internal helper methods (#1334)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f82a14f302d393b57c6",
    "number": 1333,
    "body": null,
    "head_branch": "classpath-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Dependency collection / resolution API (#1333)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f83a14f302d393b57c7",
    "number": 1332,
    "body": "Remove all ordering from Maven and delegate it to Resolver.\r\n\r\nSupersedes https://github.com/apache/maven/pull/1212\r\n\r\nThis PR makes Maven completely rely on Resolver to order artifacts on classpath (before this PR it was several spots where explicit ordering was applied without ability to affect it). This PR makes now Maven completely rely on Resolver, never \"sort\" artifacts on it's own, but use resolver result, that in turn depends on session config.\r\n\r\nExample invocation:\r\n```\r\n$ mvn -X package -Daether.system.dependencyVisitor=levelOrder\r\n```\r\n\r\nWould make Maven use \"levelOrder\".\r\n\r\nExample of default (preOrder, as before) and new levelOlder (new in 2.0): notice how tree is same, but resulting artifact list (and hence, order on classpath) is different:\r\nhttps://gist.github.com/cstamas/c88ca550006e53edad5b16973b54c349\r\n\r\nThe new resolver configuration is documented here:\r\nhttps://maven.apache.org/resolver-archives/resolver-2.0.0-alpha-3/configuration.html\r\n(property No 62)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7953\r\n",
    "head_branch": "MNG-7953",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7953] Classpath ordering delegated to Resolver (#1332)\n\nRemove all ordering from Maven and delegate it to Resolver.\r\n\r\nSupersedes https://github.com/apache/maven/pull/1212\r\n\r\nThis PR makes Maven completely rely on Resolver to order artifacts on classpath (before this PR it was several spots where explicit ordering was applied without ability to affect it). This PR makes now Maven completely rely on Resolver, never \"sort\" artifacts on it's own, but use resolver result, that in turn depends on session config.\r\n\r\nExample invocation:\r\n```\r\n$ mvn -X package -Daether.system.dependencyVisitor=levelOrder\r\n```\r\n\r\nWould make Maven use \"levelOrder\".\r\n\r\nExample of default (preOrder, as before) and new levelOlder (new in 2.0): notice how tree is same, but resulting artifact list (and hence, order on classpath) is different:\r\nhttps://gist.github.com/cstamas/c88ca550006e53edad5b16973b54c349\r\n\r\nThe new resolver configuration is documented here:\r\nhttps://maven.apache.org/resolver-archives/resolver-2.0.0-alpha-3/configuration.html\r\n(property No 62)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7953"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f84a14f302d393b57c8",
    "number": 1331,
    "body": "Bumps [ch.qos.logback:logback-classic](https://github.com/qos-ch/logback) from 1.2.11 to 1.2.13.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/qos-ch/logback/commit/2648b9e7fbb47426c89b9c93b411c07484e8f277\"><code>2648b9e</code></a> prepare release 1.2.13</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/bb095154be011267b64e37a1d401546e7cc2b7c3\"><code>bb09515</code></a> fix CVE-2023-6378</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/45732949bfb845df04cbe65292cf48aaa090cb1d\"><code>4573294</code></a> start work on 1.2.13-SNAPSHOT</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/a388193052c298ca87cc64192319df723288c6ab\"><code>a388193</code></a> Merge branch 'branch_1.2.x' of github.com:qos-ch/logback into branch_1.2.x</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/de44dc422bc3da1d7808283851324d960b492d4d\"><code>de44dc4</code></a> prepare release 1.2.12</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/ca0cf172f680308938515b8a5d69348759ee947c\"><code>ca0cf17</code></a> Merge pull request <a href=\"https://redirect.github.com/qos-ch/logback/issues/532\">#532</a> from joakime/fix-jetty-requestlog</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/e31609b1980b9ba986344aae3cab7275fa2b4935\"><code>e31609b</code></a> removed unused files</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/21e29efb284766f386781175b2ba18585b690154\"><code>21e29ef</code></a> Merge pull request <a href=\"https://redirect.github.com/qos-ch/logback/issues/567\">#567</a> from spliffone/LOGBACK-1633</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/e869000e1d5901e6aa6f46cc6575ee2137f15b69\"><code>e869000</code></a> fix: published POM file contain the wrong scm URL</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/009ea46cb81a015f2ca312bde6e823581b93b37a\"><code>009ea46</code></a> version for next dev cycle</li>\n<li>Additional commits viewable in <a href=\"https://github.com/qos-ch/logback/compare/v_1.2.11...v_1.2.13\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ch.qos.logback:logback-classic&package-manager=maven&previous-version=1.2.11&new-version=1.2.13)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/maven/network/alerts).\n\n</details>",
    "head_branch": "dependabot/maven/ch.qos.logback-logback-classic-1.2.13",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7975] Bump ch.qos.logback:logback-classic from 1.2.11 to 1.2.13 (#1331)\n\nBumps [ch.qos.logback:logback-classic](https://github.com/qos-ch/logback) from 1.2.11 to 1.2.13.\r\n- [Commits](https://github.com/qos-ch/logback/compare/v_1.2.11...v_1.2.13)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: ch.qos.logback:logback-classic\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7975"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f85a14f302d393b57c9",
    "number": 1330,
    "body": "JIRA issue: [MNG-7977](https://issues.apache.org/jira/browse/MNG-7977)\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/329\r\n",
    "head_branch": "fix-reactor-reader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7977] Fix reactor reader to not resolve any artifacts from projects being built outside the reactor (#1330)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f86a14f302d393b57ca",
    "number": 1329,
    "body": "Bumps [ch.qos.logback:logback-classic](https://github.com/qos-ch/logback) from 1.2.11 to 1.3.12.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/qos-ch/logback/commit/0df4ec15d45301b5d0a6e2de6466a17944c3a871\"><code>0df4ec1</code></a> prepare release 1.3.12</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/189af5029addc72c91300e3e53466de5a1ca9894\"><code>189af50</code></a> ensure JDK 8 compatibility</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/14a71d02102bc5365398ff388cee065eb99ce141\"><code>14a71d0</code></a> cater for array size marked with -1</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/b8eac23a9de9e05fb6d51160b3f46acd91af9731\"><code>b8eac23</code></a> prevent DOS attacks using on malicious serialized input</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/d87dd1221eb23732f4400cb60de725765539a274\"><code>d87dd12</code></a> further support for Virtual threads, issues 737</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/034aaee06785b817d41807ea756ce765ed9c8fb3\"><code>034aaee</code></a> add support for Virtual threads</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/d6294e579848e5c3cd179d495c3c668d5c642f32\"><code>d6294e5</code></a> parameterizable invocation gate delay</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/3b91f6d5137814b89a7c9277279ca630292f17c2\"><code>3b91f6d</code></a> minor refactoring</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/d94ebec6edfdd6e7e3737e9e4c3cd1551e8cdec0\"><code>d94ebec</code></a> fix guthub issue 715</li>\n<li><a href=\"https://github.com/qos-ch/logback/commit/c76b3030ce618b8c361f39c09779b0a738baf8a6\"><code>c76b303</code></a> minor refactoring for better readability</li>\n<li>Additional commits viewable in <a href=\"https://github.com/qos-ch/logback/compare/v_1.2.11...v_1.3.12\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ch.qos.logback:logback-classic&package-manager=maven&previous-version=1.2.11&new-version=1.3.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/maven/network/alerts).\n\n</details>",
    "head_branch": "dependabot/maven/ch.qos.logback-logback-classic-1.3.12",
    "is_a_fork": false,
    "comments": [
      "Superseded by #1331."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f87a14f302d393b57cb",
    "number": 1328,
    "body": "Changes to prepare Maven for Resolver 2.0.0-alpha-3, that is mostly about renames and config changes. When this PR gets merged, ITs will fail, the related changes for ITs are here: https://github.com/apache/maven-integration-testing/pull/322\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7946\r\nhttps://issues.apache.org/jira/browse/MNG-7948",
    "head_branch": "prepare-for-resolver-alpha-3",
    "is_a_fork": true,
    "comments": [
      "Hm, did latest snapshot not deploy? Seems new `-apache` transport is not found...",
      "Now I failed intentionally this build: it uses 2.0.0-alpha-3. Once it lands in central, dance starts..."
    ],
    "commit_messages": [
      "Preparations for resolver alpha-3 (#1328)\n\nUpdates Maven to Resolver 2.0.0-alpha-3, that is mostly about renames and config changes. \r\n\r\nRelated changes for ITs are here: https://github.com/apache/maven-integration-testing/pull/322\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7946\r\nhttps://issues.apache.org/jira/browse/MNG-7948"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f88a14f302d393b57cc",
    "number": 1327,
    "body": "- surefire from 3.1.2 to 3.2.2\r\n- dependency from 3.6.0 to 3.6.1\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7943",
    "is_a_fork": false,
    "comments": [
      "Failed builds on jenkins look like unstable."
    ],
    "commit_messages": [
      "[MNG-7943] Upgrade default plugin bindings\n\n- surefire from 3.1.2 to 3.2.2\n- dependency from 3.6.0 to 3.6.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f89a14f302d393b57cd",
    "number": 1326,
    "body": "Use latest resolver.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7934\r\n",
    "head_branch": "maven-3.9.x-MNG-7934",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7934] Update to Resolver 1.9.18 (#1326)\n\nUse latest resolver.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7934"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f8aa14f302d393b57ce",
    "number": 1325,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7919",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7919] Change the log of unable to find the root directory to info (#1325)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f8aa14f302d393b57cf",
    "number": 1324,
    "body": "https://issues.apache.org/jira/browse/MNG-7942",
    "head_branch": "MNG-7942",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7942] Upgrade maven-parent to 41"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f8ba14f302d393b57d0",
    "number": 1323,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7945\r\n\r\nAt the same time, another bug is fixed.  When using the build/raw transformation to infer intra-reactor dependencies, the build fail if not run from the root (because those dependencies are not available).  The same problem happens when rebuilding the consumer POM.  \r\nWhen this happen, a quick read of the whole reactor models is done (but only file models, not effective ones) to gather all GAV of modules being built.",
    "head_branch": "fix-consumer-pom",
    "is_a_fork": true,
    "comments": [
      "I am blocked by this, so can this be soon merged please? @elharo any counter arguments?",
      "> I am blocked by this, so can this be soon merged please? @elharo any counter arguments?\r\n\r\nCounter-arguments to what claim? The use of exceptions in this PR does not align with Java standard practices. I don't think that's changed yet.  ",
      "> > I am blocked by this, so can this be soon merged please? @elharo any counter arguments?\r\n> \r\n> Counter-arguments to what claim? The use of exceptions in this PR does not align with Java standard practices. I don't think that's changed yet.\r\n\r\n@elharo  I've done a big refactoring of the package yesterday evening.  Please have a look at the latest code."
    ],
    "commit_messages": [
      "[MNG-7945] Fix profile settings being injected into consumer POM (#1323)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f8ca14f302d393b57d1",
    "number": 1322,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7932-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f8da14f302d393b57d2",
    "number": 1321,
    "body": "Use latest resolver.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7934\r\n",
    "head_branch": "maven-3.9.x-MNG-7934",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7934] Update to Resolver 1.9.17 (#1321)\n\nUse latest resolver.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7934"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f8ea14f302d393b57d3",
    "number": 1320,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n----\r\n@olamy This should allow s390x builds to run on Jenkins.  Thanks for your help!",
    "head_branch": "s390x-fix-jdk",
    "is_a_fork": true,
    "comments": [
      "Hi @vivkong did you see my latest commits:\r\n - https://github.com/apache/maven/commit/9d65e2b2402b1c8a5d480394a0ae711ee6704757\r\n - https://github.com/apache/maven/commit/1a61b80dee26266924eb46260ec861cf7bdab783\r\n\r\nNow build is green: https://ci-maven.apache.org/job/Maven/job/maven-core.s390x/job/master/",
      "Sorry I didn't see your commit!  Thanks for your fix @slawekjaranowski.  Glad to see the s390x build is now running again!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f8fa14f302d393b57d4",
    "number": 1319,
    "body": null,
    "head_branch": "fix-not-closed-fjp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix not closed ForkJoinPools (#1319)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f90a14f302d393b57d5",
    "number": 1318,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-6036\n\nThis provides support for XML namespaces inside the configuration.\n\n",
    "head_branch": "namespaces-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6036] Add namespace to XmlNode (#1318)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f91a14f302d393b57d6",
    "number": 1317,
    "body": "(cherry picked from commit 644a15c323ba4312417ee0224409835c3bff7308)\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7939-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7939] Allow to exclude plugins from validation\n\n(cherry picked from commit 644a15c323ba4312417ee0224409835c3bff7308)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f92a14f302d393b57d7",
    "number": 1316,
    "body": "Supersedes #1005",
    "head_branch": "improve-exception-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "improve exception docs (#1316)\n\nCo-authored-by: Elliotte Rusty Harold <elharo@ibiblio.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f93a14f302d393b57d8",
    "number": 1315,
    "body": null,
    "head_branch": "upgrade-parent-in-bom",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f94a14f302d393b57d9",
    "number": 1314,
    "body": null,
    "head_branch": "remove-plexus-xml-stream-reader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f95a14f302d393b57da",
    "number": 1313,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "s390-jdk",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improve build on s390 (#1313)\n\n* Use JDK 11 as default for s390 builds\r\n* Checkout the same branch name for ITs as for build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f96a14f302d393b57db",
    "number": 1312,
    "body": "https://issues.apache.org/jira/browse/MNG-7939\r\n\r\nhttps://github.com/apache/maven-integration-testing/pull/320\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7939",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7939] Allow to exclude plugins from validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f97a14f302d393b57dc",
    "number": 1311,
    "body": "This is a first step to fix [MNG-7923]\n\n",
    "head_branch": "MNG-7923",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f98a14f302d393b57dd",
    "number": 1310,
    "body": "Minor improvements to the API",
    "head_branch": "api-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add some love to the API (#1310)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f99a14f302d393b57de",
    "number": 1309,
    "body": "### Switch to Guice 6.0, use guice to instantiate and inject mojos\r\n\r\nContext: my goal for the maven API was to be completely independent of any third party library. I was working this week on migrating some parts of the Plugin API for Maven 4.  Unfortunately, the scopes (`@SessionScoped` and `@MojoExecutionScoped`) need to be annotated by a scope annotation so that they are recognised as such by Guice. So either the guice annotation or the javax.inject one.  Given `javax.inject` will slowly go away, I went straight to `jakarta.inject`, thus upgrading to Guice 6.0 (which supports both `javax.inject` and `jakarta.inject`, while Guice 7.0 only supports `jakarta.inject`).\r\n\r\n### Maven 4 api for plugin execution\r\n\r\nThis introduces an immutable plugin descriptor (and custom lifecycle for plugins too). The Maven 3 `PluginDescriptor` contains runtime information such as the class loader, dependencies, etc...  Those are moved to the `o.a.m.api.Plugin` class which can be accessed from the `o.a.m.api.MojoExecution` along with the `MojoDescriptor` and `PluginDescriptor`.\r\n\r\nLeveraging guice, some fields inherited from the plexus land now disappear: `instantiationStrategy` is replaced with scope annotations, `@Component` replaced by `@Inject`.\r\n",
    "head_branch": "plugin-api",
    "is_a_fork": true,
    "comments": [
      "@mcculls please chime in",
      "> I'm not familiar with these specific annotations. However I've noticed in some cases only the simple name of the annotation matters, not the package. If that applies here, you could define Maven specific annotations with the right name rather than depending on Guice.\r\n\r\nYeah, that's true for some annotations, unfortunately, guice is very specific about which ones are used, so it does not work here, see https://github.com/google/guice/blob/6.0.0/core/src/com/google/inject/internal/Annotations.java#L350"
    ],
    "commit_messages": [
      "[MNG-7947] Plugin API (#1309)\n\n* Add an InternalSession interface to avoid casting to the implementation in various places\r\n* Upgrade to Guice 6.0.0 and add support for jakarta.inject annotations\r\n* Maven 4 Plugin API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f9aa14f302d393b57df",
    "number": 1308,
    "body": null,
    "head_branch": "remove-xml-stream-reader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove reference to plexus XmlStreamReader (#1308)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f9ba14f302d393b57e0",
    "number": 1307,
    "body": "Fix XML parsing problem with empty namespace\n",
    "head_branch": "xml-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix XML parsing problem with empty namespace (#1307)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f9ca14f302d393b57e1",
    "number": 1306,
    "body": null,
    "head_branch": "remove-string-tokenizer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove usage of old StringTokenizer (#1306)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f9da14f302d393b57e2",
    "number": 1305,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7920",
    "is_a_fork": true,
    "comments": [
      "This will conflict with #1323 ...",
      "> This will conflict with #1323 ...\r\n\r\n@gnodet \r\nI think you can deal with https://github.com/apache/maven/pull/1323  first. I'll deal with the conflict when merging https://github.com/apache/maven/pull/1323.\r\n\r\n",
      "> > This will conflict with #1323 ...\r\n> \r\n> @gnodet I think you can deal with #1323 first. I'll deal with the conflict when merging #1323.\r\n\r\n@CrazyHZM #1323 has been merged now."
    ],
    "commit_messages": [
      "[MNG-7920] Fix usage of packaging BOM fails in maven-install-plugin (#1305)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f9ea14f302d393b57e3",
    "number": 1304,
    "body": "This adds a mechanism for setting a strict artifact descriptor policy, via a boolean config property: `aether.artifactDescriptorPolicy.strict`.\r\n\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "add-desc-policy-prop",
    "is_a_fork": true,
    "comments": [
      "@jaredstehler I'd like to propose to have this PR superseded by \"onSessionClose\" that contains a bunch of maven+resolver improvements, for example this one (contains your change but exposed via CLI): https://github.com/apache/maven/pull/1301/commits/e93bb7293792cd68569060b51074b95d6ccb795a",
      "> @jaredstehler I'd like to propose to have this PR superseded by \"onSessionClose\" that contains a bunch of maven+resolver improvements, for example this one (contains your change but exposed via CLI): [e93bb72](https://github.com/apache/maven/commit/e93bb7293792cd68569060b51074b95d6ccb795a)\r\n\r\n@cstamas  that looks perfect, thanks! PR for reference: https://github.com/apache/maven/pull/1301",
      "Is this PR still needed? Please close it out if not."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243f9fa14f302d393b57e4",
    "number": 1303,
    "body": "This adds a mechanism for setting a strict artifact descriptor policy, via a config property.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "desc-policy-prop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa0a14f302d393b57e5",
    "number": 1302,
    "body": "- Try to improve concurrency\n- Delegate display to a single thread\n- Disable test which is broken with new logic\n",
    "head_branch": "improve-transfer-listener-speed",
    "is_a_fork": true,
    "comments": [
      "+1 but no change detected...\r\nbuilt master with master vs this PR, pretty much same result (build time)\r\nNote: built w/ tests running, so they bloat build times and makes diff less visible, so will repeat this",
      "Can you quatify the speed improvement in percent?",
      "I think this is a good change despite no \"speedup\" sensed: the original class uses `synchronized` on each listener method, meaning at one time only one thread can enter only one method... and this MAY (most probably is) coggle resolver when uses multiple threads.",
      "> I think this is a good change despite no \"speedup\" sensed: the original class uses `synchronized` on each listener method, meaning at one time only one thread can enter only one method... and this MAY (most probably is) coggle resolver when uses multiple threads.\r\n\r\nYes, I used `synchronized` back them because it was guaranteed to work properly. I will review this this week.",
      "> I think this is a good change despite no \"speedup\" sensed: the original class uses `synchronized` on each listener method, meaning at one time only one thread can enter only one method... and this MAY (most probably is) coggle resolver when uses multiple threads.\r\n\r\nThat was my original intention.  However, looking again at what we have here, I'm not sure it fulfils the initial intention.  Even if the synchronized keyword has been removed from the main methods, I had to add back some lock because some updates are asynchronous (like initiated, progress, corrupted) but some need the display to be changed synchronously when the last resource transfer is finished (so that the log can continue as normal). \r\nRe-reading, I even think there may be cases where the output will be wrong, as the test to check if the updated transfer is the _last_ one looks wrong, as it does not use an up-to-date data.  The removal of the entry is done in the display method, which means if two resources are completed very shortly, the test will assume there are still some ongoing resources and the display won't be updated.\r\n\r\nThis needs a bit more work imho.\r\n",
      "With latest changes (trivial) perf tested locally both, this PR and https://github.com/apache/maven/pull/1371\r\n\r\nSlight improvement detected:\r\n* master: 1:12\r\n* both PRs: 1:09\r\n\r\nThen tried some \"scale out\" but seems throwing threads onto resolver does not help much:\r\nhttps://gist.github.com/cstamas/6b59b26408ec164084b0001685de4ca5\r\n\r\n(note: values above did run tests, so variance is there, and hence, numbers are different. Values from gist are using command from gist).",
      "> With latest changes (trivial) perf tested locally both, this PR and #1371\r\n> \r\n> Slight improvement detected:\r\n> \r\n>     * master: 1:12\r\n> \r\n>     * both PRs: 1:09\r\n> \r\n> \r\n> Then tried some \"scale out\" but seems throwing threads onto resolver does not help much: https://gist.github.com/cstamas/6b59b26408ec164084b0001685de4ca5\r\n> \r\n> (note: values above did run tests, so variance is there, and hence, numbers are different. Values from gist are using command from gist).\r\n\r\nDon't forget that we buy that we a lot of code complexity. The current code is straight forward.",
      "> Don't forget that we buy that we a lot of code complexity. The current code is straight forward.\r\n\r\nAgreed, it is straightforward, but may cause bottleneck (due concurrent invocations, is simple if you sync everything like you did). Hence created alternate proposal https://github.com/apache/maven/pull/1371 that is a plain wrapper that enables writing TransferListeners that runs on single thread. Note: that is just a PoC, but \"works for me\" :smile: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa1a14f302d393b57e6",
    "number": 1301,
    "body": "Implement onSessionClose and \"resolver 2.x way for sessions\"...\r\n\r\nAs digging happens in same area, some other \"resolver configuration\" issues resolved as well.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7653\r\nhttps://issues.apache.org/jira/browse/MNG-7935\r\nhttps://issues.apache.org/jira/browse/MNG-7936",
    "head_branch": "MNG-7653-onSessionClose",
    "is_a_fork": true,
    "comments": [
      "@cstamas please look at ITs it takes a very long time and look like can not be finished ....\r\n\r\nI tried to re-run build on GitHub but without success"
    ],
    "commit_messages": [
      "[MNG-7653] Integrate Resolver 2.x onSessionClose (#1301)\n\nImplement onSessionClose and \"resolver 2.x way for sessions\"...\r\n\r\nAs digging happens in same area, some other \"resolver configuration\" issues resolved as well.\r\n\r\nImportant: contains a \"hack\" to fix issue in alpha-2, that is marked with TODO to remove once alpha-3+ used.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7653\r\nhttps://issues.apache.org/jira/browse/MNG-7935\r\nhttps://issues.apache.org/jira/browse/MNG-7936"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa2a14f302d393b57e7",
    "number": 1300,
    "body": "Just a small cleanup on dependencies version...",
    "head_branch": "cleanup-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clean up dependencies versions (#1300)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa3a14f302d393b57e8",
    "number": 1299,
    "body": "Integrate better and obtain better control over Resolver. These changes did stem from \"JPMS module experiment\" and are considered improvement but does not implement any functionality related to JPMS module support.\r\n\r\nChanges:\r\n* Maven4 should stop \"disconnected coexistence\" of two type systems (ArtifactHandlers and Resolver ArtifactTypeRegistry), it should unify them.\r\n* Maven4 Core should provide generic and extensible means to introduce new artifact types (fully in extension, and extension should get extended data via \"roundtrip\" in core/resolver)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7924",
    "head_branch": "module-experiment",
    "is_a_fork": true,
    "comments": [
      "Is it planned to make the properties injected from the pom \"mvn 4 version\" and therefore makes the type dictionnary useless?\r\nIf so +1 (means the toggles will be exposed to users and type can stick to extension and management in the build handled by end user, best of all worlds), else I'm mixed since it does not change much things if it stays internal only.",
      "> Is it planned to make the properties injected from the pom \"mvn 4 version\" and therefore makes the type dictionnary useless? If so +1 (means the toggles will be exposed to users and type can stick to extension and management in the build handled by end user, best of all worlds), else I'm mixed since it does not change much things if it stays internal only.\r\n\r\nA bit fuzzy thought but let me try:\r\n* \"Is it planned to make the properties injected from the pom \"mvn 4 version\" NO\r\n* \"therefore makes the type dictionnary useless?\" NO\r\n* \"means the toggles will be exposed to users\" YES\r\n* \"type can stick to extension and management in the build handled by end user\" um, is like that even today\r\n* \"if it stays internal only\" um, Type is part of public Maven API, so it cannot be internal only per definitionem",
      "> um, is like that even today\r\n\r\nExactly, and I hope the refactoring enables to stop doing that, it is very misleading for end users and technically no more needed with your PR.",
      "Type is part of Maven DNA, and let me try to explain why:\r\n\r\nWhen you are on \"resolver level\" (so no Maven in vicinity, like MIMA or Resolver \"demos\" runs), you are dealing with \"artifacts\", that are really just \"named files\" or \"files with coordinates\", and coordinates are needed to lay these files out in some \"space\" (layout). There is NO whatsoever assumption about \"what those files are\". At this level resolver merely cares about getting you these files and publishing these files for you.\r\n\r\nWhen you hop abstraction level higher, at Maven level, you do not deal (never!) with \"artifacts\" anymore, but you attribute the usage (or role) to artifact, so in Maven you deal with:\r\n* artifact that is the project\r\n* artifact that is the parent POM\r\n* artifact that is maven-plugin\r\n* artifact that is a dependency\r\n* etc\r\n\r\n(so, \"artifact\" is superset of ALL things Maven uses, but in Maven universe you KNOW and TELL (implicitly or explicitly) what you want that artifact for).\r\n\r\nAnd while you have \"implied types\" (parent POM, maven-plugin, extension, etc are \"implied types\"), for dependencies you need something \"extra\" to express \"what it is\" (or \"what I want with it\"), and the type serves that purpose.\r\n\r\nWe could add \"flags\" to dependencies, but that would make Maven very very \"low level\", and would trigger a huge cognitive load on end users IMHO. Rather move \"baby steps\" with improvements, and we will see where it gets us.",
      "I fully understand that and this is exactly why I'd like we stop doing that.\r\n\r\n> We could add \"flags\" to dependencies, but that would make Maven very very \"low level\", and would trigger a huge cognitive load on end users IMHO. Rather move \"baby steps\" with improvements, and we will see where it gets us.\r\n\r\nIMHO it is where we are today, almost no user or plugin writer fully understand the implications of a type and it is often misused.\r\nThe design of this PR opens the flags which are exactly the proper design and solution to handle the \"context\" you need and avoid to workaround the lack of flags with an existing marker, aka type today.\r\n\r\nSee it as it is, would you use `org.superbiz-classpath` in `groupid` to say that `org.superbiz` is in the classpath? Probably not but it is what we do in `type` cause of the lack of alternative.\r\nWith your PR we can assume it and move it to flags and I think it is what would serve the best users and us.\r\nThe only challenge will be to solve this in pom v4.0.0 (mvn 3) but ultimately since it is build flags it would just be a matter of sticking to type=extension rule so I think we would be good and help our community rather than promoting more a workaround.",
      "Another important thing people forget is that `type != packaging`, and due this bias/assumption they come up with wrong conclusions...\r\n\r\nType is NOT packaging, but they CAN be equal. Think about \"producer\" (project producing artifact) and \"consumer\" (project that consumes produced artifact). And let's stick with \"jar artifact\" for simplicity.\r\n\r\nProducer can produce jar in several ways:\r\n* packaging=jar the most ordinary way\r\n* packaging=takari-jar very common\r\n* packaging=my-supercool-jar (ie. I come up with some my own flavour of packaging for JARs)\r\n* etc\r\n\r\nAs you see, technically \"endless\" options for producing JARs (technically, while in reality few people will care to introduce new packaging, but is not uncommon).\r\n\r\nConsumer can consume these jars above in several ways:\r\n* dependency type=jar the most ordinary way\r\n* dependency type=takari-jar very uncommon, but here you must have takari-lifecycle extension present. In fact, this is semantically wrong, and shows my pet-peeve, even sonatype does it wrong\r\n* dependency type=my-supercool-jar ditto, you need extension\r\n\r\nSo as you see, not that packaging != type but they are actually `n:m` or unsure, how to express it...\r\n\r\nSonatype does it wrong:\r\nhttps://search.maven.org/artifact/io.takari.maven.plugins/takari-lifecycle-plugin/2.1.1/takari-maven-plugin\r\n\r\nThey recommend to \"consume\" this plugin as:\r\n```\r\n<dependency>\r\n  <groupId>io.takari.maven.plugins</groupId>\r\n  <artifactId>takari-lifecycle-plugin</artifactId>\r\n  <version>2.1.1</version>\r\n  <type>takari-maven-plugin</type>\r\n</dependency>\r\n```\r\n\r\nWhich is wrong, as to make Maven understand `takari-maven-plugin` you need takari-lifecycle-plugin :smile: \r\n\r\nSimply put, Sonatype search suffers from [this issue](https://issues.apache.org/jira/browse/MNG-7373?focusedCommentId=17769743&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17769743), in short, they mix \"consumer\" and \"producer\" use case: they offer for \"consumer\" the \"producer\" information, which is wrong.\r\n\r\nBasically it shows that they also imply (wrongly) that `packaging==type` which in fact is not.",
      "@cstamas I guess current state is clear but since it is not fully embraced by the community and your PR enables to align both worlds I really think we shouldnt miss this opportunity.\r\nIf even sonatype gets it wrong it is likely not very welcomed by the community IMHO.\r\n\r\nSide note: never said you were wrong or it was not working, just that there is so much misunderstanding that making it more obvious would be welcomed.\r\nIn terms of impl it is mainly your PR + pom adjustments and be it but it makes the user facing interactions (our \"ui\") way more obvious I think:\r\n* You can to change how an artifact is consumed -> change the related flag.\r\n* You want to resolve a particular extension -> change the extension\r\nvs\r\n* You want the `.jar` to ignore transitive deps? Change its `type` (\"Wait, I need to rebuild the dependency?\")",
      "Along those lines, yes:\r\n\r\nPackaging provides flexibility for producers, to build new (or \"old\", like packaging \"jar\" vs \"takari-jar\") things.\r\n\r\nType provides flexibility for consumers, for example if producer builds a \"bundle\" (w/ required extension to make sure he is producing valid OSGi bundle), a consumer still may choose to consume it as \"jar\", or \"bundle\" (if he is also in OSGi realm), etc...",
      "Just a thought experiment (that takari somewhat tried to deliver): Look at the `takari-maven-component` packaging. It's goal is: producing jar artifact meant to be used within Maven.\r\n\r\nThis is so expressive... what are you building? \"maven-component\"s or \"jar with sisu index to be used in Maven\".\r\n\r\nBasically, we could distinguish even \"jar with sisu index\", and if user depends on that, it could (by some plugin, surefire extension example) trigger Sisu container creation that uses INDEX to pick up components from classpath, and so on and so on... These little information crumbs can serve the purpose to make things even more smarter (without being \"smart smart\", but simply to behave according things our user describes to us).\r\n\r\nAlso, they express intent very very clearly.",
      "And a counter example: consider maven-resolver artifacts (!):\r\n* uses plain packaging \"jar\", but\r\n* the produced JARs have Sisu index (Sisu DI, JSR330)\r\n* the produced JARs have OSGi header (OSGi)\r\n* the produced JARs have \"Automatic-Module-Name\" header (JPMS)\r\n\r\nIt is up to \"consumer\" how he consumes these things, which (orthogonal) way he makes use of resolver:\r\n* on classpath as plain JAR (using RepositorySystemSupplier)\r\n* on classpath with Sisu DI (as in Maven)\r\n* in OSGi container as bundles\r\n* in JPMS app (unsure is it possible, but \"metadata\" is there)\r\n\r\nSo type is about \"consuming\", and consumed thing does NOT need to be rebuilt, to consume it as this or that.",
      "@cstamas one reason I really dislike type vs flags is type is not composable without coding (our limitation of being descriptive in our descriptor/pom - which is a good thing by itself but implies that limitation) whereas it has to be at some point in your examples.\r\nOnce again, technically we agreed a long time ago but still, users don't understand that, you seems to think they have to and I'd like to avoid them to understand all that. Ultimately it can be a semantic issue (type is not a \"common\" _type_) but it is a hurting thing in user land and I don't see with your PR which enables to not keep this ambiguity, why we would have to keep using it.\r\nUltimately your PR even enable to define custom \"types\" in the pom (predefined flags) so user can use it in build pom and then it is published properly with type=extension and flattened flags if desired."
    ],
    "commit_messages": [
      "[MNG-7924] Better control over and better integration with Resolver (#1299)\n\nIntegrate better and obtain better control over Resolver. These changes did stem from \"JPMS module experiment\" and are considered improvement but does not implement any functionality related to JPMS module support.\r\n\r\nChanges:\r\n* Maven4 should stop \"disconnected coexistence\" of two type systems (ArtifactHandlers and Resolver ArtifactTypeRegistry), it should unify them.\r\n* Maven4 Core should provide generic and extensible means to introduce new artifact types (fully in extension, and extension should get extended data via \"roundtrip\" in core/resolver)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7924"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa4a14f302d393b57e9",
    "number": 1298,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "fix-build-pom-naming",
    "is_a_fork": true,
    "comments": [
      "This does not look wrong. What is the motivation behind this? How will the attached artifact looked like if then main POM is still `foo.pom`?",
      "> This does not look wrong. What is the motivation behind this?\r\n\r\nThe problem seems to be that sonatype oss release validation fail staging repositories deployed with Maven 4. The issue is there is now more than one .pom file in the repo.\r\n\r\n> How will the attached artifact looked like if then main POM is still `foo.pom`?\r\n\r\n`foo-build-pom.xml` ?",
      "> > This does not look wrong. What is the motivation behind this?\r\n> \r\n> The problem seems to be that sonatype oss release validation fail staging repositories deployed with Maven 4. The issue is there is now more than one .pom file in the repo.\r\n\r\nThat really feels like fixing the symptom...\r\n\r\n> > How will the attached artifact looked like if then main POM is still `foo.pom`?\r\n> \r\n> `foo-build-pom.xml` ?\r\n\r\nThis names is reasonable since it is the original one with a classifier. Does `foo.build-pom` makes sense, too?",
      "> > > This does not look wrong. What is the motivation behind this?\r\n> > \r\n> > \r\n> > The problem seems to be that sonatype oss release validation fail staging repositories deployed with Maven 4. The issue is there is now more than one .pom file in the repo.\r\n> \r\n> That really feels like fixing the symptom...\r\n\r\nIt is. Maybe we should just do nothing and let Sonatype fix on their side ?\r\n\r\n> > > How will the attached artifact looked like if then main POM is still `foo.pom`?\r\n> > \r\n> > \r\n> > `foo-build-pom.xml` ?\r\n> \r\n> This names is reasonable since it is the original one with a classifier. Does `foo.build-pom` makes sense, too?\r\n\r\nYes, I don't have a clear opinion.  I wonder if the `-` in `build-pom` used as a classifier could cause parsing problems, as `-` is used to separate the artifactId from the classifier in `foo-build-pom.xml`...  Is that why you suggested `foo.build-pom` ?\r\n\r\nI think the best would still be the current state, i.e. `foo-build.pom` ...",
      "> > > > This does not look wrong. What is the motivation behind this?\r\n> > > \r\n> > > \r\n> > > The problem seems to be that sonatype oss release validation fail staging repositories deployed with Maven 4. The issue is there is now more than one .pom file in the repo.\r\n> > \r\n> > \r\n> > That really feels like fixing the symptom...\r\n> \r\n> It is. Maybe we should just do nothing and let Sonatype fix on their side ?\r\n\r\nthis is also my expectation...\r\n\r\n> I think the best would still be the current state, i.e. `foo-build.pom` ...\r\n\r\nI also agree on this one.",
      "@brianf, can you help?",
      "+1 to fix the name on our side\r\n\r\nrational is:\r\n\r\n* ensure we don't break tools getting the pom with a `ls *.pom` (sonatype is not the single one probably since it was our way to do)\r\n* ensure we use the right extension to avoid to hack editors when opening the file (.pom is not supported everywhere but .xml seems to be more common)\r\n* avoid to make it look too much like a consumer thing cause this version will be more fragile than default one (maven version dependent)\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa5a14f302d393b57ea",
    "number": 1297,
    "body": "Fix model doc generation, change the intermediate model to use 4.0.99 and align the new model to 4.1.0\r\n\r\nThis requires https://github.com/apache/maven-integration-testing/pull/315 to pass ITs...\r\n\r\n",
    "head_branch": "fix-model-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use 4.0.99 as as intermediate model to keep 4.1.0 for the Maven 4.x model (#1297)\n\nAlso generates XSD for extensions 1.2.0 schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa6a14f302d393b57eb",
    "number": 1296,
    "body": "- `BatchModeMavenTransferListener` removed\r\n- `FileSizeFormat` moved to top level class\r\n- `FileSizeFormat.formatProcess()` refactored to accept an StringBuilder\r\nas argument\r\n- `FileSizeFormat` refactored `format()` methods\r\n\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n",
    "head_branch": "MNG-7899_-_4",
    "is_a_fork": true,
    "comments": [
      "@gnodet your changes are cleaner. I agree with your contribution, thanks!",
      "@gnodet I just fixed a format problem that made the build fail."
    ],
    "commit_messages": [
      "[MNG-7899] Various memory usage improvements 4-1 (#1296)\n\n* [MNG-7899] Various memory usage improvements\r\n\r\n- BatchModeMavenTransferListener removed\r\n- FileSizeFormat moved to top level class\r\n- FileSizeFormat.formatProcess() refactored to accept an StringBuilder as argument\r\n- FileSizeFormat refactored format() methods\r\n- FileSizeFormat refactored, replace DecimalFormat with Math logic to\r\nreduce memory allocation\r\n\r\n---------\r\n\r\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa7a14f302d393b57ec",
    "number": 1295,
    "body": "Since the v3 model has been replaced by the v4 model, that would be in line.  We can revisit and restore full compatibility later if needed.\r\n\r\nJIRA issue: https://issues.apache.org/jira/browse/MNG-7916\r\n\r\n",
    "head_branch": "MNG-7916",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7916] Simply get rid of LifecycleMappingsXpp3Reader/Writer (#1295)\n\nSince the v3 model has been replaced by the v4 model, that would be in line.  We can revisit and restore full compatibility later if needed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa8a14f302d393b57ed",
    "number": 1294,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7917\r\n\r\nRelease notes: https://github.com/fusesource/jansi/releases/tag/jansi-2.4.1\r\n\r\n",
    "head_branch": "MNG-7917-upgrade-jansi",
    "is_a_fork": true,
    "comments": [
      "Looking at the changes in 2.4.1 it should have at least been 2.5.0 due to a lot of issues and the Java bump. "
    ],
    "commit_messages": [
      "[MNG-7917] Upgrade to Jansi 2.4.1 (#1294)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fa9a14f302d393b57ee",
    "number": 1293,
    "body": "This removes the generated v4 model reader/writer based on Xpp3 api.\r\n\r\nJIRA issue: https://issues.apache.org/jira/browse/MNG-7915\r\n",
    "head_branch": "MNG-7915-maven-xpp3-rw",
    "is_a_fork": true,
    "comments": [
      "Old MavenXpp3Reader/Writer should be also deprecated"
    ],
    "commit_messages": [
      "[MNG-7915] Use MavenStaxReader/Writer in MavenXpp3Reader/Writer (#1293)\n\nThis removes the generated v4 model reader/writer based on Xpp3 api and deprecates the v3 Xpp3 reader/writer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243faaa14f302d393b57ef",
    "number": 1292,
    "body": "Maven 4 api is still in alpha, it would be better to not start adding deprecated methods now...\n\n",
    "head_branch": "get-rid-of-deprecated-methods-in-session-v4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Get rid of deprecated method in the v4 Session interface (#1292)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243faba14f302d393b57f0",
    "number": 1291,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7894\n\n",
    "head_branch": "fix-unwanted-location-tracking",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7894] Consumer pom should not expose local workspace directory (#1291)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243faca14f302d393b57f1",
    "number": 1290,
    "body": "Even though this should not be supported, Maven 3.x is always using the 4.0.0 superpom.  So if the version is not a supported model version, simply use 4.0.0.  Any invalid value will be later verified by the model validator and eventually throw a meaninfual exception.\n\nFollowing this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "fix-superpom",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7893] Fix exception loading superpom with invalid modelVersion (#1290)\n\nEven though this should not be supported, Maven 3.x is always using the 4.0.0 superpom.  So if the version is not a supported model version, simply use 4.0.0.  Any invalid value will be later verified by the model validator and eventually throw a meaninful exception."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fada14f302d393b57f2",
    "number": 1289,
    "body": "Now that JDK 11 is required, we use the `release` option for compiling and it already takes care about signatures.",
    "head_branch": "remove-animal-sniffer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7821] Remove useless animal-sniffer-plugin (#1289)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243faea14f302d393b57f3",
    "number": 1288,
    "body": "(cherry picked from commit 882c8dd9746f2fb7bec1c2b7b6ece4b85c75f701)\r\n\r\n",
    "head_branch": "jenkins-3.9-branch",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Use the same branch name for ITs on Jenkins (#1263)\n\n(cherry picked from commit 882c8dd9746f2fb7bec1c2b7b6ece4b85c75f701)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fafa14f302d393b57f4",
    "number": 1287,
    "body": "…stead of MAVEN_HOME\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7772-repo-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb0a14f302d393b57f5",
    "number": 1286,
    "body": "To version that supports gleaning JSR330 component classes up to Java 19. The reasoning of this change is only to allow 3rd party Maven plugins/Maven extensions/other JSR330 components (managed by Maven embedded Sisu) to use bytecode newer that Java 14 (Sisu 0.3.5).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7913",
    "head_branch": "maven-3.9.x-MNG-7913",
    "is_a_fork": true,
    "comments": [
      "> To version that supports gleaning JSR330 component classes up to Java 21. The reasoning of this change is only to allow 3rd party Maven plugins/Maven extensions/other JSR330 components (managed by Maven embedded Sisu) to use bytecode newer that Java 14 (Sisu 0.3.5).\r\n> \r\n> https://issues.apache.org/jira/browse/MNG-7913\r\n\r\nFwiw, I think you'll also need to back port https://github.com/apache/maven/pull/1126 in order to make sure the latest ASM supporting JDK 21 is used.",
      "I think supporting Java up to 19 is enough for Maven 3.9",
      "I agree with @kwin: just keep it simple with Maven 3.9, let it go up to Java 21 (maybe M3 is released soon, but M2 does the job as well) but we don't want to \"future proof\" 3.9, as there is Maven4 for that.",
      "@cstamas just to clarify, M2 only supports up to Java 19 bytecode which contradicts the description of this PR. Please adjust it accordingly."
    ],
    "commit_messages": [
      "[MNG-7913] Upgrade Sisu version (#1286)\n\nTo version that supports gleaning JSR330 component classes up to Java 19. The reasoning of this change is only to allow 3rd party Maven plugins/Maven extensions/other JSR330 components (managed by Maven embedded Sisu) to use bytecode newer that Java 14 (Sisu 0.3.5), up to 19.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7913"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb1a14f302d393b57f6",
    "number": 1285,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7904",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7904] Use SettingsStaxReader/Writer for SettingsXpp3Reader/Writer (#1285)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb1a14f302d393b57f7",
    "number": 1284,
    "body": "This aims at fixing master UT which have been broken (even though each individual PR was passing ok).",
    "head_branch": "fix-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7804] Fix broken MavenModelVersion generation (#1284)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb2a14f302d393b57f8",
    "number": 1283,
    "body": "It uses immutable list and while it suggests it allows this below, it actually fails on constructs like this (worse even, it compiles ok, but fails runtime only): \r\n```\r\nnew DefaultProfileSelector()\r\n                .addProfileActivator(new JdkVersionProfileActivator())\r\n                .addProfileActivator(new PropertyProfileActivator())\r\n```\r\n\r\nAs default ctor creates immutable list, but API kinda suggests this is ok. So either this PR should go in, or just remove `addProfileActivator` and make class immutable. Am fine with both (unless something else requires it to be extended).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7910",
    "head_branch": "MNG-7910",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7910] DefaultProfileSelector empty ctor uses immutable list (#1283)\n\nIt uses immutable list and while it suggests it allows this below, it actually fails on constructs like this (runtime ONLY):\r\n{noformat}\r\nnew DefaultProfileSelector()\r\n                .addProfileActivator(new JdkVersionProfileActivator())\r\n                .addProfileActivator(new PropertyProfileActivator())\r\n{noformat}\r\n\r\nAs default ctor creates immutable list, but API kinda suggests this is ok.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7910"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb3a14f302d393b57f9",
    "number": 1282,
    "body": "Upgrade to Resolver 2.0.0.\r\n\r\nChanges:\r\n* many UT code used `new DefaultRepositorySystem()` ctor that is gone (was present due SL only), replaced with mocks\r\n* dropped MavenResolverModule Guice module (as AetherGuice module is gone as well)\r\n* updated Resolver version to 2.0.0-alpha-1\r\n* added jdk transport (that prevails apache on Java 11)\r\n* rename of \"native\" into \"apache\", deprecate \"native\" name\r\n* introduce \"jdk\" transport\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7909\r\n",
    "head_branch": "MNG-7909",
    "is_a_fork": true,
    "comments": [
      "One IT fails, recorded as https://issues.apache.org/jira/browse/MRESOLVER-412",
      "Seems some more ITs failed, looking...\r\nThe read poms one is recorded (and is not resolver related) https://issues.apache.org/jira/browse/MRESOLVER-412\r\nRest needs to be looked at.",
      "On Java 11 IT failures are:\r\n```\r\nError:  Failures: \r\nError:    MavenITmng4368TimestampAwareArtifactInstallerTest.testitJarPackaging:153->AbstractMavenIntegrationTestCase.assertFalse:363->AbstractMavenIntegrationTestCase.assertFalse:367 expected: <false> but was: <true>\r\nError:    MavenITmng5669ReadPomsOnce.testWithBuildConsumer:114->AbstractMavenIntegrationTestCase.assertTrue:359 Duplicate items: org.apache.maven:maven:3.2.5\r\norg.apache.commons:commons-parent:52\r\norg.codehaus.plexus:plexus:10 ==> expected: <true> but was: <false>\r\nError:    MavenITmng5669ReadPomsOnce.testWithoutBuildConsumer:78->AbstractMavenIntegrationTestCase.assertTrue:359 Duplicate items: org.apache.commons:commons-parent:52\r\norg.apache:apache:15\r\norg.apache.maven:maven-parent:25 ==> expected: <true> but was: <false>\r\nError:  Errors: \r\nError:    MavenITmng5175WagonHttpTest.testmng5175_ReadTimeOutFromSettings:124 » Verification Text not found in log: Read timed out\r\n   MavenITmng7470ResolverTransportTest.testResolverTransportDefault:106->performTest:97 » Verification Text not found in log: [DEBUG] Using transporter HttpTransporter\r\n[INFO] \r\nError:  Tests run: 904, Failures: 3, Errors: 2, Skipped: 34\r\n```\r\n\r\nInfo:\r\n* we know about MavenITmng5669ReadPomsOnce, there is issue in model builder when using MT collector (and resolver 2.0.0 makes BF default that is MT)\r\n* MavenITmng5175WagonHttpTest is strange, is called \"Wagon\" but asserts that \"apache\" transport is used (is not, on Java11+ is jdk used)\r\n* ~~the only questionable is MavenITmng4368TimestampAwareArtifactInstallerTest~~ is not, is https://issues.apache.org/jira/browse/MRESOLVER-392 and LOL the original issue is this https://issues.apache.org/jira/browse/MNG-4368",
      "> * we know about MavenITmng5669ReadPomsOnce, there is issue in model builder when using MT collector (and resolver 2.0.0 makes BF default that is MT)\r\n\r\nWasn't this one solved by #893 ?\r\n",
      "> Wasn't this one solved by #893 ?\r\n\r\nWILL be solved when merged, yes :smile: "
    ],
    "commit_messages": [
      "[MNG-7909] Upgrade to Resolver 2.0.0-alpha-1 (#1282)\n\nUpgrade to Resolver 2.0.0.\r\n\r\nChanges:\r\n* many UT code used `new DefaultRepositorySystem()` ctor that is gone (was present due SL only), replaced with mocks\r\n* dropped MavenResolverModule Guice module (as AetherGuice module is gone as well)\r\n* updated Resolver version to 2.0.0-alpha-1\r\n* added jdk transport (that prevails apache on Java 11)\r\n* rename of \"native\" into \"apache\", deprecate \"native\" name\r\n* introduce \"jdk\" transport\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7909"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb4a14f302d393b57fa",
    "number": 1281,
    "body": "Sample proposal to try to ease https://github.com/mockito/mockito/issues/3037.\r\n\r\nMain issue of this PR is to not support transitive deps but think it is not a bad compromise (using `javaagent` \"scope\" would be as bad + totally wrong/broken in terms of design - would loose the scope to be clear, and adding an attribute sounds overkill until we get something like gradle configuration).\r\nMain advantage is it makes it easy to work for everybody and stays aligned on the JVM (explicit toggling with ordering) for javaagent cases.\r\n\r\nSo overall think it can be a good compromise. If validated we have to document it properly - probably in maven site and surefire one?\r\n\r\n@bmarwell if you want to try/take this over, but thought a PR would be easier than slack ;)",
    "head_branch": "fb/direct-dependencies-as-properties",
    "is_a_fork": true,
    "comments": [
      "So the idea is that a given group and artifact ID gets resolved to the following property:\n\n`${project.dependencies.com.bar.dummy-agent}`\n\nOnly disadvantage of your solution: I don't see where the groupId ends and the artifact ID begins. But that's probably not going to clash.\n\nThis is very helpful for agents.\n\n\nOther ideas:\n\nChange the default lifecycle XML to include the property goal of the dependency plugin. Way smaller change. ",
      "I forgot this file doesn't exist anymore.\n\nhttps://github.com/apache/maven/blob/maven-3.3.8/maven-core/src/main/resources/META-INF/plexus/default-bindings.xml\n\nBut I think you get what I'm referring to.",
      "If it clashes we have other troubles and using another sep looks wrong in placeholders to me.\r\nIm also very hesitant to add another plugin in any lifecycle cause:\r\n\r\n1. It is specific to default lifecycles\r\n2. Adds another prerequisite and i tend to think we already have too much\r\n3. It will be too late in the interpolation and need other passes",
      "Thank you for the explanation, that makes excellent documentation! 😃 ",
      "This really looks like a temporary hack for agents to being supported by Surefire...\r\nIt only saves the following declaration:\r\n```\r\n <plugin>\r\n    <artifactId>maven-dependency-plugin</artifactId>\r\n    <executions>\r\n      <execution>\r\n        <goals>\r\n          <goal>properties</goal>\r\n        </goals>\r\n      </execution>\r\n    </executions>\r\n  </plugin>\r\n```",
      "Well any later phase is wrong cause then it depends if the interpolation will be reprocessed or not so think it is the least bad compromise to work immediately but agree on your point, the limitation is to explicit define the dependency in the project (potentially using a property but without anything implicit).\r\nI'm fine dropping this PR if it does not help while we don't add dependency plugin in any default lifecycle.",
      "> Well any later phase is wrong cause then it depends if the interpolation will be reprocessed or not so think it is the least bad compromise to work immediately but agree on your point, the limitation is to explicit define the dependency in the project (potentially using a property but without anything implicit). I'm fine dropping this PR if it does not help while we don't add dependency plugin in any default lifecycle.\r\n\r\n@rmannibucau Wouldn't it be better to enhance the [`PluginParameterExpressionEvaluatorV4`](https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluatorV4.java#L209) class instead ?",
      "@gnodet I'm mixed about it since it assumes everything is wired in plugins conf and plugins/extensions don't read any other property so not sure it is really better today, maybe let's wait to see what mockito picks?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb5a14f302d393b57fb",
    "number": 1280,
    "body": "Jira issue: [MNG-7772](https://issues.apache.org/jira/browse/MNG-7772)\r\n\r\nEnables to register extensions through the ${user.home}/.m2 directory. An extension can be placed in an ext directory in the .m2 directory or by adding a extensions.xml file in the .m2 directory\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "MNG-7772",
    "is_a_fork": true,
    "comments": [
      "Another [PR](https://github.com/apache/maven-integration-testing/pull/311/files) has been created with an integration test"
    ],
    "commit_messages": [
      "[MNG-7772] Allow to register maven core extension in .m2 directory instead of MAVEN_HOME (#1280)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb6a14f302d393b57fc",
    "number": 1279,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7995\r\nJLine used for:\r\n  * output display\r\n  * prompting\r\n\r\nIt should also be used in the future for better transfer display, i.e. rewriting `ConsoleMavenTransferListener`, still TODO, see #1302  as a possible base.",
    "head_branch": "jline",
    "is_a_fork": true,
    "comments": [
      "Will it be compatible with Maven 3.x and old maven-shared-utils?",
      "> Will it be compatible with Maven 3.x and old maven-shared-utils?\r\n\r\nIn what sense should that be compatible ? You mean if a plugin is using maven-shared-utils and use that to output stuff ? Do you have a specific plugin in mind that I could try ?\r\n\r\nI've done some test with the archetype plugin which is using the Prompter and that works nicely.  I haven't specifically checked plugins using `org.apache.maven.shared.logging.MessageUtils` though.",
      "eg.\r\n```\r\nmvn buildplan:list-phase\r\n```",
      "> eg.\r\n> \r\n> ```\r\n> mvn buildplan:list-phase\r\n> ```\r\n\r\nIt works when using a terminal.  However, when the output is redirected to a file, the ansi sequences are not stripped correctly when using the `org.apache.maven.shared.logging.MessageUtils`.\r\nThe reason is that the ansi sequences are currently stripped inside the `System.out` and `System.err` streams.\r\nSo I'll postpone this change until https://github.com/jline/jline3/pull/871 is done and released.",
      "> > eg.\r\n> > ```\r\n> > mvn buildplan:list-phase\r\n> > ```\r\n> \r\n> It works when using a terminal. However, when the output is redirected to a file, the ansi sequences are not stripped correctly when using the `org.apache.maven.shared.logging.MessageUtils`. The reason is that the ansi sequences are currently stripped inside the `System.out` and `System.err` streams. So I'll postpone this change until [jline/jline3#871](https://github.com/jline/jline3/pull/871) is done and released.\r\n\r\nI've upgrade to latest JLine, which now includes Jansi.  The integration with maven-shared-utils works correctly now.\r\n",
      "@slawekjaranowski would you mind having a look ?"
    ],
    "commit_messages": [
      "[MNG-7995] Switch to JLine to provide line editing (#1279)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb7a14f302d393b57fd",
    "number": 1278,
    "body": "IT PR at https://github.com/apache/maven-integration-testing/pull/310",
    "head_branch": "jdk21",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7911] Require JDK 11 and support JDK 21 at build time (#1278)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb8a14f302d393b57fe",
    "number": 1277,
    "body": "Supersedes #1276 ",
    "head_branch": "fix-jenkins",
    "is_a_fork": false,
    "comments": [
      "@slawekjaranowski it seems to be working now :-)",
      "Raised https://github.com/apache/maven-integration-testing/pull/314\r\n\r\nNote that the IT will probably break after starting the Maven release process, as the version will change.  After the released is published, the IT should use the released version of Maven and the whole problem will be over."
    ],
    "commit_messages": [
      "Reuse the same repository so that ITs can access maven snapshot jars from the repository (#1277)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fb9a14f302d393b57ff",
    "number": 1276,
    "body": "Reuse the same local repository so that IT depending on maven snapshot jars can work.\r\nThis may need to be reverted once maven is released and the ITs are upgraded to the released version instead of having to use the latest snapshots.",
    "head_branch": "fix-jenkins",
    "is_a_fork": true,
    "comments": [
      "Recreating PR with a branch on the main repo"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fbaa14f302d393b5800",
    "number": 1275,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fbba14f302d393b5801",
    "number": 1274,
    "body": "https://issues.apache.org/jira/browse/MNG-7901\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7901",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7901] Use MetadataStaxReader/Writer in MetadataXpp3Reader/Writer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fbca14f302d393b5802",
    "number": 1273,
    "body": "ITs fix: https://github.com/apache/maven-integration-testing/pull/309\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7898",
    "is_a_fork": false,
    "comments": [
      "build on GH - pass\r\non jenkins 3 tests failed - MavenITmng7836AlternativePomSyntaxTest - still the same"
    ],
    "commit_messages": [
      "[MNG-7898] Missing .mvn directory should not be reported in quiet mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fbda14f302d393b5803",
    "number": 1272,
    "body": "Follow-up to MNG-7891 to make Maven Daemon integration easier.\n",
    "head_branch": "MNG-7891-followup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7891] Abstract ExtensionConfigurationModule from CliRequest (#1272)\n\nFollow-up to MNG-7891 to make Maven Daemon integration easier."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fbea14f302d393b5804",
    "number": 1271,
    "body": "(cherry picked from commit 5c2e671a06721fe07cf414a9377a63652d512be0)\r\n\r\nITs - https://github.com/apache/maven-integration-testing/pull/301\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7895-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7895] Support ${project.basedir} in file profile activation\n\n(cherry picked from commit 5c2e671a06721fe07cf414a9377a63652d512be0)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243fbfa14f302d393b5805",
    "number": 1270,
    "body": "https://issues.apache.org/jira/browse/MNG-7899\r\nMultiple optimizations :\r\n\r\n- renderLevel() method use static constants instead of rebuilding the\r\nstrings on each call\r\n- replace + operator usage with more PrintStream.print() calls to reduce\r\ntemporary strings creation\r\n- reduce usage of MessageBuilder.a() method usage with more\r\nPrintStream.print() calls to reduce temporary strings creation\r\n- replace the builder() method with a static import\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "MNG-7899_-_5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7899] Various memory usage improvements 5 (#1270)\n\nMultiple optimizations :\r\n- renderLevel() method use static constants instead of rebuilding the strings on each call\r\n- replace + operator usage with more PrintStream.print() calls to reduce temporary strings creation\r\n- reduce usage of MessageBuilder.a() method usage with more PrintStream.print() calls to reduce temporary strings creation\r\n- replace the builder() method with a static import\r\n- replace String.format with a simple string concat to reduce memory allocation (garbage)\r\n- change static constants to class member in MavenSimpleLogger\r\n- add a setLength(int) method in MessageBuilder to enable reuse"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc0a14f302d393b5806",
    "number": 1269,
    "body": "https://issues.apache.org/jira/browse/MNG-7899\r\nMerging the getStatus() method to optimize :\r\n\r\n- Use the main StringBuilder to append string instead of using a\r\nseparate one\r\n- Use the StringBuilder.append() with index to avoid String.substring(),\r\nless temporary strings\r\n- Reuse the FileSizeFormat object in the while loop avoiding multiple\r\ntemporary instances creation\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "MNG-7899_-_4",
    "is_a_fork": true,
    "comments": [
      "Memory allocation profiling using [ConsoleMavenTransferListener_memalloc_Test.java](https://github.com/sebastien-doyon/maven/blob/MNG-7899_-_4_perf-tests/maven-embedder/src/test/java/org/apache/maven/cli/transfer/ConsoleMavenTransferListener_memalloc_Test.java) calling the ConsoleMavenTransferListener class 100 million times.\r\n\r\nThis test shows a drastic decrease of :\r\n- char[] allocation (before : **190 GiB**, after : **85,4 GiB**)\r\n- java.lang.String allocation (before : **45,3 GiB**, after : **3,8 GiB**)\r\n- java.lang.StringBuffer allocation (before : **65,4 GiB**, after : **1,14 GiB**)\r\n- java.text.DecimalFormat allocation (before : **27,4 GiB**, after : **none recorded**)\r\n- more...\r\n\r\nThe elapse time during the test execution show a **50%** reduction, ~100 seconds for the initial code and ~50 seconds for the optimised code.\r\n\r\nHere the JMC capture for the initial code (file available [here](https://github.com/sebastien-doyon/maven/raw/MNG-7899_-_4_perf-tests/maven-embedder/recording-initial.jfr))\r\n<img width=\"1237\" alt=\"Capture d’écran 2023-10-12 à 18 52 20\" src=\"https://github.com/apache/maven/assets/2573779/9ba678bd-d5bc-41c2-82d8-79f2984d880e\">\r\n\r\nHere the JMC capture for the optimised code (file available [here](https://github.com/sebastien-doyon/maven/raw/MNG-7899_-_4_perf-tests/maven-embedder/recording-optimized.jfr))\r\n<img width=\"1237\" alt=\"Capture d’écran 2023-10-12 à 18 52 30\" src=\"https://github.com/apache/maven/assets/2573779/525eff55-386f-4175-805e-12d8d8b02ef7\">\r\n\r\n\r\nTo reproduce:\r\n\r\n-  checkout the [MNG-7899-profiling-initial](https://github.com/sebastien-doyon/maven/tree/MNG-7899-profiling-initial) tag\r\n- execute the following commands : \r\n\r\n```\r\nmvn clean verify -Drat.skip=true -DskipTests\r\nmvn test -Drat.skip=true -pl :maven-embedder -Dtest=**/ConsoleMavenTransferListener_memalloc_Test -Dspotless.check.skip\r\n```\r\n\r\n- open the `maven-embedder/recording-initial.jfr` file with JMC\r\n-  checkout the [MNG-7899-profiling-optimised](https://github.com/sebastien-doyon/maven/tree/MNG-7899-profiling-optimised) tag\r\n- execute the following commands : \r\n\r\n```\r\nmvn clean verify -Drat.skip=true -DskipTests\r\nmvn test -Drat.skip=true -pl :maven-embedder -Dtest=**/ConsoleMavenTransferListener_memalloc_Test -Dspotless.check.skip\r\n```\r\n\r\n- open the `maven-embedder/recording-optimized.jfr` file with JMC",
      "@sebastien-doyon unit tests seem broken.\r\nAlso and fwiw, this looks like all this work may be broken if we somehow integrate https://github.com/apache/maven/pull/1279... we may want to investigate on that branch then...",
      "> @sebastien-doyon unit tests seem broken. Also and fwiw, this looks like all this work may be broken if we somehow integrate #1279... we may want to investigate on that branch then...\r\n\r\nAlso, #1268, #1269 and #1270 really look related to the same goal, I.e. optimize the logging, so I think they should be merged in order to have a better understand of the benefits (even if they could be 3 different commits).\r\n",
      "> @sebastien-doyon unit tests seem broken.\r\n\r\n@gnodet yes, I am trying to find the problem, but without access to the surefire report files, it is hard to find the problem. Do you have access or know how to get access to the target directory of a build in github? That would help debug.\r\n\r\n> Also and fwiw, this looks like all this work may be broken if we somehow integrate https://github.com/apache/maven/pull/1279... we may want to investigate on that branch then...\r\n\r\nI think the PR [1279](https://github.com/apache/maven/pull/1279) is complementary with this PR. The only change in the 1279 PR that would be needed is to add back the `MessageBuilder builder(StringBuilder stringBuilder)` method to `api/maven-api-core/src/main/java/org/apache/maven/api/services/MessageBuilderFactory.java` and `maven-core/src/main/java/org/apache/maven/internal/impl/DefaultMessageBuilderFactory.java` classes.\r\n\r\n> Also, https://github.com/apache/maven/pull/1268, https://github.com/apache/maven/pull/1269 and https://github.com/apache/maven/pull/1270 really look related to the same goal, I.e. optimize the logging, so I think they should be merged in order to have a better understand of the benefits (even if they could be 3 different commits).\r\n\r\nIf you think, I was trying to separate unrelated changes so the obvious ones could be merged while those with problems or comments could be worked out separately, like this one. Tell me if you really prefer me to merge in on PR.",
      "@gnodet the last commit fixes the unit test that was broken.",
      "@gnodet \r\n\r\n> There are still a couple of things to clean in this package....\r\n\r\n> `FileSizeFormat` should be moved to top level\r\n\r\nDone in the last commit\r\n\r\n> it should be refactored to accept an `Appender` as argument\r\n\r\nDone in the last commit, the `FileSizeFormat.formatProcess()` was refactored to accept an `StringBuilder` as argument\r\n\r\n> `BatchModeMavenTransferListener` should be removed\r\n\r\nDone in the last commit\r\n\r\n> `Slf4jMavenTransferListener` should inherit `AbstractMavenTransferListener`\r\n\r\nI leave this one for another PR, I suggest transform the `AbstractMavenTransferListener` to a message formatter class that would contain the common code building the text, and move to `PrintStream` code to the `ConsoleMavenTransferListener`. Maybe in the 1279 PR or a subsequent one.\r\n",
      "@gnodet a new PR was created for that [1296](https://github.com/apache/maven/pull/1296)"
    ],
    "commit_messages": [
      "[MNG-7899] Various memory usage improvements 4 (#1269)\n\n- Use the main StringBuilder to append string instead of using a separate one\r\n- Use the StringBuilder.append() with index to avoid String.substring(), less temporary strings\r\n- Reuse the FileSizeFormat object in the while loop avoiding multiple temporary instances creation\r\n- Non-threadsafe FileSizeFormat instance can be make class instance since its formatProgress() method is only called in a synchronized block.\r\n- add a test in a multi-threaded context\r\n- Non-threadsafe StringBuilder instance 'buffer' can be make class instance since it is always called in synchronized methods\r\n- remove synchronized block in transferProgressed() method, the method is synchronized and the block is not needed\r\n- Remove the Collections.synchronizedMap since all methods that use the transfers map are synchronized"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc1a14f302d393b5807",
    "number": 1268,
    "body": "https://issues.apache.org/jira/browse/MNG-7899\r\nReuse a StringBuilder in a for loop by setting its lenght to zero.\r\nHelp reduce temporary objects creation.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "MNG-7899_-_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7899] Various memory usage improvements (#1268)\n\nReuse a StringBuilder in a for loop by setting its lenght to zero.\r\nHelp reduce temporary objects creation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc2a14f302d393b5808",
    "number": 1267,
    "body": "https://issues.apache.org/jira/browse/MNG-7899\r\nAvoid creating a StringBuilder instance when not needed to reduce\r\ntemporary objects creation\r\n",
    "head_branch": "MNG-7899_-_2",
    "is_a_fork": true,
    "comments": [
      "It will be appreciated to left standard PR template at least the and paragraph about contributing under ASF license .... from lines:\r\n\r\n>To make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\nwith check boxes"
    ],
    "commit_messages": [
      "[MNG-7899] Various memory usage improvements\n\nAvoid creating a StringBuilder instance when not needed to reduce\ntemporary objects creation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc3a14f302d393b5809",
    "number": 1266,
    "body": "As discussed on https://github.com/apache/maven/pull/1239, we would like to add `Jenkinsfile.s390x` back and re-enable the s390x pipeline on Jenkins CI (https://ci-maven.apache.org/job/Maven/job/Maven%20Core%20s390x/).  The s390x build will run on `master` branch only with no PR checks so we won't encounter issues with custom IT branch.\r\n\r\n@olamy @elharo @gnodet I appreciate your help in reviewing this and getting Jenkins CI setup to use the Jenkinsfile once it's merged.  Thank you!\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "s390x-jenkins",
    "is_a_fork": true,
    "comments": [
      "Is it possible to re-run the checks as the Jenkinsfile shouldn't affect integration tests?  Thanks.",
      "I clicked the button to rerun the failed jobs",
      "Thanks @elharo!",
      "Thanks @olamy for merging this.  Will s390x builds be running on https://ci-maven.apache.org/job/Maven/job/Maven%20Core%20s390x/ or a new one needs to be setup?   Thanks for your help.",
      "Hi @olamy, any updates on add s390x builds on Jenkins?  Thanks.",
      "@vivkong my bad sorry for delay \r\nall done here https://ci-maven.apache.org/job/Maven/job/maven-core.s390x/\r\nyou might need some setup on your nodes as master need jdk 11 now.\r\ncheers",
      "HI @olamy, Thanks for your help!  I will create a PR to upgrade the JDK and fix the s390x build."
    ],
    "commit_messages": [
      "[MNG-7848] Add Jenkinsfile.s390x for Jenkins CI on s390x (#1266)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc4a14f302d393b580a",
    "number": 1265,
    "body": "https://issues.apache.org/jira/browse/MNG-7899\r\nRemove unneeded StringBuilder to reduce temporary objects creation\r\n",
    "head_branch": "MNG-7899_-_1",
    "is_a_fork": true,
    "comments": [
      "maven-compat classes are really used by Maven2 plugins/extensions (current versions are Maven 3.9 and soon Maven4) and are all deprecated. IMHO, they should be just left as is...",
      "Thanks @cstamas, I will close this pr"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc5a14f302d393b580b",
    "number": 1264,
    "body": "@elharo if you could review once more for https://issues.apache.org/jira/browse/MNG-6847 \n\nUse this link to re-run the recipe: https://app.moderne.io/recipes/builder/SEvWu02zw?organizationId=QXBhY2hlIE1hdmVu",
    "head_branch": "refactor/use-diamond-operator",
    "is_a_fork": true,
    "comments": [
      "Tests might be broken at head. I don't think the failures are caused by this PR but we'll need to resolve that before merging this:\r\n\r\nError:  Tests run: 3, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.327 s <<< FAILURE! - in org.apache.maven.it.MavenITmng7038RootdirTest\r\nError:  org.apache.maven.it.MavenITmng7038RootdirTest.testRootdirWithTopdirAndRoot  Time elapsed: 0.097 s  <<< ERROR!\r\norg.apache.maven.shared.verifier.VerificationException: \r\nExit code was non-zero: 1; command line and log = \r\n/home/runner/work/maven/maven/maven-integration-testing/core-it-suite/target/apache-maven/bin/mvn -e --batch-mode -Dmaven.repo.local=/home/runner/.m2/repository --global-settings /home/runner/work/maven/maven/maven-integration-testing/core-it-suite/target/test-classes/settings.xml validate\r\n[INFO] Error stacktraces are turned on.\r\n[INFO] Making this build non-interactive, because the environment variable CI equals \"true\". Disable this detection by removing that variable or adding --force-interactive.\r\n[INFO] Scanning for projects...\r\nError:  Some problems were encountered while processing the POMs\r\nError:  The build could not read 1 project -> [Help 1]\r\n\r\n"
    ],
    "commit_messages": [
      "[MNG-6847] Use diamond operator (#1264)\n\nCo-authored-by: Moderne <team@moderne.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc6a14f302d393b580c",
    "number": 1263,
    "body": "We have the same logic on GitHub actions.\r\n\r\nWhen branch with the same name as in repository exist in integration test we should use it.",
    "head_branch": "jenkins-its-branch",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Use the same branch name for ITs on Jenkins (#1263)\n\n* Use the same branch name for ITs on Jenkins\r\n\r\n* Try CHANGE_BRANCH env on PR\r\n\r\n* CHANGE_BRANCH can be null"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc7a14f302d393b580d",
    "number": 1262,
    "body": "https://issues.apache.org/jira/browse/MNG-7895\r\n\r\nITs - https://github.com/apache/maven-integration-testing/pull/299\r\n \r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - x ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7895-master",
    "is_a_fork": false,
    "comments": [
      "Jenkins use master branch for ITs ...\r\nConnected ITs fix - https://github.com/apache/maven-integration-testing/pull/299",
      "Hm, now by reading this PR and seeing several places where comment explains why NOT `project.basedir`... it makes me worried, but is LGTM",
      "> Hm, now by reading this PR and seeing several places where comment explains why NOT `project.basedir`... it makes me worried, but is LGTM\r\n\r\nBut in other place we deprecated short properties like `basedir` so it can consusing users also. \r\nWe should be consistent.",
      "> > Hm, now by reading this PR and seeing several places where comment explains why NOT `project.basedir`... it makes me worried, but is LGTM\r\n> \r\n> But in other place we deprecated short properties like `basedir` so it can consusing users also. We should be consistent.\r\n\r\nThen should we deprecate the `basedir` ? i.e. add a warning when non prefixed properties are used ?",
      "> > > Hm, now by reading this PR and seeing several places where comment explains why NOT `project.basedir`... it makes me worried, but is LGTM\r\n> > \r\n> > \r\n> > But in other place we deprecated short properties like `basedir` so it can consusing users also. We should be consistent.\r\n> \r\n> Then should we deprecate the `basedir` ? i.e. add a warning when non prefixed properties are used ?\r\n\r\nI can add here a warning about using deprecated `basedir` in profile activation ....\r\nWe can also check other places where `basedir` is used .. but should be done in separate PR"
    ],
    "commit_messages": [
      "[MNG-7895] Support ${project.basedir} in file profile activation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc8a14f302d393b580e",
    "number": 1261,
    "body": "Note: this PR contains repo entry for staging repository just to make ITs run. That will not be merged, and will be unneeded once resolver 1.9.16 is out in the wild.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7859\r\n",
    "head_branch": "MNG-7859",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7859] Update to Resolver 1.9.16 (#1261)\n\nUpdate to resolver 1.9.16\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7859"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc8a14f302d393b580f",
    "number": 1260,
    "body": "Note: this PR contains repo entry for staging repository just to make ITs run. That will not be merged, and will be unneeded once resolver 1.9.16 is out in the wild.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7859\r\n",
    "head_branch": "maven-3.9.x-MNG-7859",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[3.9.x] [MNG-7859] Update to Resolver 1.9.16 (#1260)\n\nUpdate to resolver 1.9.16\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7859\r\n\r\n* Stuff released"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fc9a14f302d393b5810",
    "number": 1259,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7896",
    "is_a_fork": false,
    "comments": [
      "Failed IT - MavenITmng7836AlternativePomSyntaxTest the same as on master"
    ],
    "commit_messages": [
      "[MNG-7896] Upgrade Junit from 5.9.1 to 5.10.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fcaa14f302d393b5811",
    "number": 1258,
    "body": "As indicated at https://github.com/apache/maven/pull/812#discussion_r990825335\r\n\r\nIf the interpolated string is `${settings.foo}`, the expression is `settings.foo` and we pass `ettings.foo` to the `ReflectionValueExtractor`. It's working because the call just ignore whatever is on the left of the first `.`...",
    "head_branch": "fix-evaluator",
    "is_a_fork": true,
    "comments": [
      "Is it worth doing in 3.9.x also?",
      "> Is it worth doing in 3.9.x also?\r\n\r\nI don't think so.  The substrings have been there since ages and are harmless (because the first part of the string is completely ignored), and the weak ref in cache could be backported, but it would be in `maven-shared-utils`.",
      "Raised https://issues.apache.org/jira/browse/MSHARED-1304 to not forget the backport."
    ],
    "commit_messages": [
      "Fix unneeded/wrong substring calls in expression evaluation and put back weak references in cache (#1258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fcba14f302d393b5812",
    "number": 1257,
    "body": null,
    "head_branch": "fix-model-building-exception-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix newlines and indentation in ModelBuildingException message (#1257)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fcca14f302d393b5813",
    "number": 1256,
    "body": null,
    "head_branch": "avoid-xmlstreamreader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Avoid usage of XmlStreamReader (#1256)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fcda14f302d393b5814",
    "number": 1255,
    "body": "JIRA issue: http://issues.apache.org/jira/browse/MNG-7820\nFollow up on #1249, #1250 and #1251\n\n",
    "head_branch": "MNG-7820-remove-plexus-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7820] Get rid of plexus-utils (#1255)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fcea14f302d393b5815",
    "number": 1254,
    "body": "Those fixes are individual commits and the PR is intended to be rebased rather than squashed.\n\n- Make DefaultInheritanceAssembler#merger field final and reorder fields correctly\n- Make DefaultModelBuildingListener#project field final\n- Fix bad version in test poms\n- Add a o.a.maven.api.services.Source#resolve method\n- Simplify ReactorModelPool and use a concurrent map\n",
    "head_branch": "minor-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify ReactorModelPool and use a concurrent map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fcfa14f302d393b5816",
    "number": 1253,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7893\r\n\r\n\r\nBtw, I wonder if the recent changes such as https://github.com/apache/maven/pull/1139 and https://github.com/apache/maven/pull/1085 should be updated to only affect the 4.1.0 superpom...  Thoughts welcomed.\r\n\r\n",
    "head_branch": "MNG-7893-superpom-versionning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7893] Allow versioning the superpom according to the model version (#1253)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd0a14f302d393b5817",
    "number": 1252,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7891\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/296",
    "head_branch": "MNG-7891-configuration-for-extensions",
    "is_a_fork": true,
    "comments": [
      "@gnodet I created a little example extension / project here:\r\n- https://github.com/apache/maven-integration-testing/pull/295",
      "> With a remark: personally am really tired to use DOM/Xpp3Dom as \"config\"\r\n\r\nIt is `PlexusConfiguration` here ;-)\r\n\r\n> we need something smarter\r\n\r\nDon't know what smart you have in mind, but of course one could think about mapping this to an object annotated similar to what mojo uses (just the configuration part), but last time I tried something similar it was surprisingly hard (e.g. when it comes to interpolation/default values).\r\n\r\nAt laest this is much better than having no configuration at al or invent something that is completely extension specific (like custom properties files)."
    ],
    "commit_messages": [
      "[MNG-7891] Support configuration for extensions (#1252)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd1a14f302d393b5818",
    "number": 1251,
    "body": "Use maven-shared-utils reflection classes.\r\n",
    "head_branch": "MNG-7820-remove-introspection",
    "is_a_fork": true,
    "comments": [
      "I think I can also remove the copyright because the code has already been donated to the ASF as those classes also exist [in maven-shared-utils](https://github.com/apache/maven-shared-utils/tree/master/src/main/java/org/apache/maven/shared/utils/introspection)...\r\n@elharo do you agree ?",
      "I'm sorry. IANAL and I simply don't know. We need an official ruling from someone in a position at the Apache project to offer legal advice and make decisions like this.",
      "> I'm sorry. IANAL and I simply don't know. We need an official ruling from someone in a position at the Apache project to offer legal advice and make decisions like this.\r\n\r\nWell, it was really a courtesy question.  I'll use the maven-shared-utils copy of those classes which are already in the ASF so definitely no copyright / legal issue."
    ],
    "commit_messages": [
      "[MNG-7820] Get rid of plexus-utils introspection classes (#1251)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd2a14f302d393b5819",
    "number": 1250,
    "body": null,
    "head_branch": "MNG-7820-remove-dag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7820] Get rid of plexus-utils DAG class (#1250)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd3a14f302d393b581a",
    "number": 1249,
    "body": null,
    "head_branch": "MNG-7820-remove-os",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7820] Get rid of plexus-utils Os class (#1249)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd4a14f302d393b581b",
    "number": 1248,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7883",
    "is_a_fork": true,
    "comments": [
      "> This is completely incoherent with everything that is displayed.\r\n> We could switch to the `groupId:artifactId:version` syntax, but this makes things really not human friendly, and that syntax is already printed at the beginning of the build for a given module:\r\n\r\n@gnodet \r\nIt does seem a little tedious. I guess the author of the issue wants to know the information on the whole list. We can continue the discussion on the issue and close the PR first.\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd5a14f302d393b581c",
    "number": 1247,
    "body": "- [MNG-7880] Trim down consumer POM\r\n",
    "head_branch": "MNG-7880-trim-consumer-pom",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7880] Trim down consumer POM (#1247)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd6a14f302d393b581d",
    "number": 1246,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7889",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7889] Preserve MetadataXpp3Reader/Writer for Maven 3 compatible"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd7a14f302d393b581e",
    "number": 1245,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7881\n\n",
    "head_branch": "MNG-7881-root-directory-for-model-processing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7881] Expose the rootDirectory for model processing (#1245)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fd9a14f302d393b581f",
    "number": 1244,
    "body": "On top of #1243, supersedes #1208\n\n- [MNG-7820] Remove dependency on plexus-utils StringUtils / FileUtils\n- [MNG-7820] Get rid of plexus-utils Os, DAG and ReflectionValueExtractor\n",
    "head_branch": "MNG-7820-remove-plexus-utils",
    "is_a_fork": true,
    "comments": [
      "> still appears to violate Apache rules on inclusion of third party code\r\n\r\nI disagree for the following reasons:\r\n  * `MethodMap`, `ClassMap` and `ReflectionValueExtractor` [come from the ASF](https://github.com/codehaus-plexus/plexus-utils/commit/1325c3d2de75da489539cd5f9c6e89bdcfb92c25), [originally in Maven Core](https://svn.apache.org/viewvc/maven/components/trunk/maven-core/src/main/java/org/apache/maven/util/introspection/?pathrev=163742) and have not undergone major modifications since\r\n  * the `Xpp3PerfTest` has been written by me, so I hereby donate it to the ASF\r\n  * the `Os` and `DAG` (now `Graph`) have been rewritten\r\n",
      "> > still appears to violate Apache rules on inclusion of third party code\r\n> \r\n> I disagree for the following reasons:\r\n> \r\n> * `MethodMap`, `ClassMap` and `ReflectionValueExtractor` [come from the ASF](https://github.com/codehaus-plexus/plexus-utils/commit/1325c3d2de75da489539cd5f9c6e89bdcfb92c25), [originally in Maven Core](https://svn.apache.org/viewvc/maven/components/trunk/maven-core/src/main/java/org/apache/maven/util/introspection/?pathrev=163742) and have not undergone major modifications since\r\n> * the `Xpp3PerfTest` has been written by me, so I hereby donate it to the ASF\r\n> * the `Os` and `DAG` (now `Graph`) have been rewritten\r\n\r\n@elharo I've raised https://issues.apache.org/jira/browse/LEGAL-655"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fdaa14f302d393b5820",
    "number": 1243,
    "body": "Split out of https://github.com/apache/maven/pull/1208\n",
    "head_branch": "MNG-7820-string-and-file-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7820] Remove dependency on plexus-utils StringUtils / FileUtils (#1243)\n\nCo-authored-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fdba14f302d393b5821",
    "number": 1242,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7879\r\nDoc PR: https://github.com/apache/maven-site/pull/451\r\n\r\nThe purpose of the BOM packaging is to more cleanly identify POM that will be consumed as BOM from POM that will be used as parents.  The BOMs can be turned into a consumer POM, whereas parents can not lose any information.\r\n\r\n",
    "head_branch": "MNG-7879-bom-packaging",
    "is_a_fork": true,
    "comments": [
      "> This requires a correspnding update to https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#bill-of-materials-bom-poms\r\n> \r\n> I'm not sure how to manage that between 3.x/4.x and the two repos\r\n\r\nThis is only a build time feature.  The `bom` packaging is translated into a `pom` packaging at during the build/consumer transformation phase in order to keep full compatibility.  This feature only targets Maven 4.x but will installed/deployed BOMs created with Maven 4 `bom` packaging will be consumed by Maven 3 with no problems.\r\nThe main goal of this feature has been explained in more details at https://github.com/apache/maven/pull/1160.  The ability to differentiate between BOM that will be consumed and POM that will be used as parents is needed in order to translate the consumed poms to a compatible modelVersion 4.0.0.\r\n\r\nWe could definitely think about enhancing the consumer side so that  this `bom` packaging would be installed / uploaded without the packaging translation, allowing the removal of the `<scope>import</scope>` weird thing.  But that's out of scope for this specific PR.\r\n",
      "> This requires a correspnding update to https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#bill-of-materials-bom-poms\r\n\r\nDoc PR: https://github.com/apache/maven-site/pull/451",
      "How does this relate to https://github.com/apache/maven/pull/1247 ?",
      "> How does this relate to #1247 ?\r\n\r\n#1247 is based on this PR.  There's no easy way to stack PRs on top of each other in Github.  A few months ago, I had a single PR for all those changes, but I ended up splitting them in several smaller PRs.  Some of them still depend on each other though."
    ],
    "commit_messages": [
      "[MNG-7879] Add a bom packaging (#1242)\n\nThe purpose of the BOM packaging is to more cleanly identity POM that will be consumed as BOM from POM that will be used as parents.  The BOMs can be turned into a consumer POM, whereas parents can not loose any information."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fdca14f302d393b5822",
    "number": 1241,
    "body": "\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7878-reproduce",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7878] Extend test for ConsumerPom and modules in plugin configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fdda14f302d393b5823",
    "number": 1240,
    "body": "... at the cost of loosing xml formatting and comments in the consumer POMs...\r\n\r\nJIRA issue: https://issues.apache.org/jira/browse/MNG-7877\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/292",
    "head_branch": "consumer-pom",
    "is_a_fork": true,
    "comments": [
      "This looks super neat, and way simpler :smile: \r\n\r\nEdit: and the \"cost\" is justified as well, so +1"
    ],
    "commit_messages": [
      "[MNG-7877] Attach the build POM and simplify build/consumer implementation (#1240)\n\n.. at the cost of loosing xml formatting in the consumer POMs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fdea14f302d393b5824",
    "number": 1239,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7864\r\n\r\nThis should allow integration testing on s390x to use the appropriate IT branches.\r\n\r\n@elharo @gnodet would you mind reviewing this?  Thanks!  I appreciate any help to get it set up in Jenkins so s390x builds can be run again.\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "s390x-its",
    "is_a_fork": true,
    "comments": [
      "Thanks @ elharo.\r\nIt looks like for PR checks on Jenkins, the current Jenkins build setup would always run integration test with [master](https://github.com/apache/maven/blob/master/Jenkinsfile#L88) branch of [maven-integration-testing](https://github.com/apache/maven-integration-testing.git) on amd64 (for example, see https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/view/change-requests/job/PR-1241/1/).   This same setup was done for s390x before the Jenkinsfile.s390x file got removed.\r\n\r\nMay I suggest that we only run nightly builds for s390x against maven and maven-integration-testing repos once all the changes have been committed/settled. Probably simplest will be to reinstate the Jenkinsfile.s390x file and disable PR checks in https://ci-maven.apache.org/job/Maven/job/Maven%20Core%20s390x/?  Let me know your thoughts.",
      "> Thanks @ elharo. It looks like for PR checks on Jenkins, the current Jenkins build setup would always run integration test with [master](https://github.com/apache/maven/blob/master/Jenkinsfile#L88) branch of [maven-integration-testing](https://github.com/apache/maven-integration-testing.git) on amd64 (for example, see https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/view/change-requests/job/PR-1241/1/). This same setup was done for s390x before the Jenkinsfile.s390x file got removed.\r\n> \r\n> May I suggest that we only run nightly builds for s390x against maven and maven-integration-testing repos once all the changes have been committed/settled. Probably simplest will be to reinstate the Jenkinsfile.s390x file and disable PR checks in https://ci-maven.apache.org/job/Maven/job/Maven%20Core%20s390x/? Let me know your thoughts.\r\n\r\nThe problem is really with PRs that use a custom IT branch, so nightly builds for the master branch would be fine with me.",
      "Please look https://github.com/apache/maven/pull/1263 I select branch name for ITs based on branch. used for build or PR.\r\nThere is possible that branch will be not exist in ITs so you need a fallback to checkout master branch.",
      "Closing this as https://github.com/apache/maven/pull/1266 has been merged.  Thanks."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fdfa14f302d393b5825",
    "number": 1238,
    "body": "Example of rough sketch (actual loggers are not fully done yet) for mvn4 logging:\r\n\r\nSupports:\r\n* quiet (as before)\r\n* classic (as Maven3 did always log)\r\n* classic_light (as Maven3 but only \"Downloaded...\" lines)\r\n* summary\r\n\r\nExamples (building maven-resolver-ant-tasks always with empty local repo):\r\n* classic (2459 logged lines): https://gist.github.com/cstamas/67770cb5da1d36dc48128a3529b52905\r\n* classic_light (1575 logged lines): https://gist.github.com/cstamas/7ff6c5c4a99c6ea4f3e3a955795c9a92\r\n* summary (697 logged lines): https://gist.github.com/cstamas/c40d50b2f4f952f4eb7a519867756f78\r\n\r\n\"Tricks\" like those mentioned by @gnodet are NOT implemented, but would be cool to have them (progress with deleted lines), as currently summary \"looks strange\" (is silent but has strange pauses -- while downloads silently)\r\n",
    "head_branch": "mvn4-transfer-listener",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe0a14f302d393b5826",
    "number": 1237,
    "body": null,
    "head_branch": "model-locator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add ModelLocator#locateExistingPom to abstract a bit more (#1237)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe1a14f302d393b5827",
    "number": 1236,
    "body": null,
    "head_branch": "improve-source-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve o.a.m.api.services.Source interface (#1236)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe2a14f302d393b5828",
    "number": 1235,
    "body": "The modello model is used to generate a class which is able to find the minimal model version needed for a given `Model` object.  This allows a transparent downgrade during the consumer POM transformation (which can be turned off using a new flag).\r\n\r\nJIRA issue: http://issues.apache.org/jira/browse/MNG-7876\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/291",
    "head_branch": "model-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7876] Add model version analysis and downgrade (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe3a14f302d393b5829",
    "number": 1234,
    "body": null,
    "head_branch": "api-toolchains-builder-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor improvements to v4 api ToolchainsBuilder (#1234)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe4a14f302d393b582a",
    "number": 1233,
    "body": "- Remove unused method in generated xml writers\n- Fix stax writer to generate nicer XML\n- Use XMLConstants\n- Do not build location information if not needed\n",
    "head_branch": "stax-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not build location information if not needed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe5a14f302d393b582b",
    "number": 1232,
    "body": "- Move Features to the api\r\n",
    "head_branch": "move-features-to-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move Features to api (#1232)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe5a14f302d393b582c",
    "number": 1231,
    "body": "https://issues.apache.org/jira/browse/MNG-7875\r\nbefore:\r\n![MNG-7875_before_output](https://github.com/apache/maven/assets/237462/06fd0920-1e16-4e7f-812a-db339e1f292b)\r\n\r\n\r\nafter: \r\n![MNG-7875_colorized_output_second](https://github.com/apache/maven/assets/237462/9d74cd8e-66d5-4b48-839c-01f3d30a60bf)\r\n\r\n(initial proposal:\r\n![MNG-7875_colorized_output](https://github.com/apache/maven/assets/237462/56fb3705-01d1-45cd-b249-0dc6f9c62c6c)\r\n)",
    "head_branch": "MNG-7875_transfer_color",
    "is_a_fork": false,
    "comments": [
      "Not sure it is easier to read, what about keeping them at debug/fine level and use something maven oriented by default (info: `Downloading org.apache.maven:foo:1.2.3 from apache-snapshots`, here colors can optionally be used on the gav and repoId if needed but it is already readable without anything else IMHO)?\r\n\r\nThe fact it does not use a logger already messes up the output depending the build mode and mojos (due to stdout usage directly) so maybe migrate to slf4j impl first then use the levels and be it, looks better to solve the issue than working it around with colors which don't really enhance it for end users in the previous mentionned case(s).",
      "using slf4j vs console is completely orthogonal: it does not change anything to this issue. Don't hesitate to open a Jira and a PR in parallel\r\n\r\non `Downloading org.apache.maven:foo:1.2.3 from apache-snapshots`:\r\n- we don't have gavce in the API: we can't do that\r\n- effective url base is useful (depends on user settings)\r\n- gavce can't display `maven-metadata.xml`\r\n\r\n>  it is already readable without anything else IMHO\r\n\r\nfor sure, it's done as pure color enhancement, absolutely not any other change: then data exactly is the same, just color to help see the important different fields and cases\r\n\r\nask a normal user about the difference between \"Downloading\" and \"Downloaded\", ask about the url structure\r\nfor you and every Maven developer, there is no problem (just hard to read output: you need to concentrate to see the different parts)\r\n\r\nI know this output is new and made by someone else: take time to use it and see live why it was done the way of was done...",
      "> using slf4j vs console is completely orthogonal: it does not change anything to this issue. Don't hesitate to open a Jira and a PR in parallel\r\n\r\nYes and no, using colors does not solve the issue you mention for me, using loggers is a proposal so somehow it does IMHO.\r\n\r\n> we don't have gavce in the API: we can't do that\r\n\r\nWe can for 2 reasons:\r\n\r\n* We own aether\r\n* Worse case a thread local solves that since transport is sadly for now\r\n\r\n> effective url base is useful (depends on user settings)\r\n\r\nAgree, this is why I said it would be debug level cause most of the time it is not but if needed it can be enabled with --loggin-level which sounds like solving the issue you reference for me.\r\n\r\n> gavce can't display maven-metadata.xml\r\n\r\nWhy? you can reference it in the mesage but it stays readable compared to an url randomized on the output.\r\n\r\n> it is already readable without anything else IMHO\r\n\r\nOk, I disagree on that point for the two mentionned reasons\r\n\r\n> for sure, it's done as pure color enhancement, absolutely not any other change: then data exactly is the same, just color to help see the important different fields and cases\r\n\r\nThis is why for me it is not better, several cases will not have colors, contrast will not always make it better - can make it worse btw - and length stays the same.\r\n\r\n> ask a normal user about the difference between \"Downloading\" and \"Downloaded\", ask about the url structure\r\nfor you and every Maven developer, there is no problem (just hard to read output: you need to concentrate to see the different parts)\r\n\r\nFeedback I encountered were, rest was either \"it is too verbose but I filtered it after or it was ok\":\r\n\r\n* It is not readable - note: literally - cause of the output interleaving I mentionned\r\n* what is the link with my pom (repo in parents)\r\n\r\n> I know this output is new and made by someone else: take time to use it and see live why it was done the way of was done...\r\n\r\nI appreciate the proposal but my point is I think it does not address the referenced ticket at the end - and I'm saying that after being one to think about that some years ago - was with sed to add colors at that time. Just trying to ensure we dont mark resolved a ticket we didnt address.",
      "disagree on everything: the PR does what the Jira title and description say = color to ease understanding\r\nwhich solve my improvement expectation\r\n\r\nyour expectations are different, probably complementary, then to be done separately if you need it: going to slf4j will have other independent impact\r\nI'm not saying that your expectations are wrong: just saying that they are independent and should not be conflated (or even imposed on something independent)",
      "@hboutemy not imposing anything, was just sharing my feedback that I think this PR is a noop regarding the goal which is something I share. Due to the regular feedback we have on this part I don't think this step is that useful and I think we can skip it but no issue for me if you want to merge it - code is more than ok. It is just it does not reach its real goal and just push back the actual issue IMHO so thought it would be worth thinking to a global solution instead of a quick workaround.",
      "the goal of this PR is https://issues.apache.org/jira/browse/MNG-7875 (please take time to read it), then this PR reaches its goal\r\n\r\nif there is another goal (and I understand there is), please open a Jira issue describing the goal: I don't get fully this other goal. And of course, this PR does not try to address this other goal",
      "If the problem is \"transfer message are currently hard to read for many users\" I must confess that I agree that adding color make them not easier to read (for me as a user).... and maybe one should better try to enhance the message?",
      "Another possibility would be to implement something different when in interactive mode:\r\n * when some downloads starts, print a line saying saying Maven is downloading\r\n * eventually put some progression, but all on a single line (i.e. only the last line is ever modified\r\n * when downloads are done, completely erase the download line and continue with normal build log\r\nThis can be easily achieved using JLine... (as has already been proven to work inside Maven Daemon)\r\n\r\nAs a user, I'm usually not interested in knowing which exacts artifacts are downloaded, but mainly by the fact that the build is actually downloading artifacts.",
      "> As a user, I'm usually not interested in knowing which exacts artifacts are downloaded, but mainly by the fact that the build is actually downloading artifacts.\r\n\r\n...completely agree, except with this last line (where am more at @hboutemy side): baseUrl used in download is good to be visible, as a cautious developer can catch from very first few lines of downloads if the env is not right (ie. mirror not properly set up, etc). This is why I keep saying that am personally uninterested in the \"Downloading...\" line, but am very interested in \"Downloaded...\" line.\r\n\r\nThinking more, I kinda agree with @gnodet  to keep build logs unspoiled with downloading/downloaded lines (just to have some deleted line, so progress should be visible), and maybe at the build end (a la validation) have some summary table? Like by repoId/baseUrl/countOfDowmloads?\r\n\r\nBasically, _current Maven logging_ could be called \"detailed\" (as Maven 3.9.x behaves today), and introduce something like `maven.download.logging=summary` where NO downloading/downloaded are emitted (just progress that is deleted), but only a summary at build end?",
      "Please note that we do have different listeners already which are activated through other flags indirectly. ",
      "> Please note that we do have different listeners already which are activated through other flags indirectly.\r\n\r\nCan you elaborate? I already asked you about it: https://github.com/apache/maven/pull/1231#discussion_r1320858589",
      "Also, I am willing to accept following PR:\r\n* for 3.9: emphasize (with color) the repoId and baseUrl, leave everything else as is and make no assumptions about layout\r\n* for 4: do something along the lines of @gnodet idea, combined with \"summary table\" maybe (discuss it on ML)",
      "> > Please note that we do have different listeners already which are activated through other flags indirectly.\r\n> \r\n> Can you elaborate? I already asked you about it: [#1231 (comment)](https://github.com/apache/maven/pull/1231#discussion_r1320858589)\r\n\r\nLook at impl if the interface. We have for nop, slf4j, no progress and this one for the tty. ",
      "dropped the layout-specific colorization as asked",
      "here it is:\r\n![MNG-7875_colorized_output_second](https://github.com/apache/maven/assets/237462/9d74cd8e-66d5-4b48-839c-01f3d30a60bf)\r\n\r\nprobably less surprising to end-users"
    ],
    "commit_messages": [
      "[MNG-7875] colorize transfer messages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243fe7a14f302d393b582d",
    "number": 1230,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7810\n\nThis PR provides an empty placeholder for the Maven 4 SPI.\n\nThe package is `org.apache.maven.api.spi` and should contain all services that can be easily provided by extensions.\n\n",
    "head_branch": "MNG-7810",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7810] Provide a SPI for the v4 api\n\n# Conflicts:\n#\tmaven-bom/pom.xml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fe8a14f302d393b582e",
    "number": 1229,
    "body": "Maven Resolver Provider: get rid of name free string literals.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7874\r\n",
    "head_branch": "MNG-7874",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7874] Use name constants instead of free string literals (#1229)\n\nMaven Resolver Provider: get rid of name free string literals.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7874"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243fe9a14f302d393b582f",
    "number": 1228,
    "body": "… resolve dependencies for project org.apache.maven:maven-xml-impl\r\n\r\nreason:Circular dependencies：\r\nmaven-xml-impl\r\n    ->plexus-xml\r\n        ->maven-xml-impl\r\nplexus-xml need to exclusion maven-xml-impl\r\n2)rename 'Implementation of Maven API XML' to 'maven-xml-impl(Implementation of Maven API XML)'\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-maven-xml-impl-Circular-Deps",
    "is_a_fork": true,
    "comments": [
      "I agree that there is a problem\r\nI don't think the current PR is the right approach\r\nas found [on the ML while discussing on the topic](https://lists.apache.org/thread/8t5szmn8fhlrklhg5dgv496k26tz3w3p), I thin the approach is to create a Maven Shared Component that provides MetaAnnotations, XML API and XML Implementation separately from Maven core\r\nI don't know how to name this release: \"Maven fundamentals\"?",
      "> I agree that there is a problem\r\n> I don't think the current PR is the right approach\r\n> as found [on the ML while discussing on the topic](https://lists.apache.org/thread/8t5szmn8fhlrklhg5dgv496k26tz3w3p), I thin the approach is to create a Maven Shared Component that provides MetaAnnotations, XML API and XML Implementation separately from Maven core\r\n> I don't know how to name this release: \"Maven fundamentals\"?\r\n\r\n@hboutemy While I'm not necessarily opposed to moving things, I don't think this will solve the problem.\r\nThe problem here is the cycle between maven-xml-impl / plexus-xml / maven-xml-impl.\r\nMoving maven-xml-impl in another location won't change that problem, so while this may not be a sufficient solution, I think this PR is still needed.",
      "> @w6et Could you please remove the module name change ?\r\n\r\nDone, @gnodet "
    ],
    "commit_messages": [
      "Resolve circular dependencies for project org.apache.maven:maven-xml-impl (#1228)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243feaa14f302d393b5830",
    "number": 1227,
    "body": "Long time needed...",
    "head_branch": "deprecate-maven-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Deprecate all classes in maven-compat (#1227)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243feba14f302d393b5831",
    "number": 1226,
    "body": "This information is usually more accurately given by the GIT history\r\n",
    "head_branch": "remove-authors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove useless @author tags (#1226)\n\nThis information is usually more accurately given by the GIT history"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243feca14f302d393b5832",
    "number": 1225,
    "body": "Until MNG-7864 is actually fixed, I'm going to remove the Jenkins pipeline as it causes failures whenever a given PR needs a matching PR for the ITs, as this is not a supported scenario yet.  It needs to be added back when that's fixed.",
    "head_branch": "remove-s390x-pipeline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7864] Disable broken s390x jenkins (#1225)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243feda14f302d393b5833",
    "number": 1224,
    "body": "The modello generated classes should not be deprecated, and they are in use. \r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7870",
    "head_branch": "MNG-7870",
    "is_a_fork": true,
    "comments": [
      "Yes, it was done as part of MNG-7055:\r\n* https://github.com/apache/maven/pull/555 (master)\r\n* https://github.com/apache/maven/pull/691 (port to maven-3.9.x)\r\n\r\n",
      "My point is, that the related code change simply made G level metadata work the \"same way\" as GA and GAV level metadata worked: user needs not to manage it, it all happens transparently from user POV, is done by resolver \"behind the curtains\", without user interaction.",
      "And finally, i find this page (rendered as part of maven-repository-metadata site) a bit anemic, and IMHO missing the point: https://maven.apache.org/ref/3.9.4/maven-repository-metadata/index.html\r\n\r\nEspecially when I put it next to this page:\r\nhttps://maven.apache.org/repositories/metadata.html\r\n\r\nFormer page, that is about maven-repository-metadata module (that contains ONLY the modello generated model classes) talks about \"local\" and \"remote\" metadata, that is totally irrelevant, and none of those things happens in given module. The \"metadata file names\" are irrelevant (are defined by layout), and page https://maven.apache.org/repositories/metadata.html IMHO describes much better all of it (from remote repo aspect, it does not mention \"locally cached\" metadata either).\r\n\r\nSo, I'd propose to modify page even more, and just keep this:\r\n```\r\n# Maven Repository Metadata Model\r\n\r\nThis is strictly the model for Maven Repository Metadata, so really just plain objects.\r\n\r\nThe following are generated from this model:\r\n\r\n* [Java sources](https://maven.apache.org/ref/3.9.4/maven-repository-metadata/apidocs/index.html) with Reader and Writers for the Xpp3 XML parser, to read and write maven-metadata(-*).xml files,\r\n* a [Descriptor Reference](https://maven.apache.org/ref/3.9.4/maven-repository-metadata/repository-metadata.html).\r\n```",
      "ping?",
      "Closed by mistake, reopened"
    ],
    "commit_messages": [
      "[MNG-7870] Undeprecate G level metadata (#1224)\n\nThe modello generated classes should not be deprecated, and they are in use. \r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7870"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243feea14f302d393b5834",
    "number": 1223,
    "body": "Maven Resolver Provider gets similar change as other Resolver components had in MRESOLVER-386.\r\n\r\nAlso, some minor code updates like adding Override and other cosmetic stuff.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7856",
    "head_branch": "MNG-7856",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7856] Maven Resolver Provider ctor and other minor code changes (#1223)\n\nMaven Resolver Provider gets similar change as other Resolver components had in MRESOLVER-386.\r\n\r\nAlso, some minor code updates like adding Override and other cosmetic stuff.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7856"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66243fefa14f302d393b5835",
    "number": 1222,
    "body": "Location tracking incomplete in Maven 4 and cause missing locations to not appear when running `mvn help:effective-pom -Dverbose`.\r\nThis PR adds the missing bits and also add the location tracking from settings to the model.",
    "head_branch": "fix-location",
    "is_a_fork": true,
    "comments": [
      "> What broke LT? Is this Maven4 specific or is broken in Maven3 as well?\r\n\r\nThings have been broken when integrating the Maven 3 API. The readers/writers/merge are new in Maven 4 and the Maven 3 classes now delegate to the new ones.  The support was incomplete.  This PR fixes everything in Maven 4, but Maven 3 has no problem."
    ],
    "commit_messages": [
      "[MNG-7871] Fix location tracking (#1222)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fefa14f302d393b5836",
    "number": 1221,
    "body": "JIRA: https://issues.apache.org/jira/browse/MNG-7861\r\nSee https://github.com/apache/maven/commit/e39142b77a5a140cce50592608029c19b9716ed1#r126188891 ",
    "head_branch": "remove-exported-artifacts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7861] Remove artifacts which should be kept hidden (#1221)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff0a14f302d393b5837",
    "number": 1220,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7866\r\n\r\nUse message formats with placeholders to avoid premature formatting and avoid the unnecessary garbage when then log level is disabled :\r\n\r\norg.apache.maven.project.artifact.MavenMetadataSource\r\norg.apache.maven.toolchain.DefaultToolchainsBuilder\r\norg.apache.maven.DefaultMaven\r\norg.apache.maven.classrealm.DefaultClassRealmManager\r\norg.apache.maven.internal.aether.LoggingRepositoryListener\r\norg.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer\r\norg.apache.maven.lifecycle.internal.LifecycleDependencyResolver\r\norg.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder\r\norg.apache.maven.plugin.internal.DefaultMavenPluginManager\r\norg.apache.maven.plugin.internal.DefaultPluginDependenciesResolver\r\norg.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver\r\norg.apache.maven.plugin.version.internal.DefaultPluginVersionResolver\r\norg.apache.maven.project.collector.MultiModuleCollectionStrategy\r\norg.apache.maven.toolchain.DefaultToolchain\r\n\r\nGuarding some logging statements with conditionals on isXXXXEnabled() to avoid unnecessary garbage when then log level is disabled. Useful when some formatting must be done outside the logger call :\r\n\r\norg.apache.maven.classrealm.DefaultClassRealmManager\r\norg.apache.maven.internal.impl.DefaultLog\r\norg.apache.maven.lifecycle.DefaultLifecycles\r\norg.apache.maven.plugin.internal.DefaultMavenPluginManager\r\norg.apache.maven.plugin.internal.MojoLogWrapper\r\n\r\nRemove some unneeded conditional guarding to avoid testing twice if the log level is enabled :\r\n\r\norg.apache.maven.classrealm.DefaultClassRealmManager\r\norg.apache.maven.lifecycle.DefaultLifecycles\r\norg.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver\r\norg.apache.maven.plugin.version.internal.DefaultPluginVersionResolver\r\n\r\nNew test class :\r\n\r\norg.apache.maven.classrealm.DefaultClassRealmManagerTest\r\n\r\nTest class modified to reflect the new logger API usage :\r\n\r\norg.apache.maven.toolchain.DefaultToolchainTest",
    "head_branch": "MNG-7866",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7866] Improvements to the logging API usage (technical debt) (#1220)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff1a14f302d393b5838",
    "number": 1219,
    "body": "Improve DefaultModelValidator.compareModelVersions to be able to compare\nversions which different numbers of segments, allowing it to compare\n\"4\", \"4.0\", and \"4.0.0\" to each other for example.\n\nSigned-off-by: Craig Andrews <candrews@integralblue.com>\n\n# Conflicts:\n#\tmaven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java\n\nFollowing this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7851-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7851] Improve error message when modelVersion is 4.0 (#1219)\n\nImprove DefaultModelValidator.compareModelVersions to be able to compare\r\nversions which different numbers of segments, allowing it to compare\r\n\"4\", \"4.0\", and \"4.0.0\" to each other for example.\r\n\r\nSigned-off-by: Craig Andrews <candrews@integralblue.com>\r\n\r\n# Conflicts:\r\n#\tmaven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java\r\n\r\nCo-authored-by: Craig Andrews <candrews@integralblue.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff2a14f302d393b5839",
    "number": 1218,
    "body": "fixes MNG-7863",
    "head_branch": "MNG-7863",
    "is_a_fork": false,
    "comments": [
      "@elharo not sure why you remove this as he did this on purpose with this PR https://github.com/apache/maven/pull/1213 \r\nSee comments here https://github.com/apache/maven/pull/1207#issuecomment-1655617325\r\nAt least you should ask him if he really wants to be removed...\r\n\r\n@kun-lu20 ping",
      "Thanks @olamy !\r\n\r\nYes, we did this on purpose, so that our team (Linux on IBM Z Open Source Team) can get notified of the pipeline status in time.",
      "@elharo ping",
      "I stand behind my change, which was filed as a JIRA and approved. I would have CC'd some additional reviewers had I noticed the earlier changes at the time, or had their been comments in the file indicating why there was this strange email address for no obvious reason.  Nonetheless those earlier changes were wrong and should have been reverted. The CI should not send email to random external addresses. This is not the correct way to monitor a CI.\r\n\r\nFurthermore the S390 builds were in fact broken. See MNG-7864. That's why I noticed this in the first place. If the email was being sent, it wasn't being read and acted on. \r\n\r\n",
      "@kun-lu20 if you need this you need to convince @elharo . \nI was really happy to help you and ibm opensource folks but sorry it's really beyond my motivation... \ngood luck...",
      "Thanks @olamy ! I appreciate it.\r\n\r\nI've talked to our team and we decided to have someone monitor the s390x pipeline regularly, so it's ok for now without sending notification emails."
    ],
    "commit_messages": [
      "[MNG-7863] don't email on s390 failures. The regular results are enough. (#1218)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff3a14f302d393b583a",
    "number": 1217,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7862\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/289\r\n\r\nThere are a few places where the `pom.xml` file name is hardcoded. There's a known interface to locate those, so those references should be cleaned.\r\nOne IT has to be adjusted (see PR) because the default value in the model is changed from `../pom.xml` to `..` for the parent `relativePath` default value.",
    "head_branch": "MNG-7862-fix-model-locator",
    "is_a_fork": true,
    "comments": [
      "> Is this for v4 only? Some of the API changes look incompatible.\r\n\r\nYes, I did not really envision to backport it.  I think most of the changed methods are new in 4.0.  The exceptions are the default value in the model and the new `ModelSource3` which I introduced to avoid adding a method to an interface that could be possibly implemented by plugins / extensions.  I may have missed a possible incompatible change if a plugin/extension actually implements `ModelSource2` (as I should provide the previous behaviour in such a case).",
      "Probably unrelated but why in the CI output do I see :\"Sending email to: rishi@ca.ibm.com\"?",
      "> Probably unrelated but why in the CI output do I see :\"Sending email to: [rishi@ca.ibm.com](mailto:rishi@ca.ibm.com)\"?\r\n\r\nNot sure, I've disabled the s390x pipeline as it does not take into account the fact that a given branch should be tested with the maven-integration-testing branch with the same name if it exists.",
      "Filed https://issues.apache.org/jira/browse/MNG-7863?filter=-2",
      "OK, looks good overall. Is it possible to retrigger the full CI so we can see that S390 is no longer included?",
      "@elharo could you have another look ?"
    ],
    "commit_messages": [
      "[MNG-7862] The ModelLocator should always be used when locating pom.xml (#1217)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff4a14f302d393b583b",
    "number": 1216,
    "body": "This PR aims to address the issue in this [comment](https://github.com/apache/maven/pull/1207#discussion_r1285167844) by removing `Configure deploy` stage from s390x pipeline.\r\n\r\n-------------------------------------------------------------\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "remove_deploy_goal_from_s390x_pipeline",
    "is_a_fork": true,
    "comments": [
      "Hi @olamy , \r\n\r\nCould you please review this PR when you have a chance?\r\n\r\nThank you very much!",
      "Hi @olamy ,\r\n\r\nCould you please merge this PR and set up a s390x pipeline?\r\n\r\nThank you so much!",
      "done but there is something to fix \r\nhttps://ci-maven.apache.org/job/Maven/job/Maven%20Core%20s390x/job/master/1/console",
      "oops it's fixed",
      "@olamy Thanks again!"
    ],
    "commit_messages": [
      "[MNG-7848] Remove `Configure deploy` stage from s390x pipeline (#1216)\n\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff5a14f302d393b583c",
    "number": 1215,
    "body": "\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7822",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7822] Add support for TRACE logging level (with style \"bold,magenta\")  (#1215)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff6a14f302d393b583d",
    "number": 1214,
    "body": "(that are not applicable, but look ugly).\r\n\r\nThese tests are NOT built, but are taken from real projects several years ago, and used in POM related UTs.\r\n\r\nHence, for example update of velocity is completely okay, even if in \"real life\" it would not compile.\r\n",
    "head_branch": "fix-alerts",
    "is_a_fork": true,
    "comments": [
      "> (that are not applicable, but look ugly).\r\n> \r\n> These tests are NOT built, but are taken from real projects several years ago, and used in POM related UTs.\r\n> \r\n> Hence, for example update of velocity is completely okay, even if in \"real life\" it would not compile.\r\n\r\nSo what's the point ?  The version don't even match those used by maven...",
      "Ah, the answer is in the PR title...",
      "The point is **only** to make these go away https://github.com/apache/maven/security/dependabot\r\n\r\nYes, these are POMs used in UTs only in some POM-related tests...",
      "Wouldn't it make more sense to exclude those projects using [dependabot.yml](https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file)?",
      "Sure! \r\n\r\n> Wouldn't it make more sense to exclude those projects using [dependabot.yml](https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file)?\r\n\r\nSure, that would work as well... ",
      "@mthmulders any example how to do it?",
      "> @mthmulders any example how to do it?\r\n\r\nIt seems not to be as easy as I hoped: https://github.com/dependabot/dependabot-core/issues/4364, https://github.com/dependabot/dependabot-core/issues/2883.\r\n\r\nThe best I could find is a suggestion to configure the \"maven\" `package-ecosystem` multiple times: once for the root of the project, and then for each location that you want to exclude you specify it again but with `interval: \"never\"`. Not sure if that works as intended.",
      "Yes, that is my understanding as well... or ignore, but then one need to enlist ALL ignored deps, that probably overlaps with Maven used ones, where we DO WANT dependabot.\r\n\r\nIt would be simplest if there would be something like `ignore_directory` or alike."
    ],
    "commit_messages": [
      "Fix dependabot alerts (#1214)\n\n(that are not applicable, but look ugly).\r\n\r\nThese tests are NOT built, but are taken from real projects\r\nseveral years ago, and used in POM related UTs.\r\n\r\nHence, for example update of velocity is completely okay,\r\neven if in \"real life\" it would not compile."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff7a14f302d393b583e",
    "number": 1213,
    "body": "This PR aims to change the notification recipients in `Jenkinsfile.s390x` to Linux on IBM Z Open Source Team.\r\n\r\n-------------------------------------------------------------------------------------\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "change_notification_recipients_on_s390x_ci",
    "is_a_fork": true,
    "comments": [
      "Hi @olamy @slachiewicz ,\r\n\r\nCould you please review this PR when you have a chance?\r\n\r\nThank you very much!",
      "Hi @olamy,\r\n\r\nThank you very much! Could you please set up and run a nightly build s390x pipeline on Jenkins CI?",
      "> Hi @olamy,\r\n> \r\n> Thank you very much! Could you please set up and run a nightly build s390x pipeline on Jenkins CI?\r\n\r\nHi\r\nSorry but I finally realised there is something else to change. See my comment here: https://github.com/apache/maven/pull/1207/files#r1285167844",
      "Hi @olamy ,\r\n\r\nThanks for pointing out! I'll raise a new PR to address it."
    ],
    "commit_messages": [
      "[MNG-7848] Change the notification recipients in s390x pipeline (#1213)\n\n* [MNG-7848] Change the notification recipients in s390x pipeline\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>\r\n\r\n* [MNG-7848] Change the replyTo recipient\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff8a14f302d393b583f",
    "number": 1212,
    "body": "Applies MRESOLVER-390 changes, and removes all sprinkled artifact ordering, delegates fully to Resolver.\r\n\r\nIf you do `mvn -X package` you can see for example that enforcer plugin classpath is built in pre-order way from tree:\r\nhttps://gist.github.com/cstamas/d1cb11d96938cdb9e6da2b46eec449b6\r\n\r\nNow, if do `mvn -X package -Daether.system.resolveDependencies.visitor=levelOrder`, then enforcer plugin classpath is built in level order:\r\nhttps://gist.github.com/cstamas/6498cfb31afe74ded1471c02d982eee6\r\n\r\nNote: to build, needs https://github.com/apache/maven-resolver/pull/322\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MRESOLVER-390\r\nalso related https://issues.apache.org/jira/browse/MNG-6357",
    "head_branch": "MRESOLVER-390",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ff9a14f302d393b5840",
    "number": 1211,
    "body": "Original issue described here https://issues.apache.org/jira/browse/MNG-7852 (as 3rd bullet) and related analysis is here https://github.com/hboutemy/sigstore-maven-plugin/blob/import/analysis.md\r\n\r\nThe problem was simply that previous (\"deep\" BOM) already imported protobuf-java, so 2nd depMgt import was simply ignored.\r\n\r\nThis simple change just adds warning.\r\n\r\nHere is a reproducer:\r\nhttps://github.com/cstamas/MNG-7852\r\n\r\nW/ this PR output is like this:\r\nhttps://gist.github.com/cstamas/b1ceadaea9f7015d419ec1047da5b51a\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7854\r\n",
    "head_branch": "MNG-7854",
    "is_a_fork": true,
    "comments": [
      "What will be if I define version of some library directly in depMng and next it will be also declared in imported depMng?\r\n\r\nI would like to override in project one of dependencies from imported dependencies.",
      "This pr just adds logging, no logic change.\r\n\r\nFor your question: order matters, so first depMgt wins over subsequent ones, subsequent dupes are simply ignored.",
      "This combined with https://issues.apache.org/jira/browse/MNG-5600 could be a solution",
      "first, https://issues.apache.org/jira/projects/MPH/issues/MPH-183 should be solved, because currently there is absolutely nothing to debug dependencyManagement imports, and the sigstore-maven-plugin case showed that when you have such imports chained everywhere, it's really hard to understand how the dependencyManagement went in\r\n\r\nfood for thought: Maven core logging does not log anything at all about reactor effective POM building nor dependencies resolution. That's why we rely (and we should make it clear to end-users) on `mvn help:effective-pom -Dverbose` for effective POM debugging and `mvn dependency:list` / `mvn dependency:tree -Dverbose` for dependency resolution  debugging\r\n\r\nshould we add log to Maven core for effective POM building? I'm not convinced, because it will become too chatty I fear\r\n\r\nshould we add WARN on dependencyManagement import precedence decision: I'm definitively against it, because that's not a WARN: that would be at most an INFO\r\n\r\nperhaps we need a better documentation, because I'm convinced many details are misunderstood",
      "The idea looks good to me.  There's one additional use case that needs to be handled though is the following.\r\n\r\nLet's say one or two BOMs are imported with a conflicting dependency.  Maven would print a warning that the second managed dependency is ignored.  The warning should include a way to fix the problem, which is to add an explicit managed dependency before importing the BOMs.  Once that's done, the build should not emit a warning anymore imho, as warning with no way to fix is a bad idea.  So I think the warning should happen only if no explicit (first level) managed dependency is registered yet.  This should be the case if the BOM is imported before the managed dep, or if there's a conflict with two BOMs.\r\n\r\nMaybe the warning should not be printed if there's an explicit _dependency_ (not a managed one) too.",
      "Well, here is a counter example: I have no **conflicting imports** as I import just one:\r\n```\r\n<project>\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>org.cstamas</groupId>\r\n  <artifactId>test</artifactId>\r\n  <version>1.0.0</version>\r\n  <packaging>jar</packaging>\r\n  <dependencyManagement>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>com.google.cloud</groupId>\r\n            <artifactId>libraries-bom</artifactId>\r\n            <version>26.9.0</version>\r\n            <type>pom</type>\r\n            <scope>import</scope>\r\n        </dependency>      \r\n    </dependencies>\r\n  </dependencyManagement>\r\n</project>\r\n```\r\nand with this PR it produces all these warnings: https://gist.github.com/cstamas/110351c2eeb6b56b8ceee9818be65872\r\n(153 warnings!)\r\n\r\nBasically this one single BOM is \"self conflicting\". What now?",
      "I still believe, that if this warning would be emitted, no \"self conflicting\" BOMs would be produced like that one above.",
      "Superseded by https://github.com/apache/maven/pull/1370"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ffaa14f302d393b5841",
    "number": 1210,
    "body": "[MNG-7851](https://issues.apache.org/jira/browse/MNG-7851) Improve error message when modelVersion is 4.0\r\n\r\nImprove `DefaultModelValidator.compareModelVersions` to be able to compare versions which different numbers of segments, allowing it to compare \"4\", \"4.0\", and \"4.0.0\" to each other for example.\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [X] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7851",
    "is_a_fork": true,
    "comments": [
      "This will very likely violate the generated XML Schema. Moreover,  the validator prints a hard version. I consider this change wrong.",
      "> This will very likely violate the generated XML Schema.\r\n\r\nHow does it violate the schema? Can you point me to something?\r\n\r\nThe result of this change is only that the error message changes - no other behavior changes.\r\nWith `<modelVersion>4.0.0</modelVersion>`:\r\nBefore:\r\n`'modelVersion' of '4.0' is newer than the versions supported by this version of Maven: [4.0.0]. Building this project requires a newer version of Maven.`\r\nWith this PR:\r\n`'modelVersion' must be one of [4.0.0] but is '4.0'.`\r\n\r\nIn this PR, I added a unit test that demonstrates this change in error messaging behavior for this situation.\r\n\r\n> Moreover, the validator prints a hard version. I consider this change wrong.\r\n\r\nI'm sorry, I don't understand... Can you please clarify, perhaps with an example?\r\n\r\n",
      "Just checked, the schema does not enforce the model version...weird. I'd say that it should be fixed literal `4.0.0`. For me, this is similar to an XML namespace, if you change a single char then you change the entire namespace.\r\n@gnodet @cstamas @hboutemy WDYT?",
      "> I'd say that it should be fixed literal `4.0.0`.\r\n\r\nCurrently, Maven does require it to be the literal `4.0.0`:\r\nhttps://github.com/apache/maven/blob/maven-3.9.4/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java#L138\r\nhttps://github.com/apache/maven/blob/maven-3.9.4/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java#L1433\r\n\r\nThis PR adjusts the error message that is returned when attempts to use non-`4.0.0` values are made.",
      "I take my first comment back. Thanks for this clarification.",
      ">  allowing it to compare \"4\", \"4.0\", and \"4.0.0\" to each other for example.\r\n\r\nAnd to do what? I don't see where is the error message adjusted... what do i miss?",
      "> And to do what? I don't see where is the error message adjusted... what do i miss?\r\n\r\nThe new test case at https://github.com/apache/maven/blob/78da8ff662d9c9e0ba87aa2138114d8fd393855c/maven-model-builder/src/test/java/org/apache/maven/model/validation/DefaultModelValidatorTest.java#L120 demonstrates how the message changes. Before this PR, the message in this case is `'modelVersion' of '4.0' is newer than the versions supported by this version of Maven: [4.0.0]. Building this project requires a newer version of Maven.` And with this PR, as this test case proves, the error message is `'modelVersion' must be one of [4.0.0] but is '4.0'.`.",
      "LGTM",
      "> LGTM\r\n\r\nthen please approve",
      "The \"version comparing\"-like code is there (and was) only for \"meaningful\" error message: newer -> you need newer maven. But i agree, to me this looks overly complicated as well (or just use Version class instead?)",
      "> If we're going litteral, shouldn't we simply check that the version in the model is one of the supported version. The `validateModelVersion` could be simplified to just check the version is supported or thrown an exception without having to check for newer / older versions.\r\n\r\n@candrews could you simplify the code for the [`validateModelVersion`](https://github.com/apache/maven/blob/78da8ff662d9c9e0ba87aa2138114d8fd393855c/maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java#L1383-L1460) method so that it simply checks if the version is in the provided set instead (third branch of the tests) instead of comparing with all other versions ?"
    ],
    "commit_messages": [
      "[MNG-7851] Improve error message when modelVersion is 4.0 (#1210)\n\nImprove DefaultModelValidator.compareModelVersions to be able to compare\r\nversions which different numbers of segments, allowing it to compare\r\n\"4\", \"4.0\", and \"4.0.0\" to each other for example.\r\n\r\nSigned-off-by: Craig Andrews <candrews@integralblue.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ffba14f302d393b5842",
    "number": 1209,
    "body": "- JIRA issue: https://issues.apache.org/jira/browse/MNG-5102\r\n- PR based on top of #1160\r\n- IT PR at https://github.com/apache/maven-integration-testing/pull/280\r\n",
    "head_branch": "mixins",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ffca14f302d393b5843",
    "number": 1208,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7820",
    "is_a_fork": true,
    "comments": [
      "@elharo I don't really see the need to spend much time on rewriting code copied from a utility class.  The DefaultWagonManager is part of maven-compat, so deprecated and not really maintained. Any possible cleanup could introduce problems, so I'm more in favour of a blunt copy/paste, even if the code is not the cleanest, to avoid any possible behaviour difference with this legacy code.\r\n\r\nFor information, I've successfully run the whole IT test suite after changing the DefaultWagonManager to throw exceptions instead of actually downloading/uploading anything using a Wagon (and disabling the DefaultWagonManagerTest UT).  However, it might still be in use by old plugins, so I would not delete it at this point (we do have warnings when using maven-compat since a few months afaik).  But I would not spend too much time on this code either...\r\n\r\nThis is different for the DAG stuff which is used by maven-core...",
      "> @elharo I don't really see the need to spend much time on rewriting code copied from a utility class. The DefaultWagonManager is part of maven-compat, so deprecated and not really maintained. Any possible cleanup could introduce problems, so I'm more in favour of a blunt copy/paste, even if the code is not the cleanest, to avoid any possible behaviour difference with this legacy code.\r\n> \r\n> For information, I've successfully run the whole IT test suite after changing the DefaultWagonManager to throw exceptions instead of actually downloading/uploading anything using a Wagon (and disabling the DefaultWagonManagerTest UT). However, it might still be in use by old plugins, so I would not delete it at this point (we do have warnings when using maven-compat since a few months afaik). But I would not spend too much time on this code either...\r\n> \r\n> This is different for the DAG stuff which is used by maven-core...\r\n\r\n@gnodet So we should still do some optimization on the copied DAG, right?",
      "> > @elharo I don't really see the need to spend much time on rewriting code copied from a utility class. The DefaultWagonManager is part of maven-compat, so deprecated and not really maintained. Any possible cleanup could introduce problems, so I'm more in favour of a blunt copy/paste, even if the code is not the cleanest, to avoid any possible behaviour difference with this legacy code.\r\n> > For information, I've successfully run the whole IT test suite after changing the DefaultWagonManager to throw exceptions instead of actually downloading/uploading anything using a Wagon (and disabling the DefaultWagonManagerTest UT). However, it might still be in use by old plugins, so I would not delete it at this point (we do have warnings when using maven-compat since a few months afaik). But I would not spend too much time on this code either...\r\n> > This is different for the DAG stuff which is used by maven-core...\r\n> \r\n> @gnodet So we should still do some optimization on the copied DAG, right?\r\n\r\nYes",
      "@gnodet All issues should have been resolved except for the `DefaultWagonManager` issue dispute, which was controversial.\r\n",
      "> Nice, thx ! I think we can also revert the dependency on `commons-io` which was moved from `test` scope to `runtime`. Afaik, it's not used at runtime anymore with the recent changes.\r\n\r\n@gnodet Done.",
      "@CrazyHZM I've seen the `Os` stuff copied multiple times.   Could the class be copied into maven-core and reused instead of duplicating this bits 3/4 times ?",
      "> \r\n\r\n@gnodet I remigrated the Os classes.\r\n",
      "@elharo \r\nThanks to this careful review, I went over javadoc again and fixed the problems.\r\n",
      "@elharo any more concerns ?",
      "@elharo we can't refactor the `Os` class in a different PR unless we merge it first, as the PR removes the plexus-utils dependency... I'll refactor the class completely.",
      "> @elharo we can't refactor the `Os` class in a different PR unless we merge it first, as the PR removes the plexus-utils dependency... I'll refactor the class completely.\r\n\r\nDone.  However, the logic should not be changed in this PR.  If you want to update the behaviour, we should create a ticket for that and will have to modify the main doc at https://maven.apache.org/enforcer/enforcer-rules/requireOS.html, or rather at https://maven.apache.org/guides/introduction/introduction-to-profiles.html#os",
      "Certainly it can be done in another PR. Take this one piece at a time. There's no rule that says you have to fix every class at once. It's a big dependency and it's OK to break it up into chunks. Indeed it's preferable:\r\n\r\nhttps://google.github.io/eng-practices/review/developer/small-cls.html",
      "> > @elharo we can't refactor the `Os` class in a different PR unless we merge it first, as the PR removes the plexus-utils dependency... I'll refactor the class completely.\r\n> \r\n> Done. However, the logic should not be changed in this PR. If you want to update the behaviour, we should create a ticket for that and will have to modify the main doc at https://maven.apache.org/enforcer/enforcer-rules/requireOS.html, or rather at https://maven.apache.org/guides/introduction/introduction-to-profiles.html#os\r\n\r\n@gnodet @elharo We can create a Jira to record this.",
      "> Certainly it can be done in another PR. Take this one piece at a time. There's no rule that says you have to fix every class at once. It's a big dependency and it's OK to break it up into chunks. Indeed it's preferable:\r\n> \r\n> https://google.github.io/eng-practices/review/developer/small-cls.html\r\n\r\nWhat I meant is that it's not just about removing the `Os` switch from this PR. Given the dependency is removed completely, all POMs modifications would have to be reverted too.\r\n\r\nAnyway, the class has been rewritten and simplified now.",
      "@elharo could you take another look ?",
      "@elharo I've rewritten the `dag` related classes with non public classes.  The other copyrighted class originate from within the ASF and the last one was written by me.  ",
      "Superseded by #1243 and #1244."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ffda14f302d393b5844",
    "number": 1207,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7848\r\n\r\nApache INFRA team has installed necessary JDK flavours on all s390x nodes (Please check issue https://issues.apache.org/jira/projects/INFRA/issues/INFRA-24781). We’d like to add the s390x build and test pipeline to Jenkins CI by adding `Jenkinsfile.s390x` to the code base.\r\n\r\nCan anyone from Maven team help us review the PR and create the s390x pipeline on Jenkins? Thanks!\r\n\r\n-------------------------------------------------------------------------------\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n",
    "head_branch": "add_s390x_support_to_jenkinsci",
    "is_a_fork": true,
    "comments": [
      "Hi @slawekjaranowski @cstamas @olamy ,\r\n\r\nCould you please review this PR when you have a chance? Thank you very much!",
      "Sadly, am not a jenkins guy, unsure how to help here.... @olamy ?",
      "@kun-lu20 why is this a new file? I think we could instead modify the existing pipeline, no?",
      "Thanks @cstamas !",
      "Hi @bmarwell ,\r\n\r\nThanks for your feedback! Yes, modifying the existing pipeline should be ok, but I think separating them also has some benefits:\r\n\r\n1. We might not need to run the s390x pipeline as frequently as the amd64 pipeline, probably the nightly build is ok for s390x, just like the s390x pipeline in other Apache projects, such as https://github.com/apache/zookeeper/blob/master/Jenkinsfile-s390x and https://github.com/apache/camel/blob/main/Jenkinsfile.s390x . \r\n\r\n2. For now we need to use a hard-coded mapped entry jdktool `ibm-semeru-8u362-b09` for JDK 8 on s390x, separating two pipelines will make the scripts clearer.\r\n\r\nPlease let me know what you think. Thanks again! ",
      "Please run tests only on Maven 3.9 - to effectively use resources ",
      "Hi @slachiewicz ,\r\n\r\nThanks for your feedback! I checked [amd64 Jenkinsfile](https://github.com/apache/maven/blob/master/Jenkinsfile) and it only uses Maven 3.8.x to build and test, the same as what we did in this PR for s390x Jenkinsfile:\r\n```groovy\r\ndef buildMvn = '3.8.x'\r\n...\r\ndef runITsMvn = '3.8.x'\r\n```\r\n\r\nDo you mean I should change the following line to maven-3.9.x only?\r\n```groovy\r\nif (env.BRANCH_NAME in ['master', 'maven-3.8.x', 'maven-3.9.x']){\r\n```\r\n\r\nThank you very much!",
      "Hi @slachiewicz ,\r\n\r\nI found that in the implementation of function `mvnFromVersion()` [here](https://github.com/apache/maven-jenkins-env/blob/61ee8f931e8ed3bf231970d4da21b0d62e58fcc2/vars/jenkinsEnv.groovy#L74-L75), tool `maven_3_latest` will be used for 3.8.x, so for now actually maven-3.9.3 is being used for build and test, both on amd64 and s390x Jenkinsfile.\r\n\r\nPlease let me know if I missed anything, thanks!",
      "Hi @slachiewicz ,\r\n\r\nCould you please help to merge this PR and set up a nightly build s390x pipeline on Jenkins CI?\r\n\r\nThank you so much!",
      "who will maintain/monitor  the Jenkins job?\r\nAs we already have one and some GHA this is just adding one more job to watch and more noise (notifications)....\r\nAt least you could change the `  jenkinsNotify()` to send notifications to only you. As we already have enough.\r\n",
      "Hi @olamy ,\r\n\r\nOur team (Linux on IBM Z Open Source Team) will maintain/monitor the Jenkins job.\r\n\r\nSure, I'll update the `Notifications` stage to send emails to us. I'll get back to you once the change is done.\r\n\r\nThanks!",
      "@slachiewicz this shouldn’t have to be merged. As @kun-lu20 said in the comment, he will update the notifications to not send to us. The idea was to wait for this merge",
      "Do You know where we need to adjust it? I believe it's more at Jenkins pipeline level?",
      "Hi @olamy @slachiewicz ,\r\n\r\nThanks for merging this PR.\r\n\r\nYes, I think I know how to adjust it and I was working on that change (replacing `jenkinsNotify()` with another function which sends the notifications to our team).  Since this PR has been merged, I will raise a new PR for it ASAP.\r\n\r\n",
      "> Hi @olamy @slachiewicz ,\r\n> \r\n> Thanks for merging this PR.\r\n> \r\n> Yes, I think I know how to adjust it and I was working on that change (replacing `jenkinsNotify()` with another function which sends the notifications to our team). Since this PR has been merged, I will raise a new PR for it ASAP.\r\n\r\ncorrect you need to replace this with sending email to you"
    ],
    "commit_messages": [
      "[MNG-7848] Add s390x pipeline to Jenkins CI\n\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243ffea14f302d393b5845",
    "number": 1206,
    "body": "When there is a loop in throwable causes, DefaultExceptionHandler falls into an endless loop to produce message. Use plain hashSet to gather processed throwable instances to break out.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7846",
    "head_branch": "MNG-7846",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7846] Break out of endless loop (#1206)\n\nThis is most probably \"just\" about broken Throwable implementations.\r\nSome override getCause but does not perform checks to what it was inited\r\nas \"this\" means \"not yet inited\" actually.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7846"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66243fffa14f302d393b5846",
    "number": 1205,
    "body": "- [MNG-5862] XML entities support\r\n- [MNG-5862] Support XInclude\r\n- [IT PR](https://github.com/apache/maven-integration-testing/pull/279)\r\n\r\nThis PR is built on top of #1245 which can be integrated separately.  This feature could be opt-in or even extracted as a separate extension (hence the PR to give the needed support).\r\n\r\nNote that the tests do ensure that any POM installed/deployed is a standalone one, i.e. the xinclude / entities are inlined during the consumer pom transformation step.",
    "head_branch": "dtd-xinclude",
    "is_a_fork": true,
    "comments": [
      "> I think this PR only supports external entities, not XInclude?\r\n\r\nBoth, but the code for XInclude support is in third-party library for now: https://github.com/gnodet/stax-xinclude\r\nAlso, the IT uses xinclude at https://github.com/apache/maven-integration-testing/pull/279/files#diff-f29a4cbe7d6f8b4fb5f7534e23bfe9622d437605cf1df65821d94389d2efe5e6R29\r\n\r\n\r\n> There might be some security implications here. There certainly will be people who claim there are.\r\n\r\nThose new options are conditioned by reading a local file with strict mode (which means not when loading a POM from a dependency, i.e. only for projects being built).   If needed, we could use a custom resolver and restrict to loading entities / xinclude from the file system, or even the project tree, but I'd like to avoid any restriction if they are not needed.  As the files are loaded from locally built POM files, the user should be in control of those files.\r\n\r\n> This likely needs doc changes as well.\r\n\r\nYes, I'll try to find where...",
      "\r\n> > There might be some security implications here. There certainly will be people who claim there are.\r\n> \r\n> Those new options are conditioned by reading a local file with strict mode (which means not when loading a POM from a dependency, i.e. only for projects being built). If needed, we could use a custom resolver and restrict to loading entities / xinclude from the file system, or even the project tree, but I'd like to avoid any restriction if they are not needed. As the files are loaded from locally built POM files, the user should be in control of those files.\r\n\r\nI've modified the xinclude support so that it reuses the XMLResolver.  This allows using a single implementation to load external stuff.  I've thus modified it to reject any non relative URI, which means the code can only access files under the user's control, so that should be fine from a security perspective.",
      "Is this wise?\r\nXML parsers are littered with a long history of security vulnerabilities around loading crap remotely.\r\nIntroducing that into a build system seems scary to me.",
      "> Is this wise?\r\n> XML parsers are littered with a long history of security vulnerabilities around loading crap remotely.\r\n> Introducing that into a build system seems scary to me.\r\n\r\nI tried to mitigate the risks by only loading from rejecting any absolute URI.  Also, no file with such entities / xinclude import should end up in maven central, those are translated when installed / uploaded.  So this should only happen at build time, for the pom.xml that are parts of the build.  The security problems are then kinda in the hand of the developper I would think.\r\n\r\nThat's said, I'd like to find a consensus, and if it's seen as too risky, we could go with only mixins.  That's the whole point of the discussion I started on dev.",
      "> I tried to mitigate the risks by only loading from rejecting any absolute URI. Also, no file with such entities / xinclude import should end up in maven central, those are translated when installed / uploaded. So this should only happen at build time, for the pom.xml that are parts of the build. The security problems are then kinda in the hand of the developper I would think.\r\n> \r\n> That's said, I'd like to find a consensus, and if it's seen as too risky, we could go with only mixins. That's the whole point of the discussion I started on dev.\r\n\r\nWould you consider adding a CLI option that a user can specify to Maven to explicitly tell it not to support remote entities / xinclude stuff (and possibly even default the option to having remote entities / xinclude off)?\r\nThat could help allay concerns, in that users would have to explicitly opt-in (or have an ability to explicitly opt-out) to enabling this new potentially risky behavior.",
      "> > I tried to mitigate the risks by only loading from rejecting any absolute URI. Also, no file with such entities / xinclude import should end up in maven central, those are translated when installed / uploaded. So this should only happen at build time, for the pom.xml that are parts of the build. The security problems are then kinda in the hand of the developper I would think.\r\n> > That's said, I'd like to find a consensus, and if it's seen as too risky, we could go with only mixins. That's the whole point of the discussion I started on dev.\r\n> \r\n> Would you consider adding a CLI option that a user can specify to Maven to explicitly tell it not to support remote entities / xinclude stuff (and possibly even default the option to having remote entities / xinclude off)? That could help allay concerns, in that users would have to explicitly opt-in (or have an ability to explicitly opt-out) to enabling this new potentially risky behavior.\r\n\r\nI've added a way to opt-out using `-Dmaven.experimental.xinclude=false` ...",
      "> > Would you consider adding a CLI option that a user can specify to Maven to explicitly tell it not to support remote entities / xinclude stuff (and possibly even default the option to having remote entities / xinclude off)? That could help allay concerns, in that users would have to explicitly opt-in (or have an ability to explicitly opt-out) to enabling this new potentially risky behavior.\r\n> \r\n> I've added a way to opt-out using `-Dmaven.experimental.xinclude=false` ...\r\n\r\nThank you!",
      "@elharo can I go ahead with this PR ?",
      "> I'm still not convinced this is a good idea, but if it's going in, there are still some ciode issues to be addressed.\r\n\r\nWell, I tried to kick [a discussion on dev@](https://lists.apache.org/thread/7sz91y04zb79lqkvnw77bxf70f9rny3b) but not much interest there...  The only concerns were the same that have been raised here around security, and while I agree it could have been a problem, I think those concerns have been addressed in the PR.\r\nSo I assume lazy consensus...\r\n\r\nThe idea of xinclude/xml entities is slightly redundant with pom mixins, so I would have expected that this would have been raised...  This discussion was started mid-august, definitely not the best time to have people involved.",
      "FYI, just from a simple user's perspective, it seems peculiar that \"experimental\" (`maven.experimental.xxx`) features are being enabled by default.\r\n\r\nTypically I would expect a feature/option that a software developer considers \"experimental\" to be something that a user has to opt-in to enable, not opt-out to disable.\r\n\r\nI'm not sure if that means these new features should be disabled by default, or if the options should be renamed to better indicate they aren't considered \"experimental\"?",
      "> FYI, just from a simple user's perspective, it seems peculiar that \"experimental\" (`maven.experimental.xxx`) features are being enabled by default.\r\n> \r\n> Typically I would expect a feature/option that a software developer considers \"experimental\" to be something that a user has to opt-in to enable, not opt-out to disable.\r\n> \r\n> I'm not sure if that means these new features should be disabled by default, or if the options should be renamed to better indicate they aren't considered \"experimental\"?\r\n\r\nI agree, I think those \"experimental\" flags will need to be removed or the features disabled by default before GA.  But you're right, experimental + enabled by default looks borderline.",
      "@gnodet Thanks for you work. Any plans on resolving the requested change?",
      "One possibility would be to create an extension to support this feature.  This should be possible as the entities/xinclude are only processed at build time and the consumer pom is flattened.",
      "> Mostly nits.\r\n\r\nThey should be all fixed now.\r\n\r\n> More generally, rereading this I'm struck at how much work this is. You've provided a nearly complete XInclude implementation. The maintenance burden on this code is likely to be high. It feels like this belongs in the parser, or perhaps a separate library on top of the parser, and all Maven should do when reading a pom is flip the flag to turn on XInclude support. Maven's XML parsing is already quite non-standard and avoids the normal parsers like Xerces or the JDK's because of decisions made 20 years ago when the easier path was not so obvious. This is unfortunately baked into a lot of the code and even the public APIs, so I'm not sure how much of that can be repaired now.\r\n> \r\n> Nonetheless, I do wonder if this code belongs here instead of in the parser.\r\n\r\nWe switched to a standard StaX parser in 4.x.  The xml parser is now Woodstox, which is a fully conformant parser.  Unfortunately, I don't know any StaX parser that provides support for XInclude, so I ended up writing one, borrowing the XPointer implementation from Apache Woden.  I'd rather keep it separated from the parser so that we can eventually switch to Aalto which is slightly faster than Woodstox, but there were a few problems when I tried initially.\r\n\r\nAs for the location, I originally put it in an external repository (https://github.com/gnodet/stax-xinclude), but you asked to move it back in this repository.  I agree, this library is independent of Maven and would be better outside.  I can maintain it as a personal project (and rename the package) if you think it's better, I don't really mind.",
      "A personal project won't really work, but is there any way this can go into Woodstox or the Apache XML project or something like that?",
      "> A personal project won't really work, but is there any way this can go into Woodstox or the Apache XML project or something like that?\r\n\r\n@cowtowncoder ? @scantor ?",
      "> > A personal project won't really work, but is there any way this can go into Woodstox or the Apache XML project or something like that?\r\n> \r\n> @cotowncoder ? @scantor ?\r\n\r\nUmm. Maybe I was referenced by mistake, but I'm not sure of my relevance to this? (If this is the context of the Apache Xerces project, while I'm on the PMC, I'm a committer on the C++ side, I stopped using the Java version a long time ago, and use the JDK for that exclusively now.)\r\n\r\nAs a maintainer of software that uses Maven itself, I certainly have \"opinions\" but I think you all addressed the main one, which is to turn this off by default.\r\n\r\nAll I can say is, please don't ever enable this by default. Ever. I say that as somebody that's worked with XML for 25 years and has been fixing security bugs in the use of it for about 20. Maybe that's why you asked me?",
      "The stigma surrounding xinclude is really quite infuriating. Is there a feature more maligned than this? The disparity between its notoriety and its simplicity is something almost poetic.\r\n\r\nThe fact is pom files already compose in at least 3 other ways - so if there's some \"security principle\" at play its already broken. It could be argued the whole purpose of pom files is to compose.\r\nWhether processing xinclude introduces risks has nothing to do with XML per se (a standard designed to be as open and dynamic as possible so no wonder there's so many horror stories) and everything to do with this implementation. You'd have to be half-mad not to use this one anyway.\r\n\r\nI'm also not sure that xincludes will really work in practice, but I've yet to see why not.",
      "> The stigma surrounding xinclude is really quite infuriating. Is there a feature more maligned than this?\r\n\r\nYes, entities, deservedly so. That was actually more my concern. I have no background on what this issue is about or why I was asked about it, but apologies for not clarifying which of the two I was expressing the opinion about. I know very little about XInclude as it's very poorly supported in general, it came too late, so I've generally ignored it.\r\n\r\nMy *opinion* is that it's not sensible for Maven to even consider including a one-off implementation of any XML standard addendum. But that's a decision for its maintainers.",
      "I remember thinking about XInclude at some point wrt Woodstox, but it seemed rather complicated to support for a streaming parser. So likely it'd instead need to be some processor on top of generic Stax (or SAX interface), in which case Woodstox as well as any other compliant implementation would work.\r\n\r\nI don't think I personally have time to work on such thing, although I can see how it'd be useful.\r\n\r\n",
      "This should become a separate Maven extension.",
      "An extension will be available at \r\n  https://github.com/apache/maven-xinclude-extension",
      "Cool, will check it out!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244000a14f302d393b5847",
    "number": 1204,
    "body": null,
    "head_branch": "simple-fix-stax-readers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Trivial fixes to the generated stax readers (#1204)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244001a14f302d393b5848",
    "number": 1203,
    "body": null,
    "head_branch": "simple-fix-codestyle-model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix codestyle in model code snippets (#1203)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244002a14f302d393b5849",
    "number": 1202,
    "body": null,
    "head_branch": "simple-fix-rename-argument",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename argument (#1202)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244003a14f302d393b584a",
    "number": 1201,
    "body": null,
    "head_branch": "concat",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "remove pointless string concatenation (#1201)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244004a14f302d393b584b",
    "number": 1200,
    "body": "Excluding a bunch of dependencies is quite verbose. A simple glob pattern would really help.",
    "head_branch": "MNG-7843-Allow-glob-patterns-in-dependency-exclusions",
    "is_a_fork": true,
    "comments": [
      "> In case, that wasn't clear the idea of globstars for dependency exclusion is useful. We just don't need to write more glob code to support this\r\n\r\n@elharo are you fine with the changes that leverage the JDK glob matchers ?"
    ],
    "commit_messages": [
      "[MNG-7843] Allow glob patterns in dependency exclusions (#1200)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244005a14f302d393b584c",
    "number": 1199,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7838\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/278\r\n\r\nI'm not sure yet it solves the original reported problem though.",
    "head_branch": "MNG-7838",
    "is_a_fork": true,
    "comments": [
      "A similar problem can easily be reproduced in maven master:\r\n```\r\n> cd maven-settings\r\n> mvn install\r\n```\r\n\r\n```\r\n[INFO] --- japicmp:0.17.2:cmp (default) @ maven-settings ---\r\n[WARNING] File 'maven-settings/target/classes/org/apache/maven/settings/WrapperList.class' is more recent than the packaged artifact for 'maven-settings', please run a full `mvn package` build\r\n[WARNING] File 'maven-settings/target/classes/org/apache/maven/settings/WrapperList.class' is more recent than the packaged artifact for 'maven-settings', please run a full `mvn package` build\r\nListening for transport dt_socket at address: 8000\r\n[INFO] Written file '/Users/gnodet/work/git/maven/maven-settings/target/japicmp/japicmp.diff'.\r\n[INFO] Written file '/Users/gnodet/work/git/maven/maven-settings/target/japicmp/japicmp.xml'.\r\n[INFO] Written file '/Users/gnodet/work/git/maven/maven-settings/target/japicmp/japicmp.html'.\r\n```\r\n\r\nIn this case, the `japicmp:cmp` goal is executed after the `jar` goal, but before the `install` goal.  And the artifacts are copied into the project local repo after the project is fully built. With this PR, the project's artifacts take precedence over the ones from the project local repo, so it actually fixes the above problem. ",
      "@rmannibucau it would be nice if you could build this branch and see if this reproduces your actual problem.  A small reproducer project would be even better !",
      "@gnodet does not look helping much (and didnt manage to get it functional), guess it is cause it does not take the highest \"lastModified\" value from [local-repo, m2/repo] - last one being the aether resolver indeed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244006a14f302d393b584d",
    "number": 1198,
    "body": null,
    "head_branch": "javadoc-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename Type#getName() to getId() and improve javadoc (#1198)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244007a14f302d393b584e",
    "number": 1197,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7836\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/276\r\n\r\n",
    "head_branch": "MNG-7836-Support-alternative-syntaxes-for-POMs",
    "is_a_fork": true,
    "comments": [
      "> I'll move this to a comment instead of a request changes, but I still think there are pretty serious issues between checked and runtime exceptions here, and those need to be resolved ASAP, and certainly before the 4.0 API is locked down and ships.\r\n\r\nI don't think there are issues at this point, as this was a concious design decision.  A change can be discussed, feel free to start a discussion and make your point."
    ],
    "commit_messages": [
      "[MNG-7836] Support alternative syntaxes for POMs (#1197)\n\nThe IT associated with this PR is using the Maven model to generate a hocon POM parser.  This requires the maven-api-model module to attach the POM as an artifact, and the maven.yml change so that the model is present in the local repository."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244008a14f302d393b584f",
    "number": 1196,
    "body": null,
    "head_branch": "locate-with-model-processor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use model processor when locating the root pom when using -f/--file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244009a14f302d393b5850",
    "number": 1195,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7834\n\nThe flatten-maven-plugin fails with a NPE:\n```\n[ERROR] Failed to execute goal org.codehaus.mojo:flatten-maven-plugin:1.5.0:flatten (default-cli) on project camel: failed to create a clean pom: Cannot invoke \"java.util.List.stream()\" \nbecause \"dependencies\" is null -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:flatten-maven-plugin:1.5.0:flatten (default-cli) on project camel: failed to create a clean \npom\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.doExecute2(MojoExecutor.java:341)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.doExecute(MojoExecutor.java:324)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:174)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.access$000(MojoExecutor.java:77)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor$1.run(MojoExecutor.java:162)\n\tat org.apache.maven.plugin.DefaultMojosExecutionStrategy.execute(DefaultMojosExecutionStrategy.java:39)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:159)\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:114)\n\tat io.takari.maven.builder.smart.SmartBuilderImpl.buildProject(SmartBuilderImpl.java:204)\n\tat io.takari.maven.builder.smart.SmartBuilderImpl$ProjectBuildTask.run(SmartBuilderImpl.java:78)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n\tat java.base/java.lang.Thread.run(Thread.java:1623)\nCaused by: org.apache.maven.plugin.MojoExecutionException: failed to create a clean pom\n\tat org.codehaus.mojo.flatten.FlattenMojo.createFlattenedPom(FlattenMojo.java:556)\n\tat org.codehaus.mojo.flatten.FlattenMojo.execute(FlattenMojo.java:406)\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:143)\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.doExecute2(MojoExecutor.java:336)\n\t... 15 common frames omitted\nCaused by: java.lang.NullPointerException: Cannot invoke \"java.util.List.stream()\" because \"dependencies\" is null\n\tat org.apache.maven.model.ModelBase.setDependencies(ModelBase.java:164)\n\tat org.codehaus.mojo.flatten.FlattenMojo.createCleanPom(FlattenMojo.java:686)\n\tat org.codehaus.mojo.flatten.FlattenMojo.createFlattenedPom(FlattenMojo.java:554)\n\t... 18 common frames omitted\n```\n",
    "head_branch": "MNG-7834-NPE-in-flatten-maven-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add two unit tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624400aa14f302d393b5851",
    "number": 1194,
    "body": "JIRA: https://issues.apache.org/jira/browse/MNG-6401\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/275\r\n\r\n\r\n\r\n",
    "head_branch": "MNG-6401-gnodet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6401] Support interpolation of the proxy port in settings.xml (#1194)\n\nCo-authored-by: Hervé Boutemy <hboutemy@apache.org>\r\nCo-authored-by: Michael Osipov <michaelo@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624400ba14f302d393b5852",
    "number": 1193,
    "body": "Noticed this was a unclear and out of date\r\n",
    "head_branch": "elharo-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improve API doc for ArtifactHandler (#1193)\n\n* Rewrite API doc \r\nNoticed this was a unclear and out of date"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624400ca14f302d393b5853",
    "number": 1192,
    "body": null,
    "head_branch": "small-changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use correct order in javadoc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624400da14f302d393b5854",
    "number": 1191,
    "body": "Update due to CVE-2023-2976.\r\n\r\nSee https://issues.apache.org/jira/browse/MNG-7828 for more context.\r\n\r\n\r\n--\r\n\r\nDoing on master too, following @cstamas instructions at https://github.com/apache/maven/pull/1189#issuecomment-1611048094",
    "head_branch": "bump-guava-master",
    "is_a_fork": true,
    "comments": [
      "R: @cstamas",
      "I'm curious are there plans to bump this in 3.8.X?",
      "Maven 3.8.x release will happen if someone comes up with some blocker bug, which i doubt. And I am curious, why not moving to 3.9.x line?",
      "I'm supporting some images built for Maven for some customers, and they still need 3.8.X, but we are requested to do a vulnerability patch for this.",
      "I looked into it, but it's not very straightforward like the bump of `<guavaVersion>` here. In `3.8.x`, Guava comes transitively from Guice.",
      "> I looked into it, but it's not very straightforward like the bump of `<guavaVersion>` here. In `3.8.x`, Guava comes transitively from Guice.\r\n\r\nThanks for this detail!",
      "Ah it seems like Guice has done the fix upstream: https://github.com/google/guice/commit/331e484c77dd121ffa21831c057f51735d967022",
      "Can a committer merge this PR? Thanks!",
      "Hi Maven team, I'm curious to see if Maven still considering doing patch for 3.8.X? We have customers that need to use 3.8.X since they have multiple repos with plugins that only work in 3.8.X.",
      "not at this moment. Can You share more details (maybe links to bug reports to plugins repos?) about what issues Your projects have with Maven 3.9. This is active maintenance line of Maven.",
      "They are internal customers that I can't share their private customized plugins source code. Should we consider 3.8.X is in general out of scope for vulnerability patches?",
      "Which Maven vulnerability you talk about specifically?",
      "> Which Maven vulnerability you talk about specifically?\r\n\r\nFor requesting vulnerability patch in 3.8.X, I think I'm asking [CVE-2023-2976](https://github.com/advisories/GHSA-7g45-4rm6-3mm3).\r\n\r\nBut I wanted to know if 3.8.X is generally considered being excluded from vulnerability patches?",
      "AFAIK Maven is not affected by CVE you refer to. \r\n\r\nAnd no, 3.8.x is not excluded from reported vulnerability patches.",
      "Please use ML https://maven.apache.org/mailing-lists.html for communication."
    ],
    "commit_messages": [
      "Bump guava from 30.1-jre to 32.0.1-jre (#1191)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624400ea14f302d393b5855",
    "number": 1190,
    "body": "Introduces new scope very similar to \"import\" but this one is \"import-plugins\" and as it's name says, imports pluginManagement.\r\n\r\nTo test it:\r\n* build this PR\r\n* use this POM https://gist.github.com/cstamas/8668205f68b0eaf42c8c34bba7d080a4\r\n* invoke `mvn help:effective-pom`\r\n\r\nEnjoy!",
    "head_branch": "poc-import-plugins-scope",
    "is_a_fork": true,
    "comments": [
      "@cstamas This is interesting and could almost be a migration path for tiles-maven-plugin - I wonder if having a new scope is good tho, rather than reusing the existing `import` scope, but included in the `<pluginManagement/>` section itself.\r\n\r\nI'll pull the PR in the morning and play with it.",
      "see https://issues.apache.org/jira/browse/MNG-5588\r\nlike @talios : why not simplly use `import` for `pluginManagement` like it is done for `dependencyManagement`?\r\nanswer from MNG-5588: there is no scope in pluginManagement to abuse\r\nin MNG-5588, I abused instead the `inherited` scope... (I can't find my implementation for now...) https://issues.apache.org/jira/browse/MNG-5588?focusedCommentId=17318534&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17318534",
      "Um, `inherited=import` does not look intuitive at all to me :) while scope `import-plugins` does, and tells at first sight what it does IMHO. Also, as existing \"import\", the new scope is special is same way: is valid only where other \"import\" is.",
      "putting a plugin-related scope on a dependencyManagement does not look intuitive either\r\n",
      "\"plugin-related scope\"? Plugins does not have scopes :smile: \r\n\r\nOTOH, if you look at original definition of \"import\" scope: https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#dependency-scope\r\n\r\n\"This scope is only supported on a dependency of type pom in the `<dependencyManagement>` section. It indicates the dependency is to be replaced with the effective list of dependencies in the specified POM's `<dependencyManagement>` section. Since they are replaced, dependencies with a scope of import do not actually participate in limiting the transitivity of a dependency.\"\r\n\r\nThe new \"import-plugins\" works exactly the same, except just replace `dependencyManagement` with `pluginManagement`. So, is even intuitive in this way as well, and devs will understand it easier:\r\n\r\n\"This scope is only supported on a dependency of type pom in the `<dependencyManagement>` section. It indicates the dependency is to be REMOVED and the effective list of plugins in the specified POM's `<pluginManagement>` section ADDED. Since they are REMOVED, dependencies with a scope of import do not actually participate in limiting the transitivity of a dependency.\"",
      "@talios @hboutemy also, what is the problem with adding new scope (that is special,in very same way as existing \"import\" scope is special)?",
      "And an idea from comment on MNG-5588: IF you are importing a POM, why not import _everything_? (And then need for new scope really goes away). Users can prepare POMs with parts they want (depMgt only, pluginMgt only, or both) and import.\r\n\r\n(but this carries potential of breaking builds, that do import some POM for it's depMgt but are not interested, or worse, would break them if pluginMgt is imported...)",
      "The issue with \"import\" magic is that very quickly you will also need the conflict resolution management until you import a single piece which is basically a parent.\r\n\r\nThink extensions are a nice way to configure plugins (bad for dependencies since this part must always load in an IDE without code execution but it is not the case for plugins) but for the case you want to inherit from something done outside we could just use xml references, which would enable to import a template and customize it inline instead of importing as such which often leads to issues.\r\n\r\nSo from my window we shouldn't enable much on dependencies but we can go quite far now we have the consumer model transformation pipeline by enabling to reference a plugin from an imported resource (can need an import block but not a big deal) and customize it inline, even with required placeholders if needed.\r\nI'd really love to see it done within an extension and using the xml transformer feature and without hacking the core yet to validate the usage since this part is quite hard to design right upfront.",
      "> And an idea from comment on [MNG-5588](https://issues.apache.org/jira/browse/MNG-5588): IF you are importing a POM, why not import everything? (And then need for new scope really goes away). Users can prepare POMs with parts they want (depMgt only, pluginMgt only, or both) and import.\r\n\r\nThat's essentially what tiles-maven-plugin does - only it does it by synthetically injected the tile-pom as a parent (and has its own transitive tiles, which I don't like - but users do).\r\n\r\nBecause it's pulling in everything - you get the plugin definition _and_ the executions, so you don't need to repeat all the plugins in the child pom (but that I could probably accept).\r\n",
      "> @talios @hboutemy also, what is the problem with adding new scope (that is special,in very same way as existing \"import\" scope is special)?\r\n\r\nNo real problem - more questioning the naming (which may be too early in the change to quibble over naming), tho reading the reasoning of 'plugins don't have scope' that means this is possibly more a trade-off due to current limitations of the POM format.\r\n\r\n@rmannibucau's comment:\r\n\r\n> Think extensions are a nice way to configure plugins\r\n\r\nmakes me think back to the current tiles implementation which operates as an extension, hooking into the model builder - but with the immutable model in M4 doesn't work - an new extension point for model manipulation would be nice.\r\n\r\nOne nice thing with tiles, by pulling as parents - we also pull in any `<properties/> defined, which can also then be overridden/customised.",
      "Well, if v4 does not allow tiles to be implemented it means the plugin API is not yet sufficient and can't be used so we must fix it, can be nice to work on that, intent is to copy instead of mutating, not breaking use cases.",
      "> [...] tho reading the reasoning of 'plugins don't have scope' that means this is possibly more a trade-off due to current limitations of the POM format.\r\n\r\nPlugins does not and will not have \"scope\". Why would a plugin need \"scope\"? IMHO this is not a deficiency but was a deliberate design goal.",
      "As we all know, the \"import\" scope is not really a scope, it is a hack. And we do already have that hack in place, and it works. So, am really unsure why we either:\r\n* continue on that trail of hacks and implement other (very similar) hacks, or,\r\n* get rid of the original hack altogether (due all the issues it brings in)\r\n\r\nSo, why are we sitting comfy and not doing anything about it? This PR does 1st bullet, but for sure we can get a stab on 2nd bullet as well, as we decide..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624400fa14f302d393b5856",
    "number": 1189,
    "body": "Update due to CVE-2023-2976.\r\n\r\nSee https://issues.apache.org/jira/browse/MNG-7828 for more context.\r\n\r\n",
    "head_branch": "bump-guava-3.9.x",
    "is_a_fork": true,
    "comments": [
      "Similar change will be needed for master branch as well.",
      "Thanks! https://github.com/apache/maven/pull/1191 for master",
      "Can a committer merge this PR? Thanks!",
      "Any approximation when will 3.9.4 arrive with this patch? CVE is really holding.",
      "Current plan: \r\n* release resolver 1.9.14 https://issues.apache.org/jira/issues/?jql=project%20%3D%20MRESOLVER%20AND%20fixVersion%20%3D%201.9.14\r\n* after that release Maven 3.9.4 https://issues.apache.org/jira/issues/?jql=project%20%3D%20MNG%20AND%20fixVersion%20%3D%203.9.4\r\n\r\nASF vote process is 72h, so this above is 72+72h and will start my next (European) morning most probably"
    ],
    "commit_messages": [
      "Bump guava from 31.1-jre to 32.0.1-jre (#1189)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244010a14f302d393b5857",
    "number": 1188,
    "body": "Experiment; resolve plugins with runtime generated depMgt\r\nThis is a quickndirty POC that shows it works, but the real\r\nthing would be to generate this from something like extension.xml\r\nis.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7097\r\n",
    "head_branch": "experiment-plugin-depMgt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244011a14f302d393b5858",
    "number": 1187,
    "body": "\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [X] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7827",
    "is_a_fork": false,
    "comments": [
      "@rmannibucau not sure what the point of this PR is.  I would not force 3.x plugins to use the maven 4 api, I think it's better to keep it for 4.x plugins.",
      "@gnodet there are two goals:\r\n\r\n1. Drop the irrelevant documentation we never agreed upon to use SLF4J (api) for plugins\r\n2. Ensure the default is the actual maven logging system and not stdout/stderr directly for other cases if it is present\r\n\r\nv4 API is more a way to do the bridge easily and with less internal efforts (since it is hidden anyway)",
      "> 2. Ensure the default is the actual maven logging system and not stdout/stderr directly for other cases if it is present\r\n\r\nI don't understand the actual use case.  All mojos called by maven are [injected with a proper log](https://github.com/apache/maven/blob/e08c95a6735a82c7abc25e2dc67ea4773ed9d05d/maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultMavenPluginManager.java#L557-L560) already.  The `SystemStreamLog` is really a fallback.  In which case would this new code actually be used ?\r\n\r\nI'd rather merge https://github.com/apache/maven/pull/793/ at this point",
      "@gnodet good for me too, I wondered about this point too and if true we should delete SystemStreamLog and just fail instead probably. If useful it means we must forward the fallback to the actual expected logging system behind `Log` and now it is v4 mecanism thanks new `Log` API, this was the intent behind this PR but happy to just drop it too cause I share your reasoning.",
      "> 1. Drop the irrelevant documentation we never agreed upon to use SLF4J (api) for plugins\r\n\r\nThen your memory is lossy :smile: \r\nSee https://lists.apache.org/thread/bh9vr9fwt2cqf3ltg88jm1fh5y0d57b0\r\n\r\nPlease, stop with this \"change the logging...\" madness. ",
      "@cstamas this is only one of the 4-5 explaining why we must not leak our default impl and where we didnt find an agreement in terms of api leak yes.\r\nNote we dont want to change the logging, just keep the one we had and fix the bug introduced in the javadoc which doesnt reflects discussion outcomes.\r\nTechnically, there are multiple cons leaking slf4j but community wise a vote wouldnt pass but in force so both are bad.\r\nLast is that maven didnt migrate its api to slf4j in plugin - never, we miss several steps to say it is done so current absusive comment is even wrong - so let's fix it, will impact nobody as of today and not mislead mojo dev.",
      "Closing as duplicate of #793 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244012a14f302d393b5859",
    "number": 1186,
    "body": "As 3.9.3 lost this capability as it goes only for POM (direct dependencies) while transitive also does tell a lot.\r\n\r\nExample output with this PR:\r\n```\r\n[WARNING]\r\n[WARNING] Plugin [INTERNAL, EXTERNAL] validation issues were detected in following plugin(s)\r\n[WARNING]\r\n[WARNING]  * org.jacoco:jacoco-maven-plugin:0.8.10\r\n[WARNING]   Plugin EXTERNAL issue(s):\r\n[WARNING]    * Transitive dependencies contain Maven 2.x artifacts, which will be not supported in Maven 4.x\r\n[WARNING]    * Transitive dependencies mixes multiple Maven versions: [2.0.6, 2.0.2]\r\n[WARNING]    * Transitive dependencies contain plexus-container-default, which is EOL\r\n[WARNING]\r\n[WARNING]  * org.apache.maven.plugins:maven-site-plugin:3.12.1\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * com.soebes.smpp:smpp:6.0.4-SNAPSHOT (pom.xml) @ line 580\r\n[WARNING]   Plugin EXTERNAL issue(s):\r\n[WARNING]    * Direct dependencies contain Maven 2.x compatibility layer, which will be not supported in Maven 4.x\r\n[WARNING]    * Transitive dependencies of Maven artifacts are not in `provided` scope. If the plugin already declares them in `provided` scope, update the maven-plugin-plugin to latest version. Artifacts found with wrong scope: [org.apache.maven:maven-plugin-api:3.2.5, org.apache.maven:maven-model:3.2.5, org.apache.maven:maven-core:3.2.5, org.apache.maven:maven-settings:3.2.5, org.apache.maven:maven-model-builder:3.2.5, org.apache.maven:maven-repository-metadata:3.2.5, org.apache.maven:maven-aether-provider:3.2.5, org.apache.maven:maven-settings-builder:3.2.5, org.apache.maven:maven-artifact:3.2.5]\r\n[WARNING]    * Transitive dependencies contain plexus-container-default, which is EOL\r\n[WARNING]   Mojo EXTERNAL issue(s):\r\n[WARNING]    * Mojo site:attach-descriptor (org.apache.maven.plugins.site.descriptor.SiteDescriptorAttachMojo)\r\n[WARNING]      - Parameter 'localRepository' uses deprecated parameter expression '${localRepository}': ArtifactRepository type is deprecated and its use in Mojos should be avoided.\r\n[WARNING]\r\n[WARNING]\r\n[WARNING] Fix reported issues by adjusting plugin configuration or by upgrading above listed plugins. If no upgrade available, please notify plugin maintainers about reported issues.\r\n[WARNING] For more or less details, use 'maven.plugin.validation' property with one of the values (case insensitive): [NONE, INLINE, SUMMARY, BRIEF, VERBOSE]\r\n[WARNING]\r\n```\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7826",
    "head_branch": "maven-3.9.x-MNG-7826",
    "is_a_fork": true,
    "comments": [
      "This is not going in as it is, details on JIRA issue. Making this into DRAFT."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244013a14f302d393b585a",
    "number": 1185,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7830\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/274\r\n\r\nSwitch the underlying plexus-xml Xpp3 parser to the STAX api / woodstox parser.\r\nWoodstox Stax parser is 20% faster than the xpp3 parser.\r\n\r\nThe PR also moves out of modello generated code for the repository metadata and core extensions xml models.\r\n\r\nSome pom are not valid xml files, for example:\r\n```\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/org/eclipse/org.eclipse.osgi/3.8.0.v20120529-1548/org.eclipse.osgi-3.8.0.v20120529-1548.pom (Undeclared namespace prefix \"xsi\" (for attribute \"schemaLocation\")\r\n at [row,col,system-id]: [1,108,\"/Users/gnodet/.m2/repository/org/eclipse/org.eclipse.osgi/3.8.0.v20120529-1548/org.eclipse.osgi-3.8.0.v20120529-1548.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/org/eclipse/equinox/org.eclipse.equinox.coordinator/1.1.0.v20120522-1841/org.eclipse.equinox.coordinator-1.1.0.v20120522-1841.pom (Undeclared namespace prefix \"xsi\" (for attribute \"schemaLocation\")\r\n at [row,col,system-id]: [1,108,\"/Users/gnodet/.m2/repository/org/eclipse/equinox/org.eclipse.equinox.coordinator/1.1.0.v20120522-1841/org.eclipse.equinox.coordinator-1.1.0.v20120522-1841.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/org/eclipse/equinox/org.eclipse.equinox.region/1.2.101.v20150831-1342/org.eclipse.equinox.region-1.2.101.v20150831-1342.pom (Undeclared namespace prefix \"xsi\" (for attribute \"schemaLocation\")\r\n at [row,col,system-id]: [1,108,\"/Users/gnodet/.m2/repository/org/eclipse/equinox/org.eclipse.equinox.region/1.2.101.v20150831-1342/org.eclipse.equinox.region-1.2.101.v20150831-1342.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/org/apache/hadoop/hadoop-project/3.2.2/hadoop-project-3.2.2.pom (Unexpected character '-' (code 45) (expected a name start character)\r\n at [row,col,system-id]: [1942,12,\"/Users/gnodet/.m2/repository/org/apache/hadoop/hadoop-project/3.2.2/hadoop-project-3.2.2.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/activation/jakarta.activation/2.0.0/jakarta.activation-2.0.0.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [76,16,\"/Users/gnodet/.m2/repository/com/sun/activation/jakarta.activation/2.0.0/jakarta.activation-2.0.0.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/activation/jakarta.activation/2.0.0-RC3/jakarta.activation-2.0.0-RC3.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [76,16,\"/Users/gnodet/.m2/repository/com/sun/activation/jakarta.activation/2.0.0-RC3/jakarta.activation-2.0.0-RC3.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0-M5/jaxb-parent-3.0.0-M5.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [436,45,\"/Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0-M5/jaxb-parent-3.0.0-M5.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0-M3/jaxb-parent-3.0.0-M3.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [434,45,\"/Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0-M3/jaxb-parent-3.0.0-M3.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0-M4/jaxb-parent-3.0.0-M4.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [434,45,\"/Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0-M4/jaxb-parent-3.0.0-M4.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0/jaxb-parent-3.0.0.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [436,45,\"/Users/gnodet/.m2/repository/com/sun/xml/bind/mvn/jaxb-parent/3.0.0/jaxb-parent-3.0.0.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/istack/istack-commons/4.0.0-M2/istack-commons-4.0.0-M2.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [418,37,\"/Users/gnodet/.m2/repository/com/sun/istack/istack-commons/4.0.0-M2/istack-commons-4.0.0-M2.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/istack/istack-commons/4.0.0-M3/istack-commons-4.0.0-M3.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [426,45,\"/Users/gnodet/.m2/repository/com/sun/istack/istack-commons/4.0.0-M3/istack-commons-4.0.0-M3.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/istack/istack-commons/3.0.10/istack-commons-3.0.10.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [408,37,\"/Users/gnodet/.m2/repository/com/sun/istack/istack-commons/3.0.10/istack-commons-3.0.10.pom\"])\r\nUnable to parse using stax: /Users/gnodet/.m2/repository/com/sun/istack/istack-commons/3.0.11/istack-commons-3.0.11.pom (Undeclared namespace prefix \"Xlint\"\r\n at [row,col,system-id]: [408,37,\"/Users/gnodet/.m2/repository/com/sun/istack/istack-commons/3.0.11/istack-commons-3.0.11.pom\"])\r\n```\r\nThe `StaxTest` unit test (disabled by default) reads all POMs in the local repository.\r\nWe could disable namespace support when reading the POMs, but I'm not sure that's a good idea.\r\n\r\n",
    "head_branch": "xml-experiments",
    "is_a_fork": true,
    "comments": [
      "> Wow. This looks great. definitely a big leap forward.\r\n> \r\n> I might have missed it, but I didn't find any explicit use of the Stax2 API or Woodstox classes. Could this be done with JDK classes only? classes?\r\n\r\nStax2 / woodstox is actually needed for the consumer POM transformation: the stax api is not sufficient and does not allow full round tripping with xml as spaces in prolog are not reported.  Even aalto-xml does not support it.  The effect is that when using another implementation, the line breaks before the first element of the POM are removed, so the generated POM will usually contains the xml declaration, the license and the `<project>` element on a single line.  Most importantly, this breaks tests :-)\r\n\r\nApart from this use case, changing the implementation leads to various small issues as they do sometimes slightly differ in the specific events they generate.  Writing namespaces is particularly challenging, though there's certainly a way to solve those discrepancies, but again, it breaks a few ITs which are particularly sensitive to the exact XML generated.\r\n\r\nAlso, woodstox is 50% faster than the JDK implementation, so I definitely think we should use it.",
      "Depending on spaces in the prolog is a bug. Tests should be comparing XML to XML, not XML to strings. The latter is extremely brittle and can cause tests to break even in minor upgrades of a library. Alternately, we can canonicalize documents before comparing them.  If you file issues on specific tests that do that, I can take a look. ",
      "> Depending on spaces in the prolog is a bug. Tests should be comparing XML to XML, not XML to strings. The latter is extremely brittle and can cause tests to break even in minor upgrades of a library. Alternately, we can canonicalize documents before comparing them. If you file issues on specific tests that do that, I can take a look.\r\n\r\nThat's not really the problem.  I could hack the tests.  However, the result xml is the one uploaded on central, and that one is ugly (because of the missing line breaks).  So I think this is important to keep.",
      "I am sure there are ways to fix that. ",
      "Might or might not be related:\r\n\r\n\r\n[INFO] \r\nError:  Errors: \r\nError:    DefaultMavenProjectBuilderTest.rereadPom_mng7063:334 � FileSystem C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit5723635972946138167\\pom.xml: The process cannot access the file because it is being used by another process.\r\n\r\nError:    ProjectBuilderTest.testReadModifiedPoms(Path) � IO Failed to delete temp directory C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\junit3720659451607426598. The following paths could not be deleted (see suppressed exceptions for details): , child\r\n[INFO] \r\nError:  Tests run: 428, Failures: 0, Errors: 2, Skipped: 1\r\n[INFO] ",
      "I plan to provide additional support for xml namespaces, but I think a follow-up PR may be better.  I'll stop on that one."
    ],
    "commit_messages": [
      "[MNG-7830] Switch from plexus-xml to stax / woodstox (#1185)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244014a14f302d393b585b",
    "number": 1184,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7824\n\n",
    "head_branch": "upgrade-plexus-xml-4.0.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7824] Bump plexus-xml from 4.0.0 to 4.0.1 (#1184)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244015a14f302d393b585c",
    "number": 1183,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7228\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/273",
    "head_branch": "fix-original-model",
    "is_a_fork": true,
    "comments": [
      "Confirmed: MIMA build now behaves, unlike with 4-alpha-6 ✅ "
    ],
    "commit_messages": [
      "[MNG-7228] MavenProject.getOriginalModel returns interpolated parts (#1183)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244016a14f302d393b585d",
    "number": 1182,
    "body": "Changes:\r\n* always parse it at session start\r\n* hence, will WARN if needed there as well, and will warn once\r\n* do not re-parse and possibly warn always, reuse parsed enum\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7823",
    "head_branch": "maven-3.9.x-MNG-7823",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7823] Improve plugin validation level parsing (#1182)\n\nChanges:\r\n* always parse it at session start\r\n* hence, will WARN if needed there as well, and will warn once\r\n* do not re-parse and possibly warn always, reuse parsed enum\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7823"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244017a14f302d393b585e",
    "number": 1181,
    "body": "---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800",
    "head_branch": "MNG-7800",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7800] Update resolver to 1.9.13 (#1181)\n\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244018a14f302d393b585f",
    "number": 1180,
    "body": "---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800\r\n",
    "head_branch": "maven-3.9.x-MNG-7800",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7800] Update to resolver 1.9.13 (#1180)\n\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244019a14f302d393b5860",
    "number": 1179,
    "body": "- Prefix the key name for the TransformerContext\r\n- Remove references to deprecated ReaderFactory in non generated code\r\n",
    "head_branch": "remove-refs-to-deprecated-readerfactory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624401aa14f302d393b5861",
    "number": 1178,
    "body": "Fixes https://issues.apache.org/jira/browse/MNG-7818\r\n\r\nRemoved exclusion of hamcrest from JUnit 4\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Nope, this result in \"mixed\" dependencies: excerpt from maven-core dep tree:\r\n```\r\n...\r\n[INFO] +- org.hamcrest:hamcrest:jar:2.2:test\r\n[INFO] \\- junit:junit:jar:4.13.2:test\r\n[INFO]    \\- org.hamcrest:hamcrest-core:jar:1.3:test\r\n```",
      "Oh I can fix that :)",
      "Test failures are the \"locking\" issues, not sure how to clean maven repo in GH actions :(",
      "> Test failures are the \"locking\" issues, not sure how to clean maven repo in GH actions :(\r\n\r\nYou mean the IT MNG-7819 ? As that will cleared up once Resolver 1.9.13 released and updated in Maven.\r\nFrankly, I \"merged too early\" the IT (as vote is ongoing for one more day), but I did not expect any other 3.9.x change as according to JIRA is \"done\" (resolver update pending only), sorry for messing up.",
      "From test-arq-suite branch JUnit4 w/ removed workaround (locally built maven-3.9.x this PR + master shrinkwap-resolver + test-arg-suite, all updated with corresponding snapshots):\r\n```\r\n[DEBUG]    junit:junit:jar:4.13.2:test\r\n[DEBUG]       org.hamcrest:hamcrest-core:jar:2.2:test (scope managed from compile) (version managed from 1.3)\r\n[DEBUG]          org.hamcrest:hamcrest:jar:2.2:test (scope managed from compile) (version managed from 2.2)\r\n```\r\n\r\nSo, what happens, is that by placing hamcrest BEFORE junit in depMgt, the hamcrest will \"overrule\" the 1.3 from junit, and 2.2 (empty jar) depends on hamcrest:jar 2.2, so all good.",
      "Not sure if this is related but I see some warnigns in this area:\r\n\r\n```\r\n[INFO] <<< maven-dependency-plugin:3.6.0:analyze (default-cli) < test-compile @ maven-api-meta <<<\r\n[INFO] \r\n[INFO] \r\n[INFO] --- maven-dependency-plugin:3.6.0:analyze (default-cli) @ maven-api-meta ---\r\n[WARNING] Unused declared dependencies found:\r\n[WARNING]    org.junit.jupiter:junit-jupiter-engine:jar:5.9.1:test\r\n[WARNING]    org.hamcrest:hamcrest-core:jar:2.2:test\r\n[INFO] \r\n```"
    ],
    "commit_messages": [
      "[MNG-7818] Removed exclusion of hamcrest from JUnit 4 (#1178)\n\nFix hamcrest versiob to 2.2 but do not remove transitive dep for downstream consumers.\r\n\r\n----\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7818"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624401ba14f302d393b5862",
    "number": 1177,
    "body": "Resolver 1.9.12 used.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800\r\n",
    "head_branch": "MNG-7800",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7800] Update resolver to 1.9.12 (#1177)\n\nResolver 1.9.12\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624401ba14f302d393b5863",
    "number": 1176,
    "body": "Resolver 1.9.12 used.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800\r\n",
    "head_branch": "maven-3.9.x-MNG-7800",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7800] Update resolver to 1.9.12 (#1176)\n\nResolver 1.9.12\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624401ca14f302d393b5864",
    "number": 1175,
    "body": "some parts are obsolete, undocumented or even simply wrong because misunderstood\r\n",
    "head_branch": "logging-documentation",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update logging documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624401ea14f302d393b5865",
    "number": 1174,
    "body": "some parts are obsolete, undocumented or even simply wrong because misunderstood",
    "head_branch": "logging-documentation",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624401fa14f302d393b5866",
    "number": 1173,
    "body": "equivalent to #1147, but:\r\n- for Maven 3.9.x\r\n- as XML attribute `<execution priority=\"5\">`\r\n- default priority from lifecycle weight *1000 to let space to insert executions\r\nsample use project: https://github.com/hboutemy/MNG-7804-plugin-execution-priority",
    "head_branch": "MNG-7804-plugin-execution-order-3.9",
    "is_a_fork": false,
    "comments": [
      "Closing this one as this has been integrated in 4.0.0-alpha-x.  Reopen if needed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244020a14f302d393b5867",
    "number": 1172,
    "body": "Update parent to 40. Also align plugin requirements with those from parent.\r\n\r\nThis lowers plugin validation \"external\" warnings from 12 to 3 (site, plexus-component-metadata and rat).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7816",
    "head_branch": "maven-3.9.x-fix-parent-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7816] Update parent to 40, align maven requirements with those from plugins (#1172)\n\nUpdate parent to 40. Also align plugin requirements with those from parent.\r\n\r\nThis lowers plugin validation \"external\" warnings from 12 to 3 (site, plexus-component-metadata and rat).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7816"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244021a14f302d393b5868",
    "number": 1171,
    "body": "Resolver 1.9.11 release notes:\r\nhttps://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12320628&version=12353188\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800\r\n\r\n",
    "head_branch": "MNG-7800",
    "is_a_fork": true,
    "comments": [
      "Restarted all CI jobs as this was too early"
    ],
    "commit_messages": [
      "[MNG-7800] Bump maven-resolver from 1.9.10 to 1.9.11 (#1171)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244022a14f302d393b5869",
    "number": 1170,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7816\n\n",
    "head_branch": "parent-40",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7816] Bump parent pom from 39 to 40 (#1170)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244022a14f302d393b586a",
    "number": 1169,
    "body": "cherry-pick e6256065883f6c9c635fadcc393424b86290a8b0\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7811-master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7811] Plugins verification - reporting improvements\n\ncherry-pick e6256065883f6c9c635fadcc393424b86290a8b0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244023a14f302d393b586b",
    "number": 1168,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7632\n\n",
    "head_branch": "MNG-7632",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7632] Regression: combine.children breaks when combining executions (#1168)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244025a14f302d393b586c",
    "number": 1167,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7811",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7811] Plugins verification - reporting improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244025a14f302d393b586d",
    "number": 1166,
    "body": "Those not in parent",
    "head_branch": "update-build-plugins-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update build plugind (#1166)\n\nChanges:\r\n* buildnumber 1.4 -> 3.2.0\r\n* buildhelper 1.12 -> 3.4.0\r\n* checksum ? -> 1.11\r\n* japicmp 0.16 -> 0.17.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244026a14f302d393b586e",
    "number": 1165,
    "body": "Changes:\r\n* buildnumber 1.4 -> 3.2.0\r\n* buildhelper 1.12 -> 3.4.0\r\n* checksum ? -> 1.11",
    "head_branch": "update-build-plugins",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[3.9.x] Update some ancient build plugins (#1165)\n\nChanges:\r\n* buildnumber 1.4 -> 3.2.0\r\n* buildhelper 1.12 -> 3.4.0\r\n* checksum ? -> 1.11"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244027a14f302d393b586f",
    "number": 1164,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7814\r\n\r\nThe idea is to improve the settings xml parser, reusing the mechanism used to read models and keep track of locations even across merges.  We just reuse the existing velocity templates\r\n\r\nThis opens the ability to do things like `mvn help:effective-settings -Dverbose` which is currently not supported.",
    "head_branch": "MNG-7814-use-location-tracking-for-settings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7814] Use location tracking for settings (#1164)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244028a14f302d393b5870",
    "number": 1163,
    "body": "Changes:\r\n* war 3.3.2 -> 3.4.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790\r\n",
    "head_branch": "MNG-7790-take2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7790] Update lifecycle plugins, take 2 (#1163)\n\nChanges:\r\n* war 3.3.3 -> 3.4.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244029a14f302d393b5871",
    "number": 1162,
    "body": "Changes:\r\n* war 3.3.2 -> 3.4.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790",
    "head_branch": "maven-3.9.x-MNG-7790-take2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MNG-7790] Update lifecycle plugins, take 2 (#1162)\n\nChanges:\r\n* war 3.3.3 -> 3.4.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624402aa14f302d393b5872",
    "number": 1161,
    "body": "Bumps [guava](https://github.com/google/guava) from 30.1-jre to 32.0.0-jre.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/guava/releases\">guava's releases</a>.</em></p>\n<blockquote>\n<h2>32.0.0</h2>\n<h3>Maven</h3>\n<pre lang=\"xml\"><code>&lt;dependency&gt;\n  &lt;groupId&gt;com.google.guava&lt;/groupId&gt;\n  &lt;artifactId&gt;guava&lt;/artifactId&gt;\n  &lt;version&gt;32.0.0-jre&lt;/version&gt;\n  &lt;!-- or, for Android: --&gt;\n  &lt;version&gt;32.0.0-android&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h3>Jar files</h3>\n<ul>\n<li><a href=\"https://repo1.maven.org/maven2/com/google/guava/guava/32.0.0-jre/guava-32.0.0-jre.jar\">32.0.0-jre.jar</a></li>\n<li><a href=\"https://repo1.maven.org/maven2/com/google/guava/guava/32.0.0-android/guava-32.0.0-android.jar\">32.0.0-android.jar</a></li>\n</ul>\n<p>Guava requires <a href=\"https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-about-guavas-own-dependencies\">one runtime dependency</a>, which you can download here:</p>\n<ul>\n<li><a href=\"https://repo1.maven.org/maven2/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar\">failureaccess-1.0.1.jar</a></li>\n</ul>\n<h3>Javadoc</h3>\n<ul>\n<li><a href=\"http://guava.dev/releases/32.0.0-jre/api/docs/\">32.0.0-jre</a></li>\n<li><a href=\"http://guava.dev/releases/32.0.0-android/api/docs/\">32.0.0-android</a></li>\n</ul>\n<h3>JDiff</h3>\n<ul>\n<li><a href=\"http://guava.dev/releases/32.0.0-jre/api/diffs/\">32.0.0-jre vs. 31.1-jre</a></li>\n<li><a href=\"http://guava.dev/releases/32.0.0-android/api/diffs/\">32.0.0-android vs. 31.1-android</a></li>\n<li><a href=\"http://guava.dev/releases/32.0.0-android/api/androiddiffs/\">32.0.0-android vs. 32.0.0-jre</a></li>\n</ul>\n<h3>Changelog</h3>\n<h4>Security fixes</h4>\n<ul>\n<li>Reimplemented <code>Files.createTempDir</code> and <code>FileBackedOutputStream</code> to further address CVE-2020-8908 (<a href=\"https://redirect.github.com/google/guava/issues/4011\">#4011</a>) and CVE-2023-2976 (<a href=\"https://redirect.github.com/google/guava/issues/2575\">#2575</a>). (feb83a1c8f)</li>\n</ul>\n<p>While CVE-2020-8908 was officially closed when we deprecated <code>Files.createTempDir</code> in <a href=\"https://github.com/google/guava/releases/tag/v30.0\">Guava 30.0</a>, we've heard from users that even recent versions of Guava have been listed as vulnerable in <em>other</em> databases of security vulnerabilities. In response, we've reimplemented the method (and the very rarely used <code>FileBackedOutputStream</code> class, which had a similar issue) to eliminate the insecure behavior entirely. This change could technically affect users in a number of different ways (discussed under &quot;Incompatible changes&quot; below), but in practice, the only problem users are likely to encounter is with Windows. If you are using those APIs under Windows, you should skip 32.0.0 and go straight to <a href=\"https://github.com/google/guava/releases/tag/v32.0.1\">32.0.1</a> which fixes the problem. (Unfortunately, we didn't think of the Windows problem until after the release. And while we <a href=\"https://github.com/google/guava#important-warnings\">warn that <code>common.io</code> in particular may not work under Windows</a>, we didn't intend to regress support.) Sorry for the trouble.</p>\n<h4>Incompatible changes</h4>\n<p>Although this release bumps Guava's major version number, it makes <strong>no binary-incompatible changes to the <code>guava</code> artifact</strong>.</p>\n<p>One change could cause issues for Widows users, and a few other changes could cause issues for users in more usual situations:</p>\n<ul>\n<li><strong>The new implementations of <code>Files.createTempDir</code> and <code>FileBackedOutputStream</code> <a href=\"https://redirect.github.com/google/guava/issues/6535\">throw an exception under Windows</a>.</strong> This is fixed in <a href=\"https://github.com/google/guava/releases/tag/v32.0.1\">32.0.1</a>. Sorry for the trouble.</li>\n<li>This release makes a binary-incompatible change to a <code>@Beta</code> API in the <strong>separate artifact</strong> <code>guava-testlib</code>. Specifically, we changed the return type of <code>TestingExecutors.sameThreadScheduledExecutor</code> to <code>ListeningScheduledExecutorService</code>. The old return type was a package-private class, which caused the Kotlin compiler to produce warnings. (dafaa3e435)</li>\n<li>This release <em>adds</em> two methods to the Android flavor of Guava: <code>Invokable.getAnnotatedReturnType()</code> and <code>Parameter.getAnnotatedType()</code>. Those methods do not work under an Android VM; we added them only to help our tests of the Android flavor (since we also run those tests under a JRE). Android VMs tolerate such methods as long as the app does not call them or perform reflection on them, and builds tolerate them because of our new Proguard configurations (discussed below). Thus, we expect no impact to most users. However, we could imagine build problems for users who have set up their own build system for the Android flavor of Guava. Please report any problems so that we can judge how safely we might be able to add other methods to the Android flavor in the future, such as APIs that use Java 8 classes like <code>Stream</code>. (b30e73cfa81ad15c1023c17cfd083255a3df0105)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/google/guava/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.google.guava:guava&package-manager=maven&previous-version=30.1-jre&new-version=32.0.0-jre)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/maven/network/alerts).\n\n</details>",
    "head_branch": "dependabot/maven/com.google.guava-guava-32.0.0-jre",
    "is_a_fork": false,
    "comments": [
      "@dependabot rebase",
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624402ba14f302d393b5873",
    "number": 1160,
    "body": "The overal goal of this PR is to propose a way to make room for the POM model to evolve in the future.  The idea is not to discuss particular evolutions of the model, but only to provide guidelines and provide the needed features for the evolution to happen.  This proposal is based on various previous discussions, mainly the [Build vs Consumer POM](https://cwiki.apache.org/confluence/display/MAVEN/Build+vs+Consumer+POM) discussion.\r\n\r\n**The main driver is to allow maven to evolve and the main constraint is to not break the ecosystem, especially Maven Central.**\r\n\r\nCurrently, Maven 4 provides a consumer POM which is uploaded by default instead of the exact POM located on the file system.  The [differences are minor](https://github.com/apache/maven/blob/master/maven-model-transform/src/main/java/org/apache/maven/model/transform/RawToConsumerPomXMLFilterFactory.java#L43-L48): remove the `<modules>` element, the `<parent>/<relativePath>` element, and the `root` attribute which has been recently added.  The discussion that happened years ago was not completely settled with respect to what exactly should be removed.\r\n\r\nMy proposal is thus the following: **prune the consumer POM from all build related elements and upload it instead of the current pom**.  That's what the build/consumer features already does, so it's just about removing more stuff and flattening the hierarchy.  This will help consumers and will effectively speed up the process on the long term (as the process of computing the whole hierarchy, interpolating, etc... can be quite time consuming).  In order to keep the whole information available, I thus propose to **always upload the build POM (well, the current consumer POM) as the build pom with a `build` classifier**, let's call it _normalized build pom_.  This is **for non-_pom_-packaged artifacts**.\r\n\r\n**For _pom_-packaged artifacts**, there are two different use cases: either the POM is used as a parent or imported as a BOM.  Both use cases are different, and I think the BOM use case is on the consumer side, rather than the build side.  So I propose to add a new `bom` packaging that could be used instead of using `pom`+`import` scope.   The `bom` packaging is translated back to `pom` in the consumer POM before being uploaded for compatibility with Maven 3.x.  The point is to make the difference at build time between a BOM and a POM, so that the BOM can be uploaded with a consumer POM, while the POM used as a parent cannot as it cannot afford to loose any information.\r\nSo two sub cases: **BOM will be uploaded like non-_pom_-packaged artifacts above (i.e. with flattened consumer POM + build POM).  Parent POMs need to be uploaded with the build POM only.**\r\n\r\nHere comes the question about opening the POM model for change.   We're mostly talking about the build side of things. The real problem mainly affects _pom_-packaged artifacts used as parents, as those need to be uploaded, while non-_pom_-packaged artifacts will have their main pom translated into a consumer POM at installation/deployment time.  **So this proposal would allow the use of a newer POM (i.e. 4.x or 5.x, that's irrelevant) in place of the main pom in central for _pom_-packaged artifacts used as parents.**  That means that if a project inherit from a newer POM, it will have to be built with a newer maven version, as older maven versions will reject any unknown attribute or element.  The namespace change could also break some tools.  This really only affect _pom_-packaged artifacts, but in order to further mitigate the disruption, I propose that by default **the build-pom is downgraded to the lowest compatible namespace at install/deploy time** : i.e. if you write a pom v5, but do not use any new feature, maven should change the namespace version down to 4.0.0.  This could be turned off by using a new attribute on the POM.\r\n\r\nRelated to the actual POM5 content and syntax, it has been envisioned to use attributes instead of elements.  This does not really affect the model per se, and that's mostly about syntax.  The model will obviously have to evolve to support new additions, however the syntax can be kept by default on the build side.  This can be easily implemented using ideas borrowed from the polyglot extension. This would provide support for an enhanced xml syntax and for an alternative yaml/hocon/json/whatever syntax (see the following [poc](https://github.com/gnodet/maven-hocon-extension)).  For simplicity, I think we should keep the current xml syntax the way it is and use a different schema version. The alternative xml syntax could use a different namespace.\r\n\r\nThis PR currently provides:\r\n* new BOM packaging to clearly distinguish _pom_-packaged modules used as parents or BOMs\r\n* flattened consumer pom installed/uploaded as the main pom for non-_pom_-packaged artifacts (so including BOMs) + normalized build pom\r\n* normalized build pom installed/uploaded for _pom_-packaged artifacts\r\n* translation of bom packaging to a pom package at installation/deploy time\r\n* support writing a pom with a different namespace than 4.0.0\r\n* polyglot SPI to allow plugin in alternative syntax\r\n* identification of minimum model version in use for a given pom (it may be generated from the _mdo_ by associating each field with the version it has been introduced and walking a given object and grabbing the maximum used version for all non null fields)\r\n\r\nMissing:\r\n* new tests to cover those features (the build/consumer specific tests have been enhanced to cover the new stuff, but that's all)\r\n\r\nPR for ITs: https://github.com/apache/maven-integration-testing/pull/272\r\n",
    "head_branch": "bom-packaging",
    "is_a_fork": true,
    "comments": [
      "Split in smaller PRs."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624402ca14f302d393b5874",
    "number": 1159,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624402da14f302d393b5875",
    "number": 1158,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7812\r\n\r\nThe PR https://github.com/apache/maven-shared-utils/pull/154 propose to deprecate maven-shared-utils, as it's nearly a complete duplicate of plexus-utils / plexus-xml.\r\nThis PR brings back the few missing things (the message builder using jansi) by enhancing the v4 api with the missing bits and completely removed the maven-shared-utils dependency.",
    "head_branch": "remove-maven-shared-utils",
    "is_a_fork": true,
    "comments": [
      "And shared utils was never exported by maven core, so this is just fine (dump it from core)"
    ],
    "commit_messages": [
      "Get rid of maven-shared-utils (#1158)\n\nGiven maven-shared-utils is being deprecated (see MSHARED-1269), we need to remove its usage in maven.  Maven core only uses the logging/message related classes from maven-shared-utils, so this PR enhance the initial v4 api with the needed interfaces and move the jansi specific code into maven-embedder."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624402ea14f302d393b5876",
    "number": 1157,
    "body": "cherry-pick: 3135553e2d53a70c51b6d30b8894579746165ca9\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7806-master",
    "is_a_fork": false,
    "comments": [
      "Porting from #1151\r\n"
    ],
    "commit_messages": [
      "[MNG-7806] Plugins verification - remove used in module(s) report\n\ncherry-pick: 3135553e2d53a70c51b6d30b8894579746165ca9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624402fa14f302d393b5877",
    "number": 1156,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "simplify-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify code (#1156)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244030a14f302d393b5878",
    "number": 1155,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-5600\r\n\r\nThe original patch is made by: Christian Schulte <schulte@apache.org>\r\n\r\nSupersedes #295 ",
    "head_branch": "MNG-5600",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-5600] Dependency management import should support exclusions. (#1155)\n\nThe original patch is made by: Christian Schulte <schulte@apache.org>\r\nCo-authored-by: Alex Szakaly <alex.szakaly@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244031a14f302d393b5879",
    "number": 1154,
    "body": "Changes:\r\ninstall: 3.1.0 -> 3.1.1\r\ndeploy: 3.1.0 -> 3.1.1\r\nresources: 3.3.0 -> 3.3.1\r\ncompiler: 3.10.1 -> 3.11.0\r\nsurefire: 3.0.0 -> 3.1.2\r\nplugin: 3.7.0 -> 3.9.0\r\nwrapper: 3.1.1 -> 3.2.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790",
    "head_branch": "MNG-7790",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7790] Update lifecycle plugins (#1154)\n\nChanges:\r\ninstall: 3.1.0 -> 3.1.1\r\ndeploy: 3.1.0 -> 3.1.1\r\nresources: 3.3.0 -> 3.3.1\r\ncompiler: 3.10.1 -> 3.11.0\r\nsurefire: 3.0.0 -> 3.1.2\r\nplugin: 3.7.0 -> 3.9.0\r\nwrapper: 3.1.1 -> 3.2.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244032a14f302d393b587a",
    "number": 1153,
    "body": "Changes:\r\ninstall: 3.1.0 -> 3.1.1\r\ndeploy: 3.1.0 -> 3.1.1\r\nresources: 3.3.0 -> 3.3.1\r\ncompiler: 3.10.1 -> 3.11.0\r\nsurefire: 3.0.0 -> 3.1.2\r\nplugin: 3.7.0 -> 3.9.0\r\nwrapper: 3.1.1 -> 3.2.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790",
    "head_branch": "maven-3.9.x-MNG-7790",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7790] Update lifecycle plugins (#1153)\n\nChanges:\r\ninstall: 3.1.0 -> 3.1.1\r\ndeploy: 3.1.0 -> 3.1.1\r\nresources: 3.3.0 -> 3.3.1\r\ncompiler: 3.10.1 -> 3.11.0\r\nsurefire: 3.0.0 -> 3.1.2\r\nplugin: 3.7.0 -> 3.9.0\r\nwrapper: 3.1.1 -> 3.2.0\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7790"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244033a14f302d393b587b",
    "number": 1152,
    "body": "Changes:\r\n* antrun: 1.3 -> 3.1.0\r\n* assembly: 2.2-beta-5 -> 3.6.0\r\n* dependency: 2.8 -> 3.6.0\r\n* release: 2.5.3 -> 3.0.1 (and removed config)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7807",
    "head_branch": "maven-3.9.x-MNG-7807",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7807] Super POM plugin updates (#1152)\n\nChanges:\r\n* antrun: 1.3 -> 3.1.0\r\n* assembly: 2.2-beta-5 -> 3.6.0\r\n* dependency: 2.8 -> 3.6.0\r\n* release: 2.5.3 -> 3.0.1 (and removed config)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7807"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244034a14f302d393b587c",
    "number": 1151,
    "body": "\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7806",
    "is_a_fork": false,
    "comments": [
      "> LGTM, but today I'd maybe completely remove \"used\" thing. First, usually plugin is defined in parent and most usually is inherited by all child modules, and I agree, it is just a mess. IMHO, it is more important where plugin is defined (to make user go there and edit the POM)\r\n\r\nAgree - so I will remove it at all.",
      "Note: forward port to Maven4/master required, as currently validation is 1:1 in both (maven-3.9.x and master), JIRA adjusted as well."
    ],
    "commit_messages": [
      "[MNG-7806] Plugins verification - remove used in module(s) report"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244035a14f302d393b587d",
    "number": 1150,
    "body": "- Move maven-compat to jsr330\r\n- Remove more ties to RepositorySystem\r\n- Move more stuff to maven-compat\r\n- Move PluginManager and LocalRepositoryNotAccessibleException to maven-compat\r\n- Deprecate RepositorySystem [MNG-7794](https://issues.apache.org/jira/browse/MNG-7794)\r\n\r\nThis PR effectively cut the runtime dependency from maven-core to maven-compat.\r\nWhen all plugins are upgrade to their latest version (which will come when releasing \r\nthe parent POMs and upgrading to those), the maven distribution can build maven\r\nafter the removal of the maven-compat library from the distribution.\r\n \r\n",
    "head_branch": "maven-compat-deprecate-more",
    "is_a_fork": true,
    "comments": [
      "We could also move the `ArtifactFactory` and its implementation to maven-compat, but this would require getting rid of the [`MavenProject#createArtifacts`](https://github.com/apache/maven/blob/5367c0119ec8a88d1941449647f4315166a27f8b/maven-core/src/main/java/org/apache/maven/project/MavenProject.java#L1313-L1318) method has been deprecated 9 years ago afaik.\r\n\r\nThe same is true for `ReactorManager`, `EventDispatcher` and `EventMonitor` as they are only used in a [`MavenSession`'s constructor](https://github.com/apache/maven/blob/2db7c85b6494682363c22180f07010813f25b4ed/maven-core/src/main/java/org/apache/maven/execution/MavenSession.java#L345-L357) and related getter.\r\n\r\n"
    ],
    "commit_messages": [
      "[MNG-7794][MNG-7809] Deprecate RepositorySystem and make maven-compat optional (#1150)\n\n* Move maven-compat to jsr330\r\n* Remove more ties to RepositorySystem\r\n* Move more stuff to maven-compat\r\n* Move PluginManager and LocalRepositoryNotAccessibleException to maven-compat\r\n* Fix tests\r\n* Break circular dependency loop in components\r\n* Move unused deprecated classes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244036a14f302d393b587e",
    "number": 1149,
    "body": "The goal of this PR is to completely get rid of old plexus annotations / plugins.\nThis requires moving maven-compat and the only remaining plexus components to JSR330. \n",
    "head_branch": "maven-compat-jsr330",
    "is_a_fork": true,
    "comments": [
      "Interesting..didn't we say we won't touch compat anymore?",
      "Unfortunately we can't just drop this dependency ",
      "> Unfortunately we can't just drop this dependency\r\n\r\nSo this is an intermediate step to ease the pain?",
      "> > Unfortunately we can't just drop this dependency\r\n> \r\n> So this is an intermediate step to ease the pain?\r\n\r\nYes, as I said, my goal was to clean the build, it just happens I had to get rid of old plexus plugin and I needed to move maven-compat to jsr330 for that.  Quite a big work for a small goal, I agree.\r\n\r\nThat said, as the number of plugins using the `org.apache.maven.repository.RepositorySystem` is going down, we may be able to make maven-compat optional at some point.  I'll work on a separate draft PR to see how/if this can be achieved.",
      "Superseded by #1150 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244037a14f302d393b587f",
    "number": 1148,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7805\r\n\r\nThe downside of this PR is that if the build/consumer feature is enabled, all poms will be parsed as events and kept in memory by the `ModelVersionXMLFilter`.  The reason is that in theory, the `modelVersion` element can be the last element of the root `project` element.  Given the way the build/consumer POM feature is implemented, the same mechanism is used to read the POM (i.e. xml to object model) and rewrite it (when installing/deploying), so that the transformed XML has to be _clean_ wrt formatting, etc...\r\nA possible performance improvement would be to have filters operate in two modes, the first one during the first phase (I.e. xml element ordering, formatting is irrelevant, and this phase could even be done on the object model) and a second one to rewrite the POM. \r\nBut I think the performance loss is quite negligible as the number of POMs parsed with the build/consumer feature filter enabled is the number of projects in the reactor, so it should be usually an order of magnitude lower than the total number of POMs parsed for plugins / dependencies.\r\n",
    "head_branch": "MNG-7805-make-modelVersion-optional",
    "is_a_fork": true,
    "comments": [
      "What about non-empty schema prefix? E..g, `xmlns:maven=\"...\"`?",
      "> What about non-empty schema prefix? E..g, `xmlns:maven=\"...\"`?\r\n\r\nI've added a test.",
      "Maybe we should also add a test case that proves the `modelVersion` is kept intact if it's present in the input?",
      "> Maybe we should also add a test case that proves the `modelVersion` is kept intact if it's present in the input?\r\n\r\nDone, the two tests, now check the stability of the xml when `modelVersion` is already present.",
      "Maybe we can just drop consumer stuff, since as we proved, model can \"move\" with existing tech as well? Am just worried about gigantic projects and their heap requirements..",
      "> Maybe we can just drop consumer stuff, since as we proved, model can \"move\" with existing tech as well? Am just worried about gigantic projects and their heap requirements..\r\n\r\nThat's really not what the discussions on [dev@](https://lists.apache.org/thread/t0jj2mnwzxyd6oln3r67s78qvw4hdj4n) seem to lead to.  The problem does not seem to be maven, but \"other\"(?) tools which we would not want to break by upgrading the model.  So we'll have to forever produce a consumer pom, which means introducing a bom packaging (to differentiate between parent poms and consumed boms).  However, I think we should flatten it, so that the used schema is minimal and it will also make things much faster in the long term when all dependencies are flattened."
    ],
    "commit_messages": [
      "[MNG-7805] Make the modelVersion optional when using build pom (#1148)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244038a14f302d393b5880",
    "number": 1147,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7804\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/268\r\n\r\nNote that this introduce a new element in a new 4.1.0 model.\r\n",
    "head_branch": "MNG-7804-plugin-execution-order",
    "is_a_fork": true,
    "comments": [
      "A few questions have been asked by @ctubbsii [on the IT PR](https://github.com/apache/maven-integration-testing/pull/268#pullrequestreview-1478538677):\r\n\r\n> - Does this require the POM/4.2.0 model? Which versions of Maven can use that POM version?\r\n\r\nThis does indeed require POM 4.1.0 that comes with Maven 4.\r\n\r\n> - How does this work with priorities defined in a parent POM or profile?\r\n\r\nThe rule has not changed (as this `priority` element did exist but was hidden): it's done in the [DefaultLifecycleBindingsInjector](https://github.com/apache/maven/blob/0b3246381d12e69deef63888d0db274fb49c6697/maven-core/src/main/java/org/apache/maven/model/plugin/DefaultLifecycleBindingsInjector.java#L168-L171) class.\r\n\r\n- What is the numerical type of the priority? Is it an integer, decimal, long, non-negative, strictly positive?\r\n\r\nThe type is `int` as defined [in the model](https://github.com/apache/maven/pull/1147/files#diff-ccc5b1903a864adb4a01d6072c9c2ff937c71fb06bea6e5ec3df6097f0d01199R2651).  The doc also hints to the fact that the value can be negative.\r\n\r\n- What if two executions have the same priority? Is that an error, or is it arbitrarily ordered?\r\n\r\nArbitrarily (un-)ordered within a given priority.\r\n",
      "@hboutemy would you mind another look please ?"
    ],
    "commit_messages": [
      "[MNG-7804] Ability to order plugin executions using the priority xml element (#1147)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244039a14f302d393b5881",
    "number": 1146,
    "body": "Fix velocity templates to generate code closer to our new code style.\n\n",
    "head_branch": "generated-codestyle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix code style for code generated by velocity templates (#1146)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624403aa14f302d393b5882",
    "number": 1145,
    "body": "https://issues.apache.org/jira/browse/MNG-5987",
    "head_branch": "MNG-5987",
    "is_a_fork": false,
    "comments": [
      "Note that I'd like to add a `<priority>` element of the `<execution>`.  This field already exists and is handled, we just need to make it public in the model.",
      "yes, let's go step by step: MNG-5987 then MNG-7804\r\n\r\nnotice that adding a public XML element in pom.xml creates an incompatibility: it'll have to be done as XML attribute"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624403ba14f302d393b5883",
    "number": 1144,
    "body": "JIRA issue: [MNG-7802](https://issues.apache.org/jira/browse/MNG-7802)\r\n\r\nAfter several iterations, this PR simply provides a custom `UpdateCheckManager` which can implement the desired policy : artifacts are considered immutable once downloaded from a repository.  The `updatePolicy` defined in repositories affect the metadata retrieval only, i.e. checks for `LATEST`, `SNAPSHOT`, and more generally all version resolution requests.\r\n\r\nThis PR also fix the CLI options as part of [MNG-7803](https://issues.apache.org/jira/browse/MNG-7803):\r\n * deprecate `-nsu`, `--no-snapshot-updates` and `--update-snapshots` option\r\n * add `-U-/`--update-always`, `-un`/`--update-never`, `-ud`/`--update-daily`, `-up`/`--update-policy` CLI options",
    "head_branch": "MNG-7802-fix-update-policy",
    "is_a_fork": true,
    "comments": [
      "~Looks good, but:~ not good, added comment on MNG-7802 intead.\r\n\r\nBut\r\n* the CLI `-U` help text should be aligned with reality (is not \"snapshot update\" but \"all update., Change the help text accordingly)\r\n* as IT failures show, IF `-U` present, do what happened before (stick ALWAYS to session), if not present, do partially what in this PR\r\n\r\nReasoning: This PR makes -U not override anymore the \"remembered to fail\" of resolver in local repo, as shown in ITs.\r\n\r\n\"Remembered to fail\" when resolver emits `Could not resolve dependencies for project org.apache.maven.its.mng4343:test:jar:0.1: The following artifacts could not be resolved: org.apache.maven.its.mng4343:dep:jar:0.1 (absent): org.apache.maven.its.mng4343:dep:jar:0.1 was not found in http://localhost:49378/ during a previous attempt. This failure was cached in the local repository and resolution is not reattempted until the update interval of maven-core-it has elapsed or updates are forced`",
      "Will update the PR when https://github.com/apache/maven-resolver/pull/297 is released.",
      "To be done in resolver 2.0.0, please once out upgrade to this instead https://issues.apache.org/jira/browse/MRESOLVER-377"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624403ca14f302d393b5884",
    "number": 1143,
    "body": null,
    "head_branch": "MNG-7801-fix-model-doc-update-policy",
    "is_a_fork": true,
    "comments": [
      "Actually, it seems the default is `daily`. The reason for the mix-up is that the default value in the resolver is `never`, but maven does never pass `null` to the resolver, as indicated by https://github.com/apache/maven/blob/8150c62749a637a98fbb9489fb8162034956220b/maven-core/src/main/java/org/apache/maven/internal/impl/DefaultRepositoryFactory.java#L68, where `daily` is used by default."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624403da14f302d393b5885",
    "number": 1142,
    "body": "- [MNG-6112] Align artifacts and plugins policies using the default value\r\nThis PR is based on #1139 , so please review only the last commit https://github.com/apache/maven/pull/1142/commits/04268f9dd323dd31630a55004ee4ca10e412c360\r\n\r\n",
    "head_branch": "MNG-6112-make-central-update-policy-coherent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6112] Make central update policy coherent (#1142)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624403ea14f302d393b5886",
    "number": 1141,
    "body": "Backport of https://github.com/apache/maven/pull/1134\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7698",
    "head_branch": "maven-3.9.x-MNG-7698",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7698] Allow comments in .mvn/maven.config (#1141)\n\nBackport of https://github.com/apache/maven/pull/1134\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7698"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624403fa14f302d393b5887",
    "number": 1140,
    "body": "Resolver 1.9.11 release notes:\r\nhttps://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12320628&version=12353188\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800\r\n",
    "head_branch": "maven-3.9.x-MNG-7800",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7800] Update to Resolver 1.9.11 (#1140)\n\nResolver 1.9.11 release notes:\r\nhttps://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12320628&version=12353188\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7800"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244040a14f302d393b5888",
    "number": 1139,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-4645\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/266\r\nSupersedes: https://github.com/apache/maven/pull/419\r\n",
    "head_branch": "MNG-4645-extract-central-definition",
    "is_a_fork": true,
    "comments": [
      "Do we intend to break builds overriding settings? Guess injection logic should be kept until we force an implicit settings.xml or do not define any implicit packaging/lifecycle, no?",
      "> Do we intend to break builds overriding settings? Guess injection logic should be kept until we force an implicit settings.xml or do not define any implicit packaging/lifecycle, no?\r\n\r\nThat's a really good question.  I've added back the injection of maven central in case the settings read have no repositories defined.  The most usual use case will be if the global settings have been overridden by the command line.",
      "Kinda weird that the only IT failing is because it's now using the newly accepted syntax, but we're testing a failure: https://github.com/apache/maven-integration-testing/blob/941353757073754cedd91f49c3d1d9c216adda0d/core-it-suite/src/test/resources/mng-3748/settings.xml ...",
      "Does this means maven4 settings.xml will not be parsable by Maven3? So projects will have to \"take a stance\", and be \"maven4 only\" or 'maven3 only\"?",
      "> Does this means maven4 settings.xml will not be parsable by Maven3? So projects will have to \"take a stance\", and be \"maven4 only\" or 'maven3 only\"?\r\n\r\nThat's the `settings.xml` which will come with the maven 4 distribution and located in `[MVN_HOME]/conf/settings.xml`, so I don't think this is an issue.  If people want to modify their own user settings and leverage new features, then yes, but as a workaround, it's always possible to use a profile activated by default instead."
    ],
    "commit_messages": [
      "[MNG-4645] Move Central repo definition out of Maven's core so it can be more easily changed (#1139)\n\nCo-authored-by: Christian Schulte <schulte@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244041a14f302d393b5889",
    "number": 1138,
    "body": "JIRA issue: https://issues.apache.org/jira/projects/MNG/issues/MNG-7548\n\n",
    "head_branch": "MNG-7548-remove-legacy-metadata-support",
    "is_a_fork": true,
    "comments": [
      "> LGTM, but as issue mentions, we have other places to look into as well\r\n\r\n@cstamas What are you referring it ? I read the issue again but I don't see...",
      "Ah, I meant \"we have many other places **in ecosystem**\" like that invoker plugin etc. So we need to search'n'destroy all those places."
    ],
    "commit_messages": [
      "[MNG-7548] Kill off \"legacy\" repository metadata support (#1138)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244042a14f302d393b588a",
    "number": 1137,
    "body": "This reverts commit b2a21f12f8a0598dd4a286177e340bda0148e9ba.\r\n\r\nJIRA issue: https://issues.apache.org/jira/browse/MNG-7604",
    "head_branch": "MNG-7604-support-pom-props-from-central",
    "is_a_fork": true,
    "comments": [
      "> Thanks for creating this one. I had no idea how to solve it, but this seems like a nice approach.\r\n> \r\n> This text in the PR body caught me off guard\r\n> \r\n> > This reverts commit [b2a21f1](https://github.com/apache/maven/commit/b2a21f12f8a0598dd4a286177e340bda0148e9ba).\r\n> \r\n> If I understand correctly, this PR doesn't _revert_ [b2a21f1](https://github.com/apache/maven/commit/b2a21f12f8a0598dd4a286177e340bda0148e9ba), but refines or enhances it by _only_ performing the validation if it needs to.\r\n\r\nRight, my original idea was to do a two step thing ...\r\n\r\n \r\n> Out of curiosity: how does Maven determine which validation level to apply?\r\n\r\nThe default value is `VALIDATION_LEVEL_STRICT`.  When reading poms which are external to the workspace, the code usually set the validation level on the `ModelBuildingRequest` to `VALIDATION_LEVEL_MINIMAL`, as done [here](https://github.com/apache/maven/blob/8150c62749a637a98fbb9489fb8162034956220b/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java#L196).  I don't think other values are actually used.  ",
      "> > Out of curiosity: how does Maven determine which validation level to apply?\r\n> \r\n> The default value is `VALIDATION_LEVEL_STRICT`. When reading poms which are external to the workspace, the code usually set the validation level on the `ModelBuildingRequest` to `VALIDATION_LEVEL_MINIMAL`, as done [here](https://github.com/apache/maven/blob/8150c62749a637a98fbb9489fb8162034956220b/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultArtifactDescriptorReader.java#L196). I don't think other values are actually used.\r\n\r\nThanks for clarifying!",
      "> This change affects only master (and the preceding \"removal\" of interpolation as well)?\r\n\r\n3.9 is not affected afaik, https://issues.apache.org/jira/browse/MNG-7244 was only targeted at 4.x"
    ],
    "commit_messages": [
      "[MNG-7604] Removal of pom.* interpolation makes some older plugins defunct (#1137)\n\nThis partially reverts commit b2a21f12f8a0598dd4a286177e340bda0148e9ba.\r\n\r\nCo-authored-by: Maarten Mulders <mthmulders@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244042a14f302d393b588b",
    "number": 1136,
    "body": "But to show no issue, as locality to be shown is not in \"to be shown\" ones.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7799",
    "head_branch": "maven-3.9.x-MNG-7799",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7799] Plugin validation may falsely report there are issues (#1136)\n\nBut to show no issue, as locality to be shown is not same as reported\r\nissues.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7799"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244043a14f302d393b588c",
    "number": 1135,
    "body": "JIRA issue: https://issues.apache.org/jira/projects/MNG/issues/MNG-7585\r\n",
    "head_branch": "MNG-7585-remove-duplicate-classes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7585] Remove duplicate classes (#1135)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244044a14f302d393b588d",
    "number": 1134,
    "body": "JIRA issue: https://issues.apache.org/jira/projects/MNG/issues/MNG-7698",
    "head_branch": "MNG-7698-comments-in-maven-config",
    "is_a_fork": true,
    "comments": [
      "Just FTR: _these very same_ \"comments\" (empty lines and \"starts with #\") allows resolver as well in various files. So this is good change IMHO."
    ],
    "commit_messages": [
      "[MNG-7698] Support comments in maven.config (#1134)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244045a14f302d393b588e",
    "number": 1133,
    "body": "Port of #1128 ",
    "head_branch": "MNG-7795-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7795] IllegalArgumentException: 'other' has different root during plugin validation (#1133)\n\nChecks the paths before relativizing them.\r\nNormalize and relative before adding to result\r\nRename local vars\r\nApply to ExecutionEventLogger\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7795\r\n\r\nCo-authored-by: Andreas Dangel <adangel@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244046a14f302d393b588f",
    "number": 1132,
    "body": "Make BRIEF a legal value again.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7797\r\n",
    "head_branch": "fix-brief",
    "is_a_fork": true,
    "comments": [
      "Can be beneficial to comment it is to not break existing users otherwise code looks wrong. Except that +1 to get it asap to restore it."
    ],
    "commit_messages": [
      "[MNG-7797] Return BRIEF mode (#1132)\n\nMake BRIEF a legal value again.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7797"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244047a14f302d393b5890",
    "number": 1131,
    "body": "Backport of https://github.com/apache/maven/pull/1130",
    "head_branch": "MNG-7796-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7796] Be lenient when using toRealPath (#1131)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244048a14f302d393b5891",
    "number": 1130,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7796",
    "head_branch": "MNG-7796",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7796] Be lenient when using toRealPath (#1130)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244049a14f302d393b5892",
    "number": 1129,
    "body": "Currently, the need to support JDK 8 as a target kinda implies that maven itself needs to run with JDK 8.  Toolchains are not easy to use and require a few manual steps.\r\nThis commit aims at reducing the burden of using toolchains so that maven get use JDK 11 as a requirement for running, but making it easy for users to target a different JDK.\r\n\r\nThe code currently adds automatic discovery of JDK on various platforms (though no WSL which looks quite complicated to support).  The idea is also to see if the configuration of the toolchain plugin in the pom can also be simplified somehow.\r\n\r\nThis borrows code from IntelliJ Idea (which is ASL2).",
    "head_branch": "discover-toolchains",
    "is_a_fork": true,
    "comments": [
      "> implies that maven itself needs to run with JDK 8\n\nWhy not using cross compilation with newest javac still supporting Java 8 bytecode?",
      "> > implies that maven itself needs to run with JDK 8\r\n> \r\n> Why not using cross compilation with newest javac still supporting Java 8 bytecode?\r\n\r\nWhat do you mean exactly ? I may have missed something...",
      "> > > implies that maven itself needs to run with JDK 8\r\n> > \r\n> > \r\n> > Why not using cross compilation with newest javac still supporting Java 8 bytecode?\r\n> \r\n> What do you mean exactly ? I may have missed something...\r\n\r\nUsually using `maven.compiler.release` set to 8 is enough. No need to run the build with JDK 8 or toolchains (except for running ITs)",
      "> > > > implies that maven itself needs to run with JDK 8\r\n> > > \r\n> > > \r\n> > > Why not using cross compilation with newest javac still supporting Java 8 bytecode?\r\n> > \r\n> > \r\n> > What do you mean exactly ? I may have missed something...\r\n> \r\n> Usually using `maven.compiler.release` set to 8 is enough. No need to run the build with JDK 8 or toolchains.\r\n\r\nYes, if they are people are happy building with this option, they definitely don't need to use toolchains.  My understanding  is that when running tests, people quite like the tests to be run in the target environment.  \r\nFor those that want to use the target JDK, I think simplifying the usage of toolchains would be a win.",
      "very interesting/nice feature!\r\nsdkman can be used with osx as well. I haven’t reviewed the code enough but not sure if the current draft takes care of this? IntelliJ does ;) ",
      "> very interesting/nice feature!\r\n> sdkman can be used with osx as well. I haven’t reviewed the code enough but not sure if the current draft takes care of this? IntelliJ does ;)\r\n\r\nyes, that's taken care of !",
      "The PR https://github.com/apache/maven-toolchains-plugin/pull/14 provides a new mojo that displays the list of discovered toolchains.\r\n```\r\n➜  maven git:(discover-toolchains) ✗ ~/work/git/maven/apache-maven/target/apache-maven-4.0.0-alpha-6-SNAPSHOT/bin/mvn org.apache.maven.plugins:maven-toolchains-plugin:4.0.0-SNAPSHOT:display-discovered-toolchains -N\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] ------------------------------------------------< org.apache.maven:maven >------------------------------------------------\r\n[INFO] Building Apache Maven 4.0.0-alpha-6-SNAPSHOT\r\n[INFO]   from pom.xml\r\n[INFO] ---------------------------------------------------------[ pom ]----------------------------------------------------------\r\n[INFO] \r\n[INFO] --- toolchains:4.0.0-SNAPSHOT:display-discovered-toolchains (default-cli) @ maven ---\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<toolchains xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>1.8.0_372</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>1.8.0_372-b07</runtime.version>\r\n      <vendor>Azul Systems, Inc.</vendor>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>1.8.0_362</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>1.8.0_362-b09</runtime.version>\r\n      <vendor>BellSoft</vendor>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/8.0.362-librca/jre</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>17.0.6</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>17.0.6+10</runtime.version>\r\n      <vendor>Eclipse Adoptium</vendor>\r\n      <vendor.version>Temurin-17.0.6+10</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/17.0.6-tem</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>20</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>20+36</runtime.version>\r\n      <vendor>Eclipse Adoptium</vendor>\r\n      <vendor.version>Temurin-20+36</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/20-tem</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>11.0.17</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>11.0.17+8-jvmci-22.3-b08</runtime.version>\r\n      <vendor>GraalVM Community</vendor>\r\n      <vendor.version>GraalVM CE 22.3.0</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/22.3.r11-grl</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>11.0.18</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>11.0.18+10-jvmci-22.3-b13</runtime.version>\r\n      <vendor>GraalVM Community</vendor>\r\n      <vendor.version>GraalVM CE 22.3.1</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Library/Java/JavaVirtualMachines/graalvm-ce-java11-22.3.1/Contents/Home</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>17.0.5</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>17.0.5+8-jvmci-22.3-b08</runtime.version>\r\n      <vendor>GraalVM Community</vendor>\r\n      <vendor.version>GraalVM CE 22.3.0</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/22.3.r17-grl</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>17.0.5</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>17.0.5+8-jvmci-22.3-b08</runtime.version>\r\n      <vendor>GraalVM Community</vendor>\r\n      <vendor.version>GraalVM CE 22.3.0</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/22.3.r17-grl</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>17.0.6</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>17.0.6+10-jvmci-22.3-b13</runtime.version>\r\n      <vendor>GraalVM Community</vendor>\r\n      <vendor.version>GraalVM CE 22.3.1</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Library/Java/JavaVirtualMachines/graalvm-ce-java17-22.3.1/Contents/Home</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>17.0.6</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>17.0.6+10-jvmci-22.3-b13</runtime.version>\r\n      <vendor>GraalVM Community</vendor>\r\n      <vendor.version>GraalVM CE 22.3.1</vendor.version>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/22.3.1.r17-grl</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>20-ea</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>20-ea+24-1795</runtime.version>\r\n      <vendor>Oracle Corporation</vendor>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Library/Java/JavaVirtualMachines/jdk-20.jdk/Contents/Home</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n  <toolchain>\r\n    <type>jdk</type>\r\n    <provides>\r\n      <version>21-ea</version>\r\n      <runtime.name>OpenJDK Runtime Environment</runtime.name>\r\n      <runtime.version>21-ea+22-1890</runtime.version>\r\n      <vendor>Oracle Corporation</vendor>\r\n    </provides>\r\n    <configuration>\r\n      <jdkHome>/Users/gnodet/.sdkman/candidates/java/21.ea.22-open</jdkHome>\r\n    </configuration>\r\n  </toolchain>\r\n</toolchains>\r\n\r\n[INFO] Copying org.apache.maven:maven:pom:4.0.0-alpha-6-SNAPSHOT to project local repository\r\n[INFO] Copying org.apache.maven:maven:pom:consumer:4.0.0-alpha-6-SNAPSHOT to project local repository\r\n[INFO] --------------------------------------------------------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] --------------------------------------------------------------------------------------------------------------------------\r\n[INFO] Total time:  1.051 s\r\n[INFO] Finished at: 2023-05-26T21:07:20+02:00\r\n[INFO] --------------------------------------------------------------------------------------------------------------------------\r\n➜  maven git:(discover-toolchains) ✗ \r\n```",
      "I'm planning to add better support for the _current_ JDK toolchain.  The selection of the toolchain by the mojo, in the case of the JDK toolchain, should take into account the _current_ toolchain with several modes:\r\n * ignore : always use a toolchain\r\n * if-same : if the selection selects the _current_ toolchain, then do not use any toolchain to avoid forking tools\r\n * if-match : first match the _current_ toolchain against the set of requirements, and use it (i.e. do not use any toolchain) if they match.  This should also avoid discovering all JDK toolchains if the current one matches\r\n\r\nAlso, the selection may be made slightly easier for the JDK toolchains, as the set of properties is kinda determined by the discovery mechanism, so a dedicated mojo may be needed for the JDK toolchain.\r\n\r\nThe discovery could be stored to disk, at least the mapping between the jdk home and the properties, so that we don't have to launch all the JVMs to get the information.\r\n\r\nI also wonder if the jdk profile activation should use the toolchain.",
      "I actually wonder if it would make more sense to move that code into the `maven-toolchains-plugin`.  This plugin is actually required to select the toolchain, as there's no other official way afaik (one can always rewrite a different plugin).\r\nSo the discovery could happen at the time the toolchain is selected, which would avoid the need to perform the discovery if not needed.",
      "Given the way toolchains are defined and used in the code, there's no real reason to split the discovery process from the selection process, so I'm closing this PR in favour of https://github.com/apache/maven-toolchains-plugin/pull/14 which adds 3 mojos to discover and display / generate an xml / select the toolchain."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624404aa14f302d393b5893",
    "number": 1128,
    "body": "…ing plugin validation\r\n\r\nChecks the paths before relativizing them.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7795\r\n\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7795",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7795] IllegalArgumentException: 'other' has different root during plugin validation (#1128)\n\nChecks the paths before relativizing them.\r\nNormalize and relative before adding to result\r\nRename local vars\r\nApply to ExecutionEventLogger\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7795"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624404ba14f302d393b5894",
    "number": 1127,
    "body": "See https://issues.apache.org/jira/browse/MNG-7793\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7793) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7793-apis-for-generated-sources",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624404ca14f302d393b5895",
    "number": 1126,
    "body": "- [MNG-7587] Upgrade to sisu 0.9.0.M2\r\n- Use a non shaded version of asm in guice and sisu\r\n- Fix missing asm for maven-resolver-provider\r\n- IT PR: https://github.com/apache/maven-integration-testing/pull/290\r\n\r\nI've extracted the use of a standalone ASM version as JDK 17 support is already covered by the upgrade to 0.9.0.M2.\r\nTo support JDK >= 19, we need ASM 9.5 and we thus need to use a standalone version of ASM and upgrade it.\r\n\r\nThis is a follow-up to https://github.com/apache/maven/pull/1119",
    "head_branch": "MNG-7792-standalone-asm",
    "is_a_fork": true,
    "comments": [
      "Hm, locally ITs pass on me, unsure why they failed here.",
      "Restarted ITs....",
      "The failing IT uses this agent, and I'd look into it https://github.com/apache/maven-integration-testing/blob/master/core-it-support/core-it-javaagent/src/main/java/org/apache/maven/coreits/javaagent/mng5669/Premain.java",
      "> The failing IT uses this agent, and I'd look into it https://github.com/apache/maven-integration-testing/blob/master/core-it-support/core-it-javaagent/src/main/java/org/apache/maven/coreits/javaagent/mng5669/Premain.java\r\n\r\nFixed with https://github.com/apache/maven-integration-testing/pull/290"
    ],
    "commit_messages": [
      "[MNG-7792] Use a standalone asm version (#1126)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624404da14f302d393b5896",
    "number": 1125,
    "body": "Take two, on master.\r\n\r\nIdea: maven plugin dependency resolution could do it smarter: augment it with:\r\n* depMgmt (apply core)\r\n* direct dependencies rewritten (if needed)\r\n* global exclusions applied\r\n\r\nThese two results, that for example there is only one maven-core version resolved (downloaded POM and JAR), not 10s or 20s versions.\r\n\r\nCMD: `mvn clean install -Dmaven.repo.local=local -Drat.skip` (and always emptying local repo naturally)\r\n\r\nw/ master:\r\nSize: 143MB\r\nFiles: 4604\r\n\r\nw/ master + this PR:\r\nSize: 121MB\r\nFiles: 3725\r\n\r\nThis PR is experimental, and contains limited set of \"constituent artifacts\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7097",
    "head_branch": "filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624404ea14f302d393b5897",
    "number": 1124,
    "body": "Idea: maven plugin dependency resolution could do it smarter: currently, it _resolves_ all dependencies of a plugin, only to leave them out (exclude from classpath) as they are present in Maven Core and are exported (so provided to plugin by maven core). So, why not filter ahead instead?\r\n\r\nPlugin resolution filter, part one: The Filter\r\n\r\n## Simple \"tests\" for numbers\r\n\r\nCMD: `mvn clean install -Dmaven.repo.local=local -Drat.skip` (and always emptying local repo naturally)\r\n\r\n### Building maven-3.9.x\r\n\r\nThe local repo size and file count contained.\r\n\r\nw/ 3.9.2:\r\nSize: 147MB\r\nFiles: 3301\r\n\r\nw/ 3.9.3 + this PR:\r\nSize: 131MB\r\nFiles: 2506\r\n\r\n### Building maven-3.8.x\r\n\r\nw/ 3.9.2:\r\nSize: 142MB\r\nFiles: 4500\r\n\r\nw/ 3.9.3 + this PR:\r\nSize: 117MB\r\nFiles: 3362\r\n\r\nConclusion: the \"saving\" (in transported byte count and file count, downloaded from remote) is bigger as \"older\" the plugins are (3.9.x uses parent 39, while 3.8.x parent 36, newer parent have a lot of \"fixed\" plugins with proper scope). Essentially, putting maven bits to \"provided\" scope results in same result as this PR makes it. The difference is that this filter works for ALL, even old, having maven in non-provided scope as well.\r\n\r\nThe problem with this PR is that is like scissor, so applies to all, and some plugins (using `plugin.artifacts` parameter for example) will end up with a nasty surprise. So, this \"part one\" does not work alone, yet.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7097",
    "head_branch": "filter",
    "is_a_fork": true,
    "comments": [
      "As expected, with \"part one\" IT results:\r\n```\r\nError:  Tests run: 889, Failures: 2, Errors: 5, Skipped: 80\r\n```\r\n\r\nFailed ITs:\r\n* MavenITmng4274PluginRealmArtifactsTest.testit\r\n* MavenITmng5783PluginDependencyFiltering.testSLF4j\r\n\r\nErrored ITs:\r\n* MavenITmng3536AppendedAbsolutePathsTest\r\n* MavenITmng3693PomFileBasedirChangeTest.testitMNG3693\r\n* MavenITmng4360WebDavSupportTest.testitJackrabbitBasedImpl\r\n* MavenITmng4360WebDavSupportTest.testitSlideBasedImpl:\r\n* MavenITmng7045DropUselessAndOutdatedCdiApiTest.testShouldNotLeakCdiApi:\r\n",
      "I think the IT bootstrap needs some adjustments as some artifacts are missing.",
      "Bad approach: by \"cutting\" the graph we cut potentially 2nd, 3rd level transitive dependencies (like in case of MNG4360 IT, where jackrabbit-wagon _directly uses_ plexus-utils classes, but for it p-u is 3rd level transitive dependency :shrug: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624404fa14f302d393b5898",
    "number": 1123,
    "body": "This allows for JSR303 components in Java 15-21 bytecode.",
    "head_branch": "feature/MNG-7587-update-sisu",
    "is_a_fork": false,
    "comments": [
      "Erm:\r\nhttps://github.com/apache/maven/pull/1121\r\nhttps://github.com/apache/maven/pull/1119",
      "Superseded as mentioned above."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244050a14f302d393b5899",
    "number": 1122,
    "body": "Changes:\r\n* introduce \"internal\" (to project) and \"external\" aspect\r\n* make \"inline\" default as it was in 3.9.0 and 3.9.1\r\n* remove \"default\" report level\r\n* summary and verbose reports \"internal only\" or ALL issues\r\n\r\nExample of outputs while building maven-3.8.x:\r\nhttps://gist.github.com/cstamas/defd6a52939f5a277bf5fc669c01aedb\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7791",
    "head_branch": "maven-3.9.x-MNG-7791",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7791] Split validation issues by \"locality\" aspect (#1122)\n\nChanges:\r\n* introduce \"internal\" (to project) and \"external\" aspect\r\n* make \"inline\" default as it was in 3.9.0 and 3.9.1\r\n* remove \"default\" report level\r\n* summary and verbose reports \"internal only\" or ALL issues\r\n\r\nExample of outputs while building maven-3.8.x:\r\nhttps://gist.github.com/cstamas/defd6a52939f5a277bf5fc669c01aedb\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7791"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244051a14f302d393b589a",
    "number": 1121,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7587",
    "head_branch": "MNG-7587-3.9.x",
    "is_a_fork": true,
    "comments": [
      "What about:\r\n* using sisu \"no_asm\" classifier\r\n* using guice \"classes\" classifier\r\n* declaring asm (whatever version, for start 9.5) as maven dep?",
      "> What about:\r\n\r\n> using sisu \"no_asm\" classifier\r\n> using guice \"classes\" classifier\r\n> declaring asm (whatever version, for start 9.5) as maven dep?\r\n\r\nI would defer to add this additional complexity until there is a new version of ASM released which is not (yet) integrated in Sisu.",
      "> > What about:\r\n> \r\n> > using sisu \"no_asm\" classifier\r\n> > using guice \"classes\" classifier\r\n> > declaring asm (whatever version, for start 9.5) as maven dep?\r\n> \r\n> I would defer to add this additional complexity until there is a new version of ASM released which is not (yet) integrated in Sisu.\r\n\r\nWe can't defer if we want JDK 17 support.  We use juice 5.1.0 which embeds asm 9.2, so we need to use version which does not embed asm.  We can do that for 4.x only though...\r\n",
      "I've pushed the\r\n\r\n> For 3.9.x \"simple upgrade\" is the way to go, and let's do the \"asm trick\" on master\r\n\r\nThis should provide support to at least JDK 18. "
    ],
    "commit_messages": [
      "[MNG-7587] Upgrade to sisu 0.9.0.M2 (#1121)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244052a14f302d393b589b",
    "number": 1120,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7587",
    "head_branch": "MNG-7587-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244053a14f302d393b589c",
    "number": 1119,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7587\r\n\r\n",
    "head_branch": "MNG-7587",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7587] Upgrade to sisu 0.9.0.M2 (#1119)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244054a14f302d393b589d",
    "number": 1118,
    "body": "This is a draft of an incremental build api to replace https://github.com/sonatype/sisu-build-api and https://github.com/codehaus-plexus/plexus-build-api.\r\nIt's _very heavily_ inspired from https://github.com/takari/io.takari.incrementalbuild.\r\n\r\nUsage snippets are available https://github.com/gnodet/maven/blob/build-context/maven-core/src/test/java/org/apache/maven/internal/build/impl/Snippets.java\r\n\r\nMore to follow...",
    "head_branch": "build-context",
    "is_a_fork": true,
    "comments": [
      "This is a must have thing..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244055a14f302d393b589e",
    "number": 1117,
    "body": "Supersedes #1105 \r\nIT at https://github.com/apache/maven-integration-testing/pull/263",
    "head_branch": "mng-7740-clean-up-consumer-pom-files-in-target-dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7740] Remove old temporary consumer*pom files from buildDir (#1117)\n\n\r\nCo-authored-by: Giovanni van der Schelde <Giovanni.vanderSchelde@infosupport.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244056a14f302d393b589f",
    "number": 1116,
    "body": "- Make the default not emit any warnings.\r\n- replace the current default behavior with \"SUMMARY\"\r\n\r\nThis restores the old pre-3.9.0 behavior re: deprecation warnings\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [X] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.9.x",
    "is_a_fork": true,
    "comments": [
      "-1 since, as nicely said on ML, it \"defies the purpose\".\r\n\r\nStick to 3.8.x, if this is no go for you for any reason. \r\n\r\nGoal is to fix issues all way down the pipe (like use of broken maven-plugin-plugin), and yes, not all core plugins are fixed, yet. Give us a bit more time, or hop in, never enough help in this area.",
      "I very much disagree with your \"my way or the highway\" approach. There is a lot of criticism with the approach to \"the purpose\". Of course, you can just ram your approach through and hope for the best. It will not work, as the changes *will* break older builds that people do not update and you cause continuing pain for developers. People will be stuck on 3.9 forever because \"it is the last version that supports that unmaintained foo plugin that I need for my build and can not move off\" and grind their teeth. The answer will be \"we move off maven\", not \"we fix that plugin\". ",
      "Lets drop this code and move it to help plugin\r\nPromise to be an issue in core happent so this impl failed, let's assume it",
      "-1 for me for\r\n\r\nAs I wrote on ML - we have two group of issues \r\n- wrong using of plugin, like deprecated, not existed parameters \r\n- and wrong implementation of inside plugin\r\n\r\nWe should not hide problems which user should fix in theirs projects.\r\n\r\nI can agree to less talkative about wrong plugin implementations - but I think that is useful.\r\n",
      "@slawekjaranowski basic user interaction rule is to not show anything user dont care or cant do anything to fix it so it is fully inacurrate as of today, we'd better helo plugin dev with a live checker (ci/cd) and users with help plugin. Doing it at build time with maven does not reach original goal nor is relzvant since new versions will await user adoption (too late by design).\r\nLet s provide the right tool and not bother users (n) instead lf dev (1).",
      "@rmannibucau - I agree if user can not do anything with some of issue such warning should be minimized\r\n\r\nBut do you also want to hide eg when user use parameter of plugin which is not exist? \r\nIn such case user can and should do something.\r\n",
      "@slawekjaranowski a misconfiguration should be reported indeed, but the point is: why at each run? it is a static analyzis thing and should either be done at request (help:validate-project for ex) and then forgotten cause if user intend this usage (some deprecation have no replacement and are intended to be used temporarly). So for me we address a very good usage but with a wrong solution.",
      "@slawekjaranowski This is all about warnings being actionable.\r\n\r\nthis is what the Jdbi build tells me right now:\r\n\r\n```\r\n[WARNING] Plugin validation issues were detected in 11 plugin(s)\r\n[WARNING]\r\n[WARNING]  * org.apache.maven.plugins:maven-source-plugin:3.2.1\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 865\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin should declare these Maven artifacts in `provided` scope: [org.apache.maven:maven-settings-builder:3.0, org.apache.maven:maven-repository-metadata:3.0, org.apache.maven:maven-artifact:3.0, org.apache.maven:maven-plugin-api:3.0, org.apache.maven:maven-settings:3.0, org.apache.maven:maven-aether-p\r\nrovider:3.0, org.apache.maven:maven-model:3.0, org.apache.maven:maven-core:3.0, org.apache.maven:maven-model-builder:3.0]\r\n[WARNING]\r\n[WARNING]  * io.github.git-commit-id:git-commit-id-maven-plugin:5.0.0\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 812\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin should declare these Maven artifacts in `provided` scope: [org.apache.maven:maven-aether-provider:3.1.0-alpha-1, org.apache.maven:maven-settings:3.1.0-alpha-1, org.apache.maven:maven-settings-builder:3.1.0-alpha-1, org.apache.maven:maven-core:3.1.0-alpha-1, org.apache.maven:maven-model-builder:3\r\n.1.0-alpha-1, org.apache.maven:maven-model:3.1.0-alpha-1, org.apache.maven:maven-artifact:3.1.0-alpha-1, org.apache.maven:maven-repository-metadata:3.1.0-alpha-1, org.apache.maven:maven-plugin-api:3.1.0-alpha-1]\r\n[WARNING]\r\n[WARNING]  * org.jacoco:jacoco-maven-plugin:0.8.10\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 1013\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml)\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (target/new-pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin is a Maven 2.x plugin, which will be not supported in Maven 4.x\r\n[WARNING]    * Plugin mixes multiple Maven versions: [3.0, 2.0.2]\r\n[WARNING]    * Plugin should declare these Maven artifacts in `provided` scope: [org.apache.maven:maven-repository-metadata:3.0, org.apache.maven:maven-artifact:3.0]\r\n[WARNING]    * Plugin depends on plexus-container-default, which is EOL\r\n[WARNING]\r\n[WARNING]  * com.hubspot.maven.plugins:dependency-scope-maven-plugin:0.10\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 943\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (target/new-pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin should declare these Maven artifacts in `provided` scope: [org.apache.maven:maven-core:3.3.3, org.apache.maven:maven-model-builder:3.3.3, org.apache.maven:maven-plugin-api:3.3.3, org.apache.maven:maven-model:3.3.3, org.apache.maven:maven-builder-support:3.3.3, org.apache.maven:maven-settings:3.3.3, org.apache.maven:maven-aether-provider:3.3.3, org.apache.maven:maven-settings-builder:3.3.3, org.apache.maven:maven-repository-metadata:3.3.3, org.apache.maven:maven-artifact:3.3.3]\r\n[WARNING]\r\n[WARNING]  * org.apache.maven.plugins:maven-dependency-plugin:3.5.0\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 899\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (target/new-pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin depends on plexus-container-default, which is EOL\r\n[WARNING]   Mojo issue(s):\r\n[WARNING]    * Mojo dependency:analyze-only (org.apache.maven.plugins.dependency.analyze.AnalyzeOnlyMojo)\r\n[WARNING]      - Implements `Contextualizable` interface from Plexus Container, which is EOL.\r\n[WARNING]\r\n[WARNING]  * org.basepom.maven:property-helper-maven-plugin:3.0\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 786\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin depends on plexus-container-default, which is EOL\r\n[WARNING]   Mojo issue(s):\r\n[WARNING]    * Mojo property-helper:get (org.basepom.mojo.propertyhelper.GetPropertiesMojo)\r\n[WARNING]      - Implements `Contextualizable` interface from Plexus Container, which is EOL.\r\n[WARNING]\r\n[WARNING]  * com.github.spotbugs:spotbugs-maven-plugin:4.7.3.4\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 971\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (target/new-pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin depends on plexus-container-default, which is EOL\r\n[WARNING]\r\n[WARNING]  * org.apache.maven.plugins:maven-invoker-plugin:3.5.1\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml) @ line 166\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (target/new-pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin depends on plexus-container-default, which is EOL\r\n[WARNING]\r\n[WARNING]  * org.antlr:antlr4-maven-plugin:4.12.0\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml) @ line 133\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin should declare these Maven artifacts in `provided` scope: [org.apache.maven:maven-artifact:3.8.5, org.apache.maven:maven-repository-metadata:3.8.5, org.apache.maven:maven-settings-builder:3.8.5, org.apache.maven:maven-resolver-provider:3.8.5, org.apache.maven:maven-model-builder:3.8.5, org.apach\r\ne.maven:maven-core:3.8.5, org.apache.maven:maven-plugin-api:3.8.5, org.apache.maven:maven-model:3.8.5, org.apache.maven:maven-builder-support:3.8.5, org.apache.maven:maven-settings:3.8.5]\r\n[WARNING]\r\n[WARNING]  * org.apache.maven.plugins:maven-pmd-plugin:3.20.0\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 985\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (target/new-pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin depends on plexus-container-default, which is EOL\r\n[WARNING]   Mojo issue(s):\r\n[WARNING]    * Mojo pmd:pmd (org.apache.maven.plugins.pmd.PmdReport)\r\n[WARNING]      - Parameter 'localRepository' uses deprecated parameter expression '${localRepository}': ArtifactRepository type is deprecated and its use in Mojos should be avoided.\r\n[WARNING]\r\n[WARNING]  * org.apache.maven.plugins:maven-javadoc-plugin:3.5.0\r\n[WARNING]   Declared at location(s):\r\n[WARNING]    * org.basepom:basepom-foundation:54-SNAPSHOT (/Users/henning/.m2/repository/org/basepom/basepom-foundation/54-SNAPSHOT/basepom-foundation-54-SNAPSHOT.pom) @ line 851\r\n[WARNING]   Used in module(s):\r\n[WARNING]    * org.jdbi:jdbi3-core:3.38.3-SNAPSHOT (pom.xml)\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin depends on plexus-container-default, which is EOL\r\n```\r\n\r\nOf those:\r\n- 5x \"should declare dependencies in 'provided' scope\" - nothing I can do as an end user\r\n- 1x \"Is a Maven 2.0 plugin\"/\"mixes multiple maven versions\" - nothing I can do\r\n- 7x \"Plugin depends on plexus-container-default, which is EOL\" - nothing I can do\r\n- 2x \"Implements `Contextualizable` interface from Plexus Container, which is EOL\" - nothing I can do\r\n- 1x \"deprecated parameter expression '${localRepository}'\" - nothing I can do\r\n\r\nSo my build, which throws *zero* warnings using maven 3.8.x suddenly starts to list 16 scary sounding warnings in 11 plugins. And not a single one is actually actionable besides \"upgrade the plugin\" or \"report as a problem to the plugin author\"\r\n\r\nIf this were \"you use `<foo>` in your pom.xml, which is deprecated\", then that is an actionable warning and I am sure there would be zero pushback from anyone. In fact we already do that today (ironically in a different place) with problems with the pom (e.g. double-declared dependencies). Shouldn't that be part of the validator as well?\r\n\r\nI think @rmannibucau is correct. This is static analysis of the build and highlighting problems. Users may want to run those (I know that I want) and then choose to address them or free to ignore them. \r\n\r\nBut *forcing* them on the user without any option to opt out (adding a flag that users need to add explicitly in the next maven release does not count because it is technically not backwards compatible (adding the setting to a pom will cause warnings/errors with e.g. maven 3.9.2)) is a really bad idea. It is the equivalent of surfacing \"internal server error\" in an application to an end user. They can not do anything but \"refresh the browser and hope\".\r\n",
      "I think all this has been addressed and is merged (both maven-3.9.x and master). If you agree @hgschmie pls close this.",
      "Issue is closed https://issues.apache.org/jira/browse/MNG-7787\r\n@hgschmie - I hope this PR can also be closed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244057a14f302d393b58a0",
    "number": 1115,
    "body": "Refactored and now dropped the unused pluginDescriptor/dependencies validation. Now we have \"plugin dependency\" (using POM) components to perform dependency validation.\r\n\r\nAlso, two \"inlined\" validation from plugin dependencies resolver factored out to components, along with 3 existing moved to newly added (they were wrongly validating descriptor dependencies while intent was to validate \"real\" dependencies) validators.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7789",
    "head_branch": "maven-3.9.x-MNG-7789",
    "is_a_fork": true,
    "comments": [
      "This resolves my personal problem as well in really natural way: \"plugin dependencies\" are validated per-plugin level, while \"plugin descriptor dependencies\" were validated (and reported) per Mojo level, while it is plugin POM (so applicable to all Mojos within plugin) that may contains dependency problems, not standalone Mojos...",
      "Today, descriptor/dependencies are not used anywhere (maybe in some UTs) in maven, the POM drives plugin dependencies. Hence the realization and this PR (it moves existing code to check POM originating deps).\r\nThe descriptor/deps is at (plugin) build time derived from POM, and as we saw, is affected by possible mpp bugs like that one in 3.6.2",
      "> Today, descriptor/dependencies are not used anywhere (maybe in some UTs) in maven, the POM drives plugin dependencies. Hence the realization and this PR (it moves existing code to check POM originating deps).\r\n> The descriptor/deps is at (plugin) build time derived from POM, and as we saw, is affected by possible mpp bugs like that one in 3.6.2\r\n\r\nThen, why checking those and add validation warnings ? Wouldn't it make sense to actually deprecate them, not generate them anymore with the next m-p-p plugins and remove these checks ?",
      "This PR does not add any check to it, it actually moves them off from it. One check remains, thay yes, may be killed off actually.",
      "> This PR does not add any check to it, it actually moves them off from it. One check remains, thay yes, may be killed off actually.\r\n\r\nCan we then delete the `AbstractMavenPluginDescriptorDependenciesValidator` and `MavenArtifactsMavenPluginDescriptorDependenciesValidator` classes which are new ?\r\nThis would remove all usage of `PluginDescriptor#getDependencies()` from maven (apart from the `clone` and UTs).",
      "Will do that tomorrow, agreed.",
      "Plugin pom/descriptor dependencies can something else that is resolved by dependency collection and what finally is used to construct plugin class realm\r\nlike: https://gist.github.com/slawekjaranowski/c65612fca4094ec8a2d09c6db3b8f78a",
      "Pushed two commits:\r\n* removed descriptor dependencies validator (3 classes)\r\n* reworded/aligned emitted messages\r\n",
      "So this PR now contains all the changes I would like to have in here (as these needs to be ported to master as well).\r\n\r\nOnce this merged, then we should create another PR that _splits_ (by concern bearer) the emitted messages and/or reports them different or maybe even at different channels. That PR will also need to be ported to master as well, I guess."
    ],
    "commit_messages": [
      "[MNG-7789] Dependency validation rules used wrong data (#1115)\n\nRefactored and now dropped the unused pluginDescriptor/dependencies validation. Now we have \"plugin dependency\" (using POM) components to perform dependency validation.\r\n\r\nAlso, two \"inlined\" validation from plugin dependencies resolver factored out to components, along with 3 existing moved to newly added (they were wrongly validating descriptor dependencies while intent was to validate \"real\" dependencies) validators.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7789"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244058a14f302d393b58a1",
    "number": 1114,
    "body": "This change uses different technique to hook into \"session end\", and thus is invoked before ExecutionEventLogger is.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7788",
    "head_branch": "maven-3.9.x-MNG-7788",
    "is_a_fork": true,
    "comments": [
      "Example of \"before\" and \"after\" outputs: https://gist.github.com/cstamas/7c9bddbf4e8d96cdd9b73670d878e997"
    ],
    "commit_messages": [
      "[MNG-7788] Plugin Validation Report logged before summary (#1114)\n\nThis change uses different technique to hook into \"session end\", and thus is invoked before ExecutionEventLogger is.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7788"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244059a14f302d393b58a2",
    "number": 1113,
    "body": "Added NONE and INLINE modes.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7787\r\n",
    "head_branch": "maven-3.9.x-MNG-7787",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7787] Introduce new options for plugin validation report (#1113)\n\nAdded NONE and INLINE modes.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7787"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624405aa14f302d393b58a3",
    "number": 1112,
    "body": "Reword the validation warning and add new check for real plugin dependencies in wrong scopes (do not rely on build-time derived descriptor, but on real data instead).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7786\r\n",
    "head_branch": "maven-3.9.x-MNG-7786",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7786] Fix plugin validation misleading message (#1112)\n\nReword the validation warning and add new check for real plugin dependencies in wrong scopes (do not rely on build-time derived descriptor, but on real data instead).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7786"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624405aa14f302d393b58a4",
    "number": 1111,
    "body": "Backport of #1094 ",
    "head_branch": "MNG-7785-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7785] Clean usage of SessionData (#1111)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624405ca14f302d393b58a5",
    "number": 1110,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7783",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7783] Profile source point to file instead of to module (#1110)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624405ca14f302d393b58a6",
    "number": 1109,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7784",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7784] Fix compatibility for SuperPomProvider (#1109)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624405da14f302d393b58a7",
    "number": 1108,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7780",
    "is_a_fork": true,
    "comments": [
      "Please add also test case",
      "> Please add also test case\r\n\r\nDone.",
      "> Please simplify the logic which has not been updated since JDK 1.7\r\n\r\n@gnodet Done."
    ],
    "commit_messages": [
      "[MNG-7780] DefaultArtifact.equals throws NullPointerException if o.version is null (#1108)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624405ea14f302d393b58a8",
    "number": 1107,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624405fa14f302d393b58a9",
    "number": 1106,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244060a14f302d393b58aa",
    "number": 1105,
    "body": "This PR removes consumer*pom files from previous runs when the new consumer pom file is created. This way the build directory is not flooded with lots of `consumer*pom` files after a couple of runs.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [MNG-7740](https://issues.apache.org/jira/browse/MNG-7740) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n      where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-7740-clean-up-consumer-pom-files-in-target-dir",
    "is_a_fork": true,
    "comments": [
      "Closing this PR in favour of #1117 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244061a14f302d393b58ab",
    "number": 1104,
    "body": "Part of an ongoing effort to phase out StringUtils.\r\nhttps://issues.apache.org/jira/browse/MNG-6829\r\n\r\nUse this link to re-run the recipe: https://public.moderne.io/recipes/org.openrewrite.java.migrate.apache.commons.lang.IsNotEmptyToJdk?organizationId=QXBhY2hlIE1hdmVu\r\n\r\nReview requested of @elharo \r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "refactor/replace-any-string-utils-is-empty-string-and-is-not-empty-string",
    "is_a_fork": true,
    "comments": [
      "Some of these remove imports though right? But only when there's no other methods being called. There's quite a few `StringUtils.replace` that I'd like to tackle next, which should help remove further imports.\r\n\r\nI'd not reconsidered replacing imports yet (going from one string utils implementation to another), as it seemed removing was preferred over replacement. Is that still the case?\r\n\r\nWe can discuss what to tackle next and how to approach things going forward, as there were other concerns as well such as matching up per project Jira issues. Perhaps we can schedule a brief call or chat at a conference to discuss?",
      "I didn't notice any import changes. Maybe I just missed them. I'd expect that in some if not all of these files these would be the only methods used from StringUtils so I expected to see some import removals. "
    ],
    "commit_messages": [
      "[MNG-6829] Replace any StringUtils#isEmpty(String) and #isNotEmpty(String) (#1104)\n\n* [MNG-6829] Replace any StringUtils#isEmpty(String) and #isNotEmpty(String)\r\n\r\nUse this link to re-run the recipe: https://public.moderne.io/recipes/org.openrewrite.java.migrate.apache.commons.lang.IsNotEmptyToJdk?organizationId=QXBhY2hlIE1hdmVu\r\n\r\nCo-authored-by: Moderne <team@moderne.io>\r\n\r\n* Apply Spotless\r\n\r\n---------\r\n\r\nCo-authored-by: Moderne <team@moderne.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244062a14f302d393b58ac",
    "number": 1103,
    "body": "Instead of only including causes, suppressed exceptions are now included\r\nas well. A similar indentation strategy as in\r\n`Throwable.printStackTrace` is used.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7778",
    "head_branch": "mng-7778",
    "is_a_fork": true,
    "comments": [
      "You need to reformat: pls `mvn spotless:apply` and commit",
      "@marcphilipp heads up, pushed the reformat commit to your branch"
    ],
    "commit_messages": [
      "[MNG-7778] - Include suppressed exceptions when logging failures (#1103)\n\nInstead of only including causes, suppressed exceptions are now included\r\nas well. A similar indentation strategy as in\r\n`Throwable.printStackTrace` is used.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7778"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244063a14f302d393b58ad",
    "number": 1102,
    "body": "From 1.9.8\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7769",
    "head_branch": "MNG-7769",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7769] Update Resolver to 1.9.10 (#1102)\n\nFrom 1.9.8\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7769"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244064a14f302d393b58ae",
    "number": 1101,
    "body": "From 1.9.8\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7769",
    "head_branch": "maven-3.9.x-MNG-7769",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7769] Update Resolver to 1.9.10 (#1101)\n\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7769"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244065a14f302d393b58af",
    "number": 1100,
    "body": "Changes:\r\n* resolve file argument against workingDirectory explicitly\r\n* the check Files.isRegularFile should happen against path\r\n",
    "head_branch": "MNG-7038-fix-topDirectory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7038] Fixes for topDirectory (#1100)\n\nChanges:\r\n* resolve file argument against workingDirectory explicitly\r\n* the check Files.isRegularFile should happen against path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244066a14f302d393b58b0",
    "number": 1099,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7714",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7714] Fixed a scenario in version sorting where sp1 is less than final (#1099)\n\n* Fixed a scenario in version sorting where sp1 is less than final"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244067a14f302d393b58b1",
    "number": 1098,
    "body": "Reuse as much as possible from master, but keep existing stuff like multiModuleProjectDirectory alone.\r\n\r\nChanges:\r\n* interpolate user properties and arguments\r\n* introduce session.topDirectory and session.rootDirectory expressions (for interpolation only)\r\n* Maven fails to start if any of the new properties are undefined but their use is attempted\r\n* leave everything else untouched\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7774",
    "head_branch": "maven-3.9.x-MNG-7774-take-two",
    "is_a_fork": true,
    "comments": [
      "Does this actually supersede https://github.com/apache/maven/pull/1062?",
      "> Does this actually supersede #1062?\r\n\r\nNo, that one is for master and builds on top of already present new mvn4 features not present in 3.9.x. This PR is for 3.9.x and \"mildly follows\" the one you refer to, with reduced functionalities. For example, that one uses `RootLocator` (already on master) while we have no such thing. Master also uses two strategies to identify \"root\", but it requires consumer POM feature, again not available here, etc. This PR provides \"minimum viable change\" to provide in 3.9.x:\r\n* config and command line interpolation\r\n* two new properties (but for interpolation ONLY), unlike on master, where these two bubble up to session and project\r\n* the UT is intentionally 1:1 (so it IS copy pasted from referenced PR)",
      "Anyone else?",
      "@cstamas I think the description of adding this command in `mvn -help` is still missing.",
      "> @cstamas I think the description of adding this command in `mvn -help` is still missing.\r\n\r\nWhich command? No command was added or modified in Maven CLI",
      "> > @cstamas I think the description of adding this command in `mvn -help` is still missing.\r\n> \r\n> Which command? No command was added or modified in Maven CLI\r\n\r\nMy mistake was that I didn't see it clearly. There was nothing wrong with 3.9.x. There are too many maven versions for my local development.  😢   @cstamas \r\n"
    ],
    "commit_messages": [
      "[MNG-7774] Maven config and command line interpolation (#1098)\n\nReuse as much as possible from master, but keep existing stuff like multiModuleProjectDirectory alone.\r\n\r\nChanges:\r\n* interpolate user properties and arguments\r\n* introduce session.topDirectory and session.rootDirectory expressions (for interpolation only)\r\n* Maven fails to start if any of the new properties are undefined but their use is attempted\r\n* leave everything else untouched\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7774"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244068a14f302d393b58b2",
    "number": 1097,
    "body": "This is \"mild introduction\" of subset of new Maven4 features into Maven 3.9.x land, with single intent: be able to store resolver configuration along with checked in project sources in SCM.\r\n\r\nChanges:\r\n* interpolate properties and arguments\r\n* introduce two new special properties \"session.rootDirectory\" and \"session.topDirectory\"\r\n* these two properties may be undefined (the .mvn may not be found)\r\n* these two properties if undefined, but referenced during interpolation, causes Maven to bail out (error out), and will prevent starting.\r\n* some other minor cosmetic cleanup\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7774",
    "head_branch": "maven-3.9.x-MNG-7774-config-interpolation",
    "is_a_fork": true,
    "comments": [
      "superseded by https://github.com/apache/maven/pull/1098"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244069a14f302d393b58b3",
    "number": 1096,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7639",
    "is_a_fork": true,
    "comments": [
      "@CrazyHZM - please select checkboxes (at least one) about license acknowledge",
      "> @CrazyHZM - please select checkboxes (at least one) about license acknowledge\r\n\r\nDone. "
    ],
    "commit_messages": [
      "[MNG-7639] Add unit test for DefaultRepositorySystemSessionFactory#newRepositorySession (#1096)\n\nSigned-off-by: crazyhzm <crazyhzm@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624406aa14f302d393b58b4",
    "number": 1095,
    "body": "This has been intentionally broken up into two commits/issues:\r\n\r\n* [MNG-7771](https://issues.apache.org/jira/browse/MNG-7771) uses rather synthetic exception messages rather than to rely on the order of exception messages in `ArtifactResult`. No more first wins.\r\n* [MNG-7770](https://issues.apache.org/jira/browse/MNG-7770) is an attempt to create a workaround meanwhile. \r\n\r\nTwo IT failures:\r\n* MNG-7128 (repo blocker): The exception for POM contains two exceptions (1) TransferException (blocked), (2) ArtifactNotFoundException (not in `file:target/null`) , the behavioral change is that the POM is now considered missing and the JAR fails. Previously, it failed already with the POM.\r\n* MNG-3470 (checksum validation fails): Similar case, the checksum validation of the POM fails, it is not considered as missing, the build succeeds since the checksum for the JAR was fine. This is a behavioral change since the validation exception is traded for a not found exception in `file:target/null`).\r\n\r\nSee output: https://gist.github.com/michael-o/c9932567ac004a30021d44a464a37dbf\r\n\r\nOne of the general questions is: When is an artifact consindered not to be found? When ALL repos say not found, or is one sufficient? What if one repo is technically offline which could or could not contain it, then rest does not contain? Why fail the build?\r\n\r\nImportant reads:\r\n* https://issues.apache.org/jira/browse/MNG-7758\r\n* https://issues.apache.org/jira/browse/MRESOLVER-335\r\n\r\nLet me know what you think.",
    "head_branch": "MNG-7758_workaround",
    "is_a_fork": false,
    "comments": [
      "Here is a non-sense exception message since it uses only the the first result and the first exception:\r\n```\r\n[ERROR] Failed to execute goal on project service-controller: Could not resolve dependencies for project com.siemens.lda.cafe:service-controller:jar:2.5-SNAPSHOT: The following artifacts could not be resolved: org.awaitility1:awaitility1:jar:3.1.6 (absent), com.siemens.lda.cafe:lda-cafe-module-dd-schema1:jar:1.0.0 (absent): Could not transfer artifact org.awaitility1:awaitility1:jar:3.1.6 from/to lda-public (https://deblndw011x.ad001.siemens.net/nexus/content/groups/lda-public/): status code: 403, reason phrase: Forbidden (403) -> [Help 1]\r\n```\r\n`awaitility1` cannot be searched in `lda-public`, but for `da-cafe-module-dd-schema1` nothing is said because in all repos it gives 404. The message is simply misleading.\r\n\r\nMessage w/o the patch:\r\n```\r\n[ERROR] Failed to execute goal on project service-controller: Could not resolve dependencies for project com.siemens.lda.cafe:service-controller:jar:2.5-SNAPSHOT: Failed to collect dependencies at org.awaitility1:awaitility1:jar:3.1.6: Failed to read artifact descriptor for org.awaitility1:awaitility1:jar:3.1.6: Could not transfer artifact org.awaitility1:awaitility1:pom:3.1.6 from/to lda-public (https://deblndw011x.ad001.siemens.net/nexus/content/groups/lda-public/): authorization failed for https://deblndw011x.ad001.siemens.net/nexus/content/groups/lda-public/org/awaitility1/awaitility1/3.1.6/awaitility1-3.1.6.pom, status: 403 Forbidden -> [Help 1]\r\n```\r\n\r\nNo word about the second missing dependency.",
      "Why are ITs failing?",
      "> Why are ITs failing?\r\n\r\nExplanation provided above. ",
      "Am really unsure about all this: IMHO it is completely enough for resolver to state \"unable to resolve GAV\" (something that is absent or present in local repo, and that message is already present), instead to go great lengths and try to figure out instead of user. As you listed, there are MANY tricky situations, like lack oof (or wrong) auth credentials, but again, that does NOT guarantee that if fixed, artifact will be resolved. \r\n\r\nIMHO, we should just increase the level of logged causes (maybe even for all tried repositories) and let user figure out?",
      "> Am really unsure about all this: IMHO it is completely enough for resolver to state \"unable to resolve GAV\" (something that is absent or present in local repo, and that message is already present), instead to go great lengths and try to figure out instead of user. As you listed, there are MANY tricky situations, like lack oof (or wrong) auth credentials, but again, that does NOT guarantee that if fixed, artifact will be resolved.\r\n> \r\n> IMHO, we should just increase the level of logged causes (maybe even for all tried repositories) and let user figure out?\r\n\r\nThis is why I have asked. How should be an absent dependency defined? Only not found or anything else too? That is why this is a draft."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624406ba14f302d393b58b5",
    "number": 1094,
    "body": null,
    "head_branch": "session-data",
    "is_a_fork": true,
    "comments": [
      "Yup, would be nice to have this backporte, if applicable"
    ],
    "commit_messages": [
      "[MNG-7785] Clean usage of SessionData (#1094)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624406ca14f302d393b58b6",
    "number": 1093,
    "body": "Following up various discussions, this PR removes the custom packaged `plexus-utils` and  switches to `plexus-utils` and `plexus-xml` 4.",
    "head_branch": "plexus-utils-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7655] Switch to plexus-utils / plexus-xml 4 (#1093)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624406da14f302d393b58b7",
    "number": 1092,
    "body": "This change reduces default output making it more compact, and also renames the \"levels\" to brief, default and verbose.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7767",
    "head_branch": "maven-3.9.x-MNG-7767-tone-down-plugin-validation",
    "is_a_fork": true,
    "comments": [
      "> I am really confused why `RepositorySystemSession` and `ConfigUtils` are used here. They feel a bit misplaced in plugin validation, don't they?\r\n\r\nWell, this PR does not change anything about that. But, as validation is per session, the session is really the only thing that offers itself to store things in \"natural\" way. MavenSession does not have any means for this, so it is resolver session data that is used. It is done like it as this guarantees that validator does do what it needs to do in correct way in single-threaded and multi-threaded mvn and also in mvnd.",
      "> > I am really confused why `RepositorySystemSession` and `ConfigUtils` are used here. They feel a bit misplaced in plugin validation, don't they?\r\n> \r\n> Well, this PR does not change anything about that. But, as validation is per session, the session is really the only thing that offers itself to store things in \"natural\" way. MavenSession does not have any means for this, so it is resolver session data that is used. It is done like it as this guarantees that validator does do what it needs to do in correct way in single-threaded and multi-threaded mvn and also in mvnd.\r\n\r\nI understand that, but still looks like because it is not the right storage for this. Maven session contains user and system properties.",
      "Maven session contains user and system properties? Well, nope, it does not, it contains request, and those are `java.util.Properties` that may not contains \"any object\" and also does not offer any concurrent methods like putIfAbsent...",
      "> Maven session contains user and system properties? Well, nope, it does not, it contains request, and those are `java.util.Properties` that may not contains \"any object\" and also does not offer any concurrent methods like putIfAbsent...\r\n\r\nhttps://maven.apache.org/ref/3.3.9/maven-core/apidocs/org/apache/maven/execution/MavenSession.html#getUserProperties()\r\n\r\n`#getProperty(String)` gives you a string. The abuse of `RSS` is in indicator of missing bits in `MavenSession`.",
      "> `#getProperty(String)` gives you a string. The abuse of `RSS` is in indicator of missing bits in `MavenSession`.\r\n\r\nAgain, I agree completely, but again, this PR is not about \"adding missing bits to maven session\"",
      "> > `#getProperty(String)` gives you a string. The abuse of `RSS` is in indicator of missing bits in `MavenSession`.\r\n> \r\n> Again, I agree completely, but again, this PR is not about \"adding missing bits to maven session\"\r\n\r\nI know, I don't object this PR, I just noticed this. I will raise an issue.",
      "Question: If the users passes `mvn -DKEY` Maven will pass `true` as value. Do you want to accept this silently or reject?",
      "Done: https://issues.apache.org/jira/browse/MNG-7768",
      "> Question: If the users passes `mvn -DKEY` Maven will pass `true` as value. Do you want to accept this silently or reject?\r\n\r\nSure. The existing behavior of validation manager is aligned: it changes output level ONLY if value user passed is ANY of the 2 non-default values, otherwise is default. So to say, \"true\" would yield \"default\" as well.",
      "> > Question: If the users passes `mvn -DKEY` Maven will pass `true` as value. Do you want to accept this silently or reject?\r\n> \r\n> Sure. The existing behavior of validation manager is aligned: it changes output level ONLY if value user passed is ANY of the 2 non-default values, otherwise is default. So to say, \"true\" would yield \"default\" as well.\r\n\r\nHave you actually tried? I think that `\"true\"` will be returned by `ConfigUtils` and it will fail with IAE.",
      "Did not, just the code make it happen: validator uses resolver ConfigUtil:\r\nhttps://github.com/apache/maven/pull/1092/files#diff-9478004903992887e1696cebb44ffb9cb99032f9d25db4447e734c4a26930229L68\r\nthat on other hand does this:\r\nhttps://github.com/apache/maven-resolver/blob/master/maven-resolver-util/src/main/java/org/eclipse/aether/util/ConfigUtils.java#L92",
      "> Did not, just the code make it happen: validator uses resolver ConfigUtil: https://github.com/apache/maven/pull/1092/files#diff-9478004903992887e1696cebb44ffb9cb99032f9d25db4447e734c4a26930229L68 that on other hand does this: https://github.com/apache/maven-resolver/blob/master/maven-resolver-util/src/main/java/org/eclipse/aether/util/ConfigUtils.java#L92\r\n\r\nIt won't return `boolean`, but `\"true\"` as a string.",
      "IMHO this above IS aligned with my statement: \"it changes output level ONLY if value user passed is ANY of the 2 non-default values, otherwise is default\"\r\n\r\nIn your case, it remained DEFAULT. Also, this property does not affect Maven functionality (build, plugin or whatever wise), it merely controls the level of output, I see no value of failing for invalid input (as in other case, it may affect output of build, ie. making it incomplete or whatever... but again, this property does not affect anything functionality wise, merely the report detail). Validation happens \"as early\" as plugins are about to resolve, that is already \"late\".\r\n\r\nI really don't want to spread this all over the place just to achieve some \"ideal\" state: i'd rather keep it simple and focused. To achieve early validation, we need some early hook that would involve and perform validation, etc... is it all really worth it? Again, this is really just a splat to user face, to update the build. If he mistypes the property value, and instead of \"quiet\" output \"default\" output happens, is it the end of the world? Should the build break for it? Am unsure. \r\n\r\n@slawekjaranowski @gnodet or anyone else? Any opinion?",
      "Am merging this PR, my parallel with log levels still stand (as the property is really just like a log level, does not alter anything else, just the amount of validation output)"
    ],
    "commit_messages": [
      "[MNG-7767] Tone down plugin validator (#1092)\n\nThis change reduces default output making it more compact, and also renames the \"levels\" to brief, default and verbose.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7767"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624406ea14f302d393b58b8",
    "number": 1091,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7451",
    "is_a_fork": false,
    "comments": [
      "what is the reason of this? I cannot find any justification of what brings those changes?",
      "Since JUnit Jupiter it's not neccessary to have public test classes and test methods...",
      "> Since JUnit Jupiter it's not neccessary to have public test classes and test methods...\r\n\r\nah right. thanks",
      "> I hope that JavaDocs for test classes are not generated. When we have no public items, JavaDocs will produce error.\r\n\r\nAh good hint...based on the current setup https://maven.apache.org/ref/4.0.0-alpha-5/apidocs/index.html  There seemed to be no javadoc for test classes at all because we don't have a \"reporting\" area in the modules anymore.\r\n\r\nAlso tried to run the site generation including the `reporting` profile without any issue."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624406fa14f302d393b58b9",
    "number": 1090,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7766",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7766] - Migrate to use mockito-bom 4.11.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244070a14f302d393b58ba",
    "number": 1089,
    "body": "And do align them. Max Level is Java 8, but\r\nwe had several conflicts, like HttpClient\r\n(used by Wagon but also by Resolver-Transport-Http).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7670",
    "head_branch": "maven-3.9.x-MNG-7670-deps",
    "is_a_fork": true,
    "comments": [
      "@michael-o on JIRA you mention \"Commons CLI must not be touched because the upgrade requires also code changes. See master.\". What code changes you mean here?\r\n\r\nI found this https://github.com/apache/maven/commit/4476026c525a22900c6c5e4f0de6f7362cb201f2 but here parser is changed. Is it necessary? GnuParser is already deprecated (was in 1.3), but imho does not require code change, or I miss somethin?",
      "> @michael-o on JIRA you mention \"Commons CLI must not be touched because the upgrade requires also code changes. See master.\". What code changes you mean here?\r\n> \r\n> I found this [4476026](https://github.com/apache/maven/commit/4476026c525a22900c6c5e4f0de6f7362cb201f2) but here parser is changed. Is it necessary? GnuParser is already deprecated (was in 1.3), but imho does not require code change, or I miss somethin?\r\n\r\nThe migration introduces a slight incompat problem. That is why we did not touch it in 3.x. The previous impl was ugly, now I'd say that it is correct.",
      "@michael-o so this PR is okay?",
      "> @michael-o so this PR is okay?\r\n\r\nYes, this is OK, if all ITs pass and if it is a sole CLI update w/o back porting the code from master. Honestly, I would back port the code from master with a separate issue.",
      "@michael-o so you approve it?"
    ],
    "commit_messages": [
      "[MNG-7670] Update misc dependencies (#1089)\n\nAnd do align them. Max Level is Java 8, but\r\nwe had several conflicts, like HttpClient\r\n(used by Wagon but also by Resolver-Transport-Http).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7670"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244071a14f302d393b58bb",
    "number": 1088,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7764",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7764] Small code improvements (#1088)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244072a14f302d393b58bc",
    "number": 1087,
    "body": "![image](https://user-images.githubusercontent.com/27761321/231780319-a2da8b0a-93a7-4f6b-a755-638059eedfa6.png)\r\n(Locally installed multiple versions of a dummy plugin, version 2.0.0-SNAPSHOT just throws an exception)\r\n\r\nI'm not sure if this is the correct approach to this issue and I would like to hear your thoughts.\r\n\r\n1. I'm currently checking `MojoExecutionException` as trigger to check if there are newer plugin versions available, but I'm unaware of alternatives to this. I've tried the `AbstractMojoExecutionException` to catch `MojoFailureException` as well, however this will also trigger the check for test failures for example which seems an unlikely case of wanting to upgrade the test plugin.\r\n\r\n    [These docs](https://maven.apache.org/developers/mojo-api-specification.html#org-apache-maven-plugin-mojo) lead me to believe the `MojoExecutionException` is something the plugin can not recover from, which makes me think this is a case of perhaps upgrading your plugin. Or perhaps I should enrich via the `PluginManagerException` or [once any exception comes out of the mojo.execute()](https://github.com/apache/maven/blob/b7a3d857136ec89bdfe35aea05ed2746f09de162/maven-core/src/main/java/org/apache/maven/lifecycle/internal/MojoExecutor.java#L341). I'm not sure if these are correct assumptions.\r\n    \r\n    Perhaps any uncaught exceptions should be caught and rethrown while adding some metadata/new exception to identify it in the ExceptionHandler?\r\n    \r\n    Trying to filter a blacklist of plugins that should not to be checked in some in-memory list doesn't seem like a better approach.\r\n\r\n2. It would be nice to fill the reference with some sort of link to the plugin or the version that is suggested. So that the user can see `-> [Help X]` and `[Help x] http://link-to-plugin-or-version`. I can't find one in the `PluginDescriptor` or similar classes through the `MavenPluginManager` and `PluginResolver` classes. Perhaps there is another way of retrieving this?\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [MNG-6934](https://issues.apache.org/jira/browse/MNG-6934) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-6934-suggest-plugin-upgrade-in-case-of-failure",
    "is_a_fork": true,
    "comments": [
      "I don't think there are unnecessary connections as they are required to check if the plugin is using the latest version _if the Jira ticket is still something Maven wants to provide_. I don't think you can resolve this issue within Maven without outbound connections?\r\n\r\nAn alternative could be to check only the local repository, but I don't think this is a good idea as the user may or may not have higher versions of the plugin installed.\r\n\r\nOr it could just log a suggestion like: \"Please consider checking you are using the latest version of the 'xxx' plugin\", however that kind of defeats the purpose of automatically checking for newer version.",
      "This is -1 from me: Maven in case of failure to go remote and look for new plugin version?\r\n\r\nI'd simply emit message (for ASF plugins) that points user to this page: https://maven.apache.org/plugins/ and for non-ASF plugins with meaningful message like \"please do you use latest version of this plugin\". Maybe even mention this Mojo/page https://www.mojohaus.org/versions/versions-maven-plugin/display-plugin-updates-mojo.html\r\n",
      "Closing PR as discussed in ticket and here. We don't see a correct way to be absolutely sure an upgrade will result in resolving the issue, and you can not depend on the exceptions thrown by the plugins."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244073a14f302d393b58bd",
    "number": 1086,
    "body": "A rough concept how could it work: this skipper simply plugs into lifecycle calculator and skips (removes) filtered out MojoExecutions.\r\n\r\nExpression is simple: `G[:A[:g[:e]]]` (comma separated)\r\n\r\nWhere `G` means \"groupId\" and can be:\r\n* `\"\"` (empty string) -- means \"default plugin groupIds\" (as in user settings)\r\n* `\"*\"` (asterisk) -- any\r\n* `\"string\"` -- string equality for groupId\r\n\r\n`A` (artifactId), `g` (goal) and `e` (executionId) may have values:\r\n* `\"*\"` (asterisk) -- any (implied if not given)\r\n* \"string\" -- string equality for artifactId, goal or executionId respectively.\r\n\r\nExamples:\r\n* `-Dmaven.lifecycle.filter=` (same as \"\" empty string) - any plugin in \"default\" plugin groups (by default org.apache.maven.plugins and org.codehaus.mojo)\r\n* `-Dmaven.lifecycle.filter=:buildnumber-maven-plugin,:maven-enforcer-plugin` -- buildnumber codehaus and enforcer ASF plugin\r\n* `-Dmaven.lifecycle.filter=:*:*:enforce-java-version` - any \"default\" plugin execution with execution ID of \"enforce-java-version\"\r\n* `-Dmaven.lifecycle.filter=*` - exclude all (funnily, maven will happily do nothing, no mojo will run)\r\n\r\nExample invocations (only with relevant output):\r\n```\r\n$ mvn -f maven-core buildplan:list   // this is \"original\" plan\r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nPHASE                  | PLUGIN                        | VERSION  | GOAL                   | EXECUTION ID                                \r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-bytecode-version                    \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-maven-version                       \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-java-version                        \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | ensure-no-sonatype-cipher-and-sec-dispatcher\r\ninitialize             | buildnumber-maven-plugin      | 1.4      | create                 | create-buildnumber                          \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | java                   | modello                                     \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-reader            | modello                                     \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-writer            | modello                                     \r\nverify                 | spotless-maven-plugin         | 2.28.0   | check                  | default                                     \r\nverify                 | maven-checkstyle-plugin       | 3.2.0    | check                  | checkstyle-check                            \r\ngenerate-resources     | maven-remote-resources-plugin | 1.7.0    | process                | process-resource-bundles                    \r\nprocess-resources      | maven-resources-plugin        | 3.3.0    | resources              | default-resources                           \r\ncompile                | maven-compiler-plugin         | 3.10.1   | compile                | default-compile                             \r\nprocess-test-classes   | animal-sniffer-maven-plugin   | 1.23     | check                  | check-java-compat                           \r\nprocess-classes        | plexus-component-metadata             | 2.1.0    | generate-metadata      | default                                     \r\nprocess-classes        | sisu-maven-plugin             | 0.3.5    | main-index             | index-project                               \r\nprocess-test-resources | maven-resources-plugin        | 3.3.0    | testResources          | default-testResources                       \r\ntest-compile           | maven-compiler-plugin         | 3.10.1   | testCompile            | default-testCompile                         \r\nprocess-test-classes   | plexus-component-metadata             | 2.1.0    | generate-test-metadata | default                                     \r\nprocess-test-classes   | sisu-maven-plugin             | 0.3.5    | test-index             | index-project                               \r\ntest                   | maven-surefire-plugin         | 3.0.0-M7 | test                   | default-test                                \r\npackage                | maven-jar-plugin              | 3.3.0    | jar                    | default-jar                                 \r\npackage                | maven-site-plugin             | 3.12.1   | attach-descriptor      | attach-descriptor                           \r\ninstall                | maven-install-plugin          | 3.1.0    | install                | default-install                             \r\ndeploy                 | maven-deploy-plugin           | 2.8.2    | deploy                 | default-deploy                              \r\n\r\n$ mvn -f maven-core buildplan:list -Dmaven.lifecycle.filter=*:modello-maven-plugin // exclude whole modello plugin\r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nPHASE                  | PLUGIN                        | VERSION  | GOAL                   | EXECUTION ID                                \r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-bytecode-version                    \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-maven-version                       \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-java-version                        \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | ensure-no-sonatype-cipher-and-sec-dispatcher\r\ninitialize             | buildnumber-maven-plugin      | 1.4      | create                 | create-buildnumber                          \r\nverify                 | spotless-maven-plugin         | 2.28.0   | check                  | default                                     \r\nverify                 | maven-checkstyle-plugin       | 3.2.0    | check                  | checkstyle-check                            \r\ngenerate-resources     | maven-remote-resources-plugin | 1.7.0    | process                | process-resource-bundles                    \r\nprocess-resources      | maven-resources-plugin        | 3.3.0    | resources              | default-resources                           \r\ncompile                | maven-compiler-plugin         | 3.10.1   | compile                | default-compile                             \r\nprocess-test-classes   | animal-sniffer-maven-plugin   | 1.23     | check                  | check-java-compat                           \r\nprocess-classes        | plexus-component-metadata             | 2.1.0    | generate-metadata      | default                                     \r\nprocess-classes        | sisu-maven-plugin             | 0.3.5    | main-index             | index-project                               \r\nprocess-test-resources | maven-resources-plugin        | 3.3.0    | testResources          | default-testResources                       \r\ntest-compile           | maven-compiler-plugin         | 3.10.1   | testCompile            | default-testCompile                         \r\nprocess-test-classes   | plexus-component-metadata             | 2.1.0    | generate-test-metadata | default                                     \r\nprocess-test-classes   | sisu-maven-plugin             | 0.3.5    | test-index             | index-project                               \r\ntest                   | maven-surefire-plugin         | 3.0.0-M7 | test                   | default-test                                \r\npackage                | maven-jar-plugin              | 3.3.0    | jar                    | default-jar                                 \r\npackage                | maven-site-plugin             | 3.12.1   | attach-descriptor      | attach-descriptor                           \r\ninstall                | maven-install-plugin          | 3.1.0    | install                | default-install                             \r\ndeploy                 | maven-deploy-plugin           | 2.8.2    | deploy                 | default-deploy                              \r\n\r\n$ mvn -f maven-core buildplan:list -Dmaven.lifecycle.filter=*:modello-maven-plugin:java // exclude java mojo\r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nPHASE                  | PLUGIN                        | VERSION  | GOAL                   | EXECUTION ID                                \r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-bytecode-version                    \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-maven-version                       \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-java-version                        \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | ensure-no-sonatype-cipher-and-sec-dispatcher\r\ninitialize             | buildnumber-maven-plugin      | 1.4      | create                 | create-buildnumber                          \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-reader            | modello                                     \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-writer            | modello                                     \r\nverify                 | spotless-maven-plugin         | 2.28.0   | check                  | default                                     \r\nverify                 | maven-checkstyle-plugin       | 3.2.0    | check                  | checkstyle-check                            \r\ngenerate-resources     | maven-remote-resources-plugin | 1.7.0    | process                | process-resource-bundles                    \r\nprocess-resources      | maven-resources-plugin        | 3.3.0    | resources              | default-resources                           \r\ncompile                | maven-compiler-plugin         | 3.10.1   | compile                | default-compile                             \r\nprocess-test-classes   | animal-sniffer-maven-plugin   | 1.23     | check                  | check-java-compat                           \r\nprocess-classes        | plexus-component-metadata             | 2.1.0    | generate-metadata      | default                                     \r\nprocess-classes        | sisu-maven-plugin             | 0.3.5    | main-index             | index-project                               \r\nprocess-test-resources | maven-resources-plugin        | 3.3.0    | testResources          | default-testResources                       \r\ntest-compile           | maven-compiler-plugin         | 3.10.1   | testCompile            | default-testCompile                         \r\nprocess-test-classes   | plexus-component-metadata             | 2.1.0    | generate-test-metadata | default                                     \r\nprocess-test-classes   | sisu-maven-plugin             | 0.3.5    | test-index             | index-project                               \r\ntest                   | maven-surefire-plugin         | 3.0.0-M7 | test                   | default-test                                \r\npackage                | maven-jar-plugin              | 3.3.0    | jar                    | default-jar                                 \r\npackage                | maven-site-plugin             | 3.12.1   | attach-descriptor      | attach-descriptor                           \r\ninstall                | maven-install-plugin          | 3.1.0    | install                | default-install                             \r\ndeploy                 | maven-deploy-plugin           | 2.8.2    | deploy                 | default-deploy                              \r\n\r\n$ mvn -f maven-core buildplan:list -Dmaven.lifecycle.filter=*:maven-enforcer-plugin:enforce // exclude enforce mojo\r\n---------------------------------------------------------------------------------------------------------------------\r\nPHASE                  | PLUGIN                        | VERSION  | GOAL                   | EXECUTION ID            \r\n---------------------------------------------------------------------------------------------------------------------\r\ninitialize             | buildnumber-maven-plugin      | 1.4      | create                 | create-buildnumber      \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | java                   | modello                 \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-reader            | modello                 \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-writer            | modello                 \r\nverify                 | spotless-maven-plugin         | 2.28.0   | check                  | default                 \r\nverify                 | maven-checkstyle-plugin       | 3.2.0    | check                  | checkstyle-check        \r\ngenerate-resources     | maven-remote-resources-plugin | 1.7.0    | process                | process-resource-bundles\r\nprocess-resources      | maven-resources-plugin        | 3.3.0    | resources              | default-resources       \r\ncompile                | maven-compiler-plugin         | 3.10.1   | compile                | default-compile         \r\nprocess-test-classes   | animal-sniffer-maven-plugin   | 1.23     | check                  | check-java-compat       \r\nprocess-classes        | plexus-component-metadata             | 2.1.0    | generate-metadata      | default                 \r\nprocess-classes        | sisu-maven-plugin             | 0.3.5    | main-index             | index-project           \r\nprocess-test-resources | maven-resources-plugin        | 3.3.0    | testResources          | default-testResources   \r\ntest-compile           | maven-compiler-plugin         | 3.10.1   | testCompile            | default-testCompile     \r\nprocess-test-classes   | plexus-component-metadata             | 2.1.0    | generate-test-metadata | default                 \r\nprocess-test-classes   | sisu-maven-plugin             | 0.3.5    | test-index             | index-project           \r\ntest                   | maven-surefire-plugin         | 3.0.0-M7 | test                   | default-test            \r\npackage                | maven-jar-plugin              | 3.3.0    | jar                    | default-jar             \r\npackage                | maven-site-plugin             | 3.12.1   | attach-descriptor      | attach-descriptor       \r\ninstall                | maven-install-plugin          | 3.1.0    | install                | default-install         \r\ndeploy                 | maven-deploy-plugin           | 2.8.2    | deploy                 | default-deploy          \r\n\r\n$ mvn -f maven-core buildplan:list -Dmaven.lifecycle.filter=:maven-enforcer-plugin:enforce:enforce-maven-version // exclude enforce maven execution\r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nPHASE                  | PLUGIN                        | VERSION  | GOAL                   | EXECUTION ID                                \r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-bytecode-version                    \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | enforce-java-version                        \r\nvalidate               | maven-enforcer-plugin         | 3.1.0    | enforce                | ensure-no-sonatype-cipher-and-sec-dispatcher\r\ninitialize             | buildnumber-maven-plugin      | 1.4      | create                 | create-buildnumber                          \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | java                   | modello                                     \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-reader            | modello                                     \r\ngenerate-sources       | modello-maven-plugin          | 2.0.0    | xpp3-writer            | modello                                     \r\nverify                 | spotless-maven-plugin         | 2.28.0   | check                  | default                                     \r\nverify                 | maven-checkstyle-plugin       | 3.2.0    | check                  | checkstyle-check                            \r\ngenerate-resources     | maven-remote-resources-plugin | 1.7.0    | process                | process-resource-bundles                    \r\nprocess-resources      | maven-resources-plugin        | 3.3.0    | resources              | default-resources                           \r\ncompile                | maven-compiler-plugin         | 3.10.1   | compile                | default-compile                             \r\nprocess-test-classes   | animal-sniffer-maven-plugin   | 1.23     | check                  | check-java-compat                           \r\nprocess-classes        | plexus-component-metadata             | 2.1.0    | generate-metadata      | default                                     \r\nprocess-classes        | sisu-maven-plugin             | 0.3.5    | main-index             | index-project                               \r\nprocess-test-resources | maven-resources-plugin        | 3.3.0    | testResources          | default-testResources                       \r\ntest-compile           | maven-compiler-plugin         | 3.10.1   | testCompile            | default-testCompile                         \r\nprocess-test-classes   | plexus-component-metadata             | 2.1.0    | generate-test-metadata | default                                     \r\nprocess-test-classes   | sisu-maven-plugin             | 0.3.5    | test-index             | index-project                               \r\ntest                   | maven-surefire-plugin         | 3.0.0-M7 | test                   | default-test                                \r\npackage                | maven-jar-plugin              | 3.3.0    | jar                    | default-jar                                 \r\npackage                | maven-site-plugin             | 3.12.1   | attach-descriptor      | attach-descriptor                           \r\ninstall                | maven-install-plugin          | 3.1.0    | install                | default-install                             \r\ndeploy                 | maven-deploy-plugin           | 2.8.2    | deploy                 | default-deploy                              \r\n\r\n```\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7691",
    "head_branch": "maven-3.9.x-MNG-7691-skipper",
    "is_a_fork": true,
    "comments": [
      "The proposed syntax is problematic to me as it's not coherent with the one displayed to the user.\r\nUsers now see:\r\n```\r\n[INFO] \r\n[INFO] --- checkstyle:3.0.0:check (checkstyle-check) @ core-it-suite ---\r\n[INFO] \r\n[INFO] --- enforcer:3.1.0:enforce (enforce-bytecode-version) @ core-it-suite ---\r\n[INFO] Adding ignore: module-info\r\n[INFO] \r\n[INFO] --- enforcer:3.1.0:enforce (enforce-maven-version) @ core-it-suite ---\r\n[INFO] \r\n[INFO] --- enforcer:3.1.0:enforce (enforce-java-version) @ core-it-suite ---\r\n[INFO] \r\n[INFO] --- remote-resources:1.7.0:process (process-resource-bundles) @ core-it-suite ---\r\n[WARN] The POM for org.apache.maven.wagon:wagon-http-lightweight:jar:1.0-beta-6 is invalid, transitive dependencies (if any) will not be available, enable verbose output (-X) for more details\r\n```\r\nso we need to use a syntax which actually supports what is displayed such as `enforcer:3.1.0:enforce`.\r\nSo it should be coherent with:\r\n  * https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/lifecycle/internal/DefaultLifecycleTaskSegmentCalculator.java#L95\r\n  * https://github.com/apache/maven/blob/master/maven-embedder/src/main/java/org/apache/maven/cli/event/ExecutionEventLogger.java#L422-L431",
      "I disagree here. Plugin prefix may be duplicated AFAIK, ~as it may be specified at plugin build time (not \"derived\" from artifact ID, like xxx-maven-plugin => xxx prefix)~ not even due that, but even using same \"expected\" artifactId in different groupId will result with same prefix (example: parser-maven-plugin is a very \"expected\" name for some plugin that parses something, in whichever groupId it resides). And nothing stops two plugins having G1:A1 and G2:A2 (where any combination of inequality may be, so basically we talk about two different artifacts)but still have same prefix. Prefix is used mostly for \"manual\" invocation of plugin(to \"shorten\" it, instead of G:A type just prefix, but one has to be aware that for prefix to work, the groupId of plugin must be added to default groupIds of Maven), but to \"address\" the plugin, IMHO prefix is simply not precise enough.",
      "To demonstrate: https://github.com/cstamas/plugin-clash/blob/main/README.md (and project that creates two different GA plugins and use them in build). Hence, IMHO any coherence with console output would be misleading: prefix *cannot uniquely identify a plugin*",
      "> To demonstrate: https://github.com/cstamas/plugin-clash/blob/main/README.md (and project that creates two different GA plugins and use them in build). Hence, IMHO any coherence with console output would be misleading: prefix _cannot uniquely identify a plugin_\r\n\r\nI'm not sure how that's relevant.  Your syntax supports wildcards, which definitely cannot uniquely identify a plugin.  My points is not to restrict the supported syntax to `pluginPrefix[:version]:goal` and `groupId:artifactId[:version]:goal`, but to support it.  And I would also support the optional `e` after, i.e. `pluginPrefix[:version]:goal[:executionId]` and `groupId:artifactId[:version]:goal[:executionId]`, but more importantly, at least support `pluginPrefix:version:goal` so that people can simply copy/paste from the console to skip a given plugin goal, instead of having to find out the `groupId:artifactId`.  \r\n\r\nFor example, how can you simply relate `spotless:2.28.0:apply (default)` from the console output to `com.diffplug.spotless:spotless-maven-plugin:apply` when that plugin is defined in a parent outside of the project ?\r\n\r\nI'd like to find a syntax that would support just copy/pasting the output from the console, certainly not be limited to that.\r\n",
      "I propose the following syntax: `([G]:A]|P)[:v][:g[@e]]`\r\nThe use of `@` will make the syntax compatible with the `DefaultLifecycleExecutionPlanCalculator` and will remove some ambiguities.\r\nWhich should support:\r\n * `G:A`: `org.apache.maven.plugins:enforcer-maven-plugin`\r\n * `:A`: `:enforcer-maven-plugin`\r\n * `P`: `enforcer`\r\n * `P:v:g`: `enforcer:3.1.0:enforce`\r\n * `P:v:g@e`: `enforcer:3.1.0:enforce@enforce-maven-version`\r\n ",
      "I like it. Will apply needed changes.",
      "One question remaining i was thinking about:\r\n* Can we make syntax \"pom properties\" friendly?\r\n* Should we make syntax pom properties friendly?\r\n* The idea would be to completely \"buy out\" current skip param for all Mojos... (Again, should we do it at all?) As if we do, these could be usable in profiles, main properties, just like today the \"normal\" skips are",
      "> One question remaining i was thinking about:\r\n> \r\n> * Can we make syntax \"pom properties\" friendly?\r\n> * Should we make syntax pom properties friendly?\r\n> * The idea would be to completely \"buy out\" current skip param for all Mojos... (Again, should we do it at all?) As if we do, these could be usable in profiles, main properties, just like today the \"normal\" skips are\r\n\r\nIf passed as an argument / option, it will be subject to interpolation with https://github.com/apache/maven/pull/1062"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244074a14f302d393b58be",
    "number": 1085,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7763\r\nDiscussion: https://lists.apache.org/thread/0mjosk1wp58fjvhz812htqfjot0n930g",
    "head_branch": "MNG-7763",
    "is_a_fork": true,
    "comments": [
      "The outcome is then there is no way to remove this and it will also apply to ALL projects.",
      "> The outcome is then there is no way to remove this and it will also apply to ALL projects.\r\n\r\nIsn't that the goal ?\r\nAlso you can't remove the property, but you can override it, which is very often the case (else you actually have a warning).",
      "> > The outcome is then there is no way to remove this and it will also apply to ALL projects.\r\n> \r\n> Isn't that the goal ? Also you can't remove the property, but you can override it, which is very often the case (else you actually have a warning).\r\n\r\nMaybe, but this should be known that due to Plexus we cannot null values. @kwin Can we know? I don't that this is a huge problem here, but people should still know whether it is possible or not. I haven't used anything else, but UTF-8 for the past 20 years.",
      "while you can override it in your own project (which is the case AFAIK) it is fine and I don't see how null and not be deterministic can be better than forcing the value to the OS one so guess we are good like that without handling null in the code.",
      "FTR: overwriting default values by empty string is not supported due to https://github.com/eclipse/sisu.plexus/issues/29",
      "For those that want to override it to the Maven 3 behaviour, maybe you can introduce a magic value \"OS_DEFAULT\" that gets translated to not setting the encoding deeper down the implementation?\r\n\r\n+1 to default to UTF-8",
      "> For those that want to override it to the Maven 3 behaviour, maybe you can introduce a magic value \"OS_DEFAULT\" that gets translated to not setting the encoding deeper down the implementation?\r\n> \r\n> +1 to default to UTF-8\r\n\r\nI'd prefer `system`. This is what I have done in other Maven components where empty was not allowed.",
      "Good point.",
      "For what's it worth, I ran an online poll around this topic a few days ago:\r\n\r\n![image](https://user-images.githubusercontent.com/176880/231738618-518d288d-003a-460e-be09-3bf28ba5ce36.png)\r\n\r\nI might have biased it a bit in how I posed the question :)",
      "> > For those that want to override it to the Maven 3 behaviour, maybe you can introduce a magic value \"OS_DEFAULT\" that gets translated to not setting the encoding deeper down the implementation?\r\n> > +1 to default to UTF-8\r\n> \r\n> I'd prefer `system`. This is what I have done in other Maven components where empty was not allowed.\r\n\r\nI'd suggest that people that want the default encoding use `${file.encoding}` so that we don't have to do any hack in maven.",
      "> > > For those that want to override it to the Maven 3 behaviour, maybe you can introduce a magic value \"OS_DEFAULT\" that gets translated to not setting the encoding deeper down the implementation?\r\n> > > +1 to default to UTF-8\r\n> > \r\n> > \r\n> > I'd prefer `system`. This is what I have done in other Maven components where empty was not allowed.\r\n> \r\n> I'd suggest that people that want the default encoding use `${file.encoding}` so that we don't have to do any hack in maven.\r\n\r\nYou are totally right. Stupid me."
    ],
    "commit_messages": [
      "[MNG-7763] Provide UTF-8 as a default value for project.build.sourceEncoding and project.reporting.outputEncoding (#1085)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244075a14f302d393b58bf",
    "number": 1084,
    "body": "As PBR session setter was added in Maven3. Still, this causes unexpected NPE during plugin execution, while Maven3 should support Maven2 plugins.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7759",
    "head_branch": "maven-3.9.x-MNG-7759-maven2-npe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7759] Maven2 plugins will not have even session setter (#1084)\n\nAs setter was added in Maven3. Still, this causes unexpected NPE\r\nduring plugin execution, while Maven3 should support Maven2\r\nplugins.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7759"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244076a14f302d393b58c0",
    "number": 1083,
    "body": "Compare with discussion at https://the-asf.slack.com/archives/C7Q9JB404/p1681245267656379",
    "head_branch": "improve-deprecated-core-expression-message",
    "is_a_fork": false,
    "comments": [
      "I see this is partially fixed already in https://github.com/apache/maven/pull/1079/files#diff-c8dae894a4075bd2b8071c01ebefbf6c809009809929df69125b98fc3b3c6c17.",
      "Superseded by #1079 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244077a14f302d393b58c1",
    "number": 1082,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244077a14f302d393b58c2",
    "number": 1081,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "logger-creation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify logger creation leveraging Map.computeIfAbsent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244078a14f302d393b58c3",
    "number": 1080,
    "body": "https://issues.apache.org/jira/browse/MNG-7756 and https://issues.apache.org/jira/browse/MNG-6825",
    "head_branch": "MNG-6825",
    "is_a_fork": true,
    "comments": [
      "Great to see these changes! I think the `is(Not)Empty` cases to move away from utils can also be reflected in an automated migration if you'd like me to roll that out across all of Maven. I think that was the most common use of utils.\r\n\r\nOther cases that came up in discussion elsewhere are not as clear in the general case, but can be automated in specific cases. For instance the utils `split` methods take a separator as a literal, rather than the regex it can be for `String.split`. We can explore what we can replace with JDK calls already, now, and I'll hold off on further Commons Lang changes while we do so.\r\n\r\nI'm traveling this week, so can't fully dive in, but hope to revisit the automations next week. Let me know if there's any over replacements that you'd like to distill from this one. Only looking to help & amplify changes such as this PR.",
      "> Great to see these changes! I think the `is(Not)Empty` cases to move away from utils can also be reflected in an automated migration if you'd like me to roll that out across all of Maven. I think that was the most common use of utils.\r\n> \r\n> Other cases that came up in discussion elsewhere are not as clear in the general case, but can be automated in specific cases. For instance the utils `split` methods take a separator as a literal, rather than the regex it can be for `String.split`. We can explore what we can replace with JDK calls already, now, and I'll hold off on further Commons Lang changes while we do so.\r\n> \r\n> I'm traveling this week, so can't fully dive in, but hope to revisit the automations next week. Let me know if there's any over replacements that you'd like to distill from this one. Only looking to help & amplify changes such as this PR.\r\n\r\nYes, the `split` calls can be translated directly when the separator is a one-char string.  Other cases may need to be handled differently."
    ],
    "commit_messages": [
      "[MNG-6825] Get rid of commons-lang"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244079a14f302d393b58c4",
    "number": 1079,
    "body": "This is general rework of current Maven 3.9.x line how it handles plugin and mojo validations.\r\n\r\nChanges:\r\n* added plugin validations for dependencies\r\n* introduced pluginValidationManager that gathers violations\r\n* manager creates a report at build end, with dense and non repeating data\r\n* this is in spirit to lessen already too verbose logging, as current solution would report violations as many times plugin is used in reactor, and that can be many (ie. a plugin from parent for each module)\r\n\r\n\r\nExample report of Maven 3.9.x build: https://gist.github.com/cstamas/b62fdcd53eaf316123cf183f5a24e6a5\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7754\r\n",
    "head_branch": "maven-3.9.x-MNG-7754-deprecation-message-rephrase",
    "is_a_fork": true,
    "comments": [
      "IT fix https://github.com/apache/maven-integration-testing/pull/256\r\nTested with 3.9.1 and this PR, both pass OK",
      "Applied PR comments and proposals",
      "Can someone look at ITs https://github.com/apache/maven-integration-testing/pull/256 to have them pass finally?",
      "I still have a problem to read that this output:\r\n\r\n> Looking at the output:\r\n> \r\n> ```\r\n> [WARNING]    * 70 : 15, org.apache.maven:maven-settings-builder:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-settings-builder/pom.xml\r\n> [WARNING]    * 131 : 15, org.apache.maven:maven-resolver-provider:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-resolver-provider/pom.xml\r\n> [WARNING]    * 192 : 15, org.apache.maven:maven-core:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-core/pom.xml\r\n> ```\r\n> \r\n> I don't understand how to read those numbers and to what they relate.",
      "> I still have a problem to read that this output:\r\n\r\nDon't bother, it comes only when you set 'verbose' but that means you have bigger problems as well :laughing: \r\n\r\nSeriously: any proposal how to improve it?",
      "> > I still have a problem to read that this output:\r\n> \r\n> Don't bother, it comes only when you set 'verbose' but that means you have bigger problems as well 😆\r\n> \r\n> Seriously: any proposal how to improve it?\r\n\r\nI don't even know what those numbers mean, can you point me to the source where it comes from?",
      "They point to POM sources:\r\n70 : 15, org.apache.maven:maven-settings-builder:3.9.2-SNAPSHOT -> https://github.com/apache/maven/blob/maven-3.9.x/maven-settings-builder/pom.xml#L70\r\n131 : 15, org.apache.maven:maven-resolver-provider:3.9.2-SNAPSHOT -> https://github.com/apache/maven/blob/maven-3.9.x/maven-resolver-provider/pom.xml#L131\r\n192 : 15, org.apache.maven:maven-core:3.9.2-SNAPSHOT -> https://github.com/apache/maven/blob/maven-3.9.x/maven-core/pom.xml#L192\r\n",
      "What about:\r\n```\r\n[WARNING]    * org.apache.maven:maven-settings-builder:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-settings-builder/pom.xml, line 70, column 15\r\n[WARNING]    * org.apache.maven:maven-resolver-provider:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-resolver-provider/pom.xml, line 131, column 15\r\n[WARNING]    * org.apache.maven:maven-core:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-core/pom.xml, line 192, column 15\r\n```",
      "> What about:\r\n> \r\n> ```\r\n> [WARNING]    * org.apache.maven:maven-settings-builder:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-settings-builder/pom.xml, line 70, column 15\r\n> [WARNING]    * org.apache.maven:maven-resolver-provider:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-resolver-provider/pom.xml, line 131, column 15\r\n> [WARNING]    * org.apache.maven:maven-core:3.9.2-SNAPSHOT /home/cstamas/Worx/apache-maven/maven/maven-core/pom.xml, line 192, column 15\r\n> ```\r\n\r\nthis is much better, we can leverage an improvement (https://github.com/apache/maven/pull/756) from @hboutemy recently:\r\n> [WARNING]    * org.apache.maven:maven-core:3.9.2-SNAPSHOT from /home/cstamas/Worx/apache-maven/maven/maven-core/pom.xml, line 192, column 15\r\n\r\n> [WARNING]    * org.apache.maven:maven-core:3.9.2-SNAPSHOT from maven-core/pom.xml, line 192, column 15\r\n\r\nwhich might even shorten the output. The rest is from `org.apache.maven.building.DefaultProblem.getLocation()`",
      "The improvement is already in, in the \"Used in module(s)\" section, see https://gist.github.com/cstamas/b62fdcd53eaf316123cf183f5a24e6a5#file-gistfile1-txt-L39\r\n\r\nBut here I have no idea how to reformat location... any example?",
      "> The improvement is already in, in the \"Used in module(s)\" section, see https://gist.github.com/cstamas/b62fdcd53eaf316123cf183f5a24e6a5#file-gistfile1-txt-L39\r\n> \r\n> But here I have no idea how to reformat location... any example?\r\n\r\nRight, but not here: https://gist.github.com/cstamas/b62fdcd53eaf316123cf183f5a24e6a5#file-gistfile1-txt-L71-L75\r\n\r\nAs a user is just causes confusion, not clarification.",
      "Updated gist with new output. Removed `prj.name` as well to consistently use `g:a:v` (whether in build module or external artifact), and this also smooth out the output. Also, showing only line number, IMHO no need for column",
      "Updated gist once more: since last, removed \"from\" repeated string, only path alone is in braces. If within TLP, is relative, otherwise is abs (ie. from local repo).",
      "> Updated gist once more: since last, removed \"from\" repeated string, only path alone is in braces. If within TLP, is relative, otherwise is abs (ie. from local repo).\r\n\r\nI wonder if the `class: ` should be removed too... Not sure it bring much.",
      "Agreed, and removed",
      "Interesting, invoked `mvn help:help` and `mvn clean` (was just wondering what happens), and BOTH produce SAME output:\r\n\r\n```\r\n[WARNING] \r\n[WARNING] Plugin validation issues were detected in 1 plugin(s)\r\n[WARNING] \r\n[WARNING] Plugin org.apache.maven.plugins:maven-site-plugin:3.12.1\r\n[WARNING]   Plugin issue(s):\r\n[WARNING]    * Plugin depends on the deprecated Maven 2.x compatibility layer, which may not be supported in Maven 4.x\r\n[WARNING] \r\n[WARNING] \r\n[WARNING] To fix these issues, please upgrade above listed plugins, or, notify their maintainers about reported issues.\r\n[WARNING] \r\n[WARNING] For more or less details, use 'maven.plugin.validation' property with one of the values (case insensitive): [DISABLED, ENABLED, VERBOSE]\r\n[WARNING] \r\n➜  \r\n```\r\n\r\nHow does site plugin come in picture for ANY of these?",
      "> Interesting, invoked `mvn help:help` and `mvn clean` (was just wondering what happens), and BOTH produce SAME output:\r\n> \r\n> ```\r\n> [WARNING] \r\n> [WARNING] Plugin validation issues were detected in 1 plugin(s)\r\n> [WARNING] \r\n> [WARNING] Plugin org.apache.maven.plugins:maven-site-plugin:3.12.1\r\n> [WARNING]   Plugin issue(s):\r\n> [WARNING]    * Plugin depends on the deprecated Maven 2.x compatibility layer, which may not be supported in Maven 4.x\r\n> [WARNING] \r\n> [WARNING] \r\n> [WARNING] To fix these issues, please upgrade above listed plugins, or, notify their maintainers about reported issues.\r\n> [WARNING] \r\n> [WARNING] For more or less details, use 'maven.plugin.validation' property with one of the values (case insensitive): [DISABLED, ENABLED, VERBOSE]\r\n> [WARNING] \r\n> ➜  \r\n> ```\r\n> \r\n> How does site plugin come in picture for ANY of these?\r\n\r\nLifecycle binding?",
      "> Lifecycle binding?\r\n\r\nHuh? for `help:help` which lifecycle you mean specifically? Also, for `clean` lifecycle, where is `site`? https://github.com/apache/maven/blob/maven-3.9.x/maven-core/src/main/resources/META-INF/plexus/components.xml#L67\r\n\r\nBTW, the message means site plugin is ~LOADED up~ RESOLVED. Why?",
      "> > Lifecycle binding?\r\n> \r\n> Huh? for `help:help` which lifecycle you mean specifically? Also, for `clean` lifecycle, where is `site`? https://github.com/apache/maven/blob/maven-3.9.x/maven-core/src/main/resources/META-INF/plexus/components.xml#L67\r\n> \r\n> BTW, the message means site plugin is ~LOADED up~ RESOLVED. Why?\r\n\r\nEager plugin scanning in core?`Remove maven-site-plugin from local repo and try again. This might prove my theory."
    ],
    "commit_messages": [
      "[MNG-7754] Improvement and extension of plugin validation (#1079)\n\nThis is general rework of current Maven 3.9.x line how it handles plugin and mojo validations.\r\n\r\nChanges:\r\n* added plugin validations for dependencies\r\n* introduced pluginValidationManager that gathers violations\r\n* manager creates a report at build end, with dense and non repeating data\r\n* this is in spirit to lessen already too verbose logging, as current solution would report violations as many times plugin is used in reactor, and that can be many (ie. a plugin from parent for each module)\r\n\r\n\r\nExample report of Maven 3.9.x build: https://gist.github.com/cstamas/b62fdcd53eaf316123cf183f5a24e6a5\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7754"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624407aa14f302d393b58c5",
    "number": 1078,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "refactor/replace-StringUtils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6825] Replace StringUtils (#1078)\n\nCo-authored-by: Moderne <team@moderne.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624407ba14f302d393b58c6",
    "number": 1077,
    "body": "Upgrade resolver to 1.9.8 (was 1.9.7).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7753",
    "head_branch": "MNG-7753-resolver-198",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7753] Upgrade to Resolver 1.9.8 (#1077)\n\nUpgrade resolver to 1.9.8 (was 1.9.7).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7753"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624407ca14f302d393b58c7",
    "number": 1076,
    "body": "This is the port of https://github.com/apache/maven/pull/1075 to the master branch.\r\n\r\nThe good thing is that this is ONLY the tests because the maven 4 does not have the problem of MNG-7750.\r\n\r\nA few small changes in the tests were needed to handle the internal differences between maven 3.x and maven 4.x.\r\n\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n",
    "head_branch": "MNG-7750-Interpolation-master",
    "is_a_fork": true,
    "comments": [
      "FYI: @rmannibucau @slachiewicz \r\nJust to be sure the maven 4.x does not have the same problem."
    ],
    "commit_messages": [
      "[MNG-7750] Ensure no unwanted interpolation in plugins from profiles. (#1076)\n\nThis is the port of https://github.com/apache/maven/pull/1075 to the master branch.\r\n\r\nThe good thing is that this is ONLY the tests because the maven 4 does not have the problem of MNG-7750.\r\n\r\nA few small changes in the tests were needed to handle the internal differences between maven 3.x and maven 4.x.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7750"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624407da14f302d393b58c8",
    "number": 1075,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n\r\n\r\n\r\nThis is ONLY the reproduction of the problem I found.\r\n\r\nIf you disable the `activeProfile` (in buildPom and remove the assert) then all checks pass.\r\n\r\nIf you enable this profile (provided code) then in several places the `${project.basedir}` has been interpolated and shows the path of the build and the assertions fail the build.\r\n",
    "head_branch": "MNG-7750-Interpolation",
    "is_a_fork": true,
    "comments": [
      "Ubuntu build fails with\r\n```\r\nError:    PomConstructionTest.testProfileInterpolation:173 expected:<...side active profile [${project.basedir}].> but was:<...side active profile [/home/runner/work/maven/maven/maven-core/src/test/resources-project-builder/profile-interpolation].>\r\n```\r\n\r\nmacOS build fails with\r\n```\r\nError:    PomConstructionTest.testProfileInterpolation:173 expected:<...side active profile [${project.basedir}].> but was:<...side active profile [/Users/runner/work/maven/maven/maven-core/src/test/resources-project-builder/profile-interpolation].>\r\n```\r\n\r\nWindows build fails with \r\n```\r\nError:    PomConstructionTest.testProfileInterpolation:173 expected:<...side active profile [${project.basedir}].> but was:<...side active profile [D:\\a\\maven\\maven\\maven-core\\src\\test\\resources-project-builder\\profile-interpolation].>\r\n```\r\n",
      "I **suspect** I have found the reason this happens.\r\nA model aggregates all executions for a plugin together in a list of executions for a single instance of that plugin.\r\nThere these executions are linked (not cloned) from the source.\r\nThen when the interpolation happens the executions in the model are interpolated which are the same instances as are in the original.",
      "My suspicion was correct.\r\nA plugin from a profile was being referenced (not cloned) from the `originalModel` fully if it was not present at the global scale yet, and only the `execution` was referenced (not cloned) if it was and only the execution needed to be available.\r\nLater the interpolation would then change the one in the `originalModel` also because it was simply referenced.\r\n\r\nClose inspection of the code showed the exact same problem for the `reporting plugins` and each `reportSet`.\r\n\r\nThis affects only the plugins in the active profiles as they are the only ones for which this link is created."
    ],
    "commit_messages": [
      "[MNG-7750] Fix unwanted interpolation in plugins from profiles. (#1075)\n\nThis is ONLY the reproduction of the problem I found.\r\n\r\nIf you disable the activeProfile (in buildPom and remove the assert) then all checks pass.\r\n\r\nIf you enable this profile (provided code) then in several places the ${project.basedir} has been interpolated and shows the path of the build and the assertions fail the build.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7750"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624407ea14f302d393b58c9",
    "number": 1074,
    "body": "A minor detail while trying to resolve an underlying bug. The doc comment here does not accurately describe how the string 1.0alpha1 is actually parsed, and this is significant. ",
    "head_branch": "doc",
    "is_a_fork": false,
    "comments": [
      "please close jira"
    ],
    "commit_messages": [
      "correct comment (#1074)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624407fa14f302d393b58ca",
    "number": 1073,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7749-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7749] Upgrade animal-sniffer from 1.21 to 1.23"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244080a14f302d393b58cb",
    "number": 1072,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7749",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7749] Upgrade animal-sniffer from 1.21 to 1.23"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244081a14f302d393b58cc",
    "number": 1071,
    "body": "JIRA issue [MNG-7751](https://issues.apache.org/jira/browse/MNG-7751)\r\n\r\nThis PR provides the ability to inject an `XmlNode` object into a plugin.  This can be currently done by injecting a `PlexusConfiguration`, but injecting an `XmlNode` ensures there's no dependency on the internal plexus configuration bits and limits the plugin exposure to the maven v4 api.",
    "head_branch": "xml-converter",
    "is_a_fork": true,
    "comments": [
      "> Can we similar way incject Path?\r\n\r\nYes, that's already possible, see\r\n  https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/configuration/internal/DefaultBeanConfigurator.java#L136-L164\r\nand\r\n  https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/configuration/internal/EnhancedConverterLookup.java#L31"
    ],
    "commit_messages": [
      "[MNG-7751] Provide a way to inject XmlNode into plugins (#1071)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244082a14f302d393b58cd",
    "number": 1070,
    "body": "Small tool to dump all calls to maven-compat classes.",
    "head_branch": "maven-compat-usage-dumper",
    "is_a_fork": true,
    "comments": [
      "Made it into plain single-jar extension, no Maven code modification needed, thanks!",
      "https://github.com/cstamas/mojosniffer for now, but IMHO we should move this into Maven (but creating new repo is tedious, maybe have some like \"maven-extensions\" for simple ones?)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244083a14f302d393b58ce",
    "number": 1069,
    "body": "I think this code is all unused, but let's see...",
    "head_branch": "simplify",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "remove unused branches in fake (#1069)\n\n* remove unused branches in a fake object"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244084a14f302d393b58cf",
    "number": 1068,
    "body": "To make source code a bit coherent, all `@since 4.0` tags are switched to `@since 4.0.0`",
    "head_branch": "fix-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Switch version to 4.0.0 for @since tags (#1068)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244085a14f302d393b58d0",
    "number": 1067,
    "body": "For: https://issues.apache.org/jira/browse/MNG-6825\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "refactor/replace-file-utils-with-commons-io",
    "is_a_fork": true,
    "comments": [
      "This PR was largely created through: https://github.com/timtebeek/maven-rewrite/blob/main/file-utils.yml\r\n\r\nIt's not yet a complete migration, as [a few cases need dedicated recipes](https://github.com/timtebeek/maven-rewrite/blob/0f80732db3959183d171e451f8c9284e9bedb99d/file-utils.yml#L47-L59), or manual work to convert completely, depending on how much they are used.",
      "Failure looks flaky and unrelated:\r\n\r\nError:  Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check (checkstyle-check) on project core-its: Execution checkstyle-check of goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:check failed: Plugin org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0 or one of its dependencies could not be resolved: Could not transfer artifact org.apache.maven:maven-artifact:jar:3.0 from/to central (https://repo.maven.apache.org/maven2): transfer failed for https://repo.maven.apache.org/maven2/org/apache/maven/maven-artifact/3.0/maven-artifact-3.0.jar: Connect to repo.maven.apache.org:443 [repo.maven.apache.org/146.75.28.215] failed: Connection timed out \r\n\r\n",
      "Could we just switch to the nio api which provides a bunch of helper methods ?  I'd rather remove dependencies than adding one....",
      "> Could we just switch to the nio api which provides a bunch of helper methods ? I'd rather remove dependencies than adding one....\r\n\r\nI think yes, with a little bit of effort.",
      "Not everything in this PR is covered by NIO in Java 8. As of Java 11 though we should be able to remove most uses of Apache Commons IO too. "
    ],
    "commit_messages": [
      "[MNG-6825] Replace FileUtils with Commons IO (#1067)\n\n* [MNG-6825] Replace FileUtils with Commons IO\r\n\r\nCo-authored-by: Moderne <team@moderne.io>\r\n\r\n* Minor fixes and reverts where cases are not handled yet\r\n\r\n* Drop explicit dependencies on plexus-utils\r\n\r\n---------\r\n\r\nCo-authored-by: Moderne <team@moderne.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244086a14f302d393b58d1",
    "number": 1066,
    "body": "For: https://issues.apache.org/jira/browse/MNG-6825\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "refactor/replace-plexus-string-utils-with-commons-lang-3",
    "is_a_fork": true,
    "comments": [
      "Here's a first PR to standardize on Commons-Lang3 StringUtils in Apache Maven core. It uses the following recipes:\r\n```yaml\r\ntype: specs.openrewrite.org/v1beta/recipe\r\nname: com.github.timtebeek.PlexusStringUtilsToCommonsLang3\r\ndisplayName: Replace Plexus StringUtils with Commons Lang3\r\ndescription: https://issues.apache.org/jira/browse/MNG-6825\r\nrecipeList:\r\n  - org.openrewrite.java.ChangeType:\r\n      oldFullyQualifiedTypeName: org.codehaus.plexus.util.StringUtils\r\n      newFullyQualifiedTypeName: org.apache.commons.lang3.StringUtils\r\n  - org.openrewrite.java.ChangeMethodTargetToStatic:\r\n      methodPattern: org.codehaus.plexus.util.StringUtils clean(String)\r\n      fullyQualifiedTargetTypeName: org.apache.commons.lang3.StringUtils\r\n  - org.openrewrite.java.ChangeMethodName:\r\n      methodPattern: org.apache.commons.lang3.StringUtils clean(String)\r\n      newMethodName: trimToEmpty\r\n  - org.openrewrite.java.ChangeType:\r\n      oldFullyQualifiedTypeName: org.apache.maven.shared.utils.StringUtils\r\n      newFullyQualifiedTypeName: org.apache.commons.lang3.StringUtils\r\n```\r\n\r\nCouldn't yet remove the maven-shared/plexus-utils dependencies everywhere, as there's still references to other classes such as `org.apache.maven.shared.utils.logging.MessageUtils`, as found through: [F0jjf.xlsx](https://github.com/apache/maven/files/11009924/F0jjf.xlsx)\r\n```yaml\r\ntype: specs.openrewrite.org/v1beta/recipe\r\nname: com.github.timtebeek.MNG-6825\r\ndisplayName: MNG-6825\r\ndescription: https://issues.apache.org/jira/browse/MNG-6825\r\nrecipeList:\r\n  - org.openrewrite.java.search.FindMethods:\r\n      methodPattern: org.apache.maven.shared.utils..* *(..)\r\n  - org.openrewrite.java.search.FindMethods:\r\n      methodPattern: org.codehaus.plexus.util..* *(..)\r\n```\r\n\r\nNote that the above recipes are most easily executed by [creating a custom repository group](https://public.moderne.io/settings/repo-groups), and then [uploading the yaml into the recipe builder](https://public.moderne.io/recipes/builder), after which a Dry run should give results in a couple seconds.\r\n",
      "Resolved the conflicts after https://github.com/apache/maven/commit/54afd174effcac49df36dbdee42233619f384563 ; Think this is good to go.",
      "@elharo Since you've offered to review MNG-6825 ; are you able to see this through as well? This is a more extensive change as opposed to https://github.com/apache/maven/commit/8421a365923b19397f4e66769a56c2dbdeb90828 , as this also introduces the dependency where is was not present before, reflecting the approach set out in MNG-6825.",
      "I think this one can be closed now."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244087a14f302d393b58d2",
    "number": 1065,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7743-jdk-20-test-fix",
    "is_a_fork": true,
    "comments": [
      "If you have some time would be good to backport it also",
      "Backported.  Note that the build is broken on JDK 21 due to an incompatibility in spotless."
    ],
    "commit_messages": [
      "[MNG-7743] Make the build work on JDK 20 (#1065)\n\n* [MNG-7743] Make the build work on JDK 20\r\n\r\n * the behaviour before the fix was already pretty confusing. JDK 19 and\r\n   older do not check the presense of '{' in the constructor, so the\r\n   URL object got created, but when converting to file the result would\r\n   be e.g. '/../../src/test/remote-repo' which is completely wrong.\r\n   But it seems the affected tests did not really care, as all of them\r\n   were passing\r\n\r\n* Remove forgotten println\r\n\r\nCo-authored-by: Yeikel <email@yeikel.com>\r\n\r\n* Test with latest JDK\r\n\r\n* Do not run ITs with jdk 20, but just the \"build itself\"\r\n\r\n---------\r\n\r\nCo-authored-by: Yeikel <email@yeikel.com>\r\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244088a14f302d393b58d3",
    "number": 1064,
    "body": null,
    "head_branch": "MNG-7738",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "MNG-7738 don't dump raw stack traces to System.err (#1064)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244089a14f302d393b58d4",
    "number": 1063,
    "body": "Simplify code from MNG-7720 because the getCollectedProjects() already returns all submodules recursively, so no need to recurse again.\n",
    "head_branch": "MNG-7720-simplify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7720] Simplify code (#1063)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624408aa14f302d393b58d5",
    "number": 1062,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-6303\r\n\r\nThe idea is to allow user properties interpolation for command line arguments from both CLI and `.mvn/maven.config`.\r\nUser properties are interpolated first, then all other arguments.\r\n\r\nThis PR depends on #1061 ",
    "head_branch": "MNG-6303-properties-interpolation",
    "is_a_fork": true,
    "comments": [
      "I need a bit more time to review it."
    ],
    "commit_messages": [
      "[MNG-6303] Interpolate all arguments using system and user supplied properties (#1062)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624408ba14f302d393b58d6",
    "number": 1061,
    "body": "JIRA issue: [MNG-7038] Introduce public property to point to a root directory of (multi-module) project\r\n\r\nThis PR introduces three properties:\r\n  * `project.rootDirectory`: _the project's directory or parent directory containing a `.mvn` subdirectory or a `pom.xml` flagged with the `root=\"true\"` attribute_. If no such directory can be found, accessing the rootDirectory property will throw an `IllegalStateException`.\r\n\r\n  * `session.topDirectory` : _the directory of the topmost project being built, usually the current directory or the directory pointed at by the `-f`/`--file` command line argument_. The `topDirectory` is similar to the `executionRootDirectory` property available on the session, but renamed to make it coherent with the new `rootDirectory` and to avoid using _root_ in its name.  The `topDirectory` property is computed by the CLI as the directory pointed at by the `-f`/`--file` command line argument, or the current directory if there's no such argument. \r\n\r\n  * `session.rootDirectory` : _the rootDirectory for the topDirectory project_.\r\n\r\nThe `topDirectory` and `rootDirectory` properties are made available on the `MavenSession` / `Session` and deprecate the `executionRootDirectory` and `multiModuleProjectDirectory` properties.  The `rootDirectory` should never change for a given project and is thus made available for profile activation and model interpolation (without the `project.` prefix, similar to `basedir`).   The goal is also to make the `rootDirectory` property also available during [command line arguments interpolation](https://github.com/apache/maven/pull/1062).\r\n\r\nA `root` boolean attribute is also added to the model to indicate that the project is the root project. This attribute is only supported if the _buildconsumer_ feature is active and removed before the pom is installed or deployed.  It can be used as an alternative mechanism to the `.mvn` directory.",
    "head_branch": "MNG-7038-toplevel",
    "is_a_fork": true,
    "comments": [
      "Do these three properties represent the same value?",
      "> Do these three properties represent the same value?\r\n\r\nI suppose you're talking about `topdir`, `project.topdir` and `session.topdir` ? They are aliases, but I don't think the `project.topdir` is a good idea, since it's not really a project attribute.\r\n\r\nI'm still thinking about renaming the new property to `rootdir`, and introduce a `topdir` for the execution directory in a consistent way.  And deprecate `MavenSession.getExecutionRootDirectory()`, `MavenExecutionRequest.getBasedir()`, `MavenExecutionRequest.getMultiModuleProjectDirectory()` accordingly.  I'm open to any naming, but things are a bit inconsistent, so I'd rather fix it.",
      "Before we agree on new names, we need to agree what these properties should contain and the expectations/requirements from users.",
      "> Before we agree on new names, we need to agree what these properties should contain and the expectations/requirements from users.\r\n\r\n@michael-o  so I propose the following:\r\n\r\n* `topdir` : _the directory of the top-most project being built_, this is usually the current directory, or the one pointed by the `-f`/`--file` option\r\n\r\n* `rootdir` : _the parent directory containing a child `.mvn` directory_.  If there's no such directory, print a warning and use a `topdir`\r\n\r\nThis needs to be clarified when using `-pl`/`-am`/`-amd` options.",
      "Think rootdir must be the first module of the hierarchy (child to parent order) without a parent in the same relativepath (not null) or parent dir and listing the child. Would be bad to require .mvn presence imho.\r\n\r\nFor me topdir is useless since we already have it somehow .",
      "> Think rootdir must be the first module of the hierarchy (child to parent order) without a parent in the same relativepath (not null) or parent dir and listing the child. Would be bad to require .mvn presence imho.\r\n\r\nThe main use case for the `rootdir` is for build related files location, for example, locate files shared throughout the build.  This is currently a bit difficult to use.  I have not seen any real use case for the parent/child relationship.\r\n\r\n> For me topdir is useless since we already have it somehow .\r\n\r\nWe do, it's called `executionRootDir`.",
      "@gnodet sharing the use case, just adding that rootdir must not require .mvn dir presence as a marker so must use the pom hierarchy and take the highest parent, was just detailling a bit the impl idea.",
      "> @gnodet sharing the use case, just adding that rootdir must not require .mvn dir presence as a marker so must use the pom hierarchy and take the highest parent, was just detailling a bit the impl idea.\r\n\r\nI think that would require another property,  I'm all for defining additional properties. But a property based on parent/child relationship would be made available after projects are built, so it would not be able to be used during interpolation imho.",
      "@gnodet guess worse case we can do 2 passes since parent/child relationship does not support interpolation properly anyway by design. Point is that the .mvn requirement is high for a so often needed prop so 1. I'd live to not have it (technically it is cleaner too even if .mvn does not prevent to \"stop bubbling\") and 2. if kept like that it must be named mvn.mvn.rootdir and be made it obvious it must not be used in parent poms, boms and plugins probably (indeed i hope we avoid that since tech we dont need .mvn presence in 99% of the cases).",
      "> @gnodet guess worse case we can do 2 passes since parent/child relationship does not support interpolation properly anyway by design. Point is that the .mvn requirement is high for a so often needed prop so 1. I'd live to not have it (technically it is cleaner too even if .mvn does not prevent to \"stop bubbling\") and 2. if kept like that it must be named mvn.mvn.rootdir and be made it obvious it must not be used in parent poms, boms and plugins probably (indeed i hope we avoid that since tech we dont need .mvn presence in 99% of the cases).\r\n\r\nThe goal is to make have a  public property that can be used, not to hide it.  We already have `multiModuleProjectDirectory` which is hidden.   What's the point of having it hidden ?",
      "I'd be to make it public but also not controlled by scripts to always be accurate.",
      "> I'd be to make it public but also not controlled by scripts to always be accurate.\r\n\r\nI have no problem with that.    The point is to have a proper definition and thus computation for it.  Having a `.mvn` directory gives a clear and simple definition and computation. Not having it may lead to go outside the source tree (if the project is part of a bigger project) or unable to be detected (in which case the `multiModuleProjectDirectory` defaults to the current dir).",
      "> I'd be to make it public but also not controlled by scripts to always be accurate.\r\n\r\nFwiw, that will mean that the computation needs to be duplicated somehow, so that the maven launch script can locate the `.mvn/jvm.config` file and read it before starting the JVM...",
      "> Fwiw, that will mean that the computation needs to be duplicated somehow, so that the maven launch script can locate the .mvn/jvm.config file and read it before starting the JVM...\r\n\r\nWell, we still have issues with `jvm.config` (spaces, quotes, EOL, ...) in terms of parsing so wonder if we shouldn't revisit it anyway. I had in mind a small native binary (either using graalvm without http and all the options making it fat or whatever is fast to launch) which could handle it to actually fork (unix)/trigger the real execution but, IMHO, it must belong to maven and not any enclosing tooling otherwise it is not part of maven and lost easily in any integration which must mimic our fragile script.",
      "> > Fwiw, that will mean that the computation needs to be duplicated somehow, so that the maven launch script can locate the .mvn/jvm.config file and read it before starting the JVM...\r\n> \r\n> Well, we still have issues with `jvm.config` (spaces, quotes, EOL, ...) in terms of parsing so wonder if we shouldn't revisit it anyway. I had in mind a small native binary (either using graalvm without http and all the options making it fat or whatever is fast to launch) which could handle it to actually fork (unix)/trigger the real execution but, IMHO, it must belong to maven and not any enclosing tooling otherwise it is not part of maven and lost easily in any integration which must mimic our fragile script.\r\n\r\nThat looks like `mvnd` but without keeping daemons alive...",
      "> That looks like mvnd but without keeping daemons alive...\r\n\r\nNot really since mvnd is a full mvn process whereas here it would just be a launcher responsible to handle the actual java command line to respect properly jvm.config. Agree the resolution can bring some resolver deps but shouldn't be as complete as mvnd.\r\n\r\nEven if I agree with the overall statement, anything in between looks wrong to me since it means topdir will not be usable until you have a .mvn (which is not the most common thing), we'll keep broken properties for this very common need and we keep a broken jvm.config so from my window everything converges to get a launcher to maven if we want these features.",
      "> > That looks like mvnd but without keeping daemons alive...\r\n> \r\n> Not really since mvnd is a full mvn process whereas here it would just be a launcher responsible to handle the actual java command line to respect properly jvm.config. \r\n\r\n@rmannibucau That's a wrong assumption.  Mvnd has a client which connects or boots a JVM (the daemon) and which is compiled to native with graalvm (or using java on unsupported platforms).  The client itself does not load maven at all, but it does load the `.mvn/jvm.config` file.\r\nSee https://github.com/apache/maven-mvnd/blob/master/client/src/main/java-mvnd/org/mvndaemon/mvnd/client/DefaultClient.java#L143-L148\r\n\r\n\r\n",
      "@gnodet right but it has the network stack which makes the binary \"fat\" compared to a vanilla main compiled with graalvm but let's put graal aside and agree on the fact we need a light (not java sadly) launcher to run properly and portably maven. Then topdir feature comes into this module and is well defined compared to all alternatives we have which are all partial.",
      "> @gnodet right but it has the network stack which makes the binary \"fat\" compared to a vanilla main compiled with graalvm but let's put graal aside and agree on the fact we need a light (not java sadly) launcher to run properly and portably maven. Then topdir feature comes into this module and is well defined compared to all alternatives we have which are all partial.\r\n\r\nI have been thinking for years to write a C based launcher for Maven similar to Eclipse, but never found the time. ",
      "I think also in general a new page in `maven-site` would be required depicting multiple use cases how both values might differ, e.e., `tree(1)` style.",
      "I'm very confused by this PR, what I see:\r\n\r\n1. we had 2 dir properties and they are deprecated in favor of 2 dir properties, can't we fix the previous ones?\r\n2. the root dir is defined by the `.mvn` presence which is still not mainstream so will likely always fail instead of the top dir of linked project by the parent/child relationship defined by pom (which always works)\r\n\r\nSo overall think the impl should be fixed (2) and we should probably collapse most of the properties we have, in particular for v4 where it will just be a clean up and avoid the redefinition of new props.\r\nThe big pro of root dir is the ability to define absolutely a file config (style.xml is what i have in mind but there are multiple cases) so should absolutely be reliable for all projects, even without .mvn IMHO.",
      "I only can add that I always have a `.mvn` dir in any setup, so \"still not mainstream so will likely always fail \" is probably depending on personal use-cases and experience.\r\n\r\nAlso I like it very much as it is both very basic, and easy to understand and **always** works and is global across the build, where any parent/child relation depends on.. well the parent-child relation, and I often build setups where there are not really parent/child but only an aggregator pom what includes other modules that probably have another parent so there is now way for a global property, eg. aggregator include `project1` that has `parentA` and it includes `project2` that has `parentB`, while mabye at the same reactor or even not, so what should this \"parent/child defined property\" point to?",
      "> well the parent-child relation, and I often build setups where there are not really parent/child\r\n\r\nas much as the `.mvn` thing actually, we are used to get it in the root dir but with fake parents (submodules for ex) it can be in the wrong dir so both strategies are as bad but relying on a recent addition and something not required by the project sounds very fragile upfront.\r\n\r\nThe parent child relationship is pretty straight forward: resolve all the graph while child is linked to a parent and relativepath != null and parent is not resolved from .m2/remote. Then take the higher folder.\r\nIt is as fragile as the .mvn but always works.\r\nIt is fine for me to use the .mvn as a \"stop bubbling\" marker if present but if none is found parent/child relationship should be used IMHO.",
      "> I'm very confused by this PR, what I see:\r\n> \r\n> 1. we had 2 dir properties and they are deprecated in favor of 2 dir properties, can't we fix the previous ones?\r\n\r\nMy option was to not break anything, it was easier to define a new set of properties and deprecate the old ones rather than trying to find all spots where things could be impacted.\r\n\r\n> 2. the root dir is defined by the `.mvn` presence which is still not mainstream so will likely always fail instead of the top dir of linked project by the parent/child relationship defined by pom (which always works)\r\n\r\nWell, the current definition is closer to `maven.multiModuleProjectDirectory` which has been used for years, even if not really public.  The idea to rely on parent/child relationship just does not work imho : first, it would have to be computed after all projects are parsed, which conflicts with the fact that one of the use case it during project interpolation, or even very early during the command line interpolation.  Although, there's absolutely no guarantee that it will point to the root level of the project, as I can point to lots of projects where this would not work. And the main use case imho it to locate files on the file system, so the parent/child relationship is completely unrelated and would not solve the issue.  It also have to never change for any build of the project, which would not be the case for any computation based on parent/child relationship.\r\n \r\n> So overall think the impl should be fixed (2) and we should probably collapse most of the properties we have, in particular for v4 where it will just be a clean up and avoid the redefinition of new props. The big pro of root dir is the ability to define absolutely a file config (style.xml is what i have in mind but there are multiple cases) so should absolutely be reliable for all projects, even without .mvn IMHO.\r\n\r\nIt is at least very precisely defined and deterministic: you start from the `topdir` and go up until you find a `.mvn` tree.  If there's none, the property is not defined.  And it is fully compatible with all existing projects, that's the benefit of having new properties.",
      "> > well the parent-child relation, and I often build setups where there are not really parent/child\r\n> \r\n> as much as the `.mvn` thing actually, we are used to get it in the root dir but with fake parents (submodules for ex) it can be in the wrong dir so both strategies are as bad but relying on a recent addition and something not required by the project sounds very fragile upfront.\r\n\r\nI don't think it's broken, it's your use case which is wrong.  If you aggregate projects using submodules in a bigger aggregator, the definition of the `rootdir` indicates it won't bubble up, and that's definitely what we want, else the project build may fail locating files that are pointed to.  If we want a property that would point to the upper aggregator directory, we can define another property for that in a new PR, but I'm not sure about the use case for it yet, do you actually have one ?  Ffwiw, `git` has some similar properties to go up out of the gitmodule.",
      "So this PR just duplicates the properties we have without solving any new feature but does it differently from before.\r\nGit is different because the bubbling is cleaner whereas .mvn is an user dir pushed to the repos (compared to git which is not) and this is what breaks current impl as explained (agree it i as much as parent/child impl but as much both ways).\r\nIf we can't do better than what we have today, let's keep/enhance what we have instead of creating something very confusing for end user and not better in terms of reliability (which prop to use being said none is really what I want or has side effects).\r\n\r\n>  If you aggregate projects using submodules in a bigger aggregator, the definition of the rootdir indicates it won't bubble up, and that's definitely what we want, else the project build may fail locating files that are pointed to. \r\n\r\nHmm, you can make it run in both case depending how you define it (with .mvn in root but not children or with in children), so you still have broken cases.\r\nIf you aggregate you will get a single rootdir..so it is broken as soon as you get 2 subprojects - actually one since parent will not have its rootdir cleanly set.\r\n\r\nIdeally we need a marker to set the root dir, we could use git as inspiration and force the presence of a `.mvn/.mvn_meta` which would be handled at \"clone\"/setup time somehow (do we fail if this file is missing, how do we ensure it is not committed and experience is smooth when a project is cloned?).\r\n\r\nThe parent/child resolution + filtering to ensure the resolution does not use .m2/remote is still way more reliable IMHO since it always works to get a deterministic rootdir. Only case it is broken is when the child does not reference the parent but then the intent of the user was to be able to run either from the parent (rootdir=parent) or child only (rootdir=child) so we always exactly match the intent whereas with .mvn we have several counter examples since the presence is optional.",
      "> But the parent/child relationship has to be done later in the process, so can't be used for early interpolation.\r\n\r\nInterpolation does not really works there anyway so no, but yes it will require a 2 phases processing, guess it is not a big blocker as of today.\r\nI'm not to add new properties, really just to get a single functional rootdir one (hopefully merged with multi one but if not at least reliable on any maven compatible projects).\r\nMy definition enables to use it for checkstyles, headers etc even without a .mvn (whereas it works in a minority of cases - statistically - if not done this way). It can also work when using an aggregator if the pom uses properties to define paths exactly as .mvn case which does not solve this issue since for a project with `root > {child1/.mvn>subchild1,child2/.mvn>subchild2}` it will randomly take child1 or child2 as rootdir.\r\n\r\n\r\nSide note: using .mvn also has a nasty side effect, we couldnt use it in nested directories for module specific configuration anymore whereas it can come later if we support lock files, dependency routing or other metadata per module we don't want to put in the pom to keep it readable. It would be a natural location for me.\r\n\r\nMaybe thinking out loud but do we attack the issue by the right side, for configuration location we want to be able to pin absolutely a file (often the root pom), shouldn't we enable it? Main issue is that `${project.xxxx}` is interpolated per pom so maybe we should enable a definition pinning, ie `${project.definition.basedir}` - name is bad but sharing the idea - would stay `/opt/foo` for `/opt/foo/pom.xml` but also its child `/opt/foo/child/pom.xml`? This looks pretty easy to handle in interpolation and drops this `rootdir` need in properties for user/mojo configuration. Can it be an outcome?",
      "> > But the parent/child relationship has to be done later in the process, so can't be used for early interpolation.\r\n> \r\n> Interpolation does not really works there anyway so no, but yes it will require a 2 phases processing, guess it is not a big blocker as of today. I'm not to add new properties, really just to get a single functional rootdir one (hopefully merged with multi one but if not at least reliable on any maven compatible projects). My definition enables to use it for checkstyles, headers etc even without a .mvn (whereas it works in a minority of cases - statistically - if not done this way). It can also work when using an aggregator if the pom uses properties to define paths exactly as .mvn case which does not solve this issue since for a project with `root > {child1/.mvn>subchild1,child2/.mvn>subchild2}` it will randomly take child1 or child2 as rootdir.\r\n> \r\n> Side note: using .mvn also has a nasty side effect, we couldnt use it in nested directories for module specific configuration anymore whereas it can come later if we support lock files, dependency routing or other metadata per module we don't want to put in the pom to keep it readable. It would be a natural location for me.\r\n> \r\n> Maybe thinking out loud but do we attack the issue by the right side, for configuration location we want to be able to pin absolutely a file (often the root pom), shouldn't we enable it? Main issue is that `${project.xxxx}` is interpolated per pom so maybe we should enable a definition pinning, ie `${project.definition.basedir}` - name is bad but sharing the idea - would stay `/opt/foo` for `/opt/foo/pom.xml` but also its child `/opt/foo/child/pom.xml`? This looks pretty easy to handle in interpolation and drops this `rootdir` need in properties for user/mojo configuration. Can it be an outcome?\r\n\r\nImho, we need this definition before parsing any project POM , else use cases such as https://github.com/apache/maven/pull/1059 or https://github.com/apache/maven/pull/1062 cannot be covered.  So I'm not opposed to a different way of pinning, but not from pom files.",
      "> Imho, we need this definition before parsing any project POM , else use cases such as https://github.com/apache/maven/pull/1059 or https://github.com/apache/maven/pull/1062 cannot be covered. So I'm not opposed to a different way of pinning, but not from pom files.\r\n\r\nFor the second one it is not a technical issue AFAIK.\r\nFor first one it looks it is a bit more nasty indeed but `maven.multiModuleProjectDirectory` seems fully dedicated to this lifecycle case and looks like having the same issues so if it will somehow assume `.mvn` is there, I would prefer `.mvn/jvm.config` enabling a minimum interpolation (`$PWD` or alike) which can be set in `jvm.config` this way user can set all the system props needed there and avoid the ambiguity to introduce something magic with a lot of corner cases.\r\n",
      "@michael-o @rmannibucau @cstamas  please check the recent addition of the `root=\"true\"` model attribute as an alternative mechanism to locate the root directory.  Both are conceptually similar and the nearest  directory having either a `.mvn` sub-directory or a `pom.xml` flagged with this attribute will be used."
    ],
    "commit_messages": [
      "[MNG-7038] Introduce public properties to point to the root and top directories of (multi-module) project (#1061)\n\nThis commit introduces three properties:\r\n\r\n * project.rootDirectory: the project's directory or parent directory containing a .mvn subdirectory or a pom.xml flagged with the root=\"true\" attribute. If no such directory can be found, accessing the rootDirectory property will throw an IllegalStateException.\r\n\r\n * session.topDirectory : the directory of the topmost project being built, usually the current directory or the directory pointed at by the -f/--file command line argument. The topDirectory is similar to the executionRootDirectory property available on the session, but renamed to make it coherent with the new rootDirectory and to avoid using root in its name. The topDirectory property is computed by the CLI as the directory pointed at by the -f/--file command line argument, or the current directory if there's no such argument.\r\n\r\n * session.rootDirectory : the rootDirectory for the topDirectory project.\r\n\r\nThe topDirectory and rootDirectory properties are made available on the MavenSession / Session and deprecate the executionRootDirectory and multiModuleProjectDirectory properties. The rootDirectory should never change for a given project and is thus made available for profile activation and model interpolation (without the project. prefix, similar to basedir). The goal is also to make the rootDirectory property also available during command line arguments interpolation.\r\n\r\nA root boolean attribute is also added to the model to indicate that the project is the root project. This attribute is only supported if the buildconsumer feature is active and removed before the pom is installed or deployed. It can be used as an alternative mechanism to the .mvn directory."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624408ca14f302d393b58d7",
    "number": 1060,
    "body": "When running `mvn archetype:generate` without providing a valid POM a directory named `${project.basedir}` is created at the location where you invoke the command from. This is done in the `ConsumerPomArtifactTransformer`. \r\n\r\nIf there is no (build) POM present at all there is no need to transform artifacts for a consumer POM and thus the side effect of creating the directory.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [MNG-7707](https://issues.apache.org/jira/browse/MNG-7707) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-7707-basedir-folder-creation-when-running-plugin",
    "is_a_fork": true,
    "comments": [
      "@michael-o what change are you requesting here?",
      "> Does this require an IT to check whether the non-interpolated dir is still created?\r\n\r\nThere's already a unit test, isn't that sufficient ?",
      "> > Does this require an IT to check whether the non-interpolated dir is still created?\r\n> \r\n> There's already a unit test, isn't that sufficient ?\r\n\r\nYes, it is."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624408da14f302d393b58d8",
    "number": 1059,
    "body": "This add support for project specific settings using:\r\n  * a default location of `${session.rootDirectory}/.mvn/settings.xml`\r\n  * an alternate location specified by `-ps` or `--project-settings` and resolved against the current dir if provided with a relative path\r\n\r\nNote that project settings have some limitations:\r\n  * no `localRepository`\r\n  * no `interactiveMode`\r\n  * no `offline`\r\n  * no `proxies`\r\n  * no `server[x].username`, `server[x].password`, `server[x].privateKey`, `server[x].passphrase`, `server[x].filePermissions`, `server[x].directoryPermissions`\r\n  * no `usePluginRegistry`\r\n\r\nSimple IT provided with https://github.com/apache/maven-integration-testing/pull/265\r\n\r\n===\r\nRelated discussions to be considered (but note that this PR does not depend on the following):\r\n\r\n* [MNG-6762](https://issues.apache.org/jira/browse/MNG-6762) suggests to also modify other file resolution, but there was a strong opposition to modify the existing behaviour.  This PR is coherent with the current code where relative files are resolved against the current directory.  \r\n\r\n",
    "head_branch": "MNG-5659-project-settings",
    "is_a_fork": true,
    "comments": [
      "`usePluginRegistry` in project settings should also be ignored.",
      "Can `${maven.multiModuleProjectDirectory}/.mvn/settings.xml` become `${maven.multiModuleProjectDirectory}/.mvn/project.settings.xml` or something like that since `.mvn/settings.xml` is sometimes used by users so something more unlikely would be great."
    ],
    "commit_messages": [
      "[MNG-5659] Provide project-specific settings located in ${session.rootdir}/.mvn/settings.xml by default (#1059)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624408ea14f302d393b58d9",
    "number": 1058,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7741",
    "is_a_fork": true,
    "comments": [
      "@michael-o anything to fix here? Good to merge?",
      "IMHO this is irrelevant, the info gathered here is really just a \"verbose log-like\" output for human consumption, nothing produced here is to be reused by any code... so IMHO forcing some \"... as we did it before\" is really not needed.",
      "Thanks!\r\n\r\nI was skeptical about `org.eclipse.aether.internal.impl.synccontext.named.GAVNameMapper.fileGav()` and tilde (`~`) wasn't mentioned before... And indeed it's only a tracking file name. Anyway - thanks for understanding.",
      "Yes, moreover, the tilde originates from Takari Shared Local Repo as initially we tried to create \"compatible\" file locking, but gave up as Takari implementation had issues, but the tilde somehow remained in our codebase, but again, is really irrelevant. Personally, as these files are for human consumption, underscore makes much more sense (would make even for locking, but this is what it is), is better visually and easier to type as well (at least on HU kbd :smile: )"
    ],
    "commit_messages": [
      "[MNG-7741] Track missing files, plugin and parent pom dependencies (#1058)\n\nAdd more information when using `-Dmaven.repo.local.recordReverseTree=true`.\r\n\r\nSigned-off-by: Grzegorz Grzybek <gr.grzybek@gmail.com>\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7741"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624408fa14f302d393b58da",
    "number": 1057,
    "body": "Additional fix for [MNG-7697](http://issues.apache.org/jira/browse/MNG-7697)",
    "head_branch": "MNG-7697",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7697] Fix assembly which should not include plexus-utils-3.5.0 (#1057)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244090a14f302d393b58db",
    "number": 1056,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7725-master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7725] Update surefire to 3.0.0 in default binding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244090a14f302d393b58dc",
    "number": 1055,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7725",
    "is_a_fork": false,
    "comments": [
      "One failed build in Jenkins is on branch. \r\nBranch is removed when PR is created but report still exists.",
      "When you pushed this PR originally, all jobs failed (as 3.0.0 was nowhere), I manually restarted almost all, but that one job on ASF CI gone missing."
    ],
    "commit_messages": [
      "[MNG-7725] Update surefire to 3.0.0 in default binding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244091a14f302d393b58dd",
    "number": 1054,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "gnodet-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244092a14f302d393b58de",
    "number": 1053,
    "body": "There was a typo: the stream contains entries, so e.getKey and e.getValue is needed.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7726",
    "head_branch": "maven-3.9.x-MNG-7726-prop-context",
    "is_a_fork": true,
    "comments": [
      "Tested the issue provided reproducer, all works now as expected."
    ],
    "commit_messages": [
      "[MNG-7726] Maven 3.9.0 resolves properties in file profile activation incorrectly (#1053)\n\nThere was a typo: the stream contains entries, so e.getKey and\r\ne.getValue is needed.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7726"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244093a14f302d393b58df",
    "number": 1052,
    "body": null,
    "head_branch": "elharo-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update a few URLs (#1052)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244094a14f302d393b58e0",
    "number": 1051,
    "body": "This is a more direct approach to avoiding the warnings. Just take them out. They're not actionable and no one cares about this. ",
    "head_branch": "MNG-7724",
    "is_a_fork": false,
    "comments": [
      "what if plugin use SLF4J 2 (not supported by Maven) - then we will just hide issue",
      "@slachiewicz not differently than today, keep in mind it was already not working since it was using the broken logger setup to log, only actual useful logging was the printstacktrace on stderr (without logger) when the integration was not working which can't happen here since this init is done before the init so tempted to say we support your case dropping the code ;)."
    ],
    "commit_messages": [
      "MNG-7724 don't warn about unsupported SLF4J configs; no one cares (#1051)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244095a14f302d393b58e1",
    "number": 1050,
    "body": "Now that I look at it, this class probably doesn't belong in this repo at all. It should be repackaged or removed. ",
    "head_branch": "clean",
    "is_a_fork": false,
    "comments": [
      "Yes, that's the plan, as discussed on the mailing lists and on [plexus-utils](https://github.com/codehaus-plexus/plexus-utils/pull/236).\r\nThis PR is not necessary, as this class will be moved to plexus-utils(-xml) 4.x and consumed from maven.\r\n",
      "If it's going to be moved, it should be moved without these methods. ",
      "I'm closing this one, as the location is now irrelevant, the code has changed and those constants are needed for compatibility and are actually used....\r\n  https://github.com/codehaus-plexus/plexus-xml/blob/master/src/main/java/org/codehaus/plexus/util/xml/Xpp3Dom.java\r\n  https://github.com/apache/maven/blob/master/maven-xml-impl/src/main/java/org/apache/maven/internal/xml/XmlNodeImpl.java#L207"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244096a14f302d393b58e2",
    "number": 1049,
    "body": null,
    "head_branch": "MNG-7730",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "remove unused class (#1049)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244097a14f302d393b58e3",
    "number": 1048,
    "body": "Depends on\r\n * https://github.com/apache/maven-plugin-tools/pull/242\r\n * https://github.com/apache/maven-plugin-testing/pull/39\r\n * https://github.com/apache/maven-clean-plugin/pull/20\r\n * https://github.com/apache/maven-filtering/pull/46\r\n * https://github.com/apache/maven-resources-plugin/pull/35\r\n * https://github.com/apache/maven-compiler-plugin/pull/147\r\n * https://github.com/apache/maven-archiver/pull/46\r\n * https://github.com/apache/maven-jar-plugin/pull/70\r\n * https://github.com/apache/maven-source-plugin/pull/19\r\n * https://github.com/apache/maven-install-plugin/pull/35\r\n * https://github.com/apache/maven-deploy-plugin/pull/27\r\n",
    "head_branch": "plugins-4x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244098a14f302d393b58e4",
    "number": 1047,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7731",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7731] MNG-7520 incorrectly back ported to Maven 3.9.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244099a14f302d393b58e5",
    "number": 1046,
    "body": "That carries mostly transport-http bugfixes and improvements.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7723",
    "head_branch": "MNG-7723-resolver-197",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7723] Upgrade to Maven Resolver 1.9.7 (#1046)\n\nUpgrade to Maven Resolver 1.9.7\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7723"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624409aa14f302d393b58e6",
    "number": 1045,
    "body": "Remove remaining references to the plexus-utils Xpp3DomBuilder and favour the internal XmlNodeBuilder instead.\r\nThis also removes one reference to the plexus-utils ReaderFactory.",
    "head_branch": "remove-refs-to-xpp3nodebuilder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove references to Xpp3DomBuilder and use XmlNodeBuilder instead (#1045)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624409ba14f302d393b58e7",
    "number": 1044,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7727",
    "head_branch": "remove-profiles-builder-method-implementation",
    "is_a_fork": true,
    "comments": [
      "> I'm not sure I understand the purpose of this. This also is singificant enough to deserve a JIRA issue.\r\n\r\nThe purpose is to:\r\n * remove references to plexus-utils\r\n * fix encoding problems with BOM parsing\r\n\r\nBut given, the code is not used afaik, I'm not sure it's worth fixing it, so removing also solves the problem.",
      "> Does this make sense to fiddle with compat although we want to get rid of it?\r\n\r\nWell, we want to get rid of it, but I think that won't be tomorrow. So in the mean time....",
      "> > Does this make sense to fiddle with compat although we want to get rid of it?\r\n> \r\n> Well, we want to get rid of it, but I think that won't be tomorrow. So in the mean time....\r\n\r\nI see, then a JIRA issue is imperative ",
      "@elharo would you prefer removing the `DefaultMavenProfilesBuilder` implementation class completely ?",
      "When did we deprecate it? If we can simply remove it in 4.0.0, that solves all problems. I will raise a question on the dev mailing list about whether we should start ripping out the deprecated methods and classes in 4.0.0.\r\n\r\nI do not think we should replace it with a broken version that simply returns null. Compile-time errors are better than runtime errors. \r\n\r\n",
      "@elharo it already returns null in 99% of the cases so guess this is not a behavior change",
      "maybe backport it to 3.9?",
      "> maybe backport it to 3.9?\r\n\r\nFor what benefit ?",
      "> > maybe backport it to 3.9?\r\n> \r\n> For what benefit ?\r\n\r\nto receive faster feedback from end users"
    ],
    "commit_messages": [
      "[MNG-7727] Remove MavenProfilesBuilder and DefaultMavenProfilesBuilder (#1044)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624409ca14f302d393b58e8",
    "number": 1043,
    "body": "For compatibility reason, the Xpp3DomBuilder will close those.\r\n\r\n",
    "head_branch": "fix-callee-closing",
    "is_a_fork": true,
    "comments": [
      "> I don't think every PR needs a JIRA, bu since this one changes behavior of a public method it's probably worth one and wider discussion.\r\n\r\n@elharo Fwiw, `XmlNodeBuilder` has been introduced in the latest 4.0.0-alpha-4 release, and I would not consider it _public api_, not is it supposed to become part of a public api.  The _public api_ for new maven 4 stuff is `org.apache.maven.api.*` and this class is in the `org.apache.maven.`*`internal`*`.xml` package."
    ],
    "commit_messages": [
      "Fix callee closing streams and readers instead of callers (#1043)\n\nFor compatibility reason, the Xpp3DomBuilder will close those"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624409da14f302d393b58e9",
    "number": 1042,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "upgrade-plexus-utils-3.5.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7710] Upgrade plexus-utils to 3.5.1 (#1042)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624409ea14f302d393b58ea",
    "number": 1041,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [X] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n\r\nThe issue with current code is that using a SLF4J binding which is not known by maven will lead to WARNINGs.\r\nThere are several builds which intend to run without warning or consider warnings as error and therefore fail - not using maven CLI options but other mecanism - either log analyzis on CI, the old way with appenders/handlers or stdout/stderr check if the handlers support the redirection properly.\r\nThis behavior defeats a bit using a logger abstraction since the support is pretty limited.\r\nThe idea is to keep the message - we can refine it later if relevant - but log it at info level to not make the build failling when there is no issue loading the impl maven should use and keep warning when a loading failed (we can evaluate the move to error later too for this case).",
    "head_branch": "MNG-7724",
    "is_a_fork": true,
    "comments": [
      "@elharo jul is jdk14 one (the PR adds its support, was not there not sure why), noop is kind of built-in but defeats the fact to log a warning on a random logger (but this is another ticket/issue I guess). The root cause is really the fact maven adds an integration layer with each slf4j implementation so at the end can't reliably rely on the slf4j abstraction.\r\nFor maven - as of today - slf4j binding == slf4j-$impl + maven-slf4j-$impl (in embedder module), this is what can need rework the future cause the relationship of slf4j binding should be sufficient - fully agree with your statement but not current state AFAIK.",
      "Why does Maven add that layer? Can it simply remove it instead? If I had a greenfield, I'd just use java.util.logging and not allow any other log libraries within ten dependency chains of core, but if wishes were horses...",
      "Fully agree JUL is way saner for products like maven but this is a long debate.\r\nIf we remove it we drop the `--fail-on-severity` flag so not sure we can in 4.x.",
      "@rmannibucau can this be closed ? [MNG-7724](http://issues.apache.org/jira/browse/MNG-7724) has been closed with https://github.com/apache/maven/pull/1051"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624409fa14f302d393b58eb",
    "number": 1040,
    "body": "Forward port of fix.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7720",
    "head_branch": "MNG-7720-forked-build-order",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7720] Wrong build order of forked projects (#1040)\n\nThe original fix MNG-7672 matched the \"scope\" but missed the \"order\". `project.collectedProjects` are in order as loaded (POM order), is not topologically sorted.\r\n\r\nFix is to use DAG of projects, ask for downstream projects (will return more then we need but sorted) and narrow that list to only contain collected projects.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7720"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a0a14f302d393b58ec",
    "number": 1039,
    "body": "Backport of fix.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7720",
    "head_branch": "maven-3.8.x-MNG-7720-forked-build-order",
    "is_a_fork": true,
    "comments": [
      "This IT fails: `testNoDeadlockAtVersionUpdate(org.apache.maven.it.MavenITmng7716BuildDeadlock)  Time elapsed: 2.385 s  <<< ERROR!` reason is:\r\n```\r\nFailed to execute goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set (default-cli) on project base: Execution default-cli of goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set failed: Plugin org.codehaus.mojo:versions-maven-plugin:2.15.0 or one of its dependencies could not be resolved: The following artifacts could not be resolved: org.apache.commons:commons-text:jar:1.10.0, dom4j:dom4j:jar:1.6.1: Could not find artifact org.apache.commons:commons-text:jar:1.10.0 in central (file:target/null) -> [Help 1]\r\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set (default-cli) on project base: Execution default-cli of goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set failed: Plugin org.codehaus.mojo:versions-maven-plugin:2.15.0 or one of its dependencies could not be resolved: The following artifacts could not be resolved: org.apache.commons:commons-text:jar:1.10.0, dom4j:dom4j:jar:1.6.1: Could not find artifact org.apache.commons:commons-text:jar:1.10.0 in central (file:target/null)\r\n```",
      "> This IT fails: `testNoDeadlockAtVersionUpdate(org.apache.maven.it.MavenITmng7716BuildDeadlock) Time elapsed: 2.385 s <<< ERROR!` reason is:\r\n> \r\n> ```\r\n> Failed to execute goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set (default-cli) on project base: Execution default-cli of goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set failed: Plugin org.codehaus.mojo:versions-maven-plugin:2.15.0 or one of its dependencies could not be resolved: The following artifacts could not be resolved: org.apache.commons:commons-text:jar:1.10.0, dom4j:dom4j:jar:1.6.1: Could not find artifact org.apache.commons:commons-text:jar:1.10.0 in central (file:target/null) -> [Help 1]\r\n> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set (default-cli) on project base: Execution default-cli of goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set failed: Plugin org.codehaus.mojo:versions-maven-plugin:2.15.0 or one of its dependencies could not be resolved: The following artifacts could not be resolved: org.apache.commons:commons-text:jar:1.10.0, dom4j:dom4j:jar:1.6.1: Could not find artifact org.apache.commons:commons-text:jar:1.10.0 in central (file:target/null)\r\n> ```\r\n\r\nBootstrap needs to be updated. I will handle that.",
      "> This IT fails: `testNoDeadlockAtVersionUpdate(org.apache.maven.it.MavenITmng7716BuildDeadlock) Time elapsed: 2.385 s <<< ERROR!` reason is:\r\n> \r\n> ```\r\n> Failed to execute goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set (default-cli) on project base: Execution default-cli of goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set failed: Plugin org.codehaus.mojo:versions-maven-plugin:2.15.0 or one of its dependencies could not be resolved: The following artifacts could not be resolved: org.apache.commons:commons-text:jar:1.10.0, dom4j:dom4j:jar:1.6.1: Could not find artifact org.apache.commons:commons-text:jar:1.10.0 in central (file:target/null) -> [Help 1]\r\n> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set (default-cli) on project base: Execution default-cli of goal org.codehaus.mojo:versions-maven-plugin:2.15.0:set failed: Plugin org.codehaus.mojo:versions-maven-plugin:2.15.0 or one of its dependencies could not be resolved: The following artifacts could not be resolved: org.apache.commons:commons-text:jar:1.10.0, dom4j:dom4j:jar:1.6.1: Could not find artifact org.apache.commons:commons-text:jar:1.10.0 in central (file:target/null)\r\n> ```\r\n\r\nTried with a clean local repo, no failure. The IT works."
    ],
    "commit_messages": [
      "[MNG-7720] Wrong build order of forked projects (#1039)\n\nThe original fix MNG-7672 matched the \"scope\" but missed the \"order\". `project.collectedProjects` are in order as loaded (POM order), is not topologically sorted.\r\n\r\nFix is to use DAG of projects, ask for downstream projects (will return more then we need but sorted) and narrow that list to only contain collected projects.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7720"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a1a14f302d393b58ed",
    "number": 1038,
    "body": "The original fix MNG-7672 matched the \"scope\" but missed the \"order\". `project.collectedProjects` are in order as loaded (POM order), is not topologically sorted.\r\n\r\nFix is to use DAG of projects, ask for downstream projects (will return more then we need but sorted) and narrow that list to only contain collected projects.\r\n\r\nRelated commit: 48cac1c003fdc409e8c455c21fcba07050393b0c\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7720\r\n",
    "head_branch": "maven-3.9.x-MNG-7720-forked-build-order",
    "is_a_fork": true,
    "comments": [
      "Liquibase build started failing when we switcthed to Maven 3.9.0 , it's a similar issue using the aggregate-jar javadoc goal. Here is a failed build link: https://github.com/liquibase/liquibase/actions/runs/4196586092/jobs/7277765171 . \r\nThe error occurs in a build were we exclude a submodule (-pl '!liquibase-dist'), and by debugging maven we can see that aggregator was still requesting it causing the null pointer. I also created the following minimal sample project to simulate this error: https://github.com/filipelautert/test-maven-pl-failure .\r\nAnyway, by  using Maven with this patch applied it builds again. Thanks for that!"
    ],
    "commit_messages": [
      "[MNG-7720] Wrong build order of forked projects (#1038)\n\nThe original fix MNG-7672 matched the \"scope\" but missed the \"order\". `project.collectedProjects` are in order as loaded (POM order), is not topologically sorted.\r\n\r\nFix is to use DAG of projects, ask for downstream projects (will return more then we need but sorted) and narrow that list to only contain collected projects.\r\n\r\nRelated commit: 48cac1c003fdc409e8c455c21fcba07050393b0c\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7720"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a2a14f302d393b58ee",
    "number": 1037,
    "body": "That carries mostly transport-http bugfixes and improvements.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7723",
    "head_branch": "maven-3.9.x-MNG-7723-resolver-197",
    "is_a_fork": true,
    "comments": [
      "Please create a similar PR for `master`.",
      "Created https://github.com/apache/maven/pull/1046"
    ],
    "commit_messages": [
      "[MNG-7723] Upgrade to Maven Resolver 1.9.7 (#1037)\n\nUpgrade to Maven Resolver 1.9.7\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7723"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a3a14f302d393b58ef",
    "number": 1036,
    "body": "Adjust some UTs as error message did change.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7715",
    "head_branch": "MNG-7715-resolver-196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7715] Update to resolver 1.9.6 (#1036)\n\nAdjust some UTs as error message did change.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7715"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a4a14f302d393b58f0",
    "number": 1035,
    "body": "The goal is to keep committers (i.e. me) from accidentally pushing straight into master. I think this does that, but I've only done this before through the github UI so please review carefully.",
    "head_branch": "protect",
    "is_a_fork": false,
    "comments": [
      "Well, this will also add overhead if you fix a typo and are safe to push directly.",
      "And this prevents release plugin as well (when doing a release from master)?",
      "> And this prevents release plugin as well (when doing a release from master)?\r\n\r\nthis one would be a blocker to me",
      "> > And this prevents release plugin as well (when doing a release from master)?\r\n> \r\n> this one would be a blocker to me\r\n\r\njust saying nothing really prevents. create a branch `release/4.0.0-alpha` or `release/3.9.2` or `release/3.8.10` when starting the release process and then release from this branch. As is we do not block people merging to main branches during release process...\r\nThen once the release is done just create a PR from the `release/xxx` branch. \r\nThe current way of releasing is a bit of legacy from svn days,",
      "> > > And this prevents release plugin as well (when doing a release from master)?\r\n> > \r\n> > \r\n> > this one would be a blocker to me\r\n> \r\n> just saying nothing really prevents. create a branch `release/4.0.0-alpha` or `release/3.9.2` or `release/3.8.10` when starting the release process and then release from this branch. As is we do not block people merging to main branches during release process... Then once the release is done just create a PR from the `release/xxx` branch. The current way of releasing is a bit of legacy from svn days,\r\n\r\nBah, even more work...",
      "> > > > And this prevents release plugin as well (when doing a release from master)?\r\n> > > \r\n> > > \r\n> > > this one would be a blocker to me\r\n> > \r\n> > \r\n> > just saying nothing really prevents. create a branch `release/4.0.0-alpha` or `release/3.9.2` or `release/3.8.10` when starting the release process and then release from this branch. As is we do not block people merging to main branches during release process... Then once the release is done just create a PR from the `release/xxx` branch. The current way of releasing is a bit of legacy from svn days,\r\n> \r\n> Bah, even more work...\r\n\r\nsays the one is asking people to create jira for everything :P \r\nactually it's just 2 command line:\r\n- git checkout -b release/....\r\n- when done with the release from from the branch: `gh pr create -B` \r\n\r\nI just find the \"hey guys hold on your merge for a week or two I'm releasing so nobody touch anything\" a bit archaic svn/cvs style :) \r\nBut this was just a comment from the peanut gallery.  And nothing prevent someone to do it at the end of day.\r\n\r\nBTW I'm not for ban direct push but not for this release reason.\r\n\r\n\r\n\r\n\r\n\r\n",
      "> > > > > And this prevents release plugin as well (when doing a release from master)?\r\n> > > > \r\n> > > > \r\n> > > > this one would be a blocker to me\r\n> > > \r\n> > > \r\n> > > just saying nothing really prevents. create a branch `release/4.0.0-alpha` or `release/3.9.2` or `release/3.8.10` when starting the release process and then release from this branch. As is we do not block people merging to main branches during release process... Then once the release is done just create a PR from the `release/xxx` branch. The current way of releasing is a bit of legacy from svn days,\r\n> > \r\n> > \r\n> > Bah, even more work...\r\n> \r\n> says the one is asking people to create jira for everything :P actually it's just 2 command line:\r\n> \r\n>     * git checkout -b release/....\r\n> \r\n>     * when done with the release from from the branch: `gh pr create -B`\r\n> \r\n> \r\n> I just find the \"hey guys hold on your merge for a week or two I'm releasing so nobody touch anything\" a bit archaic svn/cvs style :) But this was just a comment from the peanut gallery. And nothing prevent someone to do it at the end of day.\r\n> \r\n> BTW I'm not for ban direct push but not for this release reason.\r\n\r\n...and how do you want to reconcile two diverging branches back to a linear history?",
      "> > > > > > And this prevents release plugin as well (when doing a release from master)?\r\n> > > > > \r\n> > > > > \r\n> > > > > this one would be a blocker to me\r\n> > > > \r\n> > > > \r\n> > > > just saying nothing really prevents. create a branch `release/4.0.0-alpha` or `release/3.9.2` or `release/3.8.10` when starting the release process and then release from this branch. As is we do not block people merging to main branches during release process... Then once the release is done just create a PR from the `release/xxx` branch. The current way of releasing is a bit of legacy from svn days,\r\n> > > \r\n> > > \r\n> > > Bah, even more work...\r\n> > \r\n> > \r\n> > says the one is asking people to create jira for everything :P actually it's just 2 command line:\r\n> > ```\r\n> > * git checkout -b release/....\r\n> > \r\n> > * when done with the release from from the branch: `gh pr create -B`\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > I just find the \"hey guys hold on your merge for a week or two I'm releasing so nobody touch anything\" a bit archaic svn/cvs style :) But this was just a comment from the peanut gallery. And nothing prevent someone to do it at the end of day.\r\n> > BTW I'm not for ban direct push but not for this release reason.\r\n> \r\n> ...and how do you want to reconcile two diverging branches back to a linear history?\r\n\r\nI don't see the problem here. Can you explain?\r\n\r\nYou have `maven-3.8.x` ready for `3.8.25` release.\r\nso create a branch `release/3.8.25`, then start the release process from this branch.\r\nAt the end, you can create a PR from `release/3.8.25` to `maven-3.8.x` or just increment version in `maven-3.8.x` (as long as you have the tag, does the commit by the m-release-p really matter?)\r\n\r\n",
      "> > > > > > > And this prevents release plugin as well (when doing a release from master)?\r\n> > > > > > \r\n> > > > > > \r\n> > > > > > this one would be a blocker to me\r\n> > > > > \r\n> > > > > \r\n> > > > > just saying nothing really prevents. create a branch `release/4.0.0-alpha` or `release/3.9.2` or `release/3.8.10` when starting the release process and then release from this branch. As is we do not block people merging to main branches during release process... Then once the release is done just create a PR from the `release/xxx` branch. The current way of releasing is a bit of legacy from svn days,\r\n> > > > \r\n> > > > \r\n> > > > Bah, even more work...\r\n> > > \r\n> > > \r\n> > > says the one is asking people to create jira for everything :P actually it's just 2 command line:\r\n> > > ```\r\n> > > * git checkout -b release/....\r\n> > > \r\n> > > * when done with the release from from the branch: `gh pr create -B`\r\n> > > ```\r\n> > > \r\n> > > \r\n> > >     \r\n> > >       \r\n> > >     \r\n> > > \r\n> > >       \r\n> > >     \r\n> > > \r\n> > >     \r\n> > >   \r\n> > > I just find the \"hey guys hold on your merge for a week or two I'm releasing so nobody touch anything\" a bit archaic svn/cvs style :) But this was just a comment from the peanut gallery. And nothing prevent someone to do it at the end of day.\r\n> > > BTW I'm not for ban direct push but not for this release reason.\r\n> > \r\n> > \r\n> > ...and how do you want to reconcile two diverging branches back to a linear history?\r\n> \r\n> I don't see the problem here. Can you explain?\r\n> \r\n> You have `maven-3.8.x` ready for `3.8.25` release. so create a branch `release/3.8.25`, then start the release process from this branch. At the end, you can create a PR from `release/3.8.25` to `maven-3.8.x` or just increment version in `maven-3.8.x` (as long as you have the tag, does the commit by the m-release-p really matter?)\r\n\r\nWhat if master has developed from then? A ff-merge isn't possible anymore, no?",
      "> > \r\n> > \r\n> > I don't see the problem here. Can you explain?\r\n> > You have `maven-3.8.x` ready for `3.8.25` release. so create a branch `release/3.8.25`, then start the release process from this branch. At the end, you can create a PR from `release/3.8.25` to `maven-3.8.x` or just increment version in `maven-3.8.x` (as long as you have the tag, does the commit by the m-release-p really matter?)\r\n> \r\n> What if master has developed from then? A ff-merge isn't possible anymore, no?\r\n\r\nand so what is the problem? \r\nthe tag is there. it's the most important of a release. then just bump version in the main branch.\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a4a14f302d393b58f1",
    "number": 1034,
    "body": "How do I hate git? Let me count the ways. \r\n\r\nIn any case, this PR should bring the repo back to the state it was in before an accidental commit to master. ",
    "head_branch": "rev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "restore src/mdo/reader.vm (#1034)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a6a14f302d393b58f2",
    "number": 1033,
    "body": null,
    "head_branch": "more",
    "is_a_fork": false,
    "comments": [
      "Test cases here would be iffy, because the behavior is system dependent and most of the time this will just work. However there can be flaky behavior with non-ASCII characters when the Locale is something uncommon like Turkish. Generally when parsing XML one should let the parser detect the encoding, rather than trying to guess it. "
    ],
    "commit_messages": [
      "replace deprecated methods that don't properly handle encoding (#1033)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a7a14f302d393b58f3",
    "number": 1032,
    "body": null,
    "head_branch": "util",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "remove plexus utils dependency (#1032)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a7a14f302d393b58f4",
    "number": 1031,
    "body": "The implementation for MNG-7706 is wrong: it checks parameter **name** where it should check **type** and **defaultValue** (expression) instead.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7717",
    "head_branch": "MNG-7717-warn-wrongly",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7717] Maven warns wrongly about deprecated parameter (#1031)\n\nThe implementation for MNG-7706 is wrong: it changes parameter NAME,\r\nwhere it should check type and defaultValue instead.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7717"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a8a14f302d393b58f5",
    "number": 1030,
    "body": "The implementation for MNG-7706 is wrong: it checks parameter **name** where it should check **type** and **defaultValue** (expression) instead.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7717",
    "head_branch": "maven-3.9.x-MNG-7717-warn-wrongly",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7717] Maven warns wrongly about deprecated parameter (#1030)\n\nThe implementation for MNG-7706 is wrong: it checks parameter name where it should check type and defaultValue (expression) instead.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7717"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440a9a14f302d393b58f6",
    "number": 1029,
    "body": "If ConcurrencyDependencyGraph#getRootSchedulableBuilds returns an empty list then MultiThreadedBuilder is locked forever as it never gets a build result (because nothing is scheduled).\r\n\r\nThis changes the method, that in such case just the first project is returned, this might not give the best performance, but ensures that there is at least one build scheduled and the build-loop can proceed.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7716",
    "is_a_fork": true,
    "comments": [
      "Backport 3.9.x:\r\n- https://github.com/apache/maven/pull/1028\r\n\r\nBackport 3.8.x:\r\n- https://github.com/apache/maven/pull/1027"
    ],
    "commit_messages": [
      "[MNG-7716] ConcurrencyDependencyGraph deadlock if no root is selected\n\nIf ConcurrencyDependencyGraph#getRootSchedulableBuilds returns an empty\nlist then MultiThreadedBuilder is locked forever as it never gets a\nbuild result (because nothing is scheduled).\n\nThis changes the method, that in such case just the first project is\nreturned, this might not give the best performance, but ensures that\nthere is at least one build scheduled and the build-loop can proceed.\n\nThis closes #1029"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440aaa14f302d393b58f7",
    "number": 1028,
    "body": "If ConcurrencyDependencyGraph#getRootSchedulableBuilds returns an empty list then MultiThreadedBuilder is locked forever as it never gets a build result (because nothing is scheduled).\r\n\r\nThis changes the method, that in such case just the first project is returned, this might not give the best performance, but ensures that there is at least one build scheduled and the build-loop can proceed.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7716_3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7716] ConcurrencyDependencyGraph deadlock if no root is selected\n\nIf ConcurrencyDependencyGraph#getRootSchedulableBuilds returns an empty\nlist then MultiThreadedBuilder is locked forever as it never gets a\nbuild result (because nothing is scheduled).\n\nThis changes the method, that in such case just the first project is\nreturned, this might not give the best performance, but ensures that\nthere is at least one build scheduled and the build-loop can proceed.\n\nThis closes #1028"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440aba14f302d393b58f8",
    "number": 1027,
    "body": "If ConcurrencyDependencyGraph#getRootSchedulableBuilds returns an empty list then MultiThreadedBuilder is locked forever as it never gets a build result (because nothing is scheduled).\r\n\r\nThis changes the method, that in such case just the first project is returned, this might not give the best performance, but ensures that there is at least one build scheduled and the build-loop can proceed.\r\n\r\nIf this is merged I can contribute a fix for 3.9.x as well!\r\n\r\nThis relates to:\r\n- https://github.com/eclipse-tycho/tycho/issues/2169\r\n\r\nThe fix for this issue was gently sponsored by [Faktor Zehn GmbH](https://www.faktorzehn.com).\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7716) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7716_3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7716] ConcurrencyDependencyGraph deadlock if no root is selected\n\nIf ConcurrencyDependencyGraph#getRootSchedulableBuilds returns an empty\nlist then MultiThreadedBuilder is locked forever as it never gets a\nbuild result (because nothing is scheduled).\n\nThis changes the method, that in such case just the first project is\nreturned, this might not give the best performance, but ensures that\nthere is at least one build scheduled and the build-loop can proceed.\n\nThis closes #1027"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440aca14f302d393b58f9",
    "number": 1026,
    "body": "This option promotes \"Maven2\" in latest Maven 3 versions that is insane. Also, this option was really meant to bridge transition from Maven2 to Maven3, when both were sharing same local repository. Hopefully, in 2023 nobody does that anymore.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-6889",
    "head_branch": "maven-3.8.x-MNG-6889-llr-warns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[3.8.x] [MNG-6889] Deprecate llr option (#1026)\n\n* [MNG-6889] Big fat warning on llr\r\n\r\nThis option promotes \"Maven2\" in latest Maven 3 versions that is\r\ninsane. Also, this option was really meant to bridge transition\r\nfrom Maven2 to Maven3, when both were sharing same local\r\nrepository. Hopefully, in 2023 nobody does that anymore.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-6889"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440ada14f302d393b58fa",
    "number": 1025,
    "body": "Update and apply some adjustments to UTs as\r\nerror message did change.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7715",
    "head_branch": "maven-3.9.x-MNG-7715-resolver-196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7715] Update to resolver 1.9.6 (#1025)\n\nUpdate and apply some adjustments to UTs as\r\nerror message did change.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7715"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662440aea14f302d393b58fb",
    "number": 1024,
    "body": "(when the fixed release is done, this is just a placeholder)\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7710",
    "head_branch": "maven-3.9.x-MNG-7710-upgrade-p-u",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[maven-3.9.x][MNG-7710] Upgrade plexus-utils to 3.5.1 (#1024)\n\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7710\r\n\r\nCo-authored-by: Olivier Lamy <olamy@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440afa14f302d393b58fc",
    "number": 1023,
    "body": "Port of https://github.com/codehaus-plexus/plexus-utils/commit/bf198ff5d8f3bd5eb90d09826006c4d419884660",
    "head_branch": "MNG-7683",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7709] Regression in configuration merge (#1023)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b0a14f302d393b58fd",
    "number": 1022,
    "body": "As with previous PR (simple removal) the `-llr` got interpreted as `-l lr`, it logged all output to `lr` file. This would maean that use of `-llr` would still sneakily 'work' and probably cause surprise down the road to users.\r\n\r\nReturned the option, and expicitly checking for it's presence to be able to fail with meaningful message.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713\r\n",
    "head_branch": "MNG-7713-mvn-llr-fail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7713] Make Maven fail if option present (#1021) (#1022)\n\nAs with previous PR (simple removal) the `-llr` got\r\ninterpreted as `-l lr`, it logged all output to `lr`\r\nfile. This would maean that use of `-llr` would still\r\nsneakily 'work' and probably cause surprise down the\r\nroad to users.\r\n\r\nReturned the option, and expicitly checking for it's\r\npresence to be able to fail with meaningful message.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b1a14f302d393b58fe",
    "number": 1021,
    "body": "As with previous PR (simple removal) the `-llr` got interpreted as `-l lr`, it logged all output to `lr` file. This would maean that use of `-llr` would still sneakily 'work' and probably cause surprise down the road to users.\r\n\r\nReturned the option, and expicitly checking for it's presence to be able to fail with meaningful message.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713",
    "head_branch": "maven-3.9.x-MNG-7713-mvn-llr-fail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7713] Make Maven fail if option present (#1021)\n\nAs with previous PR (simple removal) the `-llr` got\r\ninterpreted as `-l lr`, it logged all output to `lr`\r\nfile. This would maean that use of `-llr` would still\r\nsneakily 'work' and probably cause surprise down the\r\nroad to users.\r\n\r\nReturned the option, and expicitly checking for it's\r\npresence to be able to fail with meaningful message.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b2a14f302d393b58ff",
    "number": 1020,
    "body": "There is really no need for it, and there is a resolver option if really must (but really should not, local repo is and should be considered as transient).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713",
    "head_branch": "MNG-7713-drop-llr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7713] Drop legacy-local-repository option (#1020)\n\nThere is really no need for it, and there is a resolver option if really must (but really should not, local repo is and should be considered as transient).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b3a14f302d393b5900",
    "number": 1019,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7728\r\n\r\nThe PluginContainer from the v4 api uses the same additional code block than the v3 api and thus offers a `getPluginsAsMap()` method along with a `flushPluginMap()` which makes the whole class non immutable.\r\nGiven additional constructor arguments are not supported by the generator, using a lazy computed field should be enough to ensure that the content of the class never changes, even though the field itself can change, the value returned by `getPluginsAsMap()` cannot.",
    "head_branch": "fix-mutable-api",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix mutable api in PluginContainer (#1019)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b4a14f302d393b5901",
    "number": 1018,
    "body": "There is really no need for it, and there is a resolver option if really must (but really should not, local repo is and should be considered as transient).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713",
    "head_branch": "maven-3.9.x-MNG-7713-drop-llr",
    "is_a_fork": true,
    "comments": [
      "> resolver option\r\n\r\nHello @cstamas , could you clarify what particular resolver option do you mean? Thanks.\r\nSuch capabilities really requires for emulate closed environments without access to Maven Central in tests."
    ],
    "commit_messages": [
      "[maven-3.9.x] [MNG-7713] Drop legacy-local-repository option (#1018)\n\nThere is really no need for it, and there is a resolver\r\noption if really must (but really should not, local repo\r\nis and should be considered as transient).\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7713"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662440b5a14f302d393b5902",
    "number": 1017,
    "body": null,
    "head_branch": "close",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Simplify code with try with resources (#1017)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b6a14f302d393b5903",
    "number": 1016,
    "body": "and we remove reference to class we want to delete",
    "head_branch": "dom",
    "is_a_fork": false,
    "comments": [
      "Yes, I've been looking at that. There are several somewhat parallel tracks here. The work you're doing on XML is the biggest part of it. I'd also like to get rid of a lot of the duplicate utility code that's been copied and pasted into Plexus utils, maven-shared-utils, apache commons, and other places over the years. These days a lot of it can ve found in the JDK. Ideally I'd like tp reach a point where org.codehaus is nowhere to be found in our code. One can dream. :-)",
      "> Yes, I've been looking at that. There are several somewhat parallel tracks here. The work you're doing on XML is the biggest part of it. I'd also like to get rid of a lot of the duplicate utility code that's been copied and pasted into Plexus utils, maven-shared-utils, apache commons, and other places over the years. These days a lot of it can ve found in the JDK. Ideally I'd like tp reach a point where org.codehaus is nowhere to be found in our code. One can dream. :-)\r\n\r\nI would begin by removing any dependency on `maven-shared-utils` because I think not many projects have migrated from plexus-utils.  So the path will be much easier in this way.",
      "It all moves to JDK classes when possible, and Apache commons when not so there's no intermediate step. This is true whether it's maven-shared-utils or plexus utils. I have already deprecated a lot of the functionality in maven-shared-utils so I hope that pokes a few projects to update themselves without me having to do the work piecemeal. "
    ],
    "commit_messages": [
      "remove unused code (#1016)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b7a14f302d393b5904",
    "number": 1015,
    "body": "Begin slog of removing plexus util dependencies we shouldn't have to maintain.",
    "head_branch": "plexus",
    "is_a_fork": false,
    "comments": [
      "Yes, I would like to remove all references to org.codehaus.plexus.utils.StringUtils. In fact I would like to remove all references to org.codehaus.plexus.utils and now that you mention it, I would like to get rid of all references to org.codehaus.plexus. Realistically plexus only ever was used in Maven and there's no need for separate projects or repos.\r\n\r\nBut even sticking to StringUtils that's a long slog across multiple repos, and even in a single repo the semantics of replacement for a call can vary subtly from one invocation to the next so I don't think a single PR is practical. "
    ],
    "commit_messages": [
      "Prefer Java standard library to Plexus util (#1015)\n\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b8a14f302d393b5905",
    "number": 1014,
    "body": "Also clean up docs, generics, and comparisons",
    "head_branch": "770",
    "is_a_fork": false,
    "comments": [
      "please remember to close associated jira",
      "See above. That Issue should not be closed because of this PR. JIRA issues and PRs have a many-to-many relationship. A PR can address more than one JIRA issue and a JIRA issue often requires more than one PR to fix. "
    ],
    "commit_messages": [
      "[MNG-7700] test some edge cases with leading zeroes (#1014)\n\n* add tests for MNG-7700"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440b9a14f302d393b5906",
    "number": 1013,
    "body": "As version 3.4.0 and above introduced several issues related to XML parsing and merging.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7710",
    "head_branch": "maven-3.9.x-MNG-7710-p-u-downgrade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7710] Downgrade plexus-utils to 3.3.1 (#1013)\n\nAs version 3.4.0 and above introduced several issues related to XML parsing and merging.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7710"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440baa14f302d393b5907",
    "number": 1012,
    "body": "This PR deprecates the 'localRepository' mojo parameter expression, and Core will emit warning if used by any Mojo.\r\n\r\nForward port of https://github.com/apache/maven/pull/1009\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7706\r\n",
    "head_branch": "MNG-7706-deprecate-localRepository-expr",
    "is_a_fork": true,
    "comments": [
      "Does this have to do with warning for test phase, when actually there are no tests at all?\r\n\r\nmvn version 3.9.1\r\n\r\n```\r\n[INFO] --- surefire:2.22.2:test (default-test) @ ..... ---\r\n[WARNING] Parameter 'localRepository' is deprecated core expression; Avoid use of ArtifactRepository type. If you need access to local repository, switch to '${repositorySystemSession}' expression and get LRM from it instead.\r\n[INFO] No tests to run.\r\n```",
      "solved with latest 3.0.0 https://maven.apache.org/surefire/maven-surefire-plugin/\r\n\r\ne.g. with Spring Boot\r\n\r\n```xml\r\n<maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>\r\n```",
      "How should https://github.com/cloudbees/maven-license-plugin/blob/b58872cc1f4062ec01ca903d9a5546cc3b85a748/src/main/java/com/cloudbees/maven/license/ProcessMojo.java#L179 be adapted? The deprecation notice says to switch to `repositorySystemSession.getLocalRepository()`, but that does not compile:\r\n\r\n> java: incompatible types: `org.eclipse.aether.repository.LocalRepository` cannot be converted to `org.apache.maven.artifact.repository.ArtifactRepository`",
      "1. drop `localRepository`, remove `buildingRequest.setLocalRepository(localRepository);`\r\n2. instead grab RepositorySystemSession   \"${repositorySystemSession}\"\r\n3. on ProjectBuildingRequest setSession from 2 and remove dropped setter from 1\r\n4. test it",
      "> on `ProjectBuildingRequest` `setSession` from 2\r\n\r\nThe `setSession` method does not exist, but a `setRepositorySession` exists. But why should I call that when `session.getProjectBuildingRequest()` already calls it a few lines above?",
      "Yup, setRepositorySession... if you are sure it is there, then not needed.",
      "Just for future: please use ML for asks like this one :)\r\nhttps://maven.apache.org/mailing-lists.html",
      "This migration was poorly documented. What you asked me to do had nothing to do with the instructions in the deprecation warning. I think it was appropriate to complain about that in this PR."
    ],
    "commit_messages": [
      "[MNG-7706] Deprecate 'localRepository' parameter expression (#1009) (#1012)\n\nThis PR deprecates the 'localRepository' mojo parameter expression, and Core will emit warning if used by any Mojo.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7706"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440bba14f302d393b5908",
    "number": 1011,
    "body": "Update resolver to 1.9.5 w/ many fixes.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7695",
    "head_branch": "MNG-7695-resolver-195",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7695] Update resolver to 1.9.5 (#1011)\n\nUpdate resolver to 1.9.5 w/ many fixes.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7695"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440bca14f302d393b5909",
    "number": 1010,
    "body": "Updates resolver to 1.9.5 w/ many fixes.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7695",
    "head_branch": "maven-3.9.x-MNG-7695-resolver-195",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7695] Update resolver to 1.9.5 (#1010)\n\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7695"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440bca14f302d393b590a",
    "number": 1009,
    "body": "This PR deprecates the 'localRepository' mojo parameter expression, and Core will emit warning if used by any Mojo.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7706",
    "head_branch": "maven-3.9.x-MNG-7706-deprecate-localRepository-expr",
    "is_a_fork": true,
    "comments": [
      "Ironically, ITs report this:\r\n```\r\nError:  Failures: \r\nWarning: Tmng5576CdFriendlyVersions.testContinuousDeliveryFriendlyVersionsAreWarningFreeWithBuildConsumer:103->AbstractMavenIntegrationTestCase.assertFalse:703 [WARNING] Parameter 'localRepository' is deprecated core expression; Switch to '${repositorySystemSession}' and get LRM from there instead. ==> expected: <false> but was: <true>\r\nWarning: Tmng5576CdFriendlyVersions.testContinuousDeliveryFriendlyVersionsAreWarningFreeWithoutBuildConsumer:71->AbstractMavenIntegrationTestCase.assertFalse:703 [WARNING] Parameter 'localRepository' is deprecated core expression; Switch to '${repositorySystemSession}' and get LRM from there instead. ==> expected: <false> but was: <true>\r\n[INFO] \r\nError:  Tests run: 890, Failures: 2, Errors: 0, Skipped: 84\r\n```",
      "Before this is merged, we need to do something with ITs:\r\n* either fix IT plugins, but am afraid that will start unrolling a snow ball of changes\r\n* fix the failing 2 IT to be more specific about warning it listens for...",
      "In practical terms, what does this mean for people with `<localRepository>` in their `settings.xml`? What are we supposed to do now?",
      "As description says \"This PR deprecates the 'localRepository' **mojo parameter** expression\". Has nothing to do with `settings.xml`. Don't mix the two.",
      "Moreover, please use mailing lists for these sort of questions, not old/closed pull requests https://maven.apache.org/mailing-lists.html",
      "I upgrade to 3.9.x, I see a warning, and I have a single place where I use \"localRepository\". Maybe make messages more clear, make release notes more clear, and upgrade your communication channels to something more usable.",
      "This is a project maintained by volunteers, hence you can contribute as well! Feel free to produce as many quality patches and other improvements project-wise as you like! We will be glad to review them 😺 ",
      "Created https://issues.apache.org/jira/browse/MNG-7754"
    ],
    "commit_messages": [
      "[MNG-7706] Deprecate 'localRepository' parameter expression (#1009)\n\nThis PR deprecates the 'localRepository' mojo parameter expression, and Core will emit warning if used by any Mojo.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7706"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662440bda14f302d393b590b",
    "number": 1008,
    "body": "Older clients (like polyglot) will miss to inject ModelCacheFactory as their Plexus XML will not contain that requirement. For them, provide OOTB defaults.\r\n\r\nThis would not happen, if JSR330 used, as then Sisu would remedy this at runtime, but Plexus XML actually puts things in \"concrete\" during build time.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7693",
    "head_branch": "maven-3.9.x-MNG-7693-npe-modelcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7693] For older clients make OOTB defaults (#1008)\n\nOlder clients (like pyliglot) will miss to inject ModelCacheFactory\r\nas their Plexus XML will not contain that requirement. For them,\r\nprovide OOTB defaults.\r\n\r\nThis would not happen, if JSR330 used, as then Sisu would remedy\r\nthis at runtime, but Plexus XML actually puts things in \"concrete\"\r\nduring build time.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7693"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440bea14f302d393b590c",
    "number": 1007,
    "body": "And have it aligned with install plugin. These two now provides all the fixes and new functionalities like working deployAtEnd etc.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7702",
    "head_branch": "MNG-7702-deploy-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7702] Use latest deploy plugin (#1007)\n\nAnd have it aligned with install plugin. These two now provides all the fixes and new functionalities like working deployAtEnd etc.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7702"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440bfa14f302d393b590d",
    "number": 1006,
    "body": "And have it aligned with install plugin. These two now provides all the fixes and new functionalities like working deployAtEnd etc.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7702",
    "head_branch": "maven-3.9.x-MNG-7702-deploy-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7702] Use latest deploy plugin (#1006)\n\nAnd have it aligned with install plugin. These two now provides all the fixes and new functionalities like working deployAtEnd etc.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7702"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c0a14f302d393b590e",
    "number": 1005,
    "body": "It currently falsely states that the stream should be closed by callers, which will result in a double close. ",
    "head_branch": "io",
    "is_a_fork": false,
    "comments": [
      "That's certainly the normal expectation (the caller closes the stream, not the callee). In both these cases, the callee is expected to completely consume the stream unless it perhaps throws an exception. ",
      "@gnodet Can we finally change the semantics here? The caller opens the stream then he must close it?",
      "Usually it's OK to close a stream more than once. If this method is expected to completely consume the stream, it doesn't feel wrong to me to close it here. ",
      "> @gnodet Can we finally change the semantics here? The caller opens the stream then he must close it?\r\n\r\nI've raised #1043 to change the behaviour here.\r\n\r\nI've also raised #1044 to get rid of the code and remove the plexus-utils dependency, along with the fact that the method will probably throw exceptions with encoding mismatch between BOM / reader as it performs weird transformation.  It seems this method is not used anymore.",
      "I'm closing this PR which is superseded by #1043 and #1044.",
      "I'm not sold on either #1043 or #1044. Just maybe we can kill the class completely but leaving it in place while making it return null seems the worst of both worlds. ",
      "> I'm not sold on either #1043 or #1044. Just maybe we can kill the class completely but leaving it in place while making it return null seems the worst of both worlds.\r\n\r\nThe autoclose mechanism implies that in the general case the responsibility of closing a stream lies in the caller's hand.  Opening a resource in a _open-and-forget_ mode should be done only in very specific cases where this is actually required.  I don't think reading an xml is such a use case (at least not in the context of maven) where the caller will use the parsed xml right away.  So I think we should make things more intuitive and just do what is usually expected.\r\nAlso, there are a bunch of use cases where one need to wrap input into a no-op closeable input because of such behaviours.",
      "@elharo can we close this PR now ?",
      "Looks like there's still some useful doc changes. I'll have to fix it up and merge to master and see",
      "> Looks like there's still some useful doc changes. I'll have to fix it up and merge to master and see\r\n\r\nThe doc changes are wrong and do not reflect what actually happens, quite the opposite, as the doc in master seems  correct to me.\r\n\r\nIn addition, if you intend on changing the behavior in the readers to actually close the streams, I think that's wrong as I explained in https://github.com/apache/maven/pull/1005#issuecomment-1459770337\r\n\r\nChanging the behavior would also cause problems when the XmlNodeBuilder is used to parse only a subtree of the node, which is almost always the case in Maven, as its main usage is to parse the xml `configuration` bits for plugins...",
      "\r\n> Changing the behavior would also cause problems when the XmlNodeBuilder is used to parse only a subtree of the node, which is almost always the case in Maven, as its main usage is to parse the xml `configuration` bits for plugins...\r\n\r\nI'm slightly wrong here, as only the methods that take an xml parser are used to consume an xml subset.  All the other methods are basically only used in tests, apart from [this usage](https://github.com/apache/maven/blob/10128b448422c609cd994d68abf5d65e0a6664c9/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/PluginsMetadataGenerator.java#L131). ",
      "The doc changes have been ported to #1316, so closing this one now."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c1a14f302d393b590f",
    "number": 1004,
    "body": "As in that case NPE happened.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7679",
    "head_branch": "maven-3.9.x-MNG-7679-npe",
    "is_a_fork": true,
    "comments": [
      "Merged!",
      "When will this fix be available in maven 3.9.0?",
      "> When will this fix be available in maven 3.9.0?\r\n\r\nTomorrow, if you are willing to sponsor it.",
      "Hi @slawekjaranowski, @michael-o  , its been quite sometime no new releases published, any idea if this fix is being deployed anytime soon to 3.9.X version? ",
      "> Hi @slawekjaranowski, @michael-o , its been quite sometime no new releases published, any idea if this fix is being deployed anytime soon to 3.9.X version?\r\n\r\nTomorrow, if you are willing to sponsor it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c2a14f302d393b5910",
    "number": 1003,
    "body": "Of the resolver (downloading vs downloaded), just report after\r\nthe fact it was downloaded (or failed to download), no need\r\nfor double lines for same resource/dependency.\r\n\r\nThis experiment includes https://github.com/apache/maven/pull/989\r\nbut does not affects it (just to create \"closer\" Maven to\r\nupcoming release).\r\n\r\nAs one could expect, IT suite does fail with this change\r\nas some ITs do assert against the build logs (but the build\r\nitself did pass OK). Failing ITs:\r\n\r\n[ERROR] Failures:\r\n[ERROR]   MavenITmng6240PluginExtensionAetherProvider.testPluginExtensionDependingOnMavenAetherProvider:83->AbstractMavenIntegrationTestCase.assertEquals:668->AbstractMavenIntegrationTestCase.assertEquals:673 expected: <2> but was: <0>\r\n[INFO]\r\n[ERROR] Tests run: 885, Failures: 1, Errors: 0, Skipped: 80\r\n\r\nAs to be expected, the IT asserts there is log line without\r\nprogress (so DownloadING one, the one that is removed).",
    "head_branch": "halve-logging",
    "is_a_fork": true,
    "comments": [
      "I completely agree, this wrapping I did in this PoC is ugy, and serves the purpose only to see \"how would it look\"... This PR is def not to be reused, especially not merged.",
      "I like it. :-)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c3a14f302d393b5911",
    "number": 1002,
    "body": "This closes #1002\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7197_maven-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7197] Simplify exit code handling in Windows command startup script\n\nThis closes #1002"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c4a14f302d393b5912",
    "number": 1001,
    "body": "Backport to 3.9.x branch.\r\nAligning both 3.9.x and 4.0.x branches would help reducing the maintenance in `mvnd`.",
    "head_branch": "MNG-7583",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7583] Allow concurrent access to the MavenPluginManager (#1001)\n\n* [MNG-7583] Allow concurrent access to the MavenPluginManager (#855)\r\n* Add a default method to avoid breaking the api"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c5a14f302d393b5913",
    "number": 1000,
    "body": "We have 3 of them, but we use always \"classic\" that behaves like Maven2 (with all it's shortocomings!).\r\n\r\nChanges:\r\n* change default depMgr Maven uses from \"classic\" to \"default\"\r\n* expose config for all 3 of them\r\n\r\nThis is just an experiment for issues like:\r\n* https://issues.apache.org/jira/browse/MRESOLVER-235\r\n* https://issues.apache.org/jira/browse/MNG-7003 (using reproducer from it)\r\n\r\nAdds `-Dmaven.resolver.dependencyManager` param with accepted values \"classic\" (the default every Maven3 used so far), \"default\" and \"transitive\".\r\n\r\nValues are:\r\n* \"classic\" (default in all Maven 3.x releases so far) org.eclipse.aether.util.graph.manager.ClassicDependencyManager\r\n* \"default\" (never used) org.eclipse.aether.util.graph.manager.DefaultDependencyManager\r\n* \"transitive\" (never used) org.eclipse.aether.util.graph.manager.TransitiveDependencyManager\r\n\r\nReproducer output with 3 of them:\r\n```\r\n[cstamas@urnebes usage]$ mvn dependency:tree -Dmaven.resolver.dependencyManager=transitive\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] ---------------------< arcomp.maven_example:usage >---------------------\r\n[INFO] Building usage 1\r\n[INFO]   from pom.xml\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- dependency:2.8:tree (default-cli) @ usage ---\r\n[INFO] arcomp.maven_example:usage:jar:1\r\n[INFO] \\- arcomp.maven_example:module:jar:1:compile\r\n[INFO]    \\- org.apache.logging.log4j:log4j-slf4j18-impl:jar:2.13.3:compile\r\n[INFO]       +- org.slf4j:slf4j-api:jar:1.7.30:compile\r\n[INFO]       +- org.apache.logging.log4j:log4j-api:jar:2.13.3:compile\r\n[INFO]       \\- org.apache.logging.log4j:log4j-core:jar:2.13.3:runtime\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  0.764 s\r\n[INFO] Finished at: 2023-02-16T12:58:22+01:00\r\n[INFO] ------------------------------------------------------------------------\r\n[cstamas@urnebes usage]$ mvn dependency:tree -Dmaven.resolver.dependencyManager=default\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] ---------------------< arcomp.maven_example:usage >---------------------\r\n[INFO] Building usage 1\r\n[INFO]   from pom.xml\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- dependency:2.8:tree (default-cli) @ usage ---\r\n[INFO] arcomp.maven_example:usage:jar:1\r\n[INFO] \\- arcomp.maven_example:module:jar:1:compile\r\n[INFO]    \\- org.apache.logging.log4j:log4j-slf4j18-impl:jar:2.13.3:compile\r\n[INFO]       +- org.slf4j:slf4j-api:jar:1.7.30:compile\r\n[INFO]       +- org.apache.logging.log4j:log4j-api:jar:2.13.3:compile\r\n[INFO]       \\- org.apache.logging.log4j:log4j-core:jar:2.13.3:runtime\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  0.643 s\r\n[INFO] Finished at: 2023-02-16T12:58:27+01:00\r\n[INFO] ------------------------------------------------------------------------\r\n[cstamas@urnebes usage]$ mvn dependency:tree -Dmaven.resolver.dependencyManager=classic\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] ---------------------< arcomp.maven_example:usage >---------------------\r\n[INFO] Building usage 1\r\n[INFO]   from pom.xml\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- dependency:2.8:tree (default-cli) @ usage ---\r\n[INFO] arcomp.maven_example:usage:jar:1\r\n[INFO] \\- arcomp.maven_example:module:jar:1:compile\r\n[INFO]    \\- org.apache.logging.log4j:log4j-slf4j18-impl:jar:2.13.3:compile\r\n[INFO]       +- org.slf4j:slf4j-api:jar:1.8.0-beta4:compile                  <!-- BAD\r\n[INFO]       +- org.apache.logging.log4j:log4j-api:jar:2.13.3:compile\r\n[INFO]       \\- org.apache.logging.log4j:log4j-core:jar:2.13.3:runtime\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  0.671 s\r\n[INFO] Finished at: 2023-02-16T12:58:32+01:00\r\n[INFO] ------------------------------------------------------------------------\r\n[cstamas@urnebes usage]$ mvn dependency:tree                       <---- this PR changes to \"transitive\"\r\n[INFO] Scanning for projects...\r\n[INFO] \r\n[INFO] ---------------------< arcomp.maven_example:usage >---------------------\r\n[INFO] Building usage 1\r\n[INFO]   from pom.xml\r\n[INFO] --------------------------------[ jar ]---------------------------------\r\n[INFO] \r\n[INFO] --- dependency:2.8:tree (default-cli) @ usage ---\r\n[INFO] arcomp.maven_example:usage:jar:1\r\n[INFO] \\- arcomp.maven_example:module:jar:1:compile\r\n[INFO]    \\- org.apache.logging.log4j:log4j-slf4j18-impl:jar:2.13.3:compile\r\n[INFO]       +- org.slf4j:slf4j-api:jar:1.7.30:compile\r\n[INFO]       +- org.apache.logging.log4j:log4j-api:jar:2.13.3:compile\r\n[INFO]       \\- org.apache.logging.log4j:log4j-core:jar:2.13.3:runtime\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  0.662 s\r\n[INFO] Finished at: 2023-02-16T12:58:39+01:00\r\n[INFO] ------------------------------------------------------------------------\r\n[cstamas@urnebes usage]$ \r\n```\r\n",
    "head_branch": "maven-3.9.x-experiment-depMgr",
    "is_a_fork": true,
    "comments": [
      "locally ran Maven 3.9.x w/PR in IT suite with different depMgrs as default:\r\n\"default\":\r\n```\r\n[ERROR] Failures: \r\n[ERROR]   MavenIT0011DefaultVersionByDependencyManagementTest.testit0011:61->AbstractMavenIntegrationTestCase.assertTrue:693 [org.apache.maven.its.it0011:a:jar:0.1] ==> expected: <true> but was: <false>\r\n[ERROR]   MavenITmng4720DependencyManagementExclusionMergeTest.testit:74->AbstractMavenIntegrationTestCase.assertTrue:693 [classes, a-0.1.jar, c-0.1.jar] ==> expected: <true> but was: <false>\r\n[ERROR] Errors: \r\n[ERROR]   MavenIT0199CyclicImportScopeTest.testit0199:43->build:54 » Verification Exit code was non-zero: 1; command line and log = \r\n[ERROR]   MavenITmng3259DepsDroppedInMultiModuleBuildTest.testitMNG3259:66 » Verification Exit code was non-zero: 1; command line and log =\r\n[INFO] \r\n[ERROR] Tests run: 885, Failures: 2, Errors: 2, Skipped: 80\r\n```\r\nErrors are compilation errors in ITs, hence this depMgr did not do everything as expected.\r\n\r\n\"transitive\":\r\n```\r\n[ERROR] Failures: \r\n[ERROR]   MavenITmng4720DependencyManagementExclusionMergeTest.testit:74->AbstractMavenIntegrationTestCase.assertTrue:693 [classes, a-0.1.jar, c-0.1.jar] ==> expected: <true> but was: <false>\r\n[INFO] \r\n[ERROR] Tests run: 885, Failures: 1, Errors: 0, Skipped: 80\r\n```\r\n\r\nThis IT for issue https://issues.apache.org/jira/browse/MNG-4720 tests **exactly** was issue https://issues.apache.org/jira/browse/MNG-7003 is about (and is Maven2 way, differently resolves project and dependencies).",
      "Superseded by https://github.com/apache/maven/pull/1357"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c6a14f302d393b5914",
    "number": 999,
    "body": "Backport of https://github.com/apache/maven/commit/115febf29b9520eed6e94a65212e00e88806a860 (from 3.9.0) with minimal Java 7 adjustments.\r\nAs discussed here: https://lists.apache.org/thread/wcbz8nsrrrdx8s8byoqpj99ksv73scqy (cc @michael-o)",
    "head_branch": "maven-3.8.x-MNG-7160",
    "is_a_fork": true,
    "comments": [
      "So this now completely solves your extension problem?",
      "It allows GIB to declare plexus-utils depenency to fix the pom.xml usage scenarios on Maven 3.9+ while giving extension.xml users a solution to avoid that `Xpp3Dom` CCE...at least with Maven 3.8.8.\r\nUsers of Maven 3.8.7 or below are out of luck (if using the extension.xml approach), which is why I'll have a look at a reflection workaround (in GIB).",
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c7a14f302d393b5915",
    "number": 998,
    "body": null,
    "head_branch": "set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c8a14f302d393b5916",
    "number": 997,
    "body": null,
    "head_branch": "cs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440c9a14f302d393b5917",
    "number": 996,
    "body": "Ignore `ExecutionEvent` if execution `lifecyclePhase` is `null`.\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7689-add-null-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7689] Check if execution lifecycle phase is not null (#996)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440caa14f302d393b5918",
    "number": 995,
    "body": "This pull request adds a few basic checks that users can run to see if they've installed Maven correctly. This includes:\r\n1. A check if the local Maven repository is usable.\r\n2. A check if Maven can connect to remote repositories configured in **settings.xml**.\r\n3. A check if Maven can resolve a pre-existing artifact (to be precise, `org.apache.maven:apache-maven:3.8.6`).\r\n\r\nThese checks honour **settings.xml** profile activation through `<activeProfiles>`. The artifact resolution check honours any configured mirrors.\r\n\r\nThe connection check is quite rudimentary, and only functions at the HTTP connection level. Since there is no guarantee that a repository will contain a particular artifact, there's not much more we can do.\r\n\r\nThe artifact resolution check is a bit more thorough: it checks if there is _any_ way in which Maven can resolve itself. It does so by temporarily using a \"dummy\" local repository. This is necessary to prevent a \"false positive\", where the artifact may have existed before. \r\n\r\nWe have not added unit tests or integration tests (yet). At some level, they may be useful, but we expect a full integration test to be a significant amount of work that would not provide a lot of value. We're curious to hear your opinions about that trade-off.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n        --> [MNG-6869](https://issues.apache.org/jira/browse/MNG-6869)\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-6869-new-flag-to-verify-maven-status",
    "is_a_fork": true,
    "comments": [
      "Isnt it something a plugin would be a better location? Can need some basic downloads but would enable to do more checks on the project, better configure the dummy artifact - 3.8.6 or maven cant be hardcoded in case of central \"mirroring\", it can be forbidden intentionally.\r\nIt would also enable to maje checks grow, in particular with coming multilocal repo feature for ex.",
      "> Isnt it something a plugin would be a better location?\r\n\r\nThe current approach does not need any additional download. I think that's a good thing, as we can now use it to also point the user at issues in their configuration that would prevent artifact resolution. If we moved this to a plugin, we'd need artifact resolution to actually work...\r\n\r\n> Can need some basic downloads but would enable to do more checks on the project, better configure the dummy artifact - 3.8.6 or maven cant be hardcoded in case of central \"mirroring\", it can be forbidden intentionally.\r\n\r\nI'm open to suggestions for another publicly available artifact. But in order to \"prove\" that artifact resolution works, we need something that is publicly available - I think something that at the very least is hosted by Central, and maybe by mirrors. \r\n\r\n> It would also enable to maje checks grow, in particular with coming multilocal repo feature for ex.\r\n\r\nMore thorough checks could reside in a plugin, but as pointed out before, we can't rely on resolution to work until we've checked that it works. So agreed, additional checks could live in a plugin, but I'm convinced that we'll need a few basic checks (among them artifact resolution and local repository setup) to live in Core.",
      "> I'm open to suggestions for another publicly available artifact. But in order to \"prove\" that artifact resolution works, we need something that is publicly available - I think something that at the very least is hosted by Central, and maybe by mirrors.\r\n\r\n\r\nPoint is none can be hardcoded, cause we dont know companies mirrors.\r\nThis is why it fits a plugin better IMO (wouldnt be great to have that in maven imo).\r\n\r\nIf you dont like the plugin, what about doing a `mvn-install-checker` project or extension which can grow and be downloaded at need.\r\nThing is this code requires config and ultimately shouldnt be a command but more explicit error messages when it fails IMHO.\r\nCurrent flavor looks like not scaling well in time/hard to maintain in a relevant manner and is already biased due to profiles so a checker or plugin looks iso without the pitfall to impact core directly when you ll need to check proxy certs, proxy protocol, proxy passwords, sftp cert for deployment, properties typos in settings etc....(this is where this command/plugin/helper will lead if adopted).",
      "Why not move it into a module within Maven Core which could be no-op of this default code. It could be easily exchanged?!",
      "@michael-o or just enhance the CLI with a small SPI to enable to add custom command with extensions so this does not need a noop at all and is purely optional and in a dedicated module which can get a real configuration and enhancements later?",
      "Personally, I don't see much value in moving the code to a new module. If I understand correctly, we'd be moving this code to a different module inside the same Git repository, only to introduce some complexity in maven-embedder to load that exact same code. Also, this PR doesn't pull in new dependencies to maven-embedder, which we could have avoided by moving the code elsewhere, so I really fail to see the benefits of such a refactoring.",
      ">  so I really fail to see the benefits of such a refactoring\r\n\r\n1. not deliver it by default\r\n2. not add specific options by default\r\n3. not make it grow to actually validate the installation completely and properly (if it becomes a feature the impl must be way more complex)",
      "> 1. not deliver it by default\r\n\r\nThat would completely defy the utility and value of this feature. I do want a clean Maven installation to be able to do a few basic checks. That is exactly the idea as laid out in [MNG-6869](https://issues.apache.org/jira/browse/MNG-6869), if you ask me.\r\n\r\nAnything that requires a separate download (a plugin, or a helper script, or extension, or ....) and we do not ship with Apache Maven itself is completely opposite to the original idea, and would therefore be a `-1` from me.\r\n\r\n> 2. not add specific options by default\r\n\r\nI'm sorry, I don't understand what you mean here.\r\n\r\n> 3. not make it grow to actually validate the installation completely and properly (if it becomes a feature the impl must be way more complex)\r\n\r\nIf it were to become much bigger, we could always move it out later. As long as we can ship it with Apache Maven by default (see point 1).\r\n\r\n_Edit:_ I am aware of **${maven.home}/lib/ext/**, but as far as I can see, this is only used for **3rd-party** libraries - not for stuff that we maintain ourselves."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440cba14f302d393b5919",
    "number": 994,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7688-xml-merge-values",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Additional XmlNode tests from plexus-utils (#994)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440cca14f302d393b591a",
    "number": 993,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7679-npe-cmdline-mojo",
    "is_a_fork": true,
    "comments": [
      "Will review this week.",
      "@gnodet Please go ahead and merge to all three.",
      "> @gnodet Please go ahead and merge to all three.\r\n\r\nDoes this affects mvn 3.9.0? Imo nope",
      "> > @gnodet Please go ahead and merge to all three.\r\n> \r\n> Does this affects mvn 3.9.0? Imo nope\r\n\r\nIt does because the regression is in all three branches."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440cda14f302d393b591b",
    "number": 992,
    "body": null,
    "head_branch": "patterns6",
    "is_a_fork": true,
    "comments": [
      "Error:  src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java:[57,69] (whitespace) ParenPad: '(' is not followed by whitespace.\r\nError:  src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java:[57,89] (whitespace) ParenPad: ')' is not preceded with whitespace.\r\nError:  src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java:[192,45] (whitespace) ParenPad: '(' is not followed by whitespace.\r\nError:  src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java:[192,55] (whitespace) ParenPad: ')' is not preceded with whitespace.\r\nError:  src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java:[192,68] (whitespace) ParenPad: '(' is not followed by whitespace.\r\nError:  src/main/java/org/apache/maven/plugin/descriptor/PluginDescriptor.java:[192,70] (whitespace) ParenPad: ')' is not preceded with whitespace.\r\n\r\nIts:\r\nPattern.compile(\"-?(maven|plugin)-?\");",
      "This is not a bug, so I would not back port it on 3.8.x.",
      "> This is not a bug, so I would not back port it on 3.8.x.\r\n\r\nNot a bug, correct, but easy to address. I don't mind doing it.",
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440cea14f302d393b591c",
    "number": 991,
    "body": "[MNG-7686] Speed up by replacing non-pattern #replaceAll() with #replace() or precompiled patterns",
    "head_branch": "patterns5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440cfa14f302d393b591d",
    "number": 990,
    "body": "More shortest and simple patterns.\r\n\r\n#988",
    "head_branch": "patterns4",
    "is_a_fork": true,
    "comments": [
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d0a14f302d393b591e",
    "number": 989,
    "body": "The crux was  in resolver 1.9.5, but there are other \"low hanging fruits\" like delegate created on a \"hot method\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7677\r\n",
    "head_branch": "maven-3.9.x-MNG-7677-patch",
    "is_a_fork": true,
    "comments": [
      "This PR will pass once https://github.com/apache/maven-resolver/pull/245 is merged, built and deployed by Jenkins, and artifacts picked up by this PR.",
      "After https://github.com/apache/maven-resolver/pull/245 merged (and deployed by CI), restarted all the CI jobs on this PR, and they are expected to pass OK, as wrote above.",
      "So this need to be a singleton?",
      "> So this need to be a singleton?\r\n\r\nI'd rather say: given this class is stateless, it CAN be singleton/shared/reused, instead to be re-instantiated for each call of this \"hot\" method.",
      "> > So this need to be a singleton?\r\n> \r\n> I'd rather say: given this class is stateless, it CAN be singleton/shared/reused, instead to be re-instantiated for each call of this \"hot\" method.\r\n\r\nI see, makes sense. No reason to create new objects all the time."
    ],
    "commit_messages": [
      "[MNG-7677] Maven slowness improvement (#989)\n\nThe crux was  in resolver 1.9.5, but there are other \"low hanging fruits\" like delegate created on a \"hot method\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7677"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d1a14f302d393b591f",
    "number": 988,
    "body": "More shortest and simple patterns.",
    "head_branch": "patterns3",
    "is_a_fork": true,
    "comments": [
      "Can you back port this along with the other issue to 3.8.x? I will merge this one into master and 3.9.x.",
      "Please provide also a PR for master as well.",
      "@michael-o \r\nmaster: #990\r\n\r\nbackport 3.8.x #992 [MNG-7686]",
      "> @michael-o master: #990\r\n> \r\n> backport 3.8.x #992 [[MNG-7686](https://issues.apache.org/jira/browse/MNG-7686)]\r\n\r\nThanks, will try to handle ASAP.",
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d2a14f302d393b5920",
    "number": 987,
    "body": "More shortest and simple Patterns.",
    "head_branch": "patterns2",
    "is_a_fork": true,
    "comments": [
      "i will create pr in 3.9.x "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d3a14f302d393b5921",
    "number": 986,
    "body": "Move the creation of the `commonChildren` to the outside of the loop over recessive children. This change ensures that all dominant children are visited and merged with the corresponding recessive children. \r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7683-xml-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7683] Iterate over each dominant child (#986)\n\n* Iterate over each dominant child\r\n* Use more generic test data"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d3a14f302d393b5922",
    "number": 985,
    "body": "@Deprecated annotations helpfully to prevent usage of deprecated API. For example: developer can see crossed out method/field name if this item is deprecated.",
    "head_branch": "deprecated",
    "is_a_fork": true,
    "comments": [
      "> Why the duplication with Javadoc tags if there is a Java annotation? Where is the benefit? Others I do understand.\r\n\r\nThis might help : https://stackoverflow.com/questions/20674135/deprecated-vs-deprecated#:~:text=%40deprecated%20is%20a%20javadoc%20tag,conjunction%20to%20the%20%40Deprecated%20annotation.\r\n\r\n\r\n\r\n> [@Deprecated](http://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html) is an annotation that is read by the compiler, used to mark a method as deprecated to the compiler and will generate a deprecation compile-time warning if the method is used.\r\n> \r\n> [@deprecated](http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html#@deprecated) is a javadoc tag used to provide documentation about the deprecation. You can use it to explain why the method was deprecated and to suggest an alternative. It only makes sense to use this tag in conjunction to the `@Deprecated` annotation.\r\n\r\n\r\nExample : https://github.com/adoptium/jdk17u/blob/master/src/java.xml/share/classes/org/xml/sax/helpers/AttributeListImpl.java#L66-L78\r\n\r\n\r\nAt the same time, [according to the docs](https://docs.oracle.com/javase/7/docs/technotes/guides/javadoc/deprecation/deprecation.html): \r\n\r\n\r\n> You can use the @deprecated tag to make Javadoc show a program element as deprecated. The @deprecated tag must be followed by a space or newline. In the paragraph following the @deprecated tag, explain why the item has been deprecated and suggest what to use instead.\r\n\r\n\r\nSo the tag without a description(what this PR is doing) might not be very useful as the Javadocs are able to show the deprecation",
      "> So the tag without a description(what this PR is doing) might not be very useful as the Javadocs are able to show the deprecation\r\n\r\nAgreed. I don't see the point. Having meaningful comments (the _why_ and a _migration path_) would be nice, but those should have been added when things were deprecated, it may be difficult to get back in history and understand why.  \r\n\r\nThough parts of this PR actually makes sense.\r\n",
      "I can remove all @deprecated tags and save only @Deprecated annotation"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d4a14f302d393b5923",
    "number": 984,
    "body": "replaceAll(\"ABC\", \"\") is non Pattern method and therefore must be replaced to simple fast replace()\r\nA proofs of changes: https://gist.github.com/tbw777/21ee7301f284d5856e069c892b9051e2\r\n",
    "head_branch": "patterns",
    "is_a_fork": true,
    "comments": [
      "I see your point, will happily review. Can you create a JIRA issue as well?",
      "Excuse me i dont have maven jira access",
      "No problem, I will create it for you.",
      "Its awesome",
      "This PR looks quite big with that seems unrelated like the changes to `doap_Maven.rdf`. \r\n\r\nIs it showing a large diff only because it is  behind `master`?",
      "Will review as well and take care of JIRA and merge. ",
      "Let me test this now...",
      "-?(maven|plugin)-?\r\nvs\r\n-?(mave|plugi)n-?\r\n\r\nBenchmark                    (str)   Mode  Cnt         Score   Error  Units\r\nSamples.optionReadablest     maven  thrpt       28028546,729          ops/s\r\nSamples.optionReadablest    -maven  thrpt       28089177,065          ops/s\r\nSamples.optionReadablest   -maven-  thrpt       27354035,795          ops/s\r\nSamples.optionReadablest    maven-  thrpt       27405551,490          ops/s\r\nSamples.optionReadablest    plugin  thrpt       26609084,140          ops/s\r\nSamples.optionReadablest   -plugin  thrpt       22624237,310          ops/s\r\nSamples.optionReadablest  -plugin-  thrpt       25262851,924          ops/s\r\nSamples.optionReadablest   plugin-  thrpt       26083611,690          ops/s\r\nSamples.optionReadablest      plg-  thrpt       26398601,872          ops/s\r\nSamples.optionReadablest      -plg  thrpt       23522351,419          ops/s\r\nSamples.optionReadablest      Aplg  thrpt       48207314,033          ops/s\r\nSamples.optionReadablest      9plg  thrpt       48095049,000          ops/s\r\nSamples.optionReadablest      mvn-  thrpt       29054118,637          ops/s\r\nSamples.optionReadablest      -mvn  thrpt       25573418,457          ops/s\r\nSamples.optionReadablest      Amvn  thrpt       47931213,453          ops/s\r\nSamples.optionReadablest      9mvn  thrpt       47694320,570          ops/s\r\nSamples.optionShortest       maven  thrpt       24051232,421          ops/s\r\nSamples.optionShortest      -maven  thrpt       27199371,132          ops/s\r\nSamples.optionShortest     -maven-  thrpt       25518762,078          ops/s\r\nSamples.optionShortest      maven-  thrpt       26033150,732          ops/s\r\nSamples.optionShortest      plugin  thrpt       23824379,011          ops/s\r\nSamples.optionShortest     -plugin  thrpt       25650037,478          ops/s\r\nSamples.optionShortest    -plugin-  thrpt       23597356,044          ops/s\r\nSamples.optionShortest     plugin-  thrpt       25307310,325          ops/s\r\nSamples.optionShortest        plg-  thrpt       27091273,850          ops/s\r\nSamples.optionShortest        -plg  thrpt       24273357,407          ops/s\r\nSamples.optionShortest        Aplg  thrpt       47421101,082          ops/s\r\nSamples.optionShortest        9plg  thrpt       47822884,484          ops/s\r\nSamples.optionShortest        mvn-  thrpt       28075358,281          ops/s\r\nSamples.optionShortest        -mvn  thrpt       25464723,362          ops/s\r\nSamples.optionShortest        Amvn  thrpt       47988351,004          ops/s\r\nSamples.optionShortest        9mvn  thrpt       47758122,064          ops/s\r\n\r\nI can set any option you want. Because there is no big difference as i see",
      "> -?(maven|plugin)-? vs -?(mave|plugi)n-?\r\n> \r\n> Benchmark (str) Mode Cnt Score Error Units Samples.optionReadablest maven thrpt 28028546,729 ops/s Samples.optionReadablest -maven thrpt 28089177,065 ops/s Samples.optionReadablest -maven- thrpt 27354035,795 ops/s Samples.optionReadablest maven- thrpt 27405551,490 ops/s Samples.optionReadablest plugin thrpt 26609084,140 ops/s Samples.optionReadablest -plugin thrpt 22624237,310 ops/s Samples.optionReadablest -plugin- thrpt 25262851,924 ops/s Samples.optionReadablest plugin- thrpt 26083611,690 ops/s Samples.optionReadablest plg- thrpt 26398601,872 ops/s Samples.optionReadablest -plg thrpt 23522351,419 ops/s Samples.optionReadablest Aplg thrpt 48207314,033 ops/s Samples.optionReadablest 9plg thrpt 48095049,000 ops/s Samples.optionReadablest mvn- thrpt 29054118,637 ops/s Samples.optionReadablest -mvn thrpt 25573418,457 ops/s Samples.optionReadablest Amvn thrpt 47931213,453 ops/s Samples.optionReadablest 9mvn thrpt 47694320,570 ops/s Samples.optionShortest maven thrpt 24051232,421 ops/s Samples.optionShortest -maven thrpt 27199371,132 ops/s Samples.optionShortest -maven- thrpt 25518762,078 ops/s Samples.optionShortest maven- thrpt 26033150,732 ops/s Samples.optionShortest plugin thrpt 23824379,011 ops/s Samples.optionShortest -plugin thrpt 25650037,478 ops/s Samples.optionShortest -plugin- thrpt 23597356,044 ops/s Samples.optionShortest plugin- thrpt 25307310,325 ops/s Samples.optionShortest plg- thrpt 27091273,850 ops/s Samples.optionShortest -plg thrpt 24273357,407 ops/s Samples.optionShortest Aplg thrpt 47421101,082 ops/s Samples.optionShortest 9plg thrpt 47822884,484 ops/s Samples.optionShortest mvn- thrpt 28075358,281 ops/s Samples.optionShortest -mvn thrpt 25464723,362 ops/s Samples.optionShortest Amvn thrpt 47988351,004 ops/s Samples.optionShortest 9mvn thrpt 47758122,064 ops/s\r\n> \r\n> I can set any option you want. Because there is no big difference as i see\r\n\r\nI see, I prefer readability.",
      "pattern was updated in \"File changed\" tab to \"-?(maven|plugin)-?\"",
      "@tbw777 Thanks for the contribution. I'd highly appreciate a backport from 3.9.x branch to 3.8.x branch."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d5a14f302d393b5924",
    "number": 983,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7678",
    "head_branch": "MNG-7678",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7678] Settings (v3) and Settings.Builder() cannot unset a non-null field (#983)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d6a14f302d393b5925",
    "number": 982,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.9.x",
    "is_a_fork": true,
    "comments": [
      "Core IT tests fails currently on\r\n`MavenITmng6609ProfileActivationForPackagingTest.testitMojoExecution:42->AbstractMavenIntegrationTestCase.assertEquals:668->AbstractMavenIntegrationTestCase.assertEquals:673 expected: <pom> but was: <null>`\r\n\r\nIt doesn't seem to be related to the changes made in this pull request.",
      "After pulling the latest version of the core-its, it was running fine. So the core-its ran successfully.",
      "@slachiewicz  see here the pull request concerning the 3.9.x branch",
      "I wonder if it would make sense to remove the `.cmd` script instead of keeping both `.ps1` and `.cmd` scripts.",
      "> I wonder if it would make sense to remove the `.cmd` script instead of keeping both `.ps1` and `.cmd` scripts.\r\n\r\nThat will likely break things so maybe that should be targeted for v4",
      "> > I wonder if it would make sense to remove the `.cmd` script instead of keeping both `.ps1` and `.cmd` scripts.\r\n> \r\n> That will likely break things so maybe that should be targeted for v4\r\n\r\nYes, I had not seen this PR was targeting 3.9.x specifically.",
      "> > > I wonder if it would make sense to remove the `.cmd` script instead of keeping both `.ps1` and `.cmd` scripts.\r\n> > \r\n> > \r\n> > That will likely break things so maybe that should be targeted for v4\r\n> \r\n> Yes, I had not seen this PR was targeting 3.9.x specifically.\r\n\r\nI'd require this to be on master first and then backported...at most",
      "@michael-o Should we remove `.cmd` in https://github.com/apache/maven/pull/877?",
      "> @michael-o Should we remove `.cmd` in #877?\r\n\r\nNo, since the PR is only about addtion of a PS-based solution. No more, no less.",
      "@michael-o @slachiewicz What do we need to do to merge this merge request?",
      "@michael-o Can I do something to make this pull request merged? ",
      "Not now, ATM. I need to consult also a colleague who's proficient in PowerShell.",
      "> Not now, ATM. I need to consult also a colleague who's proficient in PowerShell.\r\n\r\nIs there some progress?",
      "> > Not now, ATM. I need to consult also a colleague who's proficient in PowerShell.\r\n> \r\n> Is there some progress?\r\n\r\nI hope to pick this up when my round with reporting stack is complete for next milestone. I guess somewere end of month. Please also raise your voice on dev@ to drag more attraction to this topic.",
      "> > > Not now, ATM. I need to consult also a colleague who's proficient in PowerShell.\r\n> > \r\n> > \r\n> > Is there some progress?\r\n> \r\n> I hope to pick this up when my round with reporting stack is complete for next milestone. I guess somewere end of month. Please also raise your voice on dev@ to drag more attraction to this topic.\r\n\r\nIs there some progress? ",
      "For the time being, I won't work on this since I don't have the capacity nor decent PowerShell scripting skill set. My knowledge in PS humble.",
      "@michael-o I understand your reserves, certainly if your see your PS knowledge as humble (I don't see myself as an expert either). \r\nAt the same time @slachiewicz has given an approval. What's needed in order to get this PR merged?\r\n\r\nPlease let me know what is needed, then I can specifically ask for input/help on the mailing list. ",
      "> As a matter of fact, this implemenation should copy the approach from mvn.cmd from master, not from maven-3.9.x. It does not matter to add something new and then skim a bit later. Then it would be back ported to 3.9.x as-is logically.\r\n\r\nWouldn't it not be better to get [master](https://github.com/apache/maven/pull/878) reviewed first and then retrofit the approach in master to the 3.9.x branch? Please be aware that there will be two different approaches in the component.xml, which makes reviewing a little bit harder. ",
      "> > As a matter of fact, this implemenation should copy the approach from mvn.cmd from master, not from maven-3.9.x. It does not matter to add something new and then skim a bit later. Then it would be back ported to 3.9.x as-is logically.\r\n> \r\n> Wouldn't it not be better to get [master](https://github.com/apache/maven/pull/878) reviewed first and then retrofit the approach in master to the 3.9.x branch? Please be aware that there will be two different approaches in the component.xml, which makes reviewing a little bit harder.\r\n\r\nTrue, but the content of the script won't change, only its arrangement.",
      "> > > As a matter of fact, this implemenation should copy the approach from mvn.cmd from master, not from maven-3.9.x. It does not matter to add something new and then skim a bit later. Then it would be back ported to 3.9.x as-is logically.\r\n> > \r\n> > \r\n> > Wouldn't it not be better to get [master](https://github.com/apache/maven/pull/878) reviewed first and then retrofit the approach in master to the 3.9.x branch? Please be aware that there will be two different approaches in the component.xml, which makes reviewing a little bit harder.\r\n> \r\n> True, but the content of the script won't change, only its arrangement.\r\n\r\nOk, in that case we are aligned. I'll update the master branch with the improvements on this branch. When the master is merged, I'll retrofit the changes into this branch.\r\n\r\n@Giovds Are you available for reviewing the master PR? I first need to apply the changes on this branch to the master (#878)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d7a14f302d393b5926",
    "number": 981,
    "body": "not check for null when reading from project map\r\n\r\nCurrently, if a project is returned from the workspace reader but is not part of the reactor, a NPE occurs. In this case, the repositories are instead read from the model instead.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7544 ) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7544",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d8a14f302d393b5927",
    "number": 980,
    "body": "Backport of:\r\n\r\n- https://github.com/apache/maven/pull/805\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7544-3.8.x",
    "is_a_fork": true,
    "comments": [
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440d9a14f302d393b5928",
    "number": 979,
    "body": "Adding bin to SHA512 as well. Plugin now does\r\n```\r\n[INFO] --- checksum:1.11:artifacts (source-release-checksum) @ apache-maven ---\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-bin.tar.gz - SHA-512 : 9ee7e5282d8d2fb4990dc81a89ce132120fde38626e64922eb6f8999abcf516e6e969b2ef1a608e42a79c9fd406abadc72f57c7cde7e30a6bcb31faf25c82e28\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-bin.zip - SHA-512 : f57242ccca174df29d2570ef83648387648078fc9ead3443d7f772a5b9b50fd34fe5b213dcc128139b45469257e49ecc105fa05167962e63bd4536890a6ac9b4\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-src.tar.gz - SHA-512 : 6bd077f8478bb1c175aed4909aaa700e30c7e1b7beabe7b15606c4d01f8c1db94a1274a4c86e3c486a4f973579c54f0bde7043cc56b386c760c00061fb2b6bb0\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-src.zip - SHA-512 : ba1cffc3edeaaca814d55de217d97fb202ff54d7f57a9a1be86e6accfed8c74e010b4a31c815caed2606bbcf443b10332bde3ff0294b774232e25c8dc6d9704a\r\n```",
    "head_branch": "bin-sha512-maven-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add bin packages to SHA512 checksumming as well (#979)\n\nAdding bin to SHA512 as well. Plugin now does\r\n```\r\n[INFO] --- checksum:1.11:artifacts (source-release-checksum) @ apache-maven ---\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-bin.tar.gz - SHA-512 : 9ee7e5282d8d2fb4990dc81a89ce132120fde38626e64922eb6f8999abcf516e6e969b2ef1a608e42a79c9fd406abadc72f57c7cde7e30a6bcb31faf25c82e28\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-bin.zip - SHA-512 : f57242ccca174df29d2570ef83648387648078fc9ead3443d7f772a5b9b50fd34fe5b213dcc128139b45469257e49ecc105fa05167962e63bd4536890a6ac9b4\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-src.tar.gz - SHA-512 : 6bd077f8478bb1c175aed4909aaa700e30c7e1b7beabe7b15606c4d01f8c1db94a1274a4c86e3c486a4f973579c54f0bde7043cc56b386c760c00061fb2b6bb0\r\n[INFO] apache-maven-3.9.1-SNAPSHOT-src.zip - SHA-512 : ba1cffc3edeaaca814d55de217d97fb202ff54d7f57a9a1be86e6accfed8c74e010b4a31c815caed2606bbcf443b10332bde3ff0294b774232e25c8dc6d9704a\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440daa14f302d393b5929",
    "number": 978,
    "body": "Not only src but bin needs SHA512 as well. Plugin now does:\r\n```\r\n[INFO] --- checksum:1.11:artifacts (source-release-checksum) @ apache-maven ---\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-bin.tar.gz - SHA-512 : 2ee4c27ff611852caffab6543582918c06d900da184cdd389e64bae05fb8a2ac959edf27a946c60c9129c87baa6ec593a64d25edf3739339dd3f8d3d7942c7db\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-bin.zip - SHA-512 : 078667f3aad060163cad692eab7ced00fa377ba3a89f43431b23bd5248fc1603d3668cd68a7f096abcbc460ef4fbb47981b6bf5acc236a522e40fd700bb415c6\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-src.tar.gz - SHA-512 : ad2ca325ef138389fa967bde5e176a2447b5dd9e7edfa5cd1bf3f586fd39b93a1d415b55bb41b29e996104a4e14d4ef5fcc0e2c2eff65609121595f2695c96d4\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-src.zip - SHA-512 : 060de415118365954918079c73bf0ecc5d1ea8989b1864b32e3ebccd94306263878805c6d997d6c4a69700ebedd6fe42485a3692570c6466deb5e1be136e3e3e\r\n```",
    "head_branch": "bin-sha512",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add bin packages to SHA512 checksumming as well (#978)\n\nNot only src but bin needs SHA512 as well. Plugin now does:\r\n```\r\n[INFO] --- checksum:1.11:artifacts (source-release-checksum) @ apache-maven ---\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-bin.tar.gz - SHA-512 : 2ee4c27ff611852caffab6543582918c06d900da184cdd389e64bae05fb8a2ac959edf27a946c60c9129c87baa6ec593a64d25edf3739339dd3f8d3d7942c7db\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-bin.zip - SHA-512 : 078667f3aad060163cad692eab7ced00fa377ba3a89f43431b23bd5248fc1603d3668cd68a7f096abcbc460ef4fbb47981b6bf5acc236a522e40fd700bb415c6\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-src.tar.gz - SHA-512 : ad2ca325ef138389fa967bde5e176a2447b5dd9e7edfa5cd1bf3f586fd39b93a1d415b55bb41b29e996104a4e14d4ef5fcc0e2c2eff65609121595f2695c96d4\r\n[INFO] apache-maven-4.0.0-alpha-5-SNAPSHOT-src.zip - SHA-512 : 060de415118365954918079c73bf0ecc5d1ea8989b1864b32e3ebccd94306263878805c6d997d6c4a69700ebedd6fe42485a3692570c6466deb5e1be136e3e3e\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440dba14f302d393b592a",
    "number": 977,
    "body": "Wrong goal is being used that does not honor classifiers. Also, have to reshuffle the config, move it inside execution otherwise ASF parent pom execution is NOT overridden.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7676",
    "head_branch": "MNG-7676-fix",
    "is_a_fork": true,
    "comments": [
      "Once merged (squashed+merged) this will need to be forward ported to master as well, as it suffers from same issue."
    ],
    "commit_messages": [
      "[MNG-7676] Fix checksum plugin configuration (#977)\n\n* [MNG-7676] Fix checksum plugin configuration\r\n\r\nWrong goal is being used that does not honor classifiers. Also,\r\nhave to reshuffle the config, move it inside execution otherwise\r\nASF parent pom execution is NOT overridden.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7676"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440dca14f302d393b592b",
    "number": 976,
    "body": "Changes:\r\n* updates parent to 39\r\n* reformat of sources (no code change)\r\n* ~~updates .git-blame-ignore-revs~~ post merge as commit rev not known yet\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7675",
    "head_branch": "MNG-7675-parent-39",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reformat"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662440dda14f302d393b592c",
    "number": 975,
    "body": "https://issues.apache.org/jira/browse/MNG-7655",
    "head_branch": "MNG-7655-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440dea14f302d393b592d",
    "number": 974,
    "body": "As date format in these two files were not parsed.\r\n",
    "head_branch": "fix-site-warning-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix site plugin warning (#974)\n\nAs date format in these two files were not parsed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440dfa14f302d393b592e",
    "number": 973,
    "body": "As date format in these two files were not parsed.",
    "head_branch": "site-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix site plugin warning (#973)\n\nAs date format in these two files were not parsed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e0a14f302d393b592f",
    "number": 972,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7673",
    "is_a_fork": true,
    "comments": [
      "What about non-v4 of this file?",
      "> What about non-v4 of this file?\r\n\r\nOn master, the non-v4 version delegates to this one.  On 3.x, the problem does not exists."
    ],
    "commit_messages": [
      "[MNG-7673] IllegalArgumentException thrown for invalid checksum 'never' (#972)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e1a14f302d393b5930",
    "number": 971,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7598\r\n\r\n- Split the header on two lines\r\n- Properly delegates equals/hashCode to the v4 models\r\n- Introduce object tracking in settings / toolchains\r\n- Get back to a single template for v3 models\r\n- Switch settings / toolchains mergers to deep merge\r\n- Fix binary compatibility with 3.x\r\n",
    "head_branch": "compat-toolchain-settings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7598] Fix compatibility issues with toolchains and settings (#971)\n\n* Split the header on two lines\r\n* Properly delegates equals/hashCode to the v4 models\r\n* Introduce object tracking in settings / toolchains\r\n* Get back to a single template for v3 models\r\n* Switch settings / toolchains mergers to deep merge\r\n* Fix binary compatibility with 3.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e2a14f302d393b5931",
    "number": 970,
    "body": "Backport of #968 ",
    "head_branch": "MNG-7672-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[3.8.x] [MNG-7672] Fork should only execute the project and its submodules (#970)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e3a14f302d393b5932",
    "number": 969,
    "body": "Backport of #968 ",
    "head_branch": "MNG-7672-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7672] Fork should only execute the project and its submodules (#969)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e4a14f302d393b5933",
    "number": 968,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7672-fork-children",
    "is_a_fork": true,
    "comments": [
      "Just about vocabulary.\r\nCommit comment and JIRA issue mention children.\r\nCode is about aggregator and submodules.\r\nAs I understand it - being submodule does not mean anything about being child, and is not related with inheritance. Perhaps this could be re-worded to not mix the two.\r\n\r\n-----\r\nhttps://maven.apache.org/pom.html#a-final-note-on-inheritance-v-aggregation",
      "Interesting fact; this PR fixes code added to Maven 3.0-RC1 (!!!) but the Javadoc for aggregator says literally this what this PR introduces (so the two was not aligned since 3.0-RC1): https://maven.apache.org/ref/3.8.7/maven-plugin-api/apidocs/org/apache/maven/plugin/descriptor/MojoDescriptor.html#isAggregator--",
      "> Interesting fact; this PR fixes code added to Maven 3.0-RC1 (!!!) but the Javadoc for aggregator says literally this what this PR introduces (so the two was not aligned since 3.0-RC1): https://maven.apache.org/ref/3.8.7/maven-plugin-api/apidocs/org/apache/maven/plugin/descriptor/MojoDescriptor.html#isAggregator--\r\n\r\nYes, I saw the javadoc for the `isAggregator` and it guided me in finding this fix !",
      "So, what is the status of this (am more interested in 3.9 backport), is this fix confirmed? When is merge expected?",
      "> So, what is the status of this (am more interested in 3.9 backport), is this fix confirmed? When is merge expected?\r\n\r\n#969 and #970 \r\nI think @michael-o wanted to review this PR, right ?"
    ],
    "commit_messages": [
      "[MNG-7672] Fork should only execute the project and its submodules (#968)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e5a14f302d393b5934",
    "number": 967,
    "body": "The commit 36f02c9de1792478538a171108048c8b86d5a5a1 is wrong, as new config property is a Map.",
    "head_branch": "get-rid-of-warning-take-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Get rid of surefire watning, take 2 (#967)\n\nThe commit 36f02c9de1792478538a171108048c8b86d5a5a1 is wrong,\r\nas new config property is a Map."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e6a14f302d393b5935",
    "number": 966,
    "body": "As we use deprecated configuration.\r\n",
    "head_branch": "get-rid-of-surefire-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Get rid of surefire warning (#966)\n\n* Get rid of surefire warning\r\n\r\nAs we use deprecated configuration.\r\n\r\n* Fix it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e7a14f302d393b5936",
    "number": 965,
    "body": "As POM uses deprecated configuration.\r\n",
    "head_branch": "get-rid-of-warning",
    "is_a_fork": true,
    "comments": [
      "@cstamas please verify my comments",
      "Yup, this is wrong, damn it. -X shows nicely ",
      "```diff\r\ndiff --git a/apache-maven/pom.xml b/apache-maven/pom.xml\r\nindex 855bb7758..08d5f5274 100644\r\n--- a/apache-maven/pom.xml\r\n+++ b/apache-maven/pom.xml\r\n@@ -160,10 +160,7 @@ under the License.\r\n         <artifactId>maven-surefire-plugin</artifactId>\r\n         <configuration>\r\n           <systemPropertyVariables>\r\n-            <property>\r\n-              <name>basedir</name>\r\n-              <value>${basedir}</value>\r\n-            </property>\r\n+            <basedir>${basedir}</basedir>\r\n           </systemPropertyVariables>\r\n         </configuration>\r\n         <executions>\r\n```\r\nIs the correct change.",
      "interesting why tests pass ..."
    ],
    "commit_messages": [
      "Get rid of surefire warning (#965)\n\nAs POM uses deprecated configuration."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e8a14f302d393b5937",
    "number": 964,
    "body": "Since a while Tycho is going more and more \"maven-like\" so today even more Tycho artifacts approaching at maven-central.\r\n\r\nIn some circumstances this leads to strange problems, because Dependencies have a type (usually the packaging type) but artifacts have an extension (where different packaging types often map to the same extension), and maven only includes a few mappings by default users currently need to enable an extension so that this works.\r\n\r\nThis adds a new default mapping so this type can be used smoothly in maven.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7669",
    "is_a_fork": true,
    "comments": [
      "I think this should be master first.\r\n\r\nWhat about lifecycles?",
      "> I think this should be master first.\r\n\r\nI can create one for master as well, but if its not accepted for 3.9 it does not make much sense to port it (as master is a bit different one can't just cherry pick it from there).\r\n\r\n> What about lifecycles?\r\n\r\nThe problem only arise if maven tries to resolve an artifact, lifecycle is not affected.",
      "For me, this seems hardless. I'd like to know what others think. @gnodet @cstamas @hboutemy ",
      "as @cstamas pointed out, only change in XML file would be required, I updated the PR.",
      "-1 for me to get anything not org.apache.maven in maven core, in particular when test covering is 0 and this can break any time.\r\n+1 to get it maintained where it belongs to only.",
      "I wonder whether this could also be registered from `.mvn/extensions.xml`?! @cstamas WDYT?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440e9a14f302d393b5938",
    "number": 963,
    "body": "Follow up to MNG-7629 and #954, the idea for this PR is to not parse all the reactor.\r\n\r\nThe idea of this PR is to parse all projects from the reactor only if the _makeBehavior_ is set (i.e. `-am` and/or `-amd` option has been used), or if a project activation has been set (i.e. `-pl`, `-r` or `-rf` is used).  Note that parents are always resolved from the file system, even if not included in the reactor.\r\n\r\nThe ITs only require a single modification: https://github.com/apache/maven-integration-testing/pull/239",
    "head_branch": "MNG-7646",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7646] Do not parse the whole reactor unless required by command line options (#963)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440eaa14f302d393b5939",
    "number": 962,
    "body": "- [MNG-7642] Restore compatibility with flatten-maven-plugin\n- Add some comment about deprecation and remove the unused field\n- [MNG-7652] switch to Modello Velocity (#944)\n- [MNG-7642] Explicit the fact that the class is now a no-op class\n- Disable parsing the whole reactor\n\nFollowing this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7642",
    "is_a_fork": true,
    "comments": [
      "Wrong PR"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440eba14f302d393b593a",
    "number": 961,
    "body": "This immediately cuts in \"half\" the count of HTTP requests against Maven Central or any major MRM.\r\n\r\nAltering the meaning of \"default\": is now semantically same as \"auto\", but still leaving it in place for future, as \"default\" at some point may again become something different than \"native\". This change is exactly same as happened in Maven 4.x and transports are aligned now.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7608",
    "head_branch": "MNG-7608-default-transport",
    "is_a_fork": true,
    "comments": [
      "This change breaks one IT `MavenITmng7470ResolverTransportTest.testResolverTransportDefault` as it alters default transport, IT is adjusted in https://github.com/apache/maven-integration-testing/pull/237"
    ],
    "commit_messages": [
      "[MNG-7608] Make native transport the default (#961)\n\nThis immediately cuts in \"half\" the count of HTTP requests against Maven Central or any major MRM.\r\n\r\nAltering the meaning of \"default\": is now same as \"auto\", but still leaving it in place for future, as \"default\" at some point may again become something different than \"native\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7608"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440eba14f302d393b593b",
    "number": 960,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "clean-local-repo",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Execute IT tests with clean local repository"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440eca14f302d393b593c",
    "number": 959,
    "body": "Update Maven Resolver to 1.9.4\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7668\r\n",
    "head_branch": "MNG-7668-resolver-194",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7668] Update Resolver to 1.9.4 (#959)\n\nUpdate Maven Resolver to 1.9.4\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7668"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440eda14f302d393b593d",
    "number": 958,
    "body": "Update Maven Resolver to 1.9.4\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7668\r\n",
    "head_branch": "maven-3.9.x-MGN-7668-resolver-194",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7668] Update Resolver to 1.9.4 (#958)\n\nUpdate Maven Resolver to 1.9.4\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7668"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440eea14f302d393b593e",
    "number": 957,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440efa14f302d393b593f",
    "number": 956,
    "body": "Finally use 3.x plugins for all.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7666",
    "head_branch": "MNG-7666-master-lifecycle-update",
    "is_a_fork": true,
    "comments": [
      "Also lowered the _ID constants visibility",
      "Reason of IT failure:\r\n```\r\nCaused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Could not find artifact org.apache.maven.plugins:maven-surefire-plugin:jar:3.0.0-M8 in central (file:target/null)\r\n```\r\nBasically this issue https://issues.apache.org/jira/browse/MNG-7667",
      "Hm, more IT failures: by https://github.com/apache/maven-integration-testing/pull/230 the `org.apache.maven.plugin-tools:maven-plugin-tools-ant:jar:3.7.1` is NOT pulled in...",
      "On jenkins local repo is not set for IT tests .... looks like somewhen was used ... \r\n\r\nhttps://github.com/apache/maven/blob/master/Jenkinsfile#L91-L104"
    ],
    "commit_messages": [
      "[MNG-7666] Update default binding and lifecycle plugin versions (#956)\n\nFinally use 3.x plugins for all.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7666"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f0a14f302d393b5940",
    "number": 955,
    "body": "Finally use 3.x plugins for all.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7666",
    "head_branch": "MNG-7666-lifecycle-update",
    "is_a_fork": true,
    "comments": [
      "Reason of IT failure:\r\n```\r\nCaused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Could not find artifact org.apache.maven.plugins:maven-surefire-plugin:jar:3.0.0-M8 in central (file:target/null)\r\n```\r\nBasically this issue https://issues.apache.org/jira/browse/MNG-7667"
    ],
    "commit_messages": [
      "[maven-3.9.x] [MNG-7666] Update default binding and lifecycle plugin versions (#955)\n\nFinally use 3.x plugins for all.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7666"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f1a14f302d393b5941",
    "number": 954,
    "body": "Similar to #912 but without removing the best effort artifact resolution to keep `mvn test` working _if possible_.\r\n\r\nThis require a few ITs to be modified:\r\n  https://github.com/apache/maven-integration-testing/pull/234/\r\n",
    "head_branch": "MNG-7629-alternative",
    "is_a_fork": true,
    "comments": [
      "\r\n> Left a couple of questions.\r\n> \r\n> Also, I wonder if this change allows us to remove the fallbacks that were previously on line 150 - 159. Since those lines aren't changed, it seems GitHub doesn't allow me to comment on the spot :-\\.\r\n\r\nGood question. I think part of it could be removed, but we need to keep the `determineBuildOutputDirectoryForArtifact` in order to be able to partially run mvn test.\r\n\r\nAnother possible strategy instead of copying the artifacts would be to only record their paths.",
      "> ... in order to be able to partially run mvn test.\r\n\r\nI'm not sure I understand. You mean \"run `mvn test` on a multi-module project without requiring the user to have ran `mvn package` first\"?",
      "> > ... in order to be able to partially run mvn test.\r\n> \r\n> I'm not sure I understand. You mean \"run `mvn test` on a multi-module project without requiring the user to have ran `mvn package` first\"?\r\n\r\nYes.  I haven't removed this part in this PR.  If the main artifacts have not been packaged, they will point to the `target/classes`.",
      "> > > ... in order to be able to partially run mvn test.\r\n> > \r\n> > \r\n> > I'm not sure I understand. You mean \"run `mvn test` on a multi-module project without requiring the user to have ran `mvn package` first\"?\r\n> \r\n> Yes. I haven't removed this part in this PR. If the main artifacts have not been packaged, they will point to the `target/classes`.\r\n\r\nI've been able to remove [the check to load the packaged artifacts](https://github.com/apache/maven/pull/954/commits/197b743db736adf419627f56456e2d4b13f2d2e7).",
      "In the internal project local repository structure, I've added a child directory with the version of a given artifact.  This gives a structure which is closer to the maven local repository, and it allows deleting artifacts during the clean phase without having to rely on a heuristic to split between classifier / version / extension.\r\n\r\n@mthmulders @MartinKanters I'm done on this PR, so unless you have further comments, an approval before the merge would be nice !"
    ],
    "commit_messages": [
      "[MNG-7629] Change reactor reader to copy packaged artifacts and reuse them across builds if needed (#954)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f2a14f302d393b5942",
    "number": 953,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "jenkins-tests-reports",
    "is_a_fork": false,
    "comments": [
      "Failed test `MavenITmng5669ReadPomsOnce` on all CI - Jenkis, GitHub  ... also locally is broken",
      "Failed jenkins build is from branch, when we create PR, jenkins not build branch any more and wrong status stay for ever 😄 ",
      "Looks good to me (my Jenkins knowledge is little rusty these days though). I can't approve the PR formally, so at least commenting here."
    ],
    "commit_messages": [
      "Jenkinsfile: pickup results from ITs and Maven 3.8.x for build (#953)\n\n\r\nCo-authored-by: Petr Široký <petr.siroky@pm.me>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f3a14f302d393b5943",
    "number": 952,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "jenkins-tests-reports-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Jenkinsfile: pickup results from ITs - 3.9.x (#952)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662440f4a14f302d393b5944",
    "number": 951,
    "body": "* trying to make Jenkins pick-up the IT results - currently, if some of the ITs fail, Jenkins won't pick-up the results and the build would be \"green\"\r\n* not 100% sure this is the fix though, I have no way of testing this locally so will rely on the PR builds\r\n* missing IT results can be seen for example here: https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master/190/testReport/\r\n\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "jenkins-pick-up-it-results",
    "is_a_fork": true,
    "comments": [
      "I updated the PR to also pickup `failsafe-reports`. I haven't really tried locally, but according to https://www.jenkins.io/doc/pipeline/steps/junit/ separating the patterns with comma should work.",
      "I noticed there is also [Jenkinsfile.its](https://github.com/apache/maven/blob/master/Jenkinsfile.its) which seems unused? Should it be just removed, or am I missing the usage somewhere?",
      "@psiroky Thanks for PR, I will try it on branch in maven repo ... PR from fork are not build by jenkins",
      "Suppressed by #953"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f5a14f302d393b5945",
    "number": 950,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7662\r\n\r\nThe `SessionScope` will now create proxies to wrap beans when there's a need to inject a bean while the session scope is not yet available. Such proxies require the use of a `Typed` annotation, either the `org.eclipse.sisu.Typed` or `javax.enterprise.inject.Typed` annotation, to be put on the bean that requires to be wrapped by a proxy.\r\n```\r\n    @Named\r\n    static class MySingletonBean {\r\n        @Inject\r\n        BeanItf myBean;\r\n    }\r\n\r\n    interface BeanItf {\r\n        Session getSession();\r\n    }\r\n\r\n    @SessionScoped\r\n    @Typed\r\n    static class MySessionScopedBean implements BeanItf {\r\n        @Inject\r\n        Session session;\r\n\r\n        public Session getSession() {\r\n            return session;\r\n        }\r\n    }\r\n```",
    "head_branch": "MNG-7662",
    "is_a_fork": true,
    "comments": [
      "@gnodet @cstamas @rmannibucau  It would be great to finish this before 3.9.0 release! Seems a good opportunity for a minor release increment!",
      "Why is `@Typed` required? It has a serious side effect in Sisu regarding how bean is bound... ",
      "> Why is `@Typed` required? It has a serious side effect in Sisu regarding how bean is bound...\r\n\r\nOh, yes.  That's actually the semantics that we need.  The goal is to make sure the proxied bean is exposed only with interfaces.  So we need `@Typed` in order to make sure it will be injected properly.  And we further restrict to the fact that the types are interfaces only.\r\n\r\nI experimented with adding an interface list to `@SessionScoped`, but then, if the injection point was using the actual implementation class instead of an interface, the injection would fail without a proper explanation (just that setting the field did not work, but not with a ClassCastException or anything that could give a hint).\r\n\r\nI also quickly looked if we could slightly change the sisu behaviour in order to restrict based on our own annotation, but the usage of sisu/inject annotations cannot easily be changed in sisu...",
      "Ah, true, yes, proxies are ONLY about interfaces.... kk"
    ],
    "commit_messages": [
      "[MNG-7662] Use proxies for session scoped beans (#950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f6a14f302d393b5946",
    "number": 949,
    "body": "https://issues.apache.org/jira/browse/MNG-7664",
    "head_branch": "MNG-7664",
    "is_a_fork": false,
    "comments": [
      "uh, I'm surprised that commit [38fc24b](https://github.com/apache/maven/pull/949/commits/38fc24b79a997f4a9c5e5915e30f32be7ce6ec88) creates an IT failure...\r\n\r\nnext steps:\r\n- create a parameter for enabling location tracking in common.vm https://github.com/apache/maven/blob/master/maven-model/src/main/mdo/common.vm\r\n- create a parameter for Properties vs HashMap ",
      "at this stage:\r\n- only 2 templates have different content for maven-model vs other modules: `model-v3.vm` and `reader.vm`\r\n- still need a flexible way to store the template in one unique location and have Velocity load from there without being blocked by TEMPLATE_ROOT https://velocity.apache.org/engine/1.7/user-guide.html#parse : we'll probably need to add a parameter for https://github.com/codehaus-plexus/modello/blob/master/modello-plugins/modello-plugin-velocity/src/main/java/org/codehaus/modello/plugin/velocity/VelocityGenerator.java#L64",
      "here it is: everything is shared in root module\r\nit requires a small update in Modello: https://github.com/codehaus-plexus/modello/pull/292\r\n\r\nthe 2 specific generator Velocity templates are named `model-v3-modified.vm` and `reader-modified.vm`, waiting for work to reintegrate modification in original templates",
      "> Wouldn't be shared resources module better than `${basedir}/..` magic?\r\n\r\nWhat would be the benefit of creating an additional module and publishing the artifact if it's purely internal ?\r\nAlso, I think the fact that velocity templates are used means that the templates need to be on the filesystem, which means extracting them before running modello.  That sounds a bit complicated imho...",
      "> > Wouldn't be shared resources module better than `${basedir}/..` magic?\r\n> \r\n> What would be the benefit of creating an additional module and publishing the artifact if it's purely internal ? Also, I think the fact that velocity templates are used means that the templates need to be on the filesystem, which means extracting them before running modello. That sounds a bit complicated imho...\r\n\r\nFirst of all, the deployment can be skipped. I remember that in this exact situation we recommend users to share a module in reactor instead of dealing with path traversal. Of course, it is a bit more work. The result is the same. I will leave the decision to @hboutemy .",
      "thinking again at Modello Velocity Plugin, instead of magically reusing existing `basedir` parameter, probably creating a new dedicated `velocityBasedir` directory could make things more clear\r\nand this could even differentiate basedir for `.mdo` from basedir for `.vm`, then have better sharing strategies for each (`.vm` in root, but `.mdo` in modules even if also loaded from another module)\r\nI'll test that tonight",
      "done: I'm now happy with the result:\r\n- `.mdo` files stay at their original location, reuse from the 3 api-oriented ones is done without attach but direct access\r\n- `.vm` files are used directly from root `src/mdo` directory\r\n\r\nlast review before I work on doing the Modello 2.1.1 release that includes necessary changes then I can merge this PR"
    ],
    "commit_messages": [
      "[MNG-7664] consolidate Velocity templates used to generate code from models (#949)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f7a14f302d393b5947",
    "number": 948,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7662) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7662",
    "is_a_fork": true,
    "comments": [
      "@michael-o can you probably take a look?",
      "Um, this looks wrong to me.... I guess this is to have injected some components that are session scoped? But why not use `Provider<X>` for components that are session scoped instead, as that will throw anyway if invoked out of session....",
      "> Um, this looks wrong to me.... I guess this is to have injected some components that are session scoped?\r\n\r\nYes as described in the JIRA ticket\r\n\r\n> But why not use `Provider<X>` for components that are session scoped instead, as that will throw anyway if invoked out of session....\r\n\r\nMostly because consumers should not need to know how the component is implemented, beside this I never got `Provider<X>` working (Maven 3.8.x) the build always complains something can not be injected. But maybe DefaultMavenComponent should all be `Provider<X>` ones so this do not conflict with implementation details?\r\n\r\nI tried for example:\r\n```\r\n@Requirement( hint = GraphBuilder.HINT )\r\nprivate Provider<GraphBuilder> graphBuilder;\r\n```\r\nbut the build fails with obscure errors...",
      "Would it be possible to have scopes behave in a usual CDI way ? I.e. you should be able to inject a `@SessionScoped` bean into a `@Singleton` and the DI framework should wrap it in a proxy and fail _at use time_ if the bean is used outside of the session, but not at injection time.\r\n\r\nThe [rules are the following](https://blog.triona.de/development/java/cdi-and-proxies.html):\r\n\r\n- For all “normal scopes” a client proxy is generated, i.e. for all managed beans that are annotated with `@ApplicationScoped`, `@SessionScoped`, `@ConversationScoped` or `@RequestScoped`. So for all these beans, the real class will actually never be referenced, without the developer realizing this.\r\n- For all “pseudo scopes”, however, an object of the source class is created, i.e. for all managed beans that are annotated `@Dependent` or (`javax.inject`) `@Singleton`. It should be noted that the `@Dependent` scope is the default scope, so it also applies to all non-annotated classes. The scope serves only a single client and takes over its lifecycle.\r\n\r\nThis seems to be doable using custom extension to pure Guice https://github.com/skuzzle/guice-scoped-proxy-extension, but it has to be done globally by Sisu ...",
      "@gnodet if you have an idea how to rewrite `DefaultMaven` that way it would be fine I think, I just don't know if it is possible as `DefaultMaven` is \"special\" in the way how it setup the session/scopes as part of the execute .... I think actually all references in `DefaultMaven` should probably be lazy until first access but wanted to keep this focused to the minimum...",
      "> > Um, this looks wrong to me.... I guess this is to have injected some components that are session scoped?\r\n> \r\n> Yes as described in the JIRA ticket\r\n> \r\n> > But why not use `Provider<X>` for components that are session scoped instead, as that will throw anyway if invoked out of session....\r\n> \r\n> Mostly because consumers should not need to know how the component is implemented, beside this I never got `Provider<X>` working (Maven 3.8.x) the build always complains something can not be injected. But maybe DefaultMavenComponent should all be `Provider<X>` ones so this do not conflict with implementation details?\r\n> \r\n> I tried for example:\r\n> \r\n> ```\r\n> @Requirement( hint = GraphBuilder.HINT )\r\n> private Provider<GraphBuilder> graphBuilder;\r\n> ```\r\n> \r\n> but the build fails with obscure errors...\r\n\r\nFwiw, I've just tested the injection of `javax.inject.Provider<GraphBuilder>` on master and it seems to work well...",
      "> Fwiw, I've just tested the injection of `javax.inject.Provider<GraphBuilder>` on master and it seems to work well...\r\n\r\nDo you like to submit a PR for this? This seems to be the easiest solution I think for now.... If it also works for 3.9.x I would be fine for this to be packported instead of my suggestion.",
      "Also, there is an existing workaround which I think I've used somewhere, but I can't recall where exactly.\r\nThe idea is to define two beans:\r\n```\r\n@Named\r\n@Singleton\r\nclass MyLazyGraphBuilder implements GraphBuilder {\r\n    private final PlexusContainer container;\r\n    @Inject\r\n    MyLazyGraphBuilder(PlexusContainer container) {\r\n        this.container = container;\r\n    }\r\n    private GraphBuilder delegate() {\r\n       return container.lookup(GraphBuilder.class, \"myGraphBuilder\");\r\n    }\r\n    @Override\r\n    public Result<? extends ProjectDependencyGraph> build(MavenSession session) {\r\n        return delegate().build(session);\r\n    }\r\n}\r\n\r\n@Named(\"myGraphBuilder\")\r\n@SessionScoped\r\nclass MyGraphBuilder implements GraphBuilder {\r\n    ...\r\n}\r\n```\r\n\r\nI still think this should be done automatically, but not sure I'll have the time to dig much into sisu/guice...\r\n\r\nIt may be preferable to use the workaround which will work on any maven version imho.",
      "> Also, there is an existing workaround which I think I've used somewhere, but I can't recall where exactly.\r\n\r\nThis seems simlar to my aproach here, jsut that I more liek to fix it in maven itself than in my beans :-)\r\n\r\n> I still think this should be done automatically, but not sure I'll have the time to dig much into sisu/guice...\r\n\r\nmaybe but I must confess that lazy lookup here seems easier ...\r\n\r\n> It may be preferable to use the workaround which will work on any maven version imho.\r\n\r\nI already have some workarounds, bt my goal i to get it fixed instead of running into the same issues again afterwards.",
      "> > Also, there is an existing workaround which I think I've used somewhere, but I can't recall where exactly.\r\n> \r\n> This seems simlar to my aproach here, jsut that I more liek to fix it in maven itself than in my beans :-)\r\n> \r\n> > I still think this should be done automatically, but not sure I'll have the time to dig much into sisu/guice...\r\n> \r\n> maybe but I must confess that lazy lookup here seems easier ...\r\n> \r\n> > It may be preferable to use the workaround which will work on any maven version imho.\r\n> \r\n> I already have some workarounds, bt my goal i to get it fixed instead of running into the same issues again afterwards.\r\n\r\nI think the [`SessionScoped`](https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/session/scope/internal/SessionScope.java) class (and execution scope) could be a good candidate to implement transparent proxying.",
      "> > > Also, there is an existing workaround which I think I've used somewhere, but I can't recall where exactly.\r\n> > \r\n> > \r\n> > This seems simlar to my aproach here, jsut that I more liek to fix it in maven itself than in my beans :-)\r\n> > > I still think this should be done automatically, but not sure I'll have the time to dig much into sisu/guice...\r\n> > \r\n> > \r\n> > maybe but I must confess that lazy lookup here seems easier ...\r\n> > > It may be preferable to use the workaround which will work on any maven version imho.\r\n> > \r\n> > \r\n> > I already have some workarounds, bt my goal i to get it fixed instead of running into the same issues again afterwards.\r\n> \r\n> I think the [`SessionScoped`](https://github.com/apache/maven/blob/master/maven-core/src/main/java/org/apache/maven/session/scope/internal/SessionScope.java) class (and execution scope) could be a good candidate to implement transparent proxying.\r\n\r\nSee #950 @laeubi ",
      "@gnodet I would be fine with a better solution, will #950 be included in Maven 3.9.0?",
      "> @gnodet I would be fine with a better solution, will #950 be included in Maven 3.9.0?\r\n\r\nIf someone has the time to investigate and finalise the PR, I assume it could, though I'd rather target it for 4.x.  I'm not planning to work on it in the short term though.",
      "Superseded by #950 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f8a14f302d393b5948",
    "number": 947,
    "body": "Revert \"[MNG-7505] Remove ReportingConverter (#906)\"\nThis reverts commit adf89ef63ffca07e490f5cc550f9411bad1a7bd6.\n\nFollowing this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "MNG-7642",
    "is_a_fork": true,
    "comments": [
      "Not sure about _Restore compatibility_.\r\nThis just restores as no-op methods. If flatten called them - didn't it do it for some purpose?\r\nWill flatten behave as expected or just not throw API incompatibility exception and silently do who-knows-what? Perhaps flatten should be updated instead?\r\n\r\nI admit - I have not reviewed this PR/MNG-7642 in detail, so it might all be fine. No need to reply to my comment.",
      "> Not sure about _Restore compatibility_. This just restores as no-op methods. If flatten called them - didn't it do it for some purpose? Will flatten behave as expected or just not throw API incompatibility exception and silently do who-knows-what? Perhaps flatten should be updated instead?\r\n> \r\n> I admit - I have not reviewed this PR/[MNG-7642](https://issues.apache.org/jira/browse/MNG-7642) in detail, so it might all be fine. No need to reply to my comment.\r\n\r\nThose classes are actually not used.  But the flatten maven plugin needs to be injected with one instance of `ReportingConverter`, see https://github.com/mojohaus/flatten-maven-plugin/blob/master/src/main/java/org/codehaus/mojo/flatten/ModelBuilderThreadSafetyWorkaround.java#L107\r\nIt will simply pass it to the `ModelBuilder` in the loop method.\r\n\r\nThe flatten plugin should also be adapted to support the removal of those classes, so that we can get rid of those in 4.1 for example.",
      "So it will be passed in\r\nhttps://github.com/apache/maven/blob/aab448546326da99fd8f2fc5d15ff08dd79bae8e/src/main/java/org/codehaus/mojo/flatten/ModelBuilderThreadSafetyWorkaround.java#L131\r\njust to be ignored?",
      "I think I can see that now.\r\nThanks @gnodet.",
      "> I think I can see that now.\r\n> Thanks @gnodet.\r\n\r\nYes, it's really just for binary compatibility with the existing stuff."
    ],
    "commit_messages": [
      "[MNG-7642] Restore compatibility with flatten-maven-plugin (#947)\n\nRevert \"[MNG-7505] Remove ReportingConverter (#906)\"\r\nThis reverts commit adf89ef63ffca07e490f5cc550f9411bad1a7bd6."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440f9a14f302d393b5949",
    "number": 946,
    "body": "Issue [MNG-7660](https://issues.apache.org/jira/browse/MNG-7660)\r\nFollow-up to #942 ",
    "head_branch": "xml-node",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7660] Rename Dom to XmlNode in the v4 api (#946)\n\n* Rename Dom to XmlNode and Xpp3Dom to XmlNodeImpl\r\n* Use XmlNodeBuilder instead of DomBuilder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440faa14f302d393b594a",
    "number": 945,
    "body": "This closes #945\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7658",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7658] CI-friendly versions should only come from/rely on user properties\n\nThis closes #945"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440fba14f302d393b594b",
    "number": 944,
    "body": "https://issues.apache.org/jira/browse/MNG-7652",
    "head_branch": "MNG-7652",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7652] switch to Modello Velocity (#944)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440fca14f302d393b594c",
    "number": 943,
    "body": "This is backport / cherry-pick of #940.\r\n\r\n--\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "3.9.x-MNG-7648",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7648] Fix locationTracking in DefaultModelBuildingRequest copy constructor (#940)\n\n- Fix locationTracking in DefaultModelBuildingRequest copy constructor\n- Add location tracking unit test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440fda14f302d393b594d",
    "number": 942,
    "body": "https://issues.apache.org/jira/browse/MNG-7655\r\n\r\nkeeping `plexus-utils` artifactId with `org.apache.maven` vs `org.codehaus.plexus` groupId is confusing: let's name it `maven-plexus-utils`\r\n\r\nand `maven-xml-impl` is better named `maven-plexus-utils-xml`, to show that it reimplements plexus-utils' content",
    "head_branch": "MNG-7655",
    "is_a_fork": false,
    "comments": [
      "> https://issues.apache.org/jira/browse/MNG-7655\r\n> \r\n> keeping `plexus-utils` artifactId with `org.apache.maven` vs `org.codehaus.plexus` groupId is confusing: let's name it `maven-plexus-utils`\r\n> \r\n> and `maven-xml-impl` is better named `maven-plexus-utils-xml`, to show that it reimplements plexus-utils' content\r\n\r\nI don't have any problem with this PR.  However, I wonder that the final outcome should be.  In the long term, the repackaging is a bit of a hack and a pain to maintain, especially the xml part which is reimplemented.  I see several solutions:\r\n  * deprecate the xml part in `plexus-utils`\r\n  * move the implementation to a `plexus-utils` 3.0 (that would mean that `plexus-utils` would depend on the xml api from maven\r\n  * deprecate `plexus-utils` artfifact and move the whole code into maven (this could have been beneficial in the maven 3 architecture where `plexus-utils` was exported, but this is no longer the case in 3.x and the new 4.x api does not depend on the `plexus-utils` artifact)",
      "Why not move out the XML stuff to `plexus-xml`? Plexus Utils is just too large.",
      "+1 for 3rd option",
      "Actually, a LOT of plexus should be ingested by maven stuff (as it is unused anywhere else), think compiler, think archiver, etc -- we must collapse these, as it is nightmare and just layers and layers of indirection...",
      "> Actually, a LOT of plexus should be ingested by maven stuff (as it is unused anywhere else), think compiler, think archiver, etc -- we must collapse these, as it is nightmare and just layers and layers of indirection...\r\n\r\nToo much pain, too much work!",
      "yes, splitting Plexus' plexus-utils 4.0.0 https://github.com/codehaus-plexus/plexus-utils into plexus-xml + plexus-utils makes sense\r\nbecause AFAIK Maven core exports plexus-xml only, not the plexus-utils other classes, which are only internal hidden utils\r\n\r\nthen on how to evolve plexus-xml extracted from plexus-utils with the rewrite for Maven 4, good question\r\n\r\nfirst issue created https://github.com/codehaus-plexus/plexus-utils/issues/228",
      "+1 for maven to ingest used plexus classes rather than working on plexus off radars for the long term (probably lazily, ie each time we need a change we rather import the lib instead of patching+releasing it).",
      "oh, back to plexus-utils https://codehaus-plexus.github.io/plexus-utils/ vs maven-shared-utils https://maven.apache.org/shared/maven-shared-utils/ discussion\r\n\r\nI suppose we can split maven-shared-utils 3 into maven-shared-xml 4 + maven-shared-utils 4\r\n\r\nusing maven-shared-utils 4 instead of plexus-utils 4 in Maven core is not an issue\r\n\r\nbut switching to maven-shared-xml 4 is not possible, because there is a java package change from plexus-xml 4\r\n\r\n",
      "ok, launching some feedback on the Maven dev ML for plexus-xml: this looks simple and wold make things much cleaner = Plexus plexus-utils 4 is used as is (and eventually migrated away), and there is only the plexus-xml reimplementation as maven-plexus-xml",
      "Superseded by https://github.com/apache/maven/pull/1093"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440fea14f302d393b594e",
    "number": 941,
    "body": "Depends on https://github.com/apache/maven-resolver/pull/232\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7653",
    "head_branch": "maven-3.9.x-MRESOLVER-302-onSessionClose",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662440ffa14f302d393b594f",
    "number": 940,
    "body": "This fixes missing `locationTracking` in project model.\r\n\r\nMissing `locationTracking` was causing issues down the line in enforcer plugin that was not able to verify source of the model configuration.\r\n\r\n--\r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7648",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7648] Fix locationTracking in DefaultModelBuildingRequest copy constructor (#940)\n\n- Fix locationTracking in DefaultModelBuildingRequest copy constructor\r\n- Add location tracking unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244100a14f302d393b5950",
    "number": 939,
    "body": "This closes #939\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7651",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7651] Simplify and document merge of maven.config file and CLI args\n\nThis closes #939"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244101a14f302d393b5951",
    "number": 938,
    "body": "\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5857_alt-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244101a14f302d393b5952",
    "number": 937,
    "body": "Lack of these changes are making IT suite to fail with maven-3.9.x branch.\r\n\r\nOTOH, the change is nearly trivial, while value is high, so let's backport them.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7618\r\nhttps://issues.apache.org/jira/browse/MNG-7624\r\n",
    "head_branch": "maven-3.9.x-MNG-7618",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7618][MNG-7624] Backport to Maven 3.9.x (#937)\n\nThese changes are making IT suite to fail with maven-3.9.x.\r\n\r\nOTOH, the change is nearly trivial, while value is high, so let's\r\nbackport them.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7618\r\nhttps://issues.apache.org/jira/browse/MNG-7624"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244102a14f302d393b5953",
    "number": 936,
    "body": "\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5857_alt-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244104a14f302d393b5954",
    "number": 935,
    "body": null,
    "head_branch": "upgrade-pom",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7650] Reformat"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244105a14f302d393b5955",
    "number": 934,
    "body": "…e public\r\n\r\nThis closes #934\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [ ] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7352",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7352] org.apache.maven.toolchain.java.JavaToolchainImpl should be public\n\nThis closes #934"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244106a14f302d393b5956",
    "number": 933,
    "body": " - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "toString",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244106a14f302d393b5957",
    "number": 932,
    "body": "The current version parser does not treat .RC and -RC correctly:\r\nactual : 1.0.0.RC1 > 1.0.0-RC2\r\nexpected : 1.0.0.RC1 < 1.0.0-RC2\r\n \r\nbecause RC1 < RC2\r\nhow to fix : place a list item before qualifier\r\n\r\nas a consequence for any string qualifier x:\r\npreviously:\r\n* 1.0.0.X1 > 1.0.0-X2\r\n* 1.0.X < 1.0.0.X\r\n\r\nnow:\r\n* 1.0.0.X1 < 1.0.0-X2\r\n* 1.0.X == 1-X == 1.0.0.X\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "dot-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7644] Fix version comparison where .X1 < -X2 for any string qualifier X\n\nThis #932"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244107a14f302d393b5958",
    "number": 931,
    "body": "The current version parser does not treat .RC and -RC correctly:\r\nactual : 1.0.0.RC1 > 1.0.0-RC2\r\nexpected : 1.0.0.RC1 < 1.0.0-RC2\r\n \r\nbecause RC1 < RC2\r\nhow to fix : place a list item before qualifier\r\n\r\nas a consequence for any string qualifier x:\r\npreviously:\r\n* 1.0.0.X1 > 1.0.0-X2\r\n* 1.0.X < 1.0.0.X\r\n\r\nnow:\r\n* 1.0.0.X1 < 1.0.0-X2\r\n* 1.0.X == 1-X == 1.0.0.X\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "dot-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244108a14f302d393b5959",
    "number": 930,
    "body": "The current version parser does not treat .RC and -RC correctly:\r\nactual : 1.0.0.RC1 > 1.0.0-RC2\r\nexpected : 1.0.0.RC1 < 1.0.0-RC2\r\n \r\nbecause RC1 < RC2\r\nhow to fix : place a list item before qualifier\r\n\r\nas a consequence for any string qualifier x:\r\npreviously:\r\n* 1.0.0.X1 > 1.0.0-X2\r\n* 1.0.X < 1.0.0.X\r\n\r\nnow:\r\n* 1.0.0.X1 < 1.0.0-X2\r\n* 1.0.X == 1-X == 1.0.0.X\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "dot-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244109a14f302d393b595a",
    "number": 929,
    "body": "This PR can be merged, If wanted to port (to 4.0.x) the fix for https://issues.apache.org/jira/browse/MNG-7559\r\nintention is:\r\n* 1.0.0.RC1 < 1.0.0-RC2\r\n* ( edr, pfd, etc.) < final, ga, release\r\n* 9.4.1.jre16 > 9.4.1.jre16-preview\r\n\r\nfollowing semver rules should be encouraged, natural ordering is used without the need to hard code strings, except for hard coded qualifiers 'a', 'b', 'm', 'cr', 'snapshot', 'final', 'ga', 'release', '' and 'sp':\r\n* alpha = a < beta = b < milestone = m < rc = cr < 'snapshot' < '' = 'final' = 'ga' = 'release' < 'sp'\r\n\r\nthe documentation should discourage the usage of 'CR', 'final', 'ga', 'release' and 'SP' qualifiers.\r\nMaven Central should begin to reject new artifact using CR and SP qualifiers.\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "comparison-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624410aa14f302d393b595b",
    "number": 928,
    "body": "PR template has multiple actions associated to the same bullet, this result in confusion and required actions not taken.\r\n\r\neach atomic task should have its own bullet.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`,\r\n       where you replace `MNG-XXX` and `SUMMARY` with the appropriate JIRA issue.\r\n - [x] Also format the first line of the commit message like `[MNG-XXX] SUMMARY`.\r\n       Best practice is to use the JIRA issue title in both the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "pr-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7643] Each atomic task should have its own bullet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624410ba14f302d393b595c",
    "number": 927,
    "body": "Cherry-pick from fa15fcf1536a6a5e92355ac8c91ecfa0301f016e\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7590-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7590] Allow to configure resolver by properties in settings.xml\n\nCherry-pick from fa15fcf1536a6a5e92355ac8c91ecfa0301f016e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624410ca14f302d393b595d",
    "number": 926,
    "body": "LocalRepositoryManager needs configurations from RepositorySystemSession so must be created after session configuration is finished.\r\n\r\n(cherry picked from commit b1c1f7556d6b66d984c4ed2c0eb723c9b99b38be)\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7600-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7600] LocalRepositoryManager is created too early\n\nLocalRepositoryManager needs configurations from RepositorySystemSession\nso must be created after session configuration is finished.\n\n(cherry picked from commit b1c1f7556d6b66d984c4ed2c0eb723c9b99b38be)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624410da14f302d393b595e",
    "number": 925,
    "body": "This PR can be merged, If wanted to port (to 3.8.x) the fix for https://issues.apache.org/jira/browse/MNG-7559\r\nintention is:\r\n* 1.0.0.RC1 < 1.0.0-RC2\r\n* ( edr, pfd, etc.) < final, ga, release\r\n* 9.4.1.jre16 > 9.4.1.jre16-preview\r\n\r\nfollowing semver rules should be encouraged, natural ordering is used without the need to hard code strings, except for hard coded qualifiers 'a', 'b', 'm', 'cr', 'snapshot', 'final', 'ga', 'release', '' and 'sp':\r\n* alpha = a < beta = b < milestone = m < rc = cr < 'snapshot' < '' = 'final' = 'ga' = 'release' < 'sp'\r\n\r\nthe documentation should discourage the usage of 'CR', 'final', 'ga', 'release' and 'SP' qualifiers.\r\nMaven Central should begin to reject new artifact using CR and SP qualifiers.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "comparison-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624410ea14f302d393b595f",
    "number": 924,
    "body": "@slawekjaranowski Here it is, just requires Java 7 conversion.",
    "head_branch": "MNG-7590+MNG-7600",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624410fa14f302d393b5960",
    "number": 923,
    "body": " - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n-----\r\n\r\n- Picked from #914 and spotless-reformatted.",
    "head_branch": "toString",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244110a14f302d393b5961",
    "number": 922,
    "body": "…#826)\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7106_maven-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7106] Accept same lower and upper bound in version spec string\n\nThis closes #922"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244111a14f302d393b5962",
    "number": 921,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7637) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7637",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244112a14f302d393b5963",
    "number": 920,
    "body": "…y (see MNG-7316)\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7636_maven-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7636] Partially revert MNG-5868 to restore backward compatibility (see MNG-7316)\n\nCo-authored-by: Gary Gregory <ggregory@rocketsoftware.com>\n\nThis closes #920"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244113a14f302d393b5964",
    "number": 919,
    "body": "…y (see MNG-7316)\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7636_maven-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7636] Partially revert MNG-5868 to restore backward compatibility (see MNG-7316)\n\nCo-authored-by: Gary Gregory <ggregory@rocketsoftware.com>\n\nThis closes #919"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244114a14f302d393b5965",
    "number": 918,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7636",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7636] Document MavenProject#getAttachedArtifacts() as read-only\n\nThis closes #918"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244115a14f302d393b5966",
    "number": 917,
    "body": "This closes #917\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7634_maven-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7634] Revert MNG-5982 and MNG-7417\n\nThis closes #917"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244116a14f302d393b5967",
    "number": 916,
    "body": "This closes #916\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7634",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7634] Revert MNG-5982 and MNG-7417\n\nThis closes #916"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244117a14f302d393b5968",
    "number": 915,
    "body": "Btw, this PR contains only the POM change, all other modifications are reformat. \r\nAlso it's missing the BOM's parent update...",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244118a14f302d393b5969",
    "number": 914,
    "body": "\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n----\r\n\r\nIf something decides to dump some build/session details, like `maven-bundle-plugin` with `--debug` does, currently it produces:\r\n```\r\n[DEBUG] BND Instructions:\r\nproject.build.mailingLists=[org.apache.maven.model.MailingList@16e91d6f, org.apache.maven.model.MailingList@57104caa]\r\nproject.licenses=[org.apache.maven.model.License@416855dc, org.apache.maven.model.License@1f342afb]\r\nproject.build.scm=org.apache.maven.model.Scm@5d4369c5\r\n```\r\n\r\nI propose to change that to something more useful, like\r\n```\r\n[DEBUG] BND Instructions:\r\nproject.build.mailingLists=[name \\= '...']\r\nproject.licenses=[License(name\\=Eclipse Public License v. 2.0, url\\=https\\://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.txt), License(name\\=GNU General Public License, version 2 with the GNU Classpath Exception, url\\=https\\://www.gnu.org/software/classpath/license.html)]\r\nproject.build.scm=connection \\= '...'\r\n```\r\n",
    "head_branch": "toString",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244119a14f302d393b596a",
    "number": 913,
    "body": "... and implement upcoming interface methods of [MRESOLVER-307](https://issues.apache.org/jira/browse/MRESOLVER-307).\r\n\r\nCurrently the WorkspaceReader has a way to list versions or resolve the file for an artifact or the model, but there is no way of really get a list of workspace artifacts or models itself.\r\n\r\nThis adds ways to list artifact and models a WorkspaceReader manages.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7630) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7630",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624411aa14f302d393b596b",
    "number": 912,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7629\r\n\r\n- Partial revert of MNG-6118\r\n- [MNG-7629] Change reactor reader to copy packaged artifacts and reuse them across builds if needed\r\n\r\nPR with IT at https://github.com/apache/maven-integration-testing/pull/219\r\n\r\n================\r\n\r\nAs discussed in the JIRA, the fix for MNG-6118 has several problems:\r\n  * it requires reading the whole reactor when building a subtree\r\n  * it does not work with attached artifacts\r\nThis PR partially reverts MNG-6118 so that maven does not read the full reactor anymore and fixes the `ReactorReader` so that it keeps a copy of each artifact to be installed/deployed in the `${multiModuleProjectDirectory}/target/project-local-repo` directory and uses them to resolve artifacts during build.\r\n",
    "head_branch": "MNG-7629",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624411ba14f302d393b596c",
    "number": 911,
    "body": "JIRA issue : https://issues.apache.org/jira/browse/MNG-7624",
    "head_branch": "MNG-7624",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7624] Use groupId:artifactId instead of empty goal (#911)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624411ca14f302d393b596d",
    "number": 910,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7626",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7626] maven-bom should have the same parent version as project"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624411ca14f302d393b596e",
    "number": 909,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7625",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624411da14f302d393b596f",
    "number": 908,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master-simplify-build",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "simplify build and get rid of withMaven (#908)\n\n* simplify build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624411ea14f302d393b5970",
    "number": 907,
    "body": "Maven Consumer POM redone, it happens only in \"maven3 realm\" (before resolver), and allows use cases like m-gog-p and checksum-m-p work as before.\r\n\r\nKey aspects:\r\n* consumer POM is injected to build earliest possible as attached artifact\r\n* it lives and is visible just like any other attached artifact (so m-gpg-p can process it)\r\n* just before the install/deploy, they are \"swapped out\" to replace POM along with all \"extras\" it may have (checksum, signature)\r\n* to support use cases like MNG-7067 (in memory model is changed, but not POM file), OnChangeTransformer could be extended to take into account both: file content and model content.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7622\r\n",
    "head_branch": "maven-transformation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7622] Maven Transformation and Consumer POM (#907)\n\nMaven Consumer POM redone, it happens only in \"maven3 realm\" (before resolver), and allows use cases like m-gog-p and checksum-m-p work as before.\r\n\r\nKey aspects:\r\n* consumer POM is injected to build earliest possible as attached artifact\r\n* it lives and is visible just like any other attached artifact (so m-gpg-p can process it)\r\n* just before the install/deploy, they are \"swapped out\" to replace POM along with all \"extras\" it may have (checksum, signature)\r\n* to support use cases like MNG-7067 (in memory model is changed, but not POM file), OnChangeTransformer could be extended to take into account both: file content and model content.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7622"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624411fa14f302d393b5971",
    "number": 906,
    "body": "JIRA: https://issues.apache.org/jira/browse/MNG-7505\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/218",
    "head_branch": "MNG-7505",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7505] Remove ReportingConverter (#906)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244120a14f302d393b5972",
    "number": 905,
    "body": "… Windows)\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7621",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7621] Parameter '-f' causes ignoring any 'maven.config' (only on Windows)\n\nThis closes #905"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244121a14f302d393b5973",
    "number": 904,
    "body": "Migrated existing consumer POM to new API, functionally this should be 100% what file transformer API did.\r\n\r\nDepends on https://github.com/apache/maven-resolver/pull/226",
    "head_branch": "transform-artifact",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244122a14f302d393b5974",
    "number": 903,
    "body": "Restore compatibility for the flatten maven plugin which needs an no-arg constructor.",
    "head_branch": "compatibility",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7576] Restore compatibility for flatten-maven-plugin (#903)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244123a14f302d393b5975",
    "number": 902,
    "body": "Adds Maven feature that is able to explain why an artifact is present in local repository.\r\n\r\nUsable for diagnosing resolution issues.\r\n\r\nIn local repository, for each artifact it records `.tracking` folder, containing farthest artifact that got to this artifact, and the list of graph nodes that lead to it.\r\n\r\nNote: this is based on by @grgrzybek proposal and reuses some code he provided. See https://github.com/apache/maven-resolver/pull/182\r\n\r\nForward-port of: https://github.com/apache/maven/pull/900, code is100% same (sans junit 5), please review there.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7619",
    "head_branch": "MNG-7619-reverse-dep-tree",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7619] Reverse Dependency Tree (#902)\n\nAdds Maven feature that is able to explain why an artifact is present in local repository.\r\n\r\nUsable for diagnosing resolution issues.\r\n\r\nIn local repository, for each artifact it records `.tracking` folder, containing farthest artifact that got to this artifact, and the list of graph nodes that lead to it.\r\n\r\nNote: this is based on by @grgrzybek proposal and reuses some code he provided. See https://github.com/apache/maven-resolver/pull/182\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7619"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244124a14f302d393b5976",
    "number": 901,
    "body": "Following MNG-7559\r\n\r\nExpected: treat equally\r\n* 6.1m5\r\n* 6.1m.5\r\n* 6.1m-5\r\n\r\nActual: not equal\r\n1. 6.1m5 -> 6.1-milestone-5; tokens: [6, 1, [milestone, [5]]]\r\n   6.1m5 > 6.1m.5\r\n2. 6.1m.5 -> 6.1-m.5; tokens: [6, 1, [m, 5]]\r\n   6.1m.5 > 6.1m-5\r\n3. 6.1m-5 -> 6.1-m-5; tokens: [6, 1, [m, [5]]]\r\n\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "comparison",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244125a14f302d393b5977",
    "number": 900,
    "body": "Adds Maven feature that is able to explain why an artifact is present in local repository.\r\n\r\nUsable for diagnosing resolution issues.\r\n\r\nIn local repository, for each artifact it records `.tracking` folder, containing farthest artifact that got to this artifact, and the list of graph nodes that lead to it.\r\n\r\nNote: this is based on by @grgrzybek proposal and reuses some code he provided. See https://github.com/apache/maven-resolver/pull/182\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7619",
    "head_branch": "maven-3.9.x-MNG-7619-reverse-dep-tree",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7619] Reverse Dependency Tree (#900)\n\nAdds Maven feature that is able to explain why an artifact is present in local repository.\r\n\r\nUsable for diagnosing resolution issues.\r\n\r\nIn local repository, for each artifact it records `.tracking` folder, containing farthest artifact that got to this artifact, and the list of graph nodes that lead to it.\r\n\r\nNote: this is based on by @grgrzybek proposal and reuses some code he provided. See https://github.com/apache/maven-resolver/pull/182\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7619"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244126a14f302d393b5978",
    "number": 899,
    "body": "Forking https://github.com/apache/maven/pull/845 so Jenkins will pick it up",
    "head_branch": "MNG-7559",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244127a14f302d393b5979",
    "number": 898,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7618\r\nRelated to https://github.com/apache/maven-mvnd/issues/745",
    "head_branch": "MNG-7618",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7618] Use goalPrefix instead of artifactId 4to display mojos being executed (#898)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244128a14f302d393b597a",
    "number": 897,
    "body": "Adds new feature: Chained Local Repository Manager.\r\n\r\nCherry-pick 2dc7a356d3912a92af2c6e5e23604b084f5ca748\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7612\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7612",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7612] Chained LRM\n\nAdds new feature: Chained Local Repository Manager.\n\nCherry-pick 2dc7a356d3912a92af2c6e5e23604b084f5ca748\n\n---\n\nhttps://issues.apache.org/jira/browse/MNG-7612"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244129a14f302d393b597b",
    "number": 896,
    "body": null,
    "head_branch": "feature/MNG-7609-clarify-extension-descriptor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7609] Clarify extension descriptor documentation (#896)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624412aa14f302d393b597c",
    "number": 895,
    "body": "Now that Maven 3.9.x contains other transports than Wagon, the Plexus XML is not just to be \"stuffed\", but translation should happen to proper resolver configuration to make them available to all transports.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7614\r\n",
    "head_branch": "MNG-7614-translate-transport-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7614] Translate Plexus XML to proper resolver configuration (#895)\n\nNow that Maven 3.9.x contains other transports than Wagon, the Plexus XML is not just to be \"stuffed\", but translation should happen to proper resolver configuration to make them available to all transports.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7614"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624412ba14f302d393b597d",
    "number": 894,
    "body": "Following this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\n       title in the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "missing-exported-artifacts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7616] Add missing exported artifacts for the new API (#894)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624412ca14f302d393b597e",
    "number": 893,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7615\r\nSame PR as #803 but reformatted.",
    "head_branch": "mt-model-builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7615] Multithreaded project builder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624412da14f302d393b597f",
    "number": 892,
    "body": "This immediately cuts in \"half\" the count of HTTP requests against Maven Central or any major MRM.\r\n\r\nAltering the meaning of \"default\": is now same as \"auto\", but still leaving it in place for future, as \"default\" at some point may again become something different than \"native\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7608",
    "head_branch": "MNG-7608-default-transport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7608] Make native transport the default (#892)\n\nThis immediately cuts in \"half\" the count of HTTP requests against Maven Central or any major MRM.\r\n\r\nAltering the meaning of \"default\": is now same as \"auto\", but still leaving it in place for future, as \"default\" at some point may again become something different than \"native\".\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7608"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624412ea14f302d393b5980",
    "number": 891,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7613",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7613] Parent POM 38 - code reformat"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624412fa14f302d393b5981",
    "number": 890,
    "body": "Adds new feature: Chained Local Repository Manager.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7612\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7612-3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7612] Chained LRM\n\nAdds new feature: Chained Local Repository Manager.\n\n---\n\nhttps://issues.apache.org/jira/browse/MNG-7612"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244130a14f302d393b5982",
    "number": 889,
    "body": "Adds new feature: Chained Local Repository Manager.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7612\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.9.x-MNG-7612",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244131a14f302d393b5983",
    "number": 888,
    "body": "Always assume version constraint (the same as in requiredMavenVersion)\r\n\r\n",
    "head_branch": "bugfix/requiredJavaVersion-is-always-a-range",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7611] Change semantics of plugin descriptor's \"requiredJavaVersion\" (#888)\n\nAlways assume version constraint (the same as in requiredMavenVersion)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244132a14f302d393b5984",
    "number": 887,
    "body": "This PR can be merged, If wanted to port (to 3.9.x) the fix for https://issues.apache.org/jira/browse/MNG-7559\r\nintention is:\r\n* 1.0.0.RC1 < 1.0.0-RC2\r\n* ( edr, pfd, etc.) < final, ga, release\r\n* 9.4.1.jre16 > 9.4.1.jre16-preview\r\n\r\nfollowing semver rules should be encouraged, natural ordering is used without the need to hard code strings, except for hard coded qualifiers 'a', 'b', 'm', 'cr', 'snapshot', 'final', 'ga', 'release', '' and 'sp':\r\n* alpha = a < beta = b < milestone = m < rc = cr < 'snapshot' < '' = 'final' = 'ga' = 'release' < 'sp'\r\n\r\nthe documentation should discourage the usage of 'CR', 'final', 'ga', 'release' and 'SP' qualifiers.\r\nMaven Central should begin to reject new artifact using CR and SP qualifiers.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "comparison-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244133a14f302d393b5985",
    "number": 886,
    "body": "Add Jetty transport from resolver and make it selectable.\r\n\r\nTo build this Java17 is must (and raises Maven as well to 11).\r\n\r\nDepends on https://github.com/apache/maven-resolver/pull/225\r\n\r\nTo build this (some dependencies brings in new license):\r\n```\r\nmvn clean install -Dremoteresources.skip\r\n```\r\n\r\nYou will end up with HUGE maven 4 snapshot that embed Jetty Client.\r\n\r\n---\r\n\r\nTo use it: use this settings: https://gist.github.com/cstamas/492747108c6112cedf887a5394e52eb0\r\n\r\n```\r\n~/tmp/apache-maven-4.0.0-alpha-3-SNAPSHOT/bin/mvn -V -s settings.xml clean install -Drat.skip -Dmaven.test.skip -Dmaven.resolver.transport=jetty\r\n```\r\n(rat.skip needed to leave alone local repo within build, tests skip to make it shorter, not wait for UT runs)\r\n\r\nTransport values:\r\n* maven.resolver.transport=jetty\r\n* maven.resolver.transport=native\r\n* maven.resolver.transport=wagon\r\n\r\nsettings.xml will use $CWD/local as local repo, nuke it before runs (to force all being re-downloaded).",
    "head_branch": "jetty-transport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244133a14f302d393b5986",
    "number": 885,
    "body": "This immediately cuts in \"half\" the count of HTTP requests against Maven Central or any major MRM.\r\n\r\nAltering the meaning of \"default\": is now same as NATIVE, still leaving it in place for future, as \"default\" at some point may again become something different than \"native\".\r\n\r\nDepends on https://github.com/apache/maven-integration-testing/pull/215\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7608",
    "head_branch": "native-transport-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244134a14f302d393b5987",
    "number": 884,
    "body": "Something simple to use and would reuse all the auth/proxy etc data from Maven. Intentionally super-trivial API.\r\n\r\nIf something more \"serious\" needed, plugin should probably roll it's own solution.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7607",
    "head_branch": "m4-transport-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7607] Add M4 Transport API (#884)\n\nSomething simple to use and would reuse all the auth/proxy etc data from Maven. Intentionally super-trivial API.\r\n\r\nIf something more \"serious\" needed, plugin should probably roll it's own solution.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7607"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244135a14f302d393b5988",
    "number": 883,
    "body": "In short: do NOT set request.setRawModel as NOTHING sets it. The Maven4 vs Maven3 is different, in Maven 3 NOTHING calls request.setRawModel\r\n\r\nFull explanation: as ModelBuildingRequest is REUSED, and nothing sets this value in Maven3, once you set it here (as in original PR https://github.com/apache/maven/pull/849 ) results in awkward situation in Maven3: it will not load any other model...\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-6609\r\n\r\n",
    "head_branch": "maven-3.9.x-MNG-6609-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6609] Profile activation based on packaging (#883)\n\nIn short: do NOT set request.setRawModel as NOTHING sets it. The Maven4 vs Maven3 is different, in Maven 3 NOTHING calls request.setRawModel\r\n\r\nFull explanation: as ModelBuildingRequest is REUSED, and nothing sets this value in Maven3, once you set it here (as in original PR https://github.com/apache/maven/pull/849 ) results in awkward situation in Maven3: it will not load any other model...\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-6609"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244136a14f302d393b5989",
    "number": 882,
    "body": "Updates resolver to latest release.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586\r\n",
    "head_branch": "MNG-7586-resolver-192",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7586] Update Maven Resolver to 1.9.2 (#882)\n\nUpdates resolver to latest release.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244137a14f302d393b598a",
    "number": 881,
    "body": "Updates resolver to latest release.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586\r\n",
    "head_branch": "maven-3.9.x-MNG-7586",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7586] Update Maven Resolver to 1.9.2 (#881)\n\n* [MNG-7586] Update Maven Resolver to 1.9.2\r\n\r\nUpdates resolver to latest release.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244139a14f302d393b598b",
    "number": 880,
    "body": "- [MNG-7601] Upgrade Apache Maven parent POM to version 38\n- [MNG-7601] Reformat sources\n- [MNG-7601] Ignore reformat commit in blame\n\n",
    "head_branch": "parent-38",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7601] Ignore reformat commit in blame"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244139a14f302d393b598c",
    "number": 879,
    "body": "LocalRepositoryManager needs configurations from RepositorySystemSession so must be created after session configuration is finished.\r\n\r\n(cherry picked from commit b1c1f7556d6b66d984c4ed2c0eb723c9b99b38be)\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7600-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7600] LocalRepositoryManager is created too early\n\nLocalRepositoryManager needs configurations from RepositorySystemSession\nso must be created after session configuration is finished.\n\n(cherry picked from commit b1c1f7556d6b66d984c4ed2c0eb723c9b99b38be)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624413aa14f302d393b598d",
    "number": 878,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624413ba14f302d393b598e",
    "number": 877,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624413ca14f302d393b598f",
    "number": 876,
    "body": "LocalRepositoryManager needs configurations from RepositorySystemSession so must be created after session configuration is finished.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7600",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7600] LocalRepositoryManager is created too early\n\nLocalRepositoryManager needs configurations from RepositorySystemSession\nso must be created after session configuration is finished."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624413da14f302d393b5990",
    "number": 875,
    "body": "Not for production, but usable in testing environments.\r\nDepends on https://github.com/apache/maven-resolver/pull/223",
    "head_branch": "chained-lrm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624413ea14f302d393b5991",
    "number": 874,
    "body": "For now only enabled in core and plugin-api\r\nCurrently breaks build due to incompatible changes compared to 3.8.6",
    "head_branch": "feature/enforce-backwards-compat",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7598] Enforce binary backwards-compatibility (#874)\n\nFor now only enabled in core and plugin-api\r\n\r\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624413fa14f302d393b5992",
    "number": 873,
    "body": "chery-pick from a6b1ebb1cd40ca4b288fdeb30c6d2460323aa25b\r\n\r\nOld actions use deprecated node 12\r\n\r\n- cache v2 -> v3\r\n- checkout v2 -> v3\r\n- download-artifact v2 -> v3\r\n- setup-java v2 -> v3\r\n- disable access to GITHUB_TOKEN\r\n- don't store credentials with checkout\r\n- don't execute build for PR from local repository branches - we have build on push event\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "update-gh-actions-3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update actions in GH build\n\nchery-pick from a6b1ebb1cd40ca4b288fdeb30c6d2460323aa25b\n\nOld actions use deprecated node 12\n\n- cache v2 -> v3\n- checkout v2 -> v3\n- download-artifact v2 -> v3\n- setup-java v2 -> v3\n- disable access to GITHUB_TOKEN\n- don't store credentials with checkout\n- don't execute build for PR from local repository branches - we have build on push event"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244140a14f302d393b5993",
    "number": 872,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7597\r\n",
    "head_branch": "MNG-7597",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7597] Fix infinite loop when iterating PropertiesAsMap (#872)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244141a14f302d393b5994",
    "number": 871,
    "body": "Old actions use deprecated node 12\r\n\r\n- cache v2 -> v3\r\n- checkout v2 -> v3\r\n- download-artifact v2 -> v3\r\n- setup-java v2 -> v3\r\n- disable access to GITHUB_TOKEN\r\n- don't store credentials with checkout\r\n- don't execute build for PR from local repository branches - we have build on push event\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "gh-actions-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update actions in GH build\n\nOld actions use deprecated node 12\n\n- cache v2 -> v3\n- checkout v2 -> v3\n- download-artifact v2 -> v3\n- setup-java v2 -> v3\n- disable access to GITHUB_TOKEN\n- don't store credentials with checkout\n- don't execute build for PR from local repository branches - we have build on push event"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244142a14f302d393b5995",
    "number": 870,
    "body": "Changes:\r\n- hook in lifecycle\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586\r\n",
    "head_branch": "MNG-7586-update-resolver-190",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7586] Update Maven Resolver to 1.9.1 (#870)\n\nChanges:\r\n- hook in lifecycle\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244143a14f302d393b5996",
    "number": 869,
    "body": "After a discussion with @rmannibucau, @slawekjaranowski and @michael-o, I think this is the best solution.\r\nThe env CI check is done in Java code, making it easy to unit test. Also, a new flag had to be added to de-activate the CI=true behavior (named `--force-interactive`). To make it consistent I created an additional flag/alias to -B (`--non-interactive`). The flags were suggested by @michael-o since it's also used in other widely used CLI tools such as SVN.\r\n\r\nHappy to hear your thoughts.\r\n\r\nRelevant [maven-integration-testing PR](https://github.com/apache/maven-integration-testing/pull/209)\r\n\r\n--- \r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7338-automatic-non-interactive-mode-in-ci",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7338] Automatically activate batch-mode and make output quiet when running in CI. (#869)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244144a14f302d393b5997",
    "number": 868,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7542\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "fix/MNG-7542-fixing-misleading-log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244145a14f302d393b5998",
    "number": 867,
    "body": "Cherry-pick from fa15fcf1536a6a5e92355ac8c91ecfa0301f016e\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7590-3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7590] Allow to configure resolver by properties in settings.xml\n\nCherry-pick from fa15fcf1536a6a5e92355ac8c91ecfa0301f016e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244146a14f302d393b5999",
    "number": 866,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7596\r\nUpgrade to plexus 3.5.0 and change the xml merge accordingly\r\n\r\nNote that I had to hack a bit the order to keep the current ordering, see https://issues.apache.org/jira/browse/MNG-5474",
    "head_branch": "plexus-3.5.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7596] Upgrade to plexus 3.5.0 (#866)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244147a14f302d393b599a",
    "number": 865,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/custom-phase-ids-in-execute-annotation",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MPLUGIN-439] Support custom lifecycle phase ids in Execute annotation (#865)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244148a14f302d393b599b",
    "number": 864,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "bugfix/MNG-7561-Maven3.9-backport",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7561] never resolve version ranges with same lower and upper bound (#864)\n\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624414aa14f302d393b599c",
    "number": 863,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7590",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7590] Allow to configure resolver by properties in settings.xml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624414ba14f302d393b599d",
    "number": 862,
    "body": "descriptor\r\n\r\nWIP (i.e. Core module is currently broken)",
    "head_branch": "feature/generate-plugin-descriptor-bean-and-reader-from-model",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624414ca14f302d393b599e",
    "number": 861,
    "body": "This PR addresses an issue where Windows users may not be able to find the `javac` tool, since it doesn't have the `.exe` extension in all cases. I deviated slightly from the proposed solution in the [ticket](https://issues.apache.org/jira/browse/MNG-7578) because it was not guaranteed to be backward compatible (favoring no extension over `.exe`). \r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7578) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MVN-7578-build-linux-image-on-windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7578] Fallback on Linux executable in Windows for findTool utility (#861)\n\n* [MVN-7578] Fallback on Linux executable in Windows for findTool utility\r\n* Fix code style\r\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624414da14f302d393b599f",
    "number": 860,
    "body": "[remove useless local variable](https://github.com/apache/maven/commit/632f2c0df7c77b7439ef86beaa797b490fba4956)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624414ea14f302d393b59a0",
    "number": 859,
    "body": "---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7473",
    "head_branch": "maven-3.9.x-MNG-7473-maven-bom",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624414fa14f302d393b59a1",
    "number": 858,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-6487\r\n\r\nThis plugin checks dependencies for CVE vulnerabilities using Sonatype's vulnerability database. The build will fail when CVSS scores of >7.0 (HIGH) are found in any of the sub-modules. As discussed in MPOM-210, the OSS plugin is chosen in favour of OWASP Dependency-Check because the latter reports a lot of false positives and produces noise.\r\n\r\nOnly compile-time dependencies are included, because these are risky for Maven users and should be resolved before releasing.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6487",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244150a14f302d393b59a2",
    "number": 857,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7564\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-7564-check-for-null-session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244150a14f302d393b59a3",
    "number": 856,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7584\n\n",
    "head_branch": "MNG-7584-wrapper-properties",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7584] The properties-maven-plugin fails to load project properties (#856)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244151a14f302d393b59a4",
    "number": 855,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7583\r\n\r\nThis would allow a better integration with mvnd.\r\n\r\nAt the moment, `mvnd` has to rewrite the `MavenPluginManager` to work around this synchronisation bottleneck.\r\nSee https://github.com/apache/maven-mvnd/blob/master/daemon/src/main/java/org/mvndaemon/mvnd/plugin/CliMavenPluginManager.java\r\n\r\nHaving the additional `get` methods on the cache would allow `mvnd` to simply provide a different cache, without having to rewrite the `DefaultMavenPluginManager`.\r\n\r\nThis will ease mvnd maintenance and maven upgrades a lot !",
    "head_branch": "MNG-7583-concurrent-MavenPluginManager",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7583] Allow concurrent access to the MavenPluginManager (#855)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244152a14f302d393b59a5",
    "number": 854,
    "body": null,
    "head_branch": "javadoc-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244154a14f302d393b59a6",
    "number": 853,
    "body": null,
    "head_branch": "apiv4-enhancements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7582] Reformat apiv4 javadoc according to usual rules\n\nFixes  #853"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244154a14f302d393b59a7",
    "number": 852,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7580\r\nSupersedes https://github.com/apache/maven/pull/823",
    "head_branch": "MNG-7580-settings-toolchains-builders",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7580] Introduce new SettingsBuilder and ToolchainsBuilder services (#852)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244155a14f302d393b59a8",
    "number": 851,
    "body": "DOC - spelling fix in maven.mdo file\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "DOC - spelling fix in maven.mdo file (#851)\n\nDOC - spelling fix in maven.mdo file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244156a14f302d393b59a9",
    "number": 850,
    "body": " - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\nLike\r\n- https://github.com/apache/maven/pull/809\r\n\r\nbut for 3.9.x.",
    "head_branch": "ai-25-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7568] Consider inactive profiles for validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244157a14f302d393b59aa",
    "number": 849,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\nIT enabled in https://github.com/apache/maven-integration-testing/pull/208\r\n",
    "head_branch": "feature/MNG-6609-maven3.9-profile-activation-by-packaging",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6609] Maven 3.9: profile activation by packaging (#849)\n\nGenerate raw model before profile activation context is generated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244158a14f302d393b59ab",
    "number": 848,
    "body": "Use the new velocity plugin from the modello-maven-plugin added from https://github.com/codehaus-plexus/modello/pull/269.\n\n",
    "head_branch": "modello-velocity-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244159a14f302d393b59ac",
    "number": 847,
    "body": null,
    "head_branch": "readme-for-plexus-utils",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add a README for plexus-utils (#847)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624415aa14f302d393b59ad",
    "number": 846,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624415ba14f302d393b59ae",
    "number": 845,
    "body": "Fix versions comparison https://issues.apache.org/jira/browse/MNG-7559\r\nintention is:\r\n* 1.0.0.RC1 < 1.0.0-RC2\r\n* ( edr, pfd, etc.) < final, ga, release\r\n* 9.4.1.jre16 > 9.4.1.jre16-preview\r\n\r\nfollowing semver rules should be encouraged, natural ordering is used without the need to hard code strings, except for hard coded qualifiers 'a', 'b', 'm', 'cr', 'snapshot', 'final', 'ga', 'release', '' and 'sp':\r\n* alpha = a < beta = b < milestone = m < rc = cr < 'snapshot' < '' = 'final' = 'ga' = 'release' < 'sp'\r\n\r\nthe documentation should discourage the usage of 'CR', 'final', 'ga', 'release' and 'SP' qualifiers.\r\nMaven Central should begin to reject new artifact using CR and SP qualifiers.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "comparison",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix version comparison (#845)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624415ca14f302d393b59af",
    "number": 844,
    "body": "...  so that it won't be shown in the API documentation\r\n\r\nhttps://maven.apache.org/ref/4-LATEST/maven-api/index.html\r\n\r\nMay be superseded by https://github.com/codehaus-plexus/modello/pull/269",
    "head_branch": "move-out-modello",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624415da14f302d393b59b0",
    "number": 843,
    "body": null,
    "head_branch": "model-4.2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7602] Move back model version from 5.0 to 4.2 and reactivate modello site generation (#843)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624415ea14f302d393b59b1",
    "number": 842,
    "body": "Improve descriptions\r\nAdd anchors\r\n[MNG-7575] Remove deprecated requiresReports\r\nRelax validation of \"configuration\" by marking it as \"DOM\"\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "bugfix/plugin-descriptor-v1.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7569] Fix Plugin Model: Add new v4Api element (#842)\n\nImprove descriptions, add anchors\r\n[MNG-7575] Remove deprecated requiresReports\r\nRelax validation of \"configuration\" by marking it as \"DOM\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624415fa14f302d393b59b2",
    "number": 841,
    "body": "Restore `ModelReader` compatibility which had been switched to new api too soon...",
    "head_branch": "MAVEN-7576",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7576] Restore compatibility with maven 3.x (#841)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244160a14f302d393b59b3",
    "number": 840,
    "body": "[MNG-7038: Introduce public property to point to a root directory of (multi-module) project.](https://issues.apache.org/jira/browse/MNG-7038)\r\n\r\nThis pull request simply introduces the new variable `project.topdir` which has been documented and points to the top directory of a (multi module) project.\r\n\r\nPlease double check if you agree with both this variable name and the way I have implemented it.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] [JIRA issue MNG-7038](https://issues.apache.org/jira/browse/MNG-7038).\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7038-TopDirVariable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244161a14f302d393b59b4",
    "number": 839,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-5659\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\nI'm one of the committers for Apache Avro and Apache Flink.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n---\r\nThis is a first attempt to make it possible to automatically read a settings file which is part of a project. The situation where this is useful to me is in multi module projects within a company where a mandatory mirror must be used.\r\n\r\nThe initial version of this pull request is incomplete as it is only the code to make it work, no tests and no documentation at this point.\r\nI will write all of those once you have approved the basic implementation direction and the core choices I have made so far.\r\n\r\nRight now:\r\n- The default assumed location is `${project.basedir}/.mvn/settings.xml`\r\n- If this file is present it is read with \r\n  - a prio higher than the global settings \r\n  - a lower prio than the user settings; I'm unsure if this is correct.\r\n- It is the same file spec as the normal settings.xml, yet in the project level context some of those settings may not make any sense.\r\n\r\nLooking forward to your feedback.",
    "head_branch": "MNG-5659-ProjectSettings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244162a14f302d393b59b5",
    "number": 838,
    "body": "For an unknown reason the versions in the various modules were not updated correctly during the previous new snapshot version. \r\n\r\nThis only fixes the current versions. It does not address the root cause at this point.\r\n\r\n----\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "FixVersions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244163a14f302d393b59b6",
    "number": 837,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7543",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7543] - Upgrade JUnit Jupiter Version 5.9.1 (#837)\n\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244164a14f302d393b59b7",
    "number": 836,
    "body": "Restore compatibility with maven 3.x.\n\nThis is causing some plugins to fail:\n```\n[ERROR] Failed to execute goal\norg.codehaus.mojo:flatten-maven-plugin:1.3.0:flatten (flatten) on project maven-super: Execution flatten of goal org.codehaus.mojo:flatten-maven-plugin:1.3.0:flatten \nfailed: An API incompatibility was encountered while executing org.codehaus.mojo:flatten-maven-plugin:1.3.0:flatten: java.lang.NoSuchMethodError: 'void \norg.apache.maven.model.interpolation.MavenBuildTimestamp.<init>(java.util.Date, java.util.Properties)'\n```\n",
    "head_branch": "restore-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Restore compatibility with 3.x (#836)\n\n* Restore compatibility with 3.x\r\n* Deprecate the old constructor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244165a14f302d393b59b8",
    "number": 835,
    "body": "This can be used for packaging specific profiles with the property activator.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\nIT PR in https://github.com/apache/maven-integration-testing/pull/206",
    "head_branch": "feature/profile-activation-by-packaging",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6609] expose packaging via property \"project.packaging\" (#835)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244166a14f302d393b59b9",
    "number": 833,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/plugin-descriptor-with-extensions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244166a14f302d393b59ba",
    "number": 832,
    "body": "Takes precedence over POMs Maven prerequisite\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/maven-prerequisite-in-plugin-descriptor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7570] Plugin descriptor can carry the required Maven version (#832)\n\nIts value takes precedence over POMs Maven prerequisite"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244167a14f302d393b59bb",
    "number": 831,
    "body": "Update to Maven Resolver 1.9.1 and apply required changed changes in Maven.\r\n\r\nChanges:\r\n- hook in lifecycle\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586",
    "head_branch": "maven-3.9.x-session-close",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[3.9.x][MNG-7586] Update Maven Resolver to 1.9.1 (#831)\n\nUpdate to Maven Resolver 1.9.1 and apply required changed changes in Maven.\r\n\r\nChanges:\r\n- hook in lifecycle\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7586"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244168a14f302d393b59bc",
    "number": 830,
    "body": "https://issues.apache.org/jira/browse/MNG-7571\r\n\r\ngenerated site with this PR:\r\nhttps://maven.apache.org/ref/4-LATEST/maven-api/maven-api-settings/index.html\r\nhttps://maven.apache.org/ref/4-LATEST/maven-api/maven-api-model/index.html\r\nhttps://maven.apache.org/ref/4-LATEST/maven-settings/index.html\r\nhttps://maven.apache.org/ref/4-LATEST/maven-model/index.html",
    "head_branch": "MNG-7571",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7571] add Maven API javadoc (#830)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244169a14f302d393b59bd",
    "number": 829,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "plexus-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix the repackaged plexus-utils groupId (#829)\n\n* Fix plexus gav\r\n* Install maven instead of just building it\r\n\r\nThe plugins need to be available in the local repo, else the build may download old snapshots"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624416aa14f302d393b59be",
    "number": 828,
    "body": "Fix site generation using 4.0.0-alpha-1.\nIt is currently broken because the report plugins are badly merged.\n\n",
    "head_branch": "fix-site-generation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix site generation (#828)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624416ba14f302d393b59bf",
    "number": 827,
    "body": "Introduces a new version of the plugin descriptor with proper namespace and additional optional element `requiredJavaVersion`. The Java prerequisites are enforced at the same time as Maven version prerequisites.\r\n\r\nIT at https://github.com/apache/maven-integration-testing/pull/204",
    "head_branch": "feature/add-java-prerequisites-to-plugin-descriptor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7566] Allow a Maven plugin to require a Java version (#827)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624416ca14f302d393b59c0",
    "number": 826,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "bugfix/MNG-7106-Maven3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7106] Accept same lower and upper bound in version spec string (#826)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624416da14f302d393b59c1",
    "number": 825,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "bugfix/MNG-7106-accept-same-upper-and-lower-bound",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7106] Accept same lower and upper bound in version spec string (#825)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624416ea14f302d393b59c2",
    "number": 824,
    "body": "Automatically format and sort imports according to the maven coding style.\r\nThis requires https://github.com/apache/maven-shared-resources/pull/1",
    "head_branch": "autoformat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624416fa14f302d393b59c3",
    "number": 823,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "bugfix/mng-7561-version-ranges-with-same-lower-and-upper-bound",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7561] never resolve version ranges with same lower and upper bound (#823)\n\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244170a14f302d393b59c4",
    "number": 822,
    "body": "Just an experiment/showcase on top of https://github.com/apache/maven-resolver/pull/201",
    "head_branch": "session-close",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244171a14f302d393b59c5",
    "number": 821,
    "body": "Just an experiment on top of https://github.com/apache/maven-resolver/pull/201",
    "head_branch": "session-close",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244172a14f302d393b59c6",
    "number": 820,
    "body": "Extracted from #819.\r\nThis PR restores compatibility broken by the v4 api switch.",
    "head_branch": "compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Restore compatibility on SettingsBuilder, ToolchainsBuilder and MojoDescriptorCreator (#820)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244173a14f302d393b59c7",
    "number": 819,
    "body": "Adds `ToolchainsBuilder` and `SettingsBuilder` services.",
    "head_branch": "compatibility",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244174a14f302d393b59c8",
    "number": 818,
    "body": "- Fix DefaultArtifactManager to allow using both Artifact and Dependency\n- Add a TODO for an EventSpy related api\n- Add simple string/model conversion on the XmlFactory\n- Decouple services creation\n\nFollowing this checklist to help us incorporate your\ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\n       for the change (usually before you start working on it).  Trivial changes like typos do not\n       require a JIRA issue. Your pull request should address just this issue, without\n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\n       title in the pull request title and in the first line of the commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "v4-api-enhancements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7553] v4 api enhancements\n\n* Fix DefaultArtifactManager to allow using both Artifact and Dependency\r\n* Add a TODO for an EventSpy related api\r\n* Add simple string/model conversion on the XmlFactory\r\n* Decouple services creation\r\n* Move services to @Singleton scope\r\n* Add protected constructors as builders should not be created directly\r\n* Fix typos \"can not\" -> \"cannot\"\r\n* Add some null checks on build(xx) shortcut methods\r\n* Add a some missing conversion to immutable collections for requests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244175a14f302d393b59c9",
    "number": 817,
    "body": "This commit optimizes and simplifies the build/consumer feature.\r\n\r\nFor the _build_ -> _raw_ transformation, a context containing all raw models from the reactor is needed. The relative path version mapping will infer the version of the parent while the dependency key version mapping will infer the version of a dependency, but in both cases, all the _file_ models from the reactor have to be parsed in order to actually know those versions. This actually forces a multi-step loading of the projects, first to read _file_ models, then then to re-read them with the known context to obtain _raw_ models.  This is ineffective and actually makes implementing the _build -> raw_ transformation quite complicated, using filters at the xml level. This commit simply changes the transformation from the xml level to the model level : the transformers now modify the parsed Model directly.\r\n\r\nFor the _raw -> consumer_ transformation, this commit currently keeps the transformation at the xml level, but it could be changed too.  In addition, the maven-resolver transformer api has been deprecated (https://github.com/apache/maven-resolver/commit/1c79c4f8b6573e9693f4ae61c14bff17755aa32d), so we'd better find another way to compute the consumer model.  This can be done using the v4 api inside the [`ArtifactInstaller`](https://github.com/apache/maven/blob/master/api/maven-api-core/src/main/java/org/apache/maven/api/services/ArtifactInstaller.java) and [`ArtifactDeployer`](https://github.com/apache/maven/blob/master/api/maven-api-core/src/main/java/org/apache/maven/api/services/ArtifactDeployer.java) services, but that would be limited to using the v4 version of the `maven-install-plugin` and `maven-deploy-plugin`.  At a small (compared to the deployment cost itself) performance cost, the transformation at the `Model` level could also be used which would further simplify the code.",
    "head_branch": "build-consumer-simplify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244176a14f302d393b59ca",
    "number": 816,
    "body": "Extracted from #803 ",
    "head_branch": "speed-optim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7617] Small optimisations and cleanup in the project/model building (#816)\n\n* Clean a bit DefaultProfileActivationContext\r\n* Cleanup DefaultProjectBuildingResult\r\n* Cache the injected list to avoid repetitive lookups\r\n* Lazily compute the MavenBuildTimestamp\r\n* Use a single loop to select active profiles"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244177a14f302d393b59cb",
    "number": 815,
    "body": null,
    "head_branch": "rat-target-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make sure RAT plugin ignores files in the target folder (#813) (#815)\n\n* Make sure RAT plugin ignores files in the target folder\r\n* Fix gitignore so that it can work with rat, do not inherit execution in children, use a single place to configure rat\r\n* Exclude .asf.yaml from rat check\r\n* Add repo/ to the .gitignore file as it's often used for local repository"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244178a14f302d393b59cc",
    "number": 814,
    "body": null,
    "head_branch": "rat-target-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make sure RAT plugin ignores files in the target folder (#813) (#814)\n\n* Make sure RAT plugin ignores files in the target folder\r\n* Fix gitignore so that it can work with rat, do not inherit execution in children, use a single place to configure rat\r\n* Exclude .asf.yaml from rat check\r\n* Add repo/ to the .gitignore file as it's often used for local repository"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244179a14f302d393b59cd",
    "number": 813,
    "body": "When switching branches, left-over `target` folder *often* causes issues with the `rat-maven-plugin`.\r\nIgnoring those folders does help from a day-to-day pov.\r\n\r\nSee #814 and #815 ",
    "head_branch": "rat-target-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make sure RAT plugin ignores files in the target folder (#813)\n\n* Make sure RAT plugin ignores files in the target folder\r\n* Fix gitignore so that it can work with rat, do not inherit execution in children, use a single place to configure rat\r\n* Exclude .asf.yaml from rat check\r\n* Add repo/ to the .gitignore file as it's often used for local repository"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624417aa14f302d393b59ce",
    "number": 812,
    "body": "See https://github.com/apache/maven/pull/808",
    "head_branch": "MNG-6437",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6437] Better support for path and uri in property interpolation (#812)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624417ba14f302d393b59cf",
    "number": 811,
    "body": "See https://issues.apache.org/jira/browse/MNG-6801",
    "head_branch": "MNG-6801",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6801] MavenXpp3Writer doesn't retain order of properties (#811)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624417ca14f302d393b59d0",
    "number": 810,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7556",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7556] Clean up notion between user properties and system properties\n\nThis closes #810"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624417da14f302d393b59d1",
    "number": 809,
    "body": "I propose this cosmetic (key change is in new line 485, two other changes - CS:LineLength).\r\nThis allows to deactivate profiles from settings and from pom with the same id, and avoid confusing warning:\r\n```\r\n$ mvn -P \\!XYZ verify\r\n...\r\n[WARNING] The requested profile \"XYZ\" could not be activated because it does not exist.\r\n...\r\n```\r\n\r\nSimilar issues\r\n- MNG-7211 (done in unspecified version, while MNG-7051 fixed in v4)\r\n\r\n--- \r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "ai-25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7568] Consider inactive profiles for validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624417ea14f302d393b59d2",
    "number": 808,
    "body": "Remove properties from the v4 model and use Map<String, String> instead",
    "head_branch": "remove-properties",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replace Properties with Map<String, String> in the v4 api (#808)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624417fa14f302d393b59d3",
    "number": 807,
    "body": "Backport of https://github.com/apache/maven/pull/806 to 3.9.x\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7547",
    "head_branch": "maven-3.9.x-plugin-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Maven-3.9.x Simplify maven-plugin metadata handling (#807)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244180a14f302d393b59d4",
    "number": 806,
    "body": "Just inspect deployed artifacts, try to find a plugin among them and reuse PluginDescriptor embedded in it.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7547\r\n\r\n\r\n",
    "head_branch": "plugin-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7547] Simpler G level metadata generation (#806)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244181a14f302d393b59d5",
    "number": 805,
    "body": "Currently, if a project is returned from the workspace reader but is not part of the reactor, a NPE occurs. In this case, the repositories are instead read from the model instead.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7544) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7544-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244182a14f302d393b59d6",
    "number": 804,
    "body": "This code change was accidentally already merged into master, and then reverted. This is the [original PR](https://github.com/apache/maven/pull/783).\r\n\r\n---\r\n\r\nThis PR ensures that when a multi module project is resumed halfway, the project progress counter is not reset. \r\n[Related issue](https://issues.apache.org/jira/browse/MNG-7098).\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7098-project-counter-cumulative",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7098] Keep the project counter intact when resuming a multi-module project. (#804)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244183a14f302d393b59d7",
    "number": 803,
    "body": null,
    "head_branch": "model-builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244184a14f302d393b59d8",
    "number": 802,
    "body": "(cherry picked from commit 47e2d689d687358a85c2cdecc176cac36093817e)\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7463-3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7463] Improve documentation about deprecation in Mojo\n\n(cherry picked from commit 47e2d689d687358a85c2cdecc176cac36093817e)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244185a14f302d393b59d9",
    "number": 801,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7463",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7463] Improve documentation about deprecation in Mojo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244186a14f302d393b59da",
    "number": 800,
    "body": "cherry picked from commit 5502c0c8dba03c7241bd9dd1bb5ba023ab6f2670 from master",
    "head_branch": "MNG-7502",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7502] Upgrade to Guice 5.1.0\n\n(cherry picked from commit 5502c0c8dba03c7241bd9dd1bb5ba023ab6f2670)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244187a14f302d393b59db",
    "number": 799,
    "body": null,
    "head_branch": "its-branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7537] Point to the old IT branch when building 3.8.x (#799)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244187a14f302d393b59dc",
    "number": 798,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7531v2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7502] Upgrade to Guice 5.1.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244188a14f302d393b59dd",
    "number": 797,
    "body": "Structure the version checks slightly different to make the separation\r\nbetween repository versions and the version range resolution clearer.\r\n\r\nBackport from master branch\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG7529-alternate-fix-38x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7529] Maven resolver makes bad repository choices (#797)\n\nStructure the version checks slightly different to make the separation\r\nbetween repository versions and the version range resolution clearer.\r\n\r\nBackport from master branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244189a14f302d393b59de",
    "number": 796,
    "body": "Structure the version checks slightly different to make the separation\r\nbetween repository versions and the version range resolution clearer.\r\n\r\nBackport from master branch\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG7529-alternate-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7529] Maven resolver makes bad repository choices (#796)\n\nStructure the version checks slightly different to make the separation\r\nbetween repository versions and the version range resolution clearer.\r\n\r\nBackport from master branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624418aa14f302d393b59df",
    "number": 795,
    "body": "@cstamas  This is the discussed alternate fix for MNG-7529. I structured it differently. The actual meat is in the e70b8c86a99d65c4f1290402f014069178499444 fix; I put that on top of a reversal of the previous fix; I do intend to squash and merge though (not have a reversal and a full new fix).\r\n\r\nPlease let me know if that is more along the shape that you were thinking of. \r\n\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-7529-alternate-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MNG-7529 alternate fix (#795)\n\n[MNG-7529] Maven resolver makes bad repository choices\r\n\r\nStructure the version checks slightly different to make the separation\r\nbetween repository versions and the version range resolution clearer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624418ba14f302d393b59e0",
    "number": 794,
    "body": "(cherry picked from commit 750e1e3e71194644acda437cefbd73c8bd408f5d)\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7530-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7530] Upgrade Apache Maven parent POM to version 37\n\n(cherry picked from commit 750e1e3e71194644acda437cefbd73c8bd408f5d)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624418ca14f302d393b59e1",
    "number": 793,
    "body": "Follow up of dev discussions and to avoid to reduplicate the API in the new plugin API, restoring `Log` official status.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7532",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624418da14f302d393b59e2",
    "number": 792,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7530",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7530] Upgrade Apache Maven parent POM to version 37"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624418ea14f302d393b59e3",
    "number": 791,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7531",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624418fa14f302d393b59e4",
    "number": 790,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7502",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244190a14f302d393b59e5",
    "number": 789,
    "body": "Testing integration tests",
    "head_branch": "integration-test-branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244191a14f302d393b59e6",
    "number": 788,
    "body": "Explicitly run clean before (re-)building the maven distribution\r\nand integration tests. Currently the tests seem to be a bit unstable\r\nfor 3.9.x and master; I can reproduce this locally and the errors\r\ngo away when explicitly cleaning the workspace before building.\r\n\r\nThis is a non-code, build only change.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "gh-actions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244192a14f302d393b59e7",
    "number": 787,
    "body": "Ensure that any versions resolved as part of a version range request\r\nonly reference repositories that are actually enabled for the type of\r\nversion (SNAPSHOT versions against snapshot repos, release versions\r\nagainst release repositories).\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-7529-maven-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7529] Maven resolver makes bad repository choices (#787)\n\nEnsure that any versions resolved as part of a version range request\r\nonly reference repositories that are actually enabled for the type of\r\nversion (SNAPSHOT versions against snapshot repos, release versions\r\nagainst release repositories)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244193a14f302d393b59e8",
    "number": 786,
    "body": "Ensure that any versions resolved as part of a version range request\r\nonly reference repositories that are actually enabled for the type of\r\nversion (SNAPSHOT versions against snapshot repos, release versions\r\nagainst release repositories).\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-7529-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7529] Maven resolver makes bad repository choices (#786)\n\nEnsure that any versions resolved as part of a version range request\r\nonly reference repositories that are actually enabled for the type of\r\nversion (SNAPSHOT versions against snapshot repos, release versions\r\nagainst release repositories)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244194a14f302d393b59e9",
    "number": 785,
    "body": "Ensure that any versions resolved as part of a version range request\r\nonly reference repositories that are actually enabled for the type of\r\nversion (SNAPSHOT versions against snapshot repos, release versions\r\nagainst release repositories).\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-7529-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7193] Introduce MAVEN_ARGS environment variable\n\nAdd args directly after the class name and leave users the option to override\nwith maven.config or CLI args.\n\nThis closes #782"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244195a14f302d393b59ea",
    "number": 784,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-7529",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7529] Maven resolver makes bad repository choices (#784)\n\nEnsure that any versions resolved as part of a version range request\r\nonly reference repositories that are actually enabled for the type of\r\nversion (SNAPSHOT versions against snapshot repos, release versions\r\nagainst release repositories)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244196a14f302d393b59eb",
    "number": 783,
    "body": "This PR ensures that when a multi module project is resumed halfway, the project progress counter is not reset. \r\n[Related issue](https://issues.apache.org/jira/browse/MNG-7098).\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7098-project-counter-cumulative",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7098] Keep the project counter intact when resuming a multi-module project."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244197a14f302d393b59ec",
    "number": 782,
    "body": "https://maven.apache.org/configure.html shows the MAVEN_ARGS\r\nenvironment variable which is extremely useful for customizing build\r\nscripts and processes. Unfortunately, it is only support for (unreleased)\r\nMaven 4.\r\n\r\nThis patch backports support to Maven 3.9.x in the hope that this\r\nsupport would arrive much sooner than with Maven 4.x.x\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MAVEN_ARGS_39",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244197a14f302d393b59ed",
    "number": 781,
    "body": "https://maven.apache.org/configure.html shows the MAVEN_ARGS\r\nenvironment variable which is extremely useful for customizing build\r\nscripts and processes. Unfortunately, it is only support for (unreleased)\r\nMaven 4.\r\n\r\nThis patch backports support to Maven 3.8.x in the hope that this\r\nsupport would arrive much sooner than with Maven 4.x.x\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n... against the right branch this time ...\r\n",
    "head_branch": "MAVEN_ARGS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Backport MAVEN_ARGS support to 3.8.x (#781)\n\nhttps://maven.apache.org/configure.html shows the MAVEN_ARGS\r\nenvironment variable which is extremely useful for customizing build\r\nscripts and processes. Unfortunately, it is only support for (unreleased)\r\nMaven 4.\r\n\r\nThis patch backports support to Maven 3.8.x in the hope that this\r\nsupport would arrive much sooner than with Maven 4.x.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244199a14f302d393b59ee",
    "number": 780,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MAVEN_ARGS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624419aa14f302d393b59ef",
    "number": 779,
    "body": "This closes #779\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7522",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7522] Upgrade Maven Resolver to 1.8.2\n\nThis closes #779"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624419aa14f302d393b59f0",
    "number": 778,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7521",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7521] - Remove WARNING during build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624419ba14f302d393b59f1",
    "number": 777,
    "body": "Bumps commons-io from 2.6 to 2.7.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=commons-io:commons-io&package-manager=maven&previous-version=2.6&new-version=2.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/maven/network/alerts).\n\n</details>",
    "head_branch": "dependabot/maven/maven-embedder/commons-io-commons-io-2.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624419ca14f302d393b59f2",
    "number": 776,
    "body": "…esolver\r\n\r\nThis closes #776\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7520",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7520] Simplify integration of Redisson and Hazelcast for Maven Resolver\n\nCo-authored-by: Jacques-Etienne Beaudet <jebeaudet@gmail.com>\n\nThis closes #776"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624419da14f302d393b59f3",
    "number": 775,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7020-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624419ea14f302d393b59f4",
    "number": 774,
    "body": "Fix minor typos in code :\r\n\r\n- test method names,\r\n- method parameter names,\r\n- variable names.\r\n\r\nPublic API is not modified by this PR, so it should be safe to merge.\r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue. Your pull request should address just this issue, without pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure please ask on the developers list. To make clear that you license your contribution under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "fix-typos-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typos in code\n\nFix minor typos in code :\n\n- test method names,\n- method parameter names,\n- variable names."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624419fa14f302d393b59f5",
    "number": 773,
    "body": "Backports #767 into the `3.9.x`.\r\n\r\nJIRA: https://issues.apache.org/jira/browse/MNG-7511\r\n\r\nThis PR ensures the `degreeOfConcurrency` is a positive number. It resolves issues when the computed value is `< 1`.",
    "head_branch": "backport/3.9/MNG-7511-degreeOfConcurrency-positive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7511] Ensure the degreeOfConcurrency is a positive number in MavenExecutionRequest\n\nThis closes #767"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a0a14f302d393b59f6",
    "number": 772,
    "body": "Fix various minor typos in :\r\n\r\n- project documentations,\r\n- javadoc and comments,\r\n- test files.\r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list. To make clear that you license your contribution under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0) you have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "fix-typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix minor typos\n\nFix various minor typos in :\n\n- project documentations,\n- javadoc and comments,\n- test files."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a1a14f302d393b59f7",
    "number": 771,
    "body": "… latest version\r\n\r\nWe can safely remove Commons IO altogether because in no direct or transtive\r\nusecase it is used at compile time or runtime.\r\n\r\nThis closes #771\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7513",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7513] Address commons-io_commons-io vulnerability found in maven latest version\n\nWe can safely remove Commons IO altogether because it is not used in any direct or\ntransitive usecase at compile time or runtime.\n\nThis closes #771"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a2a14f302d393b59f8",
    "number": 770,
    "body": "This closes #770\r\n\r\n\r\n@abstratt Please check",
    "head_branch": "MNG-7515",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7515] Cannot see a dependency tree for apache-maven module\n\nThis closes #770"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a3a14f302d393b59f9",
    "number": 769,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "clean-up-dependency-warnings",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a4a14f302d393b59fa",
    "number": 768,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.9.x-optimizeDepMem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a5a14f302d393b59fb",
    "number": 767,
    "body": "JIRA: https://issues.apache.org/jira/browse/MNG-7511\r\n\r\nThis PR ensures the `degreeOfConcurrency` is always a positive number (defaulting to `1`). It resolves issues when the computed value is `< 1`.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7511-degreeOfConcurrency-positive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7511] Ensure the degreeOfConcurrency is a positive number in MavenExecutionRequest\n\nThis closes #767"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a6a14f302d393b59fc",
    "number": 766,
    "body": "To lessen mistake (copy-paste vs forgotten update) but also just to\r\nmake things less redundant. This also makes possible \"experimenting\"\r\nmuch more easier.\r\n\r\nThis is merely a refactoring that does not takes or gives anything, just tidies up.",
    "head_branch": "pull-out-lifecycle-plugin-versions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Pull out lifecycle plugin versions (#766)\n\nTo lessen mistake (copy-paste vs forgotten update) but also just to\r\nmake things less redundant. This also makes possible \"experimenting\"\r\nmuch more easier.\r\n\r\nThis is merely a refactoring that does not takes or gives anything, just tidies up."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a7a14f302d393b59fd",
    "number": 765,
    "body": "Warn if ancient plugin used.",
    "head_branch": "warn-on-ancient-plugin",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a8a14f302d393b59fe",
    "number": 764,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441a9a14f302d393b59ff",
    "number": 763,
    "body": "- [ ] [JIRA issue](https://issues.apache.org/jira/browse/INFRA-23217) \r\n\r\nAdding support for IBM Z (s390x) into Apache Maven Jenkins CI. \r\ns390x nodes are already available: https://jenkins-ccos.apache.org/view/all/\r\n   \r\n \r\n\r\n\r\n\r\n",
    "head_branch": "s390x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441aaa14f302d393b5a00",
    "number": 762,
    "body": "Requires https://github.com/apache/maven-resolver/pull/188\r\n\r\nThe idea is similar as with resolver transport: add simple(er) switches to maven to control resolver locking aspect. Just as with transport (setting priority), setting proper locking may be cumbersome, as it requires lock factory but also name mapper settings, and there are even pairings that are must (like for file). Instead of relying directly on https://maven.apache.org/resolver/configuration.html here, again as in case of transport, offer a \"higher\" level settings from Maven itself:\r\n* file\r\n* local\r\n* hazelcast\r\n* redisson\r\n* auto (as before this change, let resolver \"auto decide\") -- similar like for transport\r\n\r\nThat provides OOTB \"experience\" to end users (naturally  in case of latter two needed configuration and remote services are assumed but not checked for!).\r\n\r\nHence, `mvn -Dmaven.resolver.locking=file ...` would make Maven use file locking. \r\n",
    "head_branch": "resolver-locking-mode",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441aba14f302d393b5a01",
    "number": 761,
    "body": "Requires https://github.com/apache/maven-resolver/pull/188\r\n\r\nThe idea is similar as with resolver transport: add simple(er) switches to maven to control resolver locking aspect. Just as with transport (setting priority), setting proper locking may be cumbersome, as it requires lock factory but also name mapper settings, and there are even pairings that are must (like for file). Instead of relying directly on https://maven.apache.org/resolver/configuration.html here, again as in case of transport, offer a \"higher\" level settings from Maven itself:\r\n* file\r\n* local\r\n* hazelcast\r\n* redisson\r\n\r\nThat provides OOTB \"experience\" to end users (naturally  in case of latter two needed configuration and remote services are assumed but not checked for!).\r\n\r\nHence, `mvn -Dmaven.resolver.locking=file ...` would make Maven use file locking. \r\n",
    "head_branch": "resolver-locking-mode",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441aca14f302d393b5a02",
    "number": 760,
    "body": " Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much.\n\n- Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions\n\nhttps://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions\n\nhttps://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs\n\n[Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/)\n\nSigned-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>\n",
    "head_branch": "Pinned-Dependencies-GitHub",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441ada14f302d393b5a03",
    "number": 759,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7504",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7504] Don't print warning unsupported reportPlugins for m-site-p"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441aea14f302d393b5a04",
    "number": 758,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7504",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441afa14f302d393b5a05",
    "number": 757,
    "body": "https://issues.apache.org/jira/browse/MNG-7353",
    "head_branch": "MNG-7353",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7353] Add support for \"mvn pluginPrefix:version:goal\"\n\nThis closes #757"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b0a14f302d393b5a06",
    "number": 756,
    "body": "https://issues.apache.org/jira/browse/MNG-7501\r\n\r\nimplementing option 1\r\n```\r\n[INFO] --< org.apache.maven.its.plugins:maven-it-plugin-dependency-resolution >--\r\n[INFO] Building Maven IT Plugin :: Dependency Resolution 2.1-SNAPSHOT   [31/78]\r\n[INFO]     from core-it-support/core-it-plugins/maven-it-plugin-dependency-resolution/pom.xml\r\n[INFO] ----------------------------[ maven-plugin ]----------------------------\r\n```",
    "head_branch": "MNG-7501",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7501] add relative path to pom.xml in module build start output"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b1a14f302d393b5a07",
    "number": 755,
    "body": "…jar:1.1 on their classpath\r\n\r\nThis closes #367\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6965-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6965] Extensions suddenly have org.codehaus.plexus:plexus-utils:jar:1.1 on their classpath\n\nThis closes #367"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441b2a14f302d393b5a08",
    "number": 754,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7499",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b3a14f302d393b5a09",
    "number": 753,
    "body": "Bumps jetty from 6.1.4 to 6.1.23.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.mortbay.jetty:jetty&package-manager=maven&previous-version=6.1.4&new-version=6.1.23)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/maven/network/alerts).\n\n</details>",
    "head_branch": "dependabot/maven/maven-core/src/test/resources-project-builder/foo/sub/org.mortbay.jetty-jetty-6.1.23",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b4a14f302d393b5a0a",
    "number": 752,
    "body": "And make it possible to control are they added to CP or not.\r\n\r\nW.o param default is `true` as master (behaves same as master). To make ZIPs not end up on classpath, use:\r\n\r\n`-Dmaven.artifactHandler.zip.addedToClasspath=false`",
    "head_branch": "zip-added-to-classpath",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b4a14f302d393b5a0b",
    "number": 751,
    "body": "Bumps jetty from 6.1.4 to 6.1.17.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.mortbay.jetty:jetty&package-manager=maven&previous-version=6.1.4&new-version=6.1.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/maven/network/alerts).\n\n</details>",
    "head_branch": "dependabot/maven/maven-core/src/test/resources-project-builder/foo/sub/org.mortbay.jetty-jetty-6.1.17",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b5a14f302d393b5a0c",
    "number": 750,
    "body": "Fixes a long-standing issue when using Maven with git submodules:\r\n  * You have a library project in a git repository\r\n    * That library is part of a larger set of projects, but should be buildable with just a checkout of the library (so contributors interested in that particular corner of the project don't need to check out a huge amount of stuff to contribute to that one area)\r\n    * That library and its siblings share configuration via a shared superpom\r\n    * That means the library _must not_ make assumptions about what is in the parent directory - it must use `<relativePath/>` for its parent, so the parent will be resolved from the local repository or central\r\n  * You have an aggregation project that builds the superpom and _all_ of the siblings together, for a number of reasons\r\n    * So full time developers of the project can easily detect if they've broken compatibility with a sibling when they make changes\r\n    * So continuous builds can obtain a consistent view of the entire set or projects and build them together\r\n\r\nSo you wind up with an aggregation project that looks like:\r\n\r\n  * `Aggregator/`\r\n    * `pom.xml` - just a bill of materials, no parent\r\n    * `superpom-project` - a git submodule\r\n      * `pom.xml` - shared configuration, no parent\r\n    * `project-1` - another git submodule, for a Java project\r\n      * `pom.xml` - parents off of `superpom-project` with `<relativePath/>` so an isolated checkout is always buildable\r\n    * `project-2` - another git submodule for another Java project\r\n      * `pom.xml` - same setup as `project-1/pom.xml`\r\n\r\nOn a fresh checkout, with nothing locally built yet, building the aggregator will fail with _Non-resolvable parent POM_…and 'parent.relativePath' points at no local POM_ - if the superpom cannot yet be downloaded.  *This is exactly the situation every time you bump the version of the superpom*.\r\n\r\nAfter `superpom-project/pom.xml` has been manually built at least once, building the `Aggregator/pom.xml` will succeed.\r\n\r\nThis creates a number of problems:\r\n\r\n  1. Such projects always have to come with instructions or a \"first time setup\" script that explicitly builds the superpom to make the checkout usable for development\r\n    * The entire promise of Maven is that builds are \"batteries included\" - you check it out, type `mvn install` and it Just Works™\r\n  2. A \"works for me\" scenario, where the sources are the same, but those who have (sometimes accidentally) built the superpom have a build that works, and others do not, though the sources both have checked out are identical.  This is yet another potent source of Maven hatred.\r\n  3. If it does work, you are actually building against a historical copy of `superpom/pom.xml` instead of the (possibly changed) copy in source, and won't know it unless something goes wrong\r\n  4. What you deploy may not be what you think it is.  Say that I\r\n    * Build `superpom/pom.xml` locally\r\n    * Change the version of a library used by `project-1/pom.xml` from 1.0 to 1.1 _in the superpom source only_, build the aggregator and deploy to maven central\r\n    * The tests for `project-1` will have passed, but they are ran against version 1.0 of that dependency, read from `~/.m2/repository`\r\n  5. Distrust of Maven in general - Maven _knows perfectly well_ that it is going to build `superpom/pom.xml` (the fact that this patch succeeds in fixing the behavior proves _that_), but it claims not to be able to find a file it has literally already read and built a model for\r\n\r\nThis small patch solves that.  The name of the interface `WorkspaceModelResolver` and its signature strongly suggest that it was created to solve this exact problem - but there are no implementations of the interface _at all_ within Maven's sources.  I have no idea _why_ it was never implemented, but simply attempting to resolve the `Model` against the set of models already read is a sane and straightforward way to do it.  This patch provides one that can resolve models against projects which have already been, themselves, resolved.\r\n\r\n  * The patch is sensitive to the order of `<module>` entries in the aggregator POM - if the superpom is not listed _before anything that depends on it_ the build will fail in the usual way\r\n    * While that's less than ideal, it has far less severe consequences than the existing behavior\r\n    * It could be made more robust by pre-sorting `<module>` entries so that those modules which have packaging `pom` and no `<module>` entries of their own are built first.  That would probably require reading the `pom.xml` files of aggregator projects a little earlier than they currently are, in order to have enough information to perform that sort.\r\n  * The version argument to `WorkspaceModelResolver`'s methods is named `versionConstraint`, suggesting it could be a version range; the patch looks only for an exact string match.  I expect this is harmless, because:\r\n    * It is not legal to specify a _version range_ for your parent POM\r\n    * If, say, `project-2` depends on a version range of `project-1` and both are built in the same reactor, the test will fail and `WorkspaceModelResolverImpl` will not resolve it, but the fallback is to the existing behavior which _will_ resolve it just as it would have without this patch, so the behavior does not change\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-parent-resolution",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b6a14f302d393b5a0d",
    "number": 749,
    "body": "(cherry picked from commit 54f9d91ebb05ff8a051272c4e91dca4ee4984d80)\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7468-3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7468] Check unsupported plugins parameters in configuration - 3.9\n\n(cherry picked from commit 54f9d91ebb05ff8a051272c4e91dca4ee4984d80)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441b7a14f302d393b5a0e",
    "number": 748,
    "body": "Update parent POM to v 36.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7491",
    "head_branch": "parent-36-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7491] Update parent POM 36 (3.9.x) (#748)\n\nUpdate parent POM to v 36, remove redundant bits."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b8a14f302d393b5a0f",
    "number": 747,
    "body": "Update parent POM to v 36.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7491",
    "head_branch": "parent-36",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7491] Update parent POM 36 (#747)\n\nUpdate parent POM to v 36, remove redundant bits."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441b9a14f302d393b5a10",
    "number": 746,
    "body": "This closes #746\r\n\r\nBranches for 3.9.x and 3.8.x ready.\r\n\r\n@gnodet I have refactored this great feature to better focus on the aggregator deadlock in the other PR.",
    "head_branch": "MNG-7486",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7486] Create a multiline message helper for boxed log messages\n\nThis closes #746"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441baa14f302d393b5a11",
    "number": 745,
    "body": "GitHub asks developers to define workflow permissions, see https://github.blog/changelog/2021-04-20-github-actions-control-permissions-for-github_token/ and https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token for securing GitHub workflows against supply-chain attacks.\r\n\r\nThe Open Source Security Foundation (OpenSSF) [Scorecards](https://github.com/ossf/scorecard) also treats not setting token permissions as a high-risk issue. \r\n\r\nThis PR adds minimum token permissions for the GITHUB_TOKEN using https://github.com/step-security/secure-workflows. \r\n\r\nThis project is part of the top 100 critical projects as per OpenSSF (https://github.com/ossf/wg-securing-critical-projects), so fixing the token permissions to improve security. \r\n\r\nI am not sure if I need to create the JIRA issue for this. If I do, please let me know. \r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "token-perms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441bba14f302d393b5a12",
    "number": 744,
    "body": "As hinted by @rfscholte , the `FastForwardFilter` is supposed to handle those problems by disabling the filters when parsing  xml config nodes.  I've added a unit test and investigated in that direction, which leads to this new PR.  It looks much simpler than #697, so I think it's better to keep that one.\r\n",
    "head_branch": "MNG-7360-bis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7360] Fix xml transformation to ensure proper context (#744)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441bca14f302d393b5a13",
    "number": 743,
    "body": "https://issues.apache.org/jira/browse/MNG-7401\r\nhttps://issues.apache.org/jira/browse/MNG-7474\r\n\r\n@laeubi this supersedes https://github.com/apache/maven/pull/666 ",
    "head_branch": "MNG-7474",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[3.9.x] [MNG-7401] [MNG-7474] Keep a single maven session and fix session scope (#743)\n\n* [MNG-7474] SessionScoped beans should be singletons for a given session\r\n\r\nNow that the Session is not cloned anymore, we can revert to the original\r\n(Maven < 3.3) behavior of the session scoped components.\r\n\r\nCo-authored-by: Christoph Läubrich <christoph@laeubi-soft.de>\r\n\r\nThis closes #743\r\n\r\n* Remove setting a value which is the default already\r\n\r\nCo-authored-by: Christoph Läubrich <christoph@laeubi-soft.de>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441bda14f302d393b5a14",
    "number": 742,
    "body": "…nnot be readded\r\n\r\nThis closes #742\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7448",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7448] Don't ignore bin/ otherwise bin/ in apache-maven module cannot be readded\n\nThis closes #742"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441bea14f302d393b5a15",
    "number": 741,
    "body": "\r\nAfter `MojoExecution` was created and configured all configuration will only contains parameters listed in plugin.xml\r\n  \r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7468",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7468] Check unsupported plugins parameters in configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441bfa14f302d393b5a16",
    "number": 740,
    "body": "I'm currently try to fetch a specific EventSpy to inject an event there (maven-profiler).\r\n\r\nSadly in my maven plugin when I try to get it injected:\r\n\r\n @Requirement(role = EventSpy.class, hint = \"profiler\", optional = true)\r\n EventSpy eventSpy;\r\n\r\nThis results in ClassNotFoundException: org.apache.maven.eventspy.EventSpy\r\n\r\nI noticed that the maven-core do not export the 'org.apache.maven.eventspy' package and that is the cause of this, I'd like to suggest to export the package as there seem no other standard way to interact/access event spys otherwise.\r\n\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7479-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c0a14f302d393b5a17",
    "number": 739,
    "body": "Instead of user properties, as this allows making \"permanent\" the\r\nselection by using MAVEN_OPTS and other places as well. Currently\r\nonly via command line works.\r\n\r\nAlso, do not modify existing Maven behavior, so introduce \"default\" branch\r\nin selection. See comment in code.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7478\r\n",
    "head_branch": "mng-7475-transport-selection",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7478] Transport selection should use config properties (#739)\n\nInstead of user properties, as this allows making \"permanent\" the\r\nselection by using MAVEN_OPTS and other places as well. Currently\r\nonly via command line works.\r\n\r\nAlso, do not modify existing Maven behavior, so introduce \"default\" branch\r\nin selection. See comment in code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c1a14f302d393b5a18",
    "number": 738,
    "body": "When manually constructed in legacy code.\r\n\r\nThis COMPONENT should be injected instead, or if no container,\r\nthen created by subclassing DefaultModelBuilderFactory helper\r\nclass meant for exactly these cases.\r\n",
    "head_branch": "mng-7475-fileprofileactivator",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c2a14f302d393b5a19",
    "number": 737,
    "body": "PR for testing.\r\nA few things:\r\n  * I had to redefine the `getTerminalWidth()` method to take into account the fact that the output can be redirected, in which case the previous `getTerminalWidth()` returns the width of the console using the err stream.\r\n  *  the exact behavior when the output is redirected needs to be chosen: the behavior could depend if the output is actually padded or not, or the output could be padded only in the case the output is actually displayed on the console.  The behavior with this PR is to consider a default width of 80, thereby using the previous behavior\r\n  *  the terminal width can be overridden by using the `maven.console.lineLength` system property",
    "head_branch": "MNG-7477",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c3a14f302d393b5a1a",
    "number": 736,
    "body": "This needs to be applied to 3.8.x, 3.9.x and master branches",
    "head_branch": "MNG-7476",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7476] Display a warning when an aggregator mojo is locking other mojos executions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c4a14f302d393b5a1b",
    "number": 735,
    "body": "This setting should be possible to be set via MAVEN_OPTS (system wide) or in .mvn/maven.config etc, Currently it is possible only via `-Dxxx` AFTER mvn....",
    "head_branch": "fix-transport-settings",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c4a14f302d393b5a1c",
    "number": 734,
    "body": "NOT TO BE MERGED - ONLY TO VERIFY https://github.com/apache/maven-integration-testing/pull/157",
    "head_branch": "remove-unused-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c5a14f302d393b5a1d",
    "number": 733,
    "body": "\r\n(cherry picked from commit 3dd0afd89772929fa89db974d5bc432846f170de)\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7464-3.9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7464] Warn about using read-only parameters for Mojo in configuration\n\n(cherry picked from commit 3dd0afd89772929fa89db974d5bc432846f170de)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441c6a14f302d393b5a1e",
    "number": 732,
    "body": "Problem: resolver spi, impl and connector-basic has changes in 1.8.0 (SPI interface RepositoryLayout got new method, that is implemented in connector-basic, and code from impl is using it). But, Maven core exports only resolver api, spi and impl packages, while the rest is at mercy of a plugin. This means ,that these artifacts (api, spi and impl) will always come from Maven core, whatever version plugin declares, while the \"rest\" (connector-basic and util) will be of version that plugin declares. The current state hence prevented ANY KIND of changes on SPI interfaces that would be implemented in connector-basic (which is the case in Resolver 1.8.0).\r\n\r\nSolution: make all these resolver artifacts \"provided\" (to behave like maven-core or maven-plugin-api is behaving): simply put, whatever resolver artifact plugin depends on, it should NOT use it's own version, but the version from Maven. This ensures that api-spi-impl-connector-basic as \"aligned\" and are same version.\r\n\r\nDetails:\r\n\r\nThe change is to make util is exportedArtifact AND exportedPackage, while connector-basic is only exportedArtifact.\r\n\r\nReasoning:\r\n* exportedArtifact -- prevents \"own\" artifact to be added to realm\r\n* exportedPackage -- makes it \"visible\" in realm\r\n\r\nSo, this basically prevents bad versions of util and connector-basic\r\nenter the plugin realm (as they will be not added to it), while\r\nutil remains \"visible\" to plugins, as the intent was, most\r\ncommon due GenericVersions etc.\r\n\r\nThis change also results in simpler expectations to plugin developers:\r\nresolver libraries should really behave like maven-core or maven-compat:\r\nwhen plugin declares dependency on these (w/ scope provided as best\r\npractice), they really get version of these that are of version that\r\nmaven runs in, not version they declare. So same thing happens now with\r\nresolver: you will get same version of resolver that maven uses your plugin\r\nruns in. \r\n\r\nBefore this change, it was a mixed bag: api, spi and impl was from maven,\r\nwhile util and connector-basic was version you pulled in as dep.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7471",
    "head_branch": "mng-7471-make-resolver-provided",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c7a14f302d393b5a1f",
    "number": 731,
    "body": "\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7464",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7464] Warn about using read-only parameters for Mojo in configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c8a14f302d393b5a20",
    "number": 730,
    "body": null,
    "head_branch": "add-warning-for-aggregator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441c9a14f302d393b5a21",
    "number": 729,
    "body": "As aggregator Mojos, as they have access to whole reactor,\r\nare requiring unique access, hence, they block the parallel\r\nbuild, while themselves are executing.\r\n",
    "head_branch": "MNG-7433-warn-parallel-aggregator",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441caa14f302d393b5a22",
    "number": 728,
    "body": "As title says, XSD is ancient old 2.0.0, while all\r\nlatest assembly plugins uses 2.1.0.\r\n\r\nNot that this matters or changes anything at all,\r\nthis is more about correctness.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7466",
    "head_branch": "align-assembly-xsd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7466] Align assembly XSD version with plugin used (#728)\n\nAs title says, XSD is ancient old 2.0.0, while all\r\nlatest assembly plugins uses 2.1.0.\r\n\r\nNot that this matters or changes anything at all,\r\nthis is more about correctness."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441cba14f302d393b5a23",
    "number": 727,
    "body": "(cherry picked from commit 702f52d0ea7c5e90b495bc05f079ca3e952766a8)\r\n\r\n---\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7457",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7457] Warn about deprecated plugin Mojo\n\n(cherry picked from commit 702f52d0ea7c5e90b495bc05f079ca3e952766a8)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441cca14f302d393b5a24",
    "number": 726,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7457",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7457] Warn about deprecated plugin Mojo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441cda14f302d393b5a25",
    "number": 725,
    "body": "This is backport of commit 9ac2d08dc7dec66acc2c835710065b677190e700 from master to maven-3.9.x branch.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5222-3.9.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-5222] Improvement in deprecated params detection\n\nThis is backport of commit 9ac2d08dc7dec66acc2c835710065b677190e700 from master to maven-3.9.x branch."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441cea14f302d393b5a26",
    "number": 724,
    "body": "Updates Maven Resolver to 1.8.0.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7453",
    "head_branch": "MNG-7453-maven-3.9.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7453] Update Resolver to 1.8.0 (#724)\n\nUpdates Maven Resolver to 1.8.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441cfa14f302d393b5a27",
    "number": 723,
    "body": "Updates Maven Resolver to latest 1.8.0.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7453",
    "head_branch": "MNG-7453-master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7453] Update Resolver to 1.8.0 (#723)\n\nUpdates Maven Resolver to latest 1.8.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d0a14f302d393b5a28",
    "number": 722,
    "body": "In previous solution we used `ConfigurationListener` where we had information about setting value on specific Mojo filed.\r\n\r\nValue in listener (which can be any class instance) will be compared to custom prepared String from Mojo parameters default.\r\n\r\nPlugin configurator (can be user implementation) has own logic how to create parameter value from strings provide in default arguments in plugin configuration.\r\n\r\nSo to achieve goal of issue - we want to check when user use deprecated Mojo parameter in configuration - we can check `XmlPlexusConfiguration` before plugin fields will be populated.\r\n\r\nI introduce interface `MavenPluginConfigurationValidator` \r\nwhich has as input `XmlPlexusConfiguration` and `MojoDescriptor` for validating xml configuration used in plugin.\r\n\r\nIn this PR it is first implementation - `DeprecatedPluginValidator` \r\nwhich check deprecated parameter.\r\n\r\nWe can easy add next implementation eg. for checking if read-only parameters is used in configuration. \r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5222",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-5222] Improvement in deprecated params detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d0a14f302d393b5a29",
    "number": 721,
    "body": "To run ITs for staged version.",
    "head_branch": "resolver-180",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d1a14f302d393b5a2a",
    "number": 720,
    "body": "Addendum to be2b7f890d98af20eb0753650b6605a68a97ac05:\r\n* fix property name to align with existing ones\r\n* fix logging configuration as no more shaded httpClient\r\n* fix constant names",
    "head_branch": "mng-7454-resolver-transport",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7454] Include resolver-transport-http in Maven (#720)\n\nAddendum to be2b7f890d98af20eb0753650b6605a68a97ac05:\r\n* fix property name to align with existing ones\r\n* fix logging configuration as no more shaded httpClient\r\n* fix constant names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d2a14f302d393b5a2b",
    "number": 719,
    "body": "Note: current repository change in POM is ONLY to\r\nmake CI run ITs. This PR is placeholder until\r\nmaven-resolver 1.8.0 is released, but until then\r\nlet's see ITs at least.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7453",
    "head_branch": "MNG-7453-resolver180",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d3a14f302d393b5a2c",
    "number": 718,
    "body": "Note: current repository change in POM is ONLY to\r\nmake CI run ITs. This PR is placeholder until\r\nmaven-resolver 1.8.0 is released, but until then\r\nlet's see ITs at least.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7453\r\n",
    "head_branch": "maven-3.9.x-MNG-7453-resolver180",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d4a14f302d393b5a2d",
    "number": 717,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d5a14f302d393b5a2e",
    "number": 716,
    "body": "This is another attempt to fix the concurrency issue with minimal changes and without introducing back a thread local storage.\r\nThe downside of this proposal is that components annotated with `@SessionScoped` will always be injected the root session, which imho, is not really a problem as all derived sessions are cloned from the root one, except for the value of the `MavenSession#getCurrentProject()` which changes from one session to another.\r\n\r\nThe current scope is flawed anyway, as components are clearly not cached for all derived sessions, which was the original point of MNG-7347.",
    "head_branch": "MNG-7455-bis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d6a14f302d393b5a2f",
    "number": 715,
    "body": "https://issues.apache.org/jira/browse/MNG-7459\r\nReverts apache/maven#653",
    "head_branch": "revert-653-MNG-7347-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"[MNG-7347] SessionScoped beans should be singletons for a given session (#653)\" (#715)\n\nThis reverts commit b4518b5fe416a552a59e5201b4569a9bc0af3153."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441d7a14f302d393b5a30",
    "number": 714,
    "body": "Attempt to fix https://issues.apache.org/jira/browse/MNG-7455 without reverting https://issues.apache.org/jira/browse/MNG-7347.",
    "head_branch": "MNG-7455-3.9.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d8a14f302d393b5a31",
    "number": 713,
    "body": "Attempt to fix https://issues.apache.org/jira/browse/MNG-7455 without reverting https://issues.apache.org/jira/browse/MNG-7347 (SessionScoped beans should be singletons for a given session).\r\nhttps://github.com/apache/maven/pull/714 is the same targeted at `maven-3.9.x` branch.\r\nThis is also similar to https://github.com/apache/maven/pull/666 (fix http://issues.apache.org/jira/browse/MNG-7401).\r\n\r\nIf we want to fix the original problem which is that components annotated with `@SessionScoped` should be shared in a given session, we need to get rid of the thread local in the `SessionScope`, which has been done in #621.  There will be no concurrency issue as the enter/exit methods will only be called once for the session.\r\n\r\nBut we have 2 conflicting facts: `@SessionScoped` beans should be shared during  the execution of the reactor, and we have cloned sessions.  I think cloned sessions was just a way to fix some problems with the MT build, so i’d rather get rid of that one.  Also I think projects embedding maven such as the eclipse stuff and mvnd do reuse the container for multiple sessions and will leverage the `@SessionScoped` more that what we have now if that’s possible.\r\n\r\nBecause the session scope provides a clear boundary between stateless objects (or at least those that can be reused across builds) and those that needs to be discarded.  Caches, depending on what they cache, may belong to one or the other category.\r\n",
    "head_branch": "MNG-7455",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441d9a14f302d393b5a32",
    "number": 712,
    "body": "To implement Consumer POM, as showcase, but this is all \"maven specific\", nothing to be done in resolver, so no resolver needed. Bonus, the deprecated FileTransformer is not even used anymore.\r\n\r\nAll the ITs locally pass with this build.\r\n\r\nEffect can be seen in mvn DEBUG output (transformers are shown in-order as they are applied, order can be tuned with SISU priorities):\r\n\r\n```\r\n[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10.0 for /home/cstamas/.m2/repository\r\n[DEBUG] Applying install request transformers (shown in order):\r\n[DEBUG]  * class org.apache.maven.internal.aether.ConsumerPomTransformer\r\n[DEBUG] \r\n[DEBUG] Applying deploy request transformers (shown in order):\r\n[DEBUG]  * class org.apache.maven.internal.aether.ConsumerPomTransformer\r\n[DEBUG] \r\n[INFO] Scanning for projects...\r\n```\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7456",
    "head_branch": "artifact-transformer",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441daa14f302d393b5a33",
    "number": 711,
    "body": "But keep Wagon as default transport. This PR merely includes\r\nresolver http and file transport and switches wagon-http\r\nto non-shaded one.\r\n\r\nChanges:\r\n* switch to non-shaded wagon-http (as httpClient is now shared)\r\n* include resolver http and file transport\r\n* override resolver default behaviour (native transport preferred over wagon, when both on classpath)\r\n* provide simplistic means to choose transport\r\n\r\nThe chosen transport can be seen in debug (-X) output on line\r\n`[DEBUG] Using transporter XXX...`\r\n\r\nThe `-Dmaven.transport` simplistic switch can be used to choose transport:\r\n* not set: default, that is Wagon\r\n* `wagon`: explicitly sets Wagon\r\n* `resolver`: explicitly sets resolver native transports (file and http)\r\n* `auto`: relies on resolver \"auto discovery\" (priorities, etc). This is MUST to keep transport pluggable with 3rd party transports. In fact, this was the default so far in Maven, along with the fact that native resolver transports were not included (as resolver prefers native ones over Wagon).\r\n",
    "head_branch": "MNG-7454-master-resolver-http-transport",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7454] Include resolver-transport-http in Maven (#711)\n\nBut keep Wagon as default transport. This PR merely includes\r\nresolver http and file transport and switches wagon-http\r\nto non-shaded one.\r\n\r\nChanges:\r\n* switch to non-shaded wagon-http (as httpClient is now shared)\r\n* include resolver http and file transport\r\n* override resolver default behaviour (native transport preferred over wagon, when both on classpath)\r\n* provide simplistic means to choose transport\r\n\r\nThe chosen transport can be seen in debug (-X) output on line\r\n`[DEBUG] Using transporter XXX...`\r\n\r\nThe `-Dmaven.transport` simplistic switch can be used to choose transport:\r\n* not set: default, that is Wagon\r\n* `wagon`: explicitly sets Wagon\r\n* `resolver`: explicitly sets resolver native transports (file and http)\r\n* `auto`: relies on resolver \"auto discovery\" (priorities, etc). This is MUST to keep transport pluggable with 3rd party transports. In fact, this was the default so far in Maven, along with the fact that native resolver transports were not included (as resolver prefers native ones over Wagon)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441dba14f302d393b5a34",
    "number": 710,
    "body": "But keep Wagon as default transport. This PR merely includes\r\nresolver http and file transport and switches wagon-http\r\nto non-shaded one.\r\n\r\nChanges:\r\n* switch to non-shaded wagon-http (as httpClient is now shared)\r\n* include resolver http and file transport\r\n* override resolver default behaviour (native transport preferred over wagon, when both on classpath)\r\n* provide simplistic means to choose transport\r\n\r\nThe chosen transport can be seen in debug (-X) output on line\r\n`[DEBUG] Using transporter XXX...`\r\n\r\nThe `-Dmaven.transport` simplistic switch can be used to choose transport:\r\n* not set: default, that is Wagon\r\n* `wagon`: explicitly sets Wagon\r\n* `resolver`: explicitly sets resolver native transports (file and http)\r\n* `auto`: relies on resolver \"auto discovery\" (priorities, etc). This is MUST to keep transport pluggable with 3rd party transports. In fact, this was the default so far in Maven, along with the fact that native resolver transports were not included (as resolver prefers native ones over Wagon).\r\n\r\nNote: resolver by default, if both wagon and native transports are present on classpath,\r\nwould prefer native ones. Hence, to retain \"wagon as default\" this extra config\r\nbit is a must in Maven.\r\n\r\n",
    "head_branch": "MNG-7454-resolver-http-transport",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7454] Include resolver-transport-http in Maven 3.9.x (#710)\n\nBut keep Wagon as default transport. This PR merely includes\r\nresolver http and file transport and switches wagon-http\r\nto non-shaded one.\r\n\r\nChanges:\r\n* switch to non-shaded wagon-http (as httpClient is now shared)\r\n* include resolver http and file transport\r\n* override resolver default behaviour (native transport preferred over wagon, when both on classpath)\r\n* provide simplistic means to choose transport\r\n\r\nThe chosen transport can be seen in debug (-X) output on line\r\n`[DEBUG] Using transporter XXX...`\r\n\r\nThe `-Dmaven.transport` simplistic switch can be used to choose transport:\r\n* not set: default, that is Wagon\r\n* `wagon`: explicitly sets Wagon\r\n* `resolver`: explicitly sets resolver native transports (file and http)\r\n* `auto`: relies on resolver \"auto discovery\" (priorities, etc). This is MUST to keep transport pluggable with 3rd party transports. In fact, this was the default so far in Maven, along with the fact that native resolver transports were not included (as resolver prefers native ones over Wagon)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441dca14f302d393b5a35",
    "number": 709,
    "body": "The commit c604db3c3a103e2212f4628d8e2a997017fe579e\r\nchanged ReactorReader to use MavenSession#getAllProjects()\r\ninstead of deprecated MavenSession#getProjectMap() that\r\nis equivalent of MavenSession#getProjects().\r\n\r\nThis undoes this unintended change.\r\n",
    "head_branch": "maven-3.9.x-reactorreader",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7447] Fix ReactorReader unintended change (#709)\n\nThe commit c604db3c3a103e2212f4628d8e2a997017fe579e\r\nchanged ReactorReader to use MavenSession#getAllProjects()\r\ninstead of deprecated MavenSession#getProjectMap() that\r\nis equivalent of MavenSession#getProjects().\r\n\r\nThis undoes this unintended change."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441dda14f302d393b5a36",
    "number": 708,
    "body": "This issue is fluke, as logback is actually optional\r\ndependency, but still, to cut reports like these from\r\nroot, let's do this update.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7441\r\n",
    "head_branch": "MNG-7441-update-logback",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7441] Update version of loback (#708)\n\nThis issue is fluke, as logback is actually optional\r\ndependency, but still, to cut reports like these from\r\nroot, let's do this update."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441dea14f302d393b5a37",
    "number": 707,
    "body": null,
    "head_branch": "MNG-7452",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7452] - Remove JDK7 run on Maven 3.9.X Branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441dea14f302d393b5a38",
    "number": 706,
    "body": "This UT makes sure that DefaultMaven sets up proper type\r\nof WorkspaceReader in RepositorySystemSession.\r\n\r\nFor example, this UT fails with current maven-3.8.x and\r\nmaven-3.9.x branches due MNG-7432\r\n",
    "head_branch": "maven-3.9.x-mng-7432-ut",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441dfa14f302d393b5a39",
    "number": 705,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5222",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-5222] Maven 3 no longer logs warnings about deprecated plugin parameters\n\n- Added warning when setting deprecated parameter with value different\nthan the default.\n- Changed Logger to SLF4J."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e0a14f302d393b5a3a",
    "number": 704,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e2a14f302d393b5a3b",
    "number": 703,
    "body": "Related PRs:\r\n  * https://github.com/apache/maven-plugin-tools/pull/117\r\n  * https://github.com/apache/maven-plugin-testing/pull/24\r\n  * https://github.com/apache/maven-install-plugin/pull/35\r\n  * https://github.com/apache/maven-deploy-plugin/pull/27\r\n  * https://github.com/apache/maven-clean-plugin/pull/20\r\n  * https://github.com/apache/maven-compiler-plugin/pull/147\r\n  * https://github.com/apache/maven-filtering/pull/46\r\n  * https://github.com/apache/maven-resources-plugin/pull/35",
    "head_branch": "m-api-immutable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7553] New clean API with immutable model (#703)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e3a14f302d393b5a3c",
    "number": 702,
    "body": null,
    "head_branch": "MNG-7447",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7447] - Several Improvements by using Stream API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e3a14f302d393b5a3d",
    "number": 701,
    "body": "This PR introduces a new class `ProjectSelector` which contains logic around getting projects based on selectors.\r\nThis logic was moved from the `DefaultGraphBuilder` in order to make it re-usable for `MavenDefault`.\r\nSince the `ProjectSelector` is not going to be used in many other cases, and it is relatively lightweight, it was left out of DI intentionally.\r\n\r\nThe reason for moving this logic is to be able to make use of just the optional active and inactive selectors logic, without having to rebuild the graph again.\r\n\r\nIt is quite a big PR for an extra info log statement however, in order to function the same as optional profiles it also has to change some of its behaviour around resolving optional projects. Which is described in [MNG-7444](https://issues.apache.org/jira/browse/MNG-7444). Which breaks on [this line](https://github.com/apache/maven/blob/e85ff889b333b82da20b988fbb42bdbfdb814545/maven-core/src/main/java/org/apache/maven/graph/DefaultGraphBuilder.java#L231). E.g. with this PR whenever the following command will work as expected `mvn compile -pl ?:non-existing,?:existing`. By reporting the `non-existing` could not be found and by only building the `existing` as it would normally.\r\n\r\nAlso fixes [MNG-7444](https://issues.apache.org/jira/browse/MNG-7444)\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [MNG-7443](https://issues.apache.org/jira/browse/MNG-7443) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-7443-consistent-logging-between-optional-selectors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e4a14f302d393b5a3e",
    "number": 700,
    "body": "```\r\n[DEBUG] Loading mojo org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M5:test from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M5, parent: sun.misc.Launcher$AppClassLoader@7852e922]\r\n[DEBUG] Configuring mojo execution 'org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M5:test:default-test' with basic configurator -->\r\n```",
    "head_branch": "MNG-7438",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7438] add execution id to \"configuring mojo\" debug message\n\n[DEBUG] Configuring mojo execution\n'org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M5:test:default-test'\nwith basic configurator\n\nrephrase \"Configuring\" to \"Loading\" mojo \"from plugin realm\"\nto differentiate from \"configuring mojo\" = apply configuration\n\nrename populatePluginFields(..) private method\nto populateMojoExecutionFields(..) to better match the intent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e5a14f302d393b5a3f",
    "number": 699,
    "body": "some refactoring on maven-core components to increase the readability and reduce coupling as well as increase cohesion.",
    "head_branch": "refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e6a14f302d393b5a40",
    "number": 698,
    "body": "The idea is to avoid having to do the interpolation for all the ancestors.  Once a model has been interpolated with the profiles and merged with its parent, it is cached and reused as the only ancestor when computing the effective models for this children.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "cache-interpolated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e7a14f302d393b5a41",
    "number": 697,
    "body": "MNG-7360: Can't parse project that has <parent> tag in plugin configuration\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7360",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e8a14f302d393b5a42",
    "number": 696,
    "body": "This pull request completely drops support for expressions in the POM that do not use the `project.` prefix to refer to values from the POM itself.\r\n\r\nIt also cleans up a few pieces of code that were introduced to warn users about this, and that are now obsolete because we don't warn the user anymore. They've had many years to update their POMs.... \r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n       [**MNG-7404**](https://issues.apache.org/jira/browse/MNG-7404)\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n       https://github.com/apache/maven-integration-testing/pull/141\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-7404-ignore-prefixless-expressions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441e9a14f302d393b5a43",
    "number": 695,
    "body": "Signed-off-by: Christoph Läubrich <christoph@laeubi-soft.de>\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7432) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "quickfix_quarkus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7432] Resolver session contains non-MavenWorkspaceReader (#695)\n\nAs Resolver session contains non-MavenWorkspaceReader, the reactor models (already resolved w/ profiles applied) are re-built when using Resolver within Mojo, instead to get them via ReactorReader as expected. The rebuilt models will lack explicit (-P on CLI) profiles applied, as resolver itself is not maven aware, hence there is no way to \"tell\" resolver to apply them. Building reactor models w/ profiles applied is NOT done using resolver, but by Maven when loading up reactor, as profiles are NOT applied for downstream transitive dependencies (see discussion on MNG-1388 why).\r\n\r\nSigned-off-by: Christoph Läubrich <christoph@laeubi-soft.de>\r\nCo-authored-by: Christoph Läubrich <christoph@laeubi-soft.de>\r\nCo-authored-by: Tamas Cservenak <tamas@cservenak.net>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441eaa14f302d393b5a44",
    "number": 694,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "improve-classloading",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441eba14f302d393b5a45",
    "number": 693,
    "body": null,
    "head_branch": "mng-7391-lookup-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7391] Fix MojosExecutionStrategy lookup to be able to look into the SessionScope (#693)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441eca14f302d393b5a46",
    "number": 692,
    "body": null,
    "head_branch": "mng-7391-lookup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7391] Fix MojosExecutionStrategy lookup to be able to look into the SessionScope (#692)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441eda14f302d393b5a47",
    "number": 691,
    "body": "Maven Artifact Transfer silently prevents group level metadata to reach Resolver and causes metadata loss on install/deploy.\r\nFix is to \"bridge\" this from maven-resolver-provider (and core) by reusing the actual metadata that\r\nm-plugin-p:addPluginArtifactMetadata mojo adds, but m-a-t filters out.\r\n\r\nThis is backport of commit d141957ff5a3c08ae53c68e4ba19b49055f717c4 from master to maven-3.9.x branch.\r\n",
    "head_branch": "MNG-7055-g-level-md-mvn-39x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7055] Fix G level metadata handling in 3.9.x (#691)\n\nMaven Artifact Transfer silently prevents group level metadata to reach Resolver and causes metadata loss on install/deploy.\r\nFix is to \"bridge\" this from maven-resolver-provider (and core) by reusing the actual metadata that\r\nm-plugin-p:addPluginArtifactMetadata mojo adds, but m-a-t filters out.\r\n\r\nThis is backport of commit d141957ff5a3c08ae53c68e4ba19b49055f717c4 from master to maven-3.9.x branch."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662441eea14f302d393b5a48",
    "number": 690,
    "body": "This fixes problems when using build extensions.",
    "head_branch": "MNG-7402-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441efa14f302d393b5a49",
    "number": 689,
    "body": "The \"old\" [maven-bom](https://github.com/apache/maven/blob/1fff17398ed9738015a992502481bb79a2797ab5/maven-bom/pom.xml) introduced in MNG-6806 provides dependencyManagement only for artifacts in \"org.apache.maven\" groupId, that are produced by the reactor\r\n\r\nThis PR provides a new o.a.m.boms:bom-maven (new groupId and artifactId) that provides ALL the transitive dependencies, a project can import bom-all and have all the versions set to those used by given version of Maven.\r\n\r\nAlso, removed root defined and inherited dependencies,\r\nit is not nice, and was not consistent, as some modules did redefine them. Now every module explicitly defines things it depends on.\r\n\r\nUgly:\r\n- repeated depMgt in every submodule, as root POM cannot import bom-all (cycle)\r\n  This could be avoided by pushing maven modules \"level down\", more restructure\r\n  of project...\r\n\r\n---\r\n\r\nThis DRAFT PR tries to address Konrad remarks, see https://issues.apache.org/jira/browse/MNG-6806?focusedCommentId=17499945&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17499945  and below.\r\n\r\nBasically, existing maven bom should be improved, get all versions under control.\r\nThis PR is just a POC, and is not quite good, as it according to current module layout, must add depMgt/import to each module....\r\n\r\nOTOH, it revealed several issues with current setup: we have 2 test dependencies from maven root POM inherited (IMHO is wrong to inherit and hence force deps on all childs), also, some modules did redeclare those same deps, and finally, current root POM is huge and hardly overseen as it is crowded with many properties for example, that am unsure why we define in the first place (I usually define some property when it is repeating)\r\n\r\nThis kind of a layout since eons and works well\r\n* makes module POMs simpler, as the only place where you set dep versions are BOMs, all the rest is just re-using those managed deps\r\n* logically groups deps, I proposed one grouping, but we may end with other, this is just an example\r\n* makes downstream users fully served, as they can choose which BOM to import, from bom-maven (equivalent of current maven-bom) to bom-all and have all the transitive deps managed",
    "head_branch": "maven-boms",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f0a14f302d393b5a4a",
    "number": 688,
    "body": "This PR used to be part of MNG-7390, but now just contains the refactoring part.\r\n\r\nMade the intention of the reactor code more clear and changed the order of steps to minimize sorting calls.\r\nChanges:\r\n- The main \"reactor\" method (`DefaultGraphBuilder#reactorDependencyGraph`) is more descriptive.. that one method should describe exactly every business logic rule, instead of having hidden business rules inside methods. In total I think it's easier to understand to full flow now. \r\n- It used to sort the intermediate project list too many times\r\n- It used to calculate and add the also-make/also-make-dependent projects into the intermediate project list too many times.\r\n- The methods used for getting and trimming the intermediate project list were made consistent. They now additionally:\r\n  - fail fast when it's not applicable (i.e. skip over `getResumedProjects` when `-rf` is not given),\r\n  - return Sets, as the project lists do not need to be sorted in between and unique elements are automatically guaranteed,\r\n  - are converted a bit more to Streams for the sake of readability.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licensed under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "reorganized-reactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f1a14f302d393b5a4b",
    "number": 687,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f2a14f302d393b5a4c",
    "number": 686,
    "body": null,
    "head_branch": "remove-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unused test which should have been removed with MNG-7047 (#686)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f3a14f302d393b5a4d",
    "number": 685,
    "body": "This closes #685\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6960",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6960] Use RuntimeInformation instead of reading properties\n\nThis closes #685"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f4a14f302d393b5a4e",
    "number": 684,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\nThis builds upon the work from #371 and supersedes it.\r\nIt is a backport of #681 \r\n",
    "head_branch": "bugfix/MNG-5180-maven-3.8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f5a14f302d393b5a4f",
    "number": 683,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7402",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f5a14f302d393b5a50",
    "number": 682,
    "body": "Caller, here Maven, should prepare all, and hook onto close\r\nto perform proper cleanup. The API does not allow use of\r\ntarget directory, that would be even better, but this does\r\nit as well, as tmp file really appears just before\r\ninstall/deploy and dissapears immediately after.\r\n",
    "head_branch": "cstamas-transform-api",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f6a14f302d393b5a51",
    "number": 681,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\nThis builds upon the work from #371 and supersedes it.",
    "head_branch": "bugfix/MNG-5180",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f7a14f302d393b5a52",
    "number": 680,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "bugfix/MNG-7418-fix-merging-of-snapshotVersions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f8a14f302d393b5a53",
    "number": 679,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7416",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441f9a14f302d393b5a54",
    "number": 678,
    "body": "This pull request removes the long deprecated support of properties with the `pom.` prefix in pom.xml.\r\n\r\nContrary to the JIRA ticket suggestion, the build will not fail, it will continue similarly to when a non-existing property is used.\r\n\r\nWhen we will remove support for \"unprefixed\" property expressions (MNG-7404) the code for interpolating expressions becomes a lot easier, as we can then completely remove the `ProblemDetectingValueSource` class that was introduced only to log warnings about the deprecation.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n       **[MNG-7244](https://issues.apache.org/jira/browse/MNG-7244)**\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7244-ignore-pom-prefix-in-expressions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441faa14f302d393b5a55",
    "number": 677,
    "body": "Simplified version of https://github.com/apache/maven/pull/659. The refactorings will be done in a separate PR for the ease of reviewing. \r\n\r\nThere is one functional change in this PR which is described in the following ticket: MNG-7390.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7390-select-module-outside-pwd-simplified",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441fba14f302d393b5a56",
    "number": 676,
    "body": "https://issues.apache.org/jira/browse/MNG-7413",
    "head_branch": "MNG-7413",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441fca14f302d393b5a57",
    "number": 675,
    "body": "Currently the handling for https://maven.apache.org/maven-ci-friendly.html is hard wired into maven.\r\n\r\nFor Tycho we like to replace/extend the default handling for this to supply the user with some automatic derived values for some of the variables.\r\n\r\nThis PR extracts the parts of that handling in a new ModelVersionProcessor that has the current behavior as a default implemented. This not only makes it more clear how this is handled (no cross references between DefaultModelValidator and AbstractStringBasedModelInterpolator required) but also allows to override the handling by a core extension.\r\n\r\nFYI @mickaelistria @akurtakov\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7407",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441fda14f302d393b5a58",
    "number": 674,
    "body": "Currently the handling for https://maven.apache.org/maven-ci-friendly.html is hard wired into maven.\r\n\r\nFor Tycho we like to replace/extend the default handling for this to supply the user with some automatic derived values for some of the variables.\r\n\r\nThis PR extracts the parts of that handling in a new `ModelVersionProcessor` that has the current behavior as a default implemented. This not only makes it more clear how this is handled (no cross references between `DefaultModelValidator` and `AbstractStringBasedModelInterpolator` required) but also allows to override the handling by a core extension.\r\n\r\nFYI @mickaelistria @akurtakov\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7407) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7407-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441fea14f302d393b5a59",
    "number": 673,
    "body": "We at [Tycho](https://github.com/eclipse/tycho) have a combination of a core-extension and a build-plugin. What always is a source of confusion, that one is able to define e.g. a `<tycho-version>` property that could be overridden on the commandline using -D but no such thing exits for the `.mvn/extensions.xml`\r\n\r\nThis makes it also hard to make some regression-testing e.g. to check fast if a certain problem occurs also in the previous version as one always has to take in mind that the `.mvn/extensions.xml` must be edited by hand.\r\n\r\nFor that reason it would help if at least basic interpolation using the \"maven-properties\" would be possible.\r\n\r\nThis PR adds support for having basic interpolation in `.mvn/extensions.xml` to either:\r\n\r\n1. Specify a (default) version in `maven.config`\r\n2. Specify a version on the commandline with `mvn -Dsome.version=1.2.3`\r\n\r\nFYI @mickaelistria @akurtakov \r\n\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/projects/MNG/issues/MNG-7395) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7395_maven-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7395] Support interpolation in extensions.xml\n\nThis adds support for property interpolation in extensions.xml to allow\nadvanced use cases where one wants to contribute certain things via the\ncommandline.\n\nThis closes #673"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662441ffa14f302d393b5a5a",
    "number": 672,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [MNG-7406](https://issues.apache.org/jira/browse/MNG-7406) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully - running them on GitHub Actions as a line of first defence.\r\n\r\nICLA and CCLA signed.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7406-better-cli-display-of-project-building-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244200a14f302d393b5a5b",
    "number": 671,
    "body": "This saves quite some time on the build.\r\n  https://issues.apache.org/jira/browse/MNG-7405",
    "head_branch": "MNG-7405",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7405] Update animal-sniffer to 1.21 (#671)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244201a14f302d393b5a5c",
    "number": 670,
    "body": "Based on https://github.com/apache/maven/pull/427 with an additional fix/test for `pom.version` and `pom.parent.version`.",
    "head_branch": "MNG-6727-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6727] Using version range in parent and CI Friendly Version fails"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244202a14f302d393b5a5d",
    "number": 669,
    "body": "Trivial: Make sure resources are closed even when an exception is thrown by using try-with-resources.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\nmvn clean package OK\r\n",
    "head_branch": "master_try_w_resources",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244203a14f302d393b5a5e",
    "number": 668,
    "body": "This is a backport of https://github.com/apache/maven/pull/667\r\n\r\nwe at [Tycho](https://github.com/eclipse/tycho/) have a high demand in integrating better with maven to reduce some workarounds that where used in the past to get custom dependency types into the maven dependency model (namely using system scoped absolute paths).\r\n\r\nFor that reason it would help if it where possible to register additional WorkspaceReader to participate.\r\n\r\nI have created [a prototype](https://github.com/eclipse/tycho/pull/586/files) to show/test this new feature. \r\n\r\nFYI @mickaelistria @akurtakov \r\n\r\nThis PR allows maven-extensions to supply `WorkspaceReader` as it is possible with `AbstractMavenLifecycleParticipant` currently it is only possible with some workarounds:\r\n\r\n1. One needs to register a `AbstractMavenLifecycleParticipant` in a maven-core-extension\r\n2. In the `afterSessionStart` cast the `RepositorySystemSession` to `DefaultRepositorySystemSession`\r\n3. Call `setWorkspaceReader` and take care not to replace an already exiting one\r\n\r\nWith this change it is possible to simply register  WorkspaceReader component directly and Maven takes care of all the rest.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/projects/MNG/issues/MNG-7400) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7400-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244204a14f302d393b5a5f",
    "number": 667,
    "body": "We at [Tycho](https://github.com/eclipse/tycho/) have a high demand in integrating better with maven to reduce some workarounds that where used in the past to get custom dependency types into the maven dependency model (namely using system scoped absolute paths).\r\n\r\nFor that reason it would help if it where possible to register additional WorkspaceReader to participate.\r\n\r\nI have created [a prototype](https://github.com/eclipse/tycho/pull/586/files) to show/test this new feature. \r\n\r\nFYI @mickaelistria @akurtakov \r\n\r\nThis PR allows maven-extensions to supply `WorkspaceReader` as it is possible with `AbstractMavenLifecycleParticipant` currently it is only possible with some workarounds:\r\n\r\n1. One needs to register a `AbstractMavenLifecycleParticipant` in a maven-core-extension\r\n2. In the `afterSessionStart` cast the `RepositorySystemSession` to `DefaultRepositorySystemSession`\r\n3. Call `setWorkspaceReader` and take care not to replace an already exiting one\r\n\r\nWith this change it is possible to simply register  WorkspaceReader component directly and Maven takes care of all the rest.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7400",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244205a14f302d393b5a60",
    "number": 666,
    "body": "This allows multiple threads to set/get the current project on the same session object while still having clones maintain there own state.\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7401",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244206a14f302d393b5a61",
    "number": 665,
    "body": "We at [Tycho](https://github.com/eclipse/tycho) have a combination of a core-extension and a build-plugin. What always is a source of confusion, that one is able to define e.g. a `<tycho-version>` property that could be overridden on the commandline using -D but no such thing exits for the `.mvn/extensions.xml`\r\n\r\nThis makes it also hard to make some regression-testing e.g. to check fast if a certain problem occurs also in the previous version as one always has to take in mind that the `.mvn/extensions.xml` must be edited by hand.\r\n\r\nFor that reason it would help if at least basic interpolation using the \"maven-properties\" would be possible.\r\n\r\nThis PR adds support for having basic interpolation in `.mvn/extensions.xml` to either:\r\n\r\n1. Specify a (default) version in `.mvn/jvm.config`\r\n2. Specify a version on the commandline with `mvn -D=some.version=1.2.3`\r\n\r\nFYI @mickaelistria @akurtakov \r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7395_properties_in_version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244207a14f302d393b5a62",
    "number": 664,
    "body": "Refactoring: \r\n\r\nReplace usage of\r\n  MavenExecutionRequest#getSelectedProjects()\r\nby\r\n  MavenExecutionRequest#getProjectActivation().getOptionalActiveProjectSelectors()\r\n\r\n\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n",
    "head_branch": "refactor/ResolveDeprecateUsage_MavenExecutionRequest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244208a14f302d393b5a63",
    "number": 663,
    "body": "Java 7 compatible backport of #662.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7381-shorter-thread-name-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244209a14f302d393b5a64",
    "number": 662,
    "body": "\r\nAs discussed in the ticket, including groupId if needed.\r\n\r\nI also changed the prefix from `mvn-builder-` to `mvn-builder_` to better see where the artifactId starts (which often contains dashes).\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7381-shorter-thread-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624420aa14f302d393b5a65",
    "number": 661,
    "body": "https://issues.apache.org/jira/browse/MNG-7391\r\n\r\nsupercedes #607 ",
    "head_branch": "MNG-7391-master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7391] add execution strategy+runner required by Maven Build Cache (#661)\n\n* [MNG-7391] add execution strategy+runner required by Maven Build Cache\r\n* Fix previous commit\r\n* Fix javadoc\r\n* Fix checkstyle\r\nCo-authored-by: Guillaume Nodet <gnodet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624420ba14f302d393b5a66",
    "number": 660,
    "body": "https://issues.apache.org/jira/browse/MNG-7391\r\n\r\nsupercedes #622 ",
    "head_branch": "MNG-7391-maven-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624420ba14f302d393b5a67",
    "number": 659,
    "body": "There is one main functional change in this PR which is described in the following ticket: https://issues.apache.org/jira/browse/MNG-7390.\r\n\r\nThere are some refactorings and cleanups done as well:\r\n- It used to sort the intermediate project list a couple of times which were not needed\r\n- It used to calculate and add the also-make/also-make-dependent projects into the intermediate project list.\r\n- The main \"reactor\" method (`DefaultGraphBuilder#reactorDependencyGraph`) is made more descriptive.. that one method should describe exactly every business logic rule, instead of having business rules inside methods. In total I think it's easier to understand to full flow now.\r\n- The methods used for getting and trimming the intermediate project list were made consistent. They now additionally:\r\n  - fail fast when it's not applicable,\r\n  - return Sets, as the project lists do not need to be sorted in between,\r\n  - are converted a bit more to Streams for the sake of readability.\r\n\r\nThe relevant IT is found here: https://github.com/apache/maven-integration-testing/pull/135\r\nJira issue: https://issues.apache.org/jira/browse/MNG-7390\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7390-select-module-outside-pwd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624420ca14f302d393b5a68",
    "number": 658,
    "body": "Following this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [X] Re-using the existing [Jira issue: MNG-7339](https://issues.apache.org/jira/browse/MNG-7339)\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] ~~Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.~~\r\n - [ ] ~~You have run the [Core IT][core-its] successfully.~~\r\n\r\nFollow-up on a quick chat that took place on the ASF Slack, this pull request removes the following entities from the build matrix that checks if Maven can build itself:\r\n- macOS\r\n- JDK 11\r\n\r\nThis brings the size of the build matrix from 9 down to 4.\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "reduce-maven-building-itself-matrix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624420da14f302d393b5a69",
    "number": 657,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7349\r\nIT: https://github.com/apache/maven-integration-testing/pull/134",
    "head_branch": "MNG-7349",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7349] Limit relocation warning message to direct dependencies only"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624420ea14f302d393b5a6a",
    "number": 656,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7386",
    "head_branch": "MNG-7386",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7386] Make sure the ModelMerger$MergingList can be serialized"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624420fa14f302d393b5a6b",
    "number": 655,
    "body": "I tested this with the core repo itself and the rat-plugin.\r\nThere seem to be no ITs for that warning whatsoever so I didn't bother (but of course I did run all of them).\r\n\r\nWill gladly create a backport PR for 3.8.5 after this has been merged.\r\n\r\n@michael-o, regarding you comment in the ticket:\r\n> I wonder whether this applies to forked lifecycles also...\r\n\r\nI don't think there will be anything special, but I might be wrong.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7380_threadSafe-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244210a14f302d393b5a6c",
    "number": 654,
    "body": "https://issues.apache.org/jira/browse/MNG-7385",
    "head_branch": "MNG-7385",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244211a14f302d393b5a6d",
    "number": 653,
    "body": "Same as https://github.com/apache/maven/pull/621 but for 3.8.x branch.",
    "head_branch": "MNG-7347-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7347] SessionScoped beans should be singletons for a given session (#653)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244212a14f302d393b5a6e",
    "number": 652,
    "body": "Proposed changes for https://github.com/apache/maven/pull/651:\r\n* validate input\r\n* do not modify loop invariant within loop body\r\n\r\nRemarks:\r\n* IF we allow \"null\" life-cycles then modify validation from `if ( len < 1 || len % 2 != 0 )` to `if ( len % 2 != 0 )`\r\n* IF we do NOT allow \"null\" life-cycles, then modify validation from `if ( len < 1 || len % 2 != 0 )` to `if ( len < 2 || len % 2 != 0 )`\r\n\r\n(and in both cases adjust exception message as well)",
    "head_branch": "MNG-7264-cstamas",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Proposal to change abstract provider\n\nChanges:\n* validate input\n* do not modify loop invariant within loop body"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244213a14f302d393b5a6f",
    "number": 651,
    "body": "same as #650 / MNG-7263 but on per-packaging plugins bindings for default lifecycle",
    "head_branch": "MNG-7264",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7264] packaging plugins bindings cannot be empty"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244214a14f302d393b5a70",
    "number": 650,
    "body": null,
    "head_branch": "MNG-7263",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7263] use constants instead of copy/paste"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244215a14f302d393b5a71",
    "number": 649,
    "body": "This cherry picks #347 into the Maven 3.8.x branch. \r\n\r\nCherry-pick of 3fabb639a31d6076b1649c1a08828febabddf44a\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully. => _this however results in `[WARNING] The requested profile \"run-its\" could not be activated because it does not exist.`_\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf). => _I already signed the Apache ICLA before_.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "backport/MNG-6802",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244216a14f302d393b5a72",
    "number": 648,
    "body": "Following this checklist to help us incorporate your\r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed\r\n       for the change (usually before you start working on it).  Trivial changes like typos do not\r\n       require a JIRA issue. Your pull request should address just this issue, without\r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] SUMMARY`, where you replace `MNG-XXX`\r\n       and `SUMMARY` with the appropriate JIRA issue. Best practice is to use the JIRA issue\r\n       title in the pull request title and in the first line of the commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will\r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under\r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6326",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6326] Make the build fail if core extensions can not be loaded (#648)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244217a14f302d393b5a73",
    "number": 647,
    "body": null,
    "head_branch": "MNG-7369",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7369] Maven BOM doesn't need to package as a JAR\n\nThis closes #647"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244218a14f302d393b5a74",
    "number": 646,
    "body": "vscode creates directories with configurations in git repositories. This\r\nis usually fine, but triggers the `apache-rat` license alarms.\r\n\r\nTo solve the alarm and avoid future issues from vscode contributors, we\r\nexclude `.vscode/` from rat and add it to .gitignore.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully. (nope, see https://issues.apache.org/jira/browse/MNG-7378)\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7377",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244219a14f302d393b5a75",
    "number": 645,
    "body": "Add unit tests for merge\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7375-potential-npe-in-metadata-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624421aa14f302d393b5a76",
    "number": 644,
    "body": "This closes #644\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7370",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624421ba14f302d393b5a77",
    "number": 643,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5561",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624421ca14f302d393b5a78",
    "number": 642,
    "body": "* This requires #641 for consistency first.\r\n* the modification of the test code could also be done independent of this PR because it does not properly represent how config is injected.\r\n* PR for an IT is pending, I have a fantastic sample project from MNG-7204.",
    "head_branch": "MNG-5561_maven-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624421da14f302d393b5a79",
    "number": 641,
    "body": "This closes #641\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7374",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7374] Mutating RelocatedArtifact does not retain type\n\nThis closes #641"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624421ea14f302d393b5a7a",
    "number": 640,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/fix-cleanup-partial-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MNG-7129 fix for cleanup of partial state (#640)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624421fa14f302d393b5a7b",
    "number": 639,
    "body": "Related issue: https://issues.apache.org/jira/browse/MNG-7310\r\nRelated PR for integration tests: https://github.com/apache/maven-integration-testing/pull/131\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7310) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7310-lifecycle-activated-in-sibling-submodule",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7310] Using the plexusContainer to prevent loading lifecycles from defined by extensions from other submodules.\n\nThis resolves #639."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624421fa14f302d393b5a7c",
    "number": 638,
    "body": "…nfig\r\n\r\nThis closes #638\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7206",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7206] Properly prioritize JVM options from MAVEN_OPTS and jvm.config\n\nThis closes #638"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244220a14f302d393b5a7d",
    "number": 637,
    "body": "Add args directly after the class name and leave users the option to override\r\nwith maven.config or CLI args.\r\n\r\nThis closes #637\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7193",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244221a14f302d393b5a7e",
    "number": 636,
    "body": "* Properly name jump labels for jvm.config in cmd\r\n* Supply one arg per line\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "improve-cmd-scripts",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244222a14f302d393b5a7f",
    "number": 635,
    "body": "This PR creates maven distro (kept up to date with master) that contains latest (locally built) maven-resolver along w/ transport-http and transport-wagon. Also, the build banishes wagon from Maven, but it is still present in lib of distro as maven-compat still uses it.\r\n\r\nTry this build locally, to build it:\r\n* build/install locally maven-resolver master\r\n* build locally distro using this PR\r\n* deploy locally the built maven\r\n\r\nTo test it:\r\n* try to locally build master (due resolver SNAPSHOT dependency) of maven using vanilla distro and this distro (with or without local MRM). To notice the speed difference between two transports, always use empty local repo (to make Maven pull all).\r\n* try out the \"provided\" checksum features (provided checksums are in this PR, but to build this PR you must set maven dependency to latest released resolver). Using `.mvn/checksums-bad` will fail the build, while `.mvn/checksums-good` will make build pass when plexus-utils:3.3.0 is being fetched.\r\n\r\n(Don't forget to disable RAT if you use in-dir local repo)\r\n\r\nExample of \"provided\" use:\r\n```\r\n~/bin/maven/apache-maven-4.0.0-alpha-1-SNAPSHOT-transport-http/bin/mvn clean install  -Daether.artifactResolver.providedChecksumsSource.file.baseDir=/PATH/TO/maven/.mvn/checksums-bad -DlocalRepository=localRepository -Drat.skip=true\r\n```\r\n\r\nTo switch transport to wagon (default is transport-http) add this parameter:\r\n```\r\n-Daether.priority.WagonTransporterFactory=100\r\n```",
    "head_branch": "maven-transport-http",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244223a14f302d393b5a80",
    "number": 634,
    "body": "@michael-o This is a small refactoring, the goal is mainly to make `mvnd` main class not to rewrite the whole `MavenCli`.\r\nThe consequence for `mvnd` is in the following commit https://github.com/mvndaemon/mvnd/commit/6d2fb409bf90b7ffd0a64de7508ed5d427815cb8.",
    "head_branch": "MNG-7354",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244224a14f302d393b5a81",
    "number": 633,
    "body": "The idea is to replace glob section with glob/pattern based includes excludes to form determenistic files set.\r\nCurrent implementtation with single glob might be not flexible and expressive enough. Proposed configuration:\r\n```xml\r\n        <defaultFileSet>\r\n            <!-- By default, include src/**, all source and resources directory -->\r\n            <include>\r\n                <globs>\r\n                    <!-- glob expressions -->\r\n                    <glob>*.{java,properties}</glob>\r\n                    <glob>magic-directory/**/*.magic</glob>\r\n                </globs>\r\n                <patterns>\r\n                    <pattern>(cat|dog)-[0-3][0-5][0-9]\\.xml</pattern>\r\n                </patterns>\r\n            </include>\r\n            <!-- Output directories are excluded by default -->\r\n            <exclude>\r\n                <globs>\r\n                    <glob>*.{iml,log}</glob>\r\n                </globs>\r\n                <patterns>\r\n                    <pattern>(cat|dog)-[0-3][0-5][0-9]\\.xml</pattern>\r\n                </patterns>\r\n            </exclude>\r\n        </defaultFileSet>\r\n        <!-- more directories to include -->\r\n        <fileSets>\r\n            <fileSet directory=\"additional-directory\">\r\n                <include/>\r\n                <exclude/>\r\n            </fileSet>\r\n        </fileSets>\r\n```\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129-file-selectors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244225a14f302d393b5a82",
    "number": 632,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7351-improve-javadoc-MojoFailureException-and-MojoExecutionException",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244226a14f302d393b5a83",
    "number": 631,
    "body": "Maven cache docs updates to reflect migration to extension and other recent changes\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129-maven-cache-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7129] Maven cache docs updates (#631)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244227a14f302d393b5a84",
    "number": 630,
    "body": "Similar to #629 but for the `3.x` branches.\r\nI think it should be part of a `3.9.x` branch along with #622 ",
    "head_branch": "MNG-7350-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244228a14f302d393b5a85",
    "number": 629,
    "body": "`mvnd` does redefine a few maven classes in order to plugin its caching layer or change some behaviours, but this is sometime very difficult without copying some core class entirely.\r\nOne of those class is the `ProjectBuilder` and it's being reimplemented in `mvnd` only because the `ModelCache` is created using a direct call on the implementation.\r\nThis ticket aims to introduce a `ModelCacheFactory` so that `mvnd` can simply define a custom factory instead of redefining the full `ProjectBuilder`.",
    "head_branch": "MNG-7350",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[master][MNG-7350] Introduce a factory for ModelCache (#629)\n\n* [MNG-7350] Introduce a factory for ModelCache\r\n* [MNG-7350] Introduce a factory for ModelCache\r\nFix missing javadoc and binding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244229a14f302d393b5a86",
    "number": 628,
    "body": "Same as https://github.com/apache/maven/pull/627 for for 3.8.x branch.",
    "head_branch": "project-lock-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7156][MNG-7285] Add locking in MojoExecutor (#628)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624422aa14f302d393b5a87",
    "number": 627,
    "body": "https://issues.apache.org/jira/browse/MNG-7156\r\nhttps://issues.apache.org/jira/browse/MNG-7285\r\n\r\nHopefully supersedes #476, #578, #625 in order to fix the threading problems in `MavenProject` during parallel builds.\r\nThis may need to be combined with #570  and https://github.com/apache/maven-integration-testing/pull/127\r\n",
    "head_branch": "project-lock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7156][MNG-7285] Add locking in MojoExecutor (#627)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624422ba14f302d393b5a88",
    "number": 626,
    "body": "Trivial change",
    "head_branch": "duplicate-longopt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove duplicate call to longOpt (#626)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624422ca14f302d393b5a89",
    "number": 625,
    "body": "Similar to #624 but instead of hacking the `MavenSession.clone`  method, this PR changes the `BuildListCalculator` code which has been introduced to support parallel builds.  This looks better to me.\r\n\r\nThe idea is to not clone all projects for each step as most probably, only the _current_ project will be modified by plugins.",
    "head_branch": "MNG-7335-bis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624422da14f302d393b5a8a",
    "number": 624,
    "body": "This is a slightly modified version of the patch outlined in https://issues.apache.org/jira/browse/MNG-7335 by @famod.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7335",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624422ea14f302d393b5a8b",
    "number": 623,
    "body": "This PR provides:\r\n\r\n1) support to change poms version (for example during release), like it is done by maven set version plugin\r\nVersion in pom files do not affect checksum now\r\n2) support to sub tree build when project build start not from multi module root but from one of sub project.\r\nIn that case if in cache configuration present the corresponding section the logic tries to build whole project models starting from multi module root pom file. This allows to calculate checksums for some dependencies which are not in maven session (not currently building) but belong to multi module project.\r\n\r\nFor example:\r\n\r\nIf I have root (R), module (A), module (B)\r\nAnd (A) depends on (B)\r\n\r\nIf I started to build (A) I don't see (B) as the project in MavenSession, hence I cannot determine whether it \"my\" dependency and it is possible to calculate checksum for it\r\n\r\nIf I have the following configuration\r\n```\r\n    <configuration>\r\n        ...\r\n        <multiModule>\r\n            <discovery>\r\n                <scanProfiles>\r\n                    <scanProfile>all</scanProfile>\r\n                </scanProfiles>\r\n            </discovery>\r\n        </multiModule>\r\n    </configuration>\r\n```\r\n\r\nThen the logic tries to build whole multi module projects models which allows to find (B) and calculate checksum for it and include this value to checksum for (A)\r\n\r\nIf scanProfile not specified then it tries to build whole model with the same profiles which specified for sub tree build.\r\nIf multiModule section in configuration is not specified then this logic skipped and (B) treated as external dependency\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/master-db-subtree-feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch 'deutschebank-MNG-7129/master-db-subtree-feature' into MNG-7129-master"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624422fa14f302d393b5a8c",
    "number": 622,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244230a14f302d393b5a8d",
    "number": 621,
    "body": "Related to \r\n *  https://github.com/apache/maven/commit/45563ff5cbfd066761913ae35a4e3e8e6e25e83c\r\n *  https://github.com/apache/maven/commit/702acd2e8beb7d5c159edbc59bcbf752b5f1963d\r\n\r\nThe original scopes were working correctly but did not support multithreaded builds.\r\n\r\nThe new scope implementation does not use threading at all, so it's safer in a multithreaded build.\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7347",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7347] SessionScoped beans should be singletons for a given session (#621)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244231a14f302d393b5a8e",
    "number": 620,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7340) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7340-fail-on-severity-arguments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244232a14f302d393b5a8f",
    "number": 619,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7342",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244233a14f302d393b5a90",
    "number": 618,
    "body": "Packages not exported from maven-core:\r\n* o.a.m.bridge\r\n* o.a.m.eventspy\r\n* o.a.m.execution.infoproviders\r\n* o.a.m.lifecycle.mapping\r\n* o.a.m.feature\r\n\r\nPackages not exported from dependencies\r\n* org.eclipse.sisu\r\nthe above one is required for @Priority, but there may be others needed, not sure.\r\n\r\nPackages that should not be exported\r\n* o.a.m.rtinfo.internal\r\n\r\nMy commit only fixes `o.a.m.feature`, `org.eclipse.sisu` and `o.a.m.rtinfo.internal`.",
    "head_branch": "MNG-7345",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7345] Fix exported packages (#618)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244234a14f302d393b5a91",
    "number": 617,
    "body": "Cache repositories refactoring for java8 - using optionals instead of nullables\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/master-db",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch 'deutschebank-MNG-7129/master-db' into MNG-7129-master\n\n# Conflicts:\n#\tmaven-caching/src/main/java/org/apache/maven/caching/HttpCacheRepositoryImpl.java\n#\tmaven-caching/src/main/java/org/apache/maven/caching/RemoteCacheRepository.java"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244235a14f302d393b5a92",
    "number": 616,
    "body": "JIRA issue: https://issues.apache.org/jira/browse/MNG-7160\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-7160",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7160] Ability to customize core extensions classloaders (#616)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244236a14f302d393b5a93",
    "number": 615,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/remove-redundant-remote-calls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7129] Remove redundant remote calls"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244237a14f302d393b5a94",
    "number": 614,
    "body": "Provide CLI flags to restore artifacts lazily which could provide significant performance benefits especially if huge bundles cached. In this mode artifacts are downloaded from cache on demand only which gives significant performance boost especially with remote cache\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/lazy-restore-from-cache-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7129] Restore artifacts from cache lazily (#614)\n\nCo-authored-by: Alexander Ashitkin <alexander.ashitkin@db.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66244238a14f302d393b5a95",
    "number": 613,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7339) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7339-action-maven-build-itself",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244239a14f302d393b5a96",
    "number": 612,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/cache-extension-from-db",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7129] Cache extension test fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624423aa14f302d393b5a97",
    "number": 611,
    "body": "Remove long argument for define.\r\n---\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7332) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully: https://github.com/apache/maven-integration-testing/pull/124\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7332-remove-define-long-arg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624423aa14f302d393b5a98",
    "number": 610,
    "body": "Changes in maven core  to inject caching extension\r\n\r\nCC @ansip\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/caching-support-core-changes-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624423ba14f302d393b5a99",
    "number": 609,
    "body": "Extraction of MojoExecutionStrategy from MojoExecutor to support cache injection. MojoExecutionStrategy is enough to inject caching logic from extension\r\n\r\nCC @ansip\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7129/caching-support-core-changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624423ca14f302d393b5a9a",
    "number": 608,
    "body": "This is required in order to be able to build master with itself.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7329",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7329] Upgrade maven-enforcer-plugin"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624423da14f302d393b5a9b",
    "number": 607,
    "body": "This is a rebase of https://github.com/apache/maven/pull/606 on top of master.\r\nThis also supersedes https://github.com/apache/maven/pull/598.",
    "head_branch": "MNG-7129-master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624423ea14f302d393b5a9c",
    "number": 606,
    "body": "This is laid on top of the modello switch https://github.com/apache/maven/pull/598.\r\nThe goal is to see how the caching system can be extracted out of maven-core.\r\nIt could be made into an extension or simply as is with maven-caching being put into the distribution.",
    "head_branch": "MNG-7129_Separate",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624423fa14f302d393b5a9d",
    "number": 605,
    "body": "This pull request updates Apache Commons CLI from 1.4 to 1.5.0.\r\nIt also fixes a few locations where we did not follow the Commons CLI documentation.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7217) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7217-update-commons-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244240a14f302d393b5a9e",
    "number": 604,
    "body": "This fixes a possible exception when using forked lifecycles.\r\nIn my case, this happens when using the `spotbugs-maven-plugin:spotbugs` plugin which forks the lifecycle (see https://github.com/spotbugs/spotbugs-maven-plugin/blob/spotbugs/src/main/groovy/org/codehaus/mojo/spotbugs/SpotbugsViolationCheckMojo.groovy#L57).",
    "head_branch": "MNG-7129_Modello",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244241a14f302d393b5a9f",
    "number": 603,
    "body": "The goal of [MPH-183](https://issues.apache.org/jira/browse/MPH-183) is to print via which BOM(s) a dependencyManagement dependency got in the effective POM in case of dependencyManagement import.\r\nMNG-7344 implements the required tracking in Maven core effective model.\r\n\r\nThis information was previously not available to the help plugin. This MR:\r\n\r\n- introduces a change to the `InputSource` model to keep a hierarchy of sources (which are POM files) by tracking the POM that imported it\r\n- tracks dependencies through different dependency management imports, setting the hierarchy of sources on the `InputSource` objects\r\n\r\nFor now, this code has been written under the assumption that a BOM hierarchy (at least at the point the dependency management blocks are imported) is tree-shaped, without diamonds. That is, given a project `P` with dependency `D`, importing BOMs `A` and `B`, BOM `C` with dependency `D`, only `A` or `B` (not both) can import `C`.\r\n\r\n- [ ] Check assumption\r\n\r\nIf such a structure would be possible, the end result may be incorrectly represented as `C via B via A`, which is not correct, because there is no direct relationship between `A` and `B`.\r\n\r\nFurthermore, at the moment the original `InputSource` of the file is mutated. This makes the hierarchy valid for all imported dependencies, and potentially other parts of the effective POM. This may not be desirable. A relatively minor change, replacing `InputSource` objects that are about to be mutated, would solve this issue. In case updating the original `InputSource` is desirable, there _may_ be a better place to set it.\r\n\r\n- [ ] Check solution strategy\r\n\r\nAny input on the above points is highly appreciated.\r\n\r\nA pull request for printing this information in the effective POM: https://github.com/apache/maven-help-plugin/pull/37\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MPH-183_dependency-management-hierarchy-inputsource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244242a14f302d393b5aa0",
    "number": 602,
    "body": "Merely a draft for:\r\n* https://cwiki.apache.org/confluence/display/MAVEN/Commandline+inheritance",
    "head_branch": "maven.config-from-start-scripts",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244243a14f302d393b5aa1",
    "number": 601,
    "body": "https://issues.apache.org/jira/browse/MNG-7316\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n",
    "head_branch": "MNG-7316",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244244a14f302d393b5aa2",
    "number": 600,
    "body": "This is just an example how to expose logger levels (by logger name)\r\nto configure their levels.\r\n",
    "head_branch": "logger-levels-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244245a14f302d393b5aa3",
    "number": 599,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7314",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7314] - Refactoring - Remove unused MavenExecutionResult"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244246a14f302d393b5aa4",
    "number": 598,
    "body": null,
    "head_branch": "MNG-7129_Modello",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244247a14f302d393b5aa5",
    "number": 597,
    "body": "after initial merge of Deutsche Bank donation to MNG-7129 branch #526, let's rework the code to better match Maven codebase\r\n\r\nFor example switching from jaxb2 to Modello",
    "head_branch": "MNG-7129",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244248a14f302d393b5aa6",
    "number": 596,
    "body": "As discussed some months ago.",
    "head_branch": "simplify-args",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Simplify args help"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244249a14f302d393b5aa7",
    "number": 595,
    "body": "Revert \"[MNG-7251] Fix threadLocalArtifactsHolder leaking into cloned project\"\r\n\r\nThis reverts commit 4e5b3d55545e5f03f05ac7b0cd1b56689df36201.\r\n\r\nRevert \"[MNG-6843] Parallel build fails due to missing JAR artifacts in compilePath\"\r\n\r\nThis reverts commit 76d5f0d942f52650d3bdf775b6af42d23d69066b.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7312-maven-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624424aa14f302d393b5aa8",
    "number": 594,
    "body": "Revert \"[MNG-7251] Fix threadLocalArtifactsHolder leaking into cloned project\"\r\n\r\nThis reverts commit a6e462b53a4b6c87ef43f6cfe7fbde0b0939e3d6.\r\n\r\nRevert \"[MNG-6843] Parallel build fails due to missing JAR artifacts in compilePath\"\r\n\r\nThis reverts commit 73e00ed85df84ba0c557dd020740812b2453f2d3.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7312",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624424ba14f302d393b5aa9",
    "number": 593,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7311",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624424ca14f302d393b5aaa",
    "number": 592,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7308",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624424da14f302d393b5aab",
    "number": 591,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7307",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624424ea14f302d393b5aac",
    "number": 590,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7306",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624424fa14f302d393b5aad",
    "number": 589,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7304",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244250a14f302d393b5aae",
    "number": 588,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7303",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7303] - Replace Throwable.initCause() with constructor."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244251a14f302d393b5aaf",
    "number": 587,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7302",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244252a14f302d393b5ab0",
    "number": 586,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/projects/MNG/issues/MNG-6389) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6389-introduce-seperate-toolchain-artifact",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244252a14f302d393b5ab1",
    "number": 585,
    "body": "\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7302",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244253a14f302d393b5ab2",
    "number": 584,
    "body": "It may lead to confusion as parameters (list) and\r\nparametersMap (map) may \"fall apart\" easily.\r\n\r\nAlso, parametersMap did not honor parameter\r\nordering while parameters list makes it look\r\nthat order is important.\r\nSimply, rebuild the map always and retain\r\nordering as well.\r\n\r\nAdded UT and also removed some cruft provided\r\nby java8.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7309\r\nSee https://github.com/apache/maven/pull/291",
    "head_branch": "do-not-keep-parameters-map",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6776] Inconsistent list of parameters for MojoDescriptor (#584)\n\nIt may lead to confusion as parameters (list) and\r\nparametersMap (map) may \"fall apart\" easily.\r\n\r\nAlso, parametersMap did not honor parameter\r\nordering while parameters list makes it look\r\nthat order is important.\r\nSimply, rebuild the map always and retain\r\nordering as well.\r\n\r\nAdded UT and also removed some cruft provided\r\nby java8.\r\n\r\n---\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7309"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244254a14f302d393b5ab3",
    "number": 583,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7299",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244255a14f302d393b5ab4",
    "number": 582,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7298",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7298] - Avoid redundant conditions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244256a14f302d393b5ab5",
    "number": 581,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7297",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7297] Remove redundant type arguments (#581)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244257a14f302d393b5ab6",
    "number": 580,
    "body": "now that I understand the different pieces behind wrapper :)\r\n\r\nI still have a few additional questions:\r\n- are sha512 checksums really useful?\r\n- are these files intended to be distributed in Apache dist?",
    "head_branch": "MNG-6914_2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6914] move assembly descriptors to src/assembly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244258a14f302d393b5ab7",
    "number": 579,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7296",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MNG-7296 - Remove redundant 'if' statement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244259a14f302d393b5ab8",
    "number": 578,
    "body": "As mentioned here https://github.com/apache/maven/pull/570#issuecomment-939153676, this removes the `ThreadLocal` from `MavenProject` that was introduced in 3.8.2 and instead adds locking to `MojoExecutor` to prevent MNG-6843.\r\n\r\nThe major advantage is that there are no threading visibility issues anymore when passing around `MavenProject`s.\r\n\r\nThe major downside is that `MavenProject` artifacts are not \"protected\" anymore from concurrent modifications, just as in 3.8.1 and before.\r\nAnother downside is higher overall build runtime in case an aggregating goal takes some time to finish as it will block all other mojo executions until finished (in parallel build mode).\r\n\r\nIt does fix MNG-6843 which can be verified via https://github.com/famod/parallel-testbed/tree/compiler-fix\r\n\r\nPS: The root cause can only be solved with a proper refeactoring like #475 but I don't think even that is enough.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7285-alternate-fix-for-MNG-6843",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624425aa14f302d393b5ab9",
    "number": 577,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7286",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MNG-7295 - Remove redundant/unused import statements."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624425ba14f302d393b5aba",
    "number": 576,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7287",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624425ca14f302d393b5abb",
    "number": 575,
    "body": "This PR introduce no API change, merely refactors MavenSession\r\ngetPluginContext method to truly thread-safe.\r\n\r\nAlso added Javadoc with explanations.\r\n\r\n---\r\nhttps://issues.apache.org/jira/browse/MNG-7294\r\n",
    "head_branch": "maven-session-plugincontext",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Refactor MavenSession#getPluginContext to be thread safe (#575)\n\nThis PR introduce no API change, merely refactors MavenSession\r\ngetPluginContext method to truly thread-safe.\r\n\r\nAlso added Javadoc to affected field and method."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624425da14f302d393b5abc",
    "number": 574,
    "body": null,
    "head_branch": "MNG-7293",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MNG-7293:fix resource leak due to Files.walk"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624425ea14f302d393b5abd",
    "number": 573,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7292",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624425fa14f302d393b5abe",
    "number": 572,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7291",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7291] Avoid String concatenation in loops (#572)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244260a14f302d393b5abf",
    "number": 571,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7290",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244261a14f302d393b5ac0",
    "number": 570,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7285-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244262a14f302d393b5ac1",
    "number": 569,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7288",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244263a14f302d393b5ac2",
    "number": 568,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-7287",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244263a14f302d393b5ac3",
    "number": 567,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-dead-link-for-github-pr-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "(doc) Update dead link for Github PR docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244264a14f302d393b5ac4",
    "number": 566,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6762) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n - [x] If your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n----\r\n\r\nBefore, when a settings.xml file was referenced in `maven.config`, it was resolved against the working directory, which would break when maven is invoked in a submodule. This PR changes it to resolve against the multi module root.\r\n\r\nRelevant integration tests: https://github.com/apache/maven-integration-testing/pull/120\r\nJenkins: https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/MNG-6762-multi-module-relative-settings/1/",
    "head_branch": "MNG-6762-multi-module-relative-settings",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244265a14f302d393b5ac5",
    "number": 565,
    "body": "This is a DRAFT that started as booster for discussion about Mojo\r\nlogging. \r\n\r\nRe logging: I believe Maven should not get in a way to\r\nMaven Plugin developers, but we still can offer\r\nsome \"convenience\" helpers and make things right\r\n(like for example logging in ctor of Mojo).\r\n\r\nIMHO, I distinguish 2 log-related situations:\r\n* trivial to simple Maven Plugins (from one mojo plugin to more mojos + several \"own\"\r\n  components): here developer can easily choose (and usually choose Mojo Log)\r\n  to do the job. Maven is helping here.\r\n* complex Maven plugins: plugins pulling in \"foreign\" frameworks/components/whatever,\r\n  here logging is usually \"given\", but as Mojo class loader is \"self first\", it is really\r\n  easy for developer to decide (and implement) which logging it wants (or must) to\r\n  use, Maven should not interfere.\r\n\r\nOne thing IMHO remains, to make Mojo Log interface more \"slf4j Logger\"-lookalike.\r\nThis is just a \"quick draft\" adjusted to make ITs pass, but I am sure there are some (binary)\r\nincompatibilities remaining we'd need to investigate and fix.\r\n\r\nOther changes: ~~MavenSession (compatible) update, to make clear Mojo contexts are\r\nConcurrentMaps~~. And a bit of Mojo context cleanup, mostly regarding Javadoc\r\nmentioning how should it be used.\r\n\r\nChanges in this PR:\r\n* un-deprecate Log and Log related methods on Mojo, AbstractMojo\r\n* ~~introduce LogFactory **component** for those seeking for simple logging solution from Mojos and own components~~\r\n* loggers are lazily looked up and \"memoized\" (thanks Romain)\r\n* classes Mojo, AbstractMojo are mostly unchanged (Log injection here happens \"manually\" in DefMvnPluginMgr as before)\r\n* ~~MavenSession plugin context change (is ConcurrentMap)~~\r\n* Javadoc around Mojo Context\r\n\r\nIssues:\r\n* https://issues.apache.org/jira/browse/MNG-7084 -- indirectly fixes (does not adds injection of Log instances due simplicity, it ads a component that may be used for same thing, for example with using ctor injection)\r\n* https://issues.apache.org/jira/browse/MNG-7083 -- TBD, make Log SLF4J Logger \"alike\"\r\n* https://issues.apache.org/jira/browse/MNG-7082 -- fixes",
    "head_branch": "mojo-logging",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244266a14f302d393b5ac6",
    "number": 564,
    "body": "This constructor was deprecated in Maven 3.0-RC1 (!!!).\r\nRemoval also means that Maven4 will NOT work with\r\n(Maven2 compatible) m-enforcer-p 2.x, only with\r\nmodern m-enforcer-p 3.x line.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7279\r\n",
    "head_branch": "MNG-7279-drop-deprecated-ctor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7279] Drop deprecated constructor (#564)\n\nThis constructor was deprecated in Maven 3.0-RC1 (!!!).\r\nRemoval also means that Maven4 will NOT work with\r\n(Maven2 compatible) m-enforcer-p 2.x, only with\r\nmodern m-enforcer-p 3.x line."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244267a14f302d393b5ac7",
    "number": 563,
    "body": "This PR makes VersionScheme a component, is injected where needed\r\n(instead of ad-hoc instantiation), but provides room for\r\ndifferent schemas, as GenericVersionScheme is \"default\"\r\nbut now nothing stops to add other schemes as well.",
    "head_branch": "mng-7103-versionScheme-provider",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7103] VersionScheme provider (#563)\n\nThis PR makes VersionScheme a component, is injected where needed\r\n(instead of ad-hoc instantiation), but provides room for\r\ndifferent schemas, as GenericVersionScheme is \"default\"\r\nbut now nothing stops to add other schemes as well."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244268a14f302d393b5ac8",
    "number": 562,
    "body": "We had all kind of Loggers in Core, some Plexus\r\ninjected, some acquired using SLF4J LoggerFactory,\r\nsome static, some final, etc.\r\n\r\nThis PR aligns all those uses to SLF4J finals.\r\n\r\nNotices:\r\n* maven-core does NOT use Plexus Logger anymore\r\n* did not touch maven-compat\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7278",
    "head_branch": "cleanup-core-logging",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7278] Clean up core logging (#562)\n\nWe had all kind of Loggers in Core, some Plexus\r\ninjected, some acquired using SLF4J LoggerFactory,\r\nsome static, some final, etc.\r\n\r\nThis PR aligns all those uses to SLF4J finals.\r\n\r\nNotices:\r\n* maven-core does NOT use Plexus Logger anymore\r\n* did not touch maven-compat"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244269a14f302d393b5ac9",
    "number": 561,
    "body": "https://issues.apache.org/jira/browse/MNG-7275",
    "head_branch": "MNG-7275",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624426aa14f302d393b5aca",
    "number": 560,
    "body": "\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7277",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7277] - Remove useless Test - testNonNumericVersionRepresentationReturnsANumberFormatException"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624426ba14f302d393b5acb",
    "number": 559,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7274",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7274] - JUnit Jupiter via BOM"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624426ca14f302d393b5acc",
    "number": 558,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7272",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7272] - Code Improvement - II"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624426da14f302d393b5acd",
    "number": 557,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7271",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7271] - Code Improvement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624426ea14f302d393b5ace",
    "number": 556,
    "body": "In some circumstances the init script called `which`, which may or may\r\nnot be available on the host system. Instead, use `command -v`, which is\r\nnearly equivalent. One area it differs is if the command being queried\r\nis defined as a shell alias. To avoid that, call `unalias -a` to\r\nundefine any aliases in the subshell. Also call `unset -f command` to\r\navoid the situation where \"command\" has been re-defined as a shell\r\nfunction.\r\n\r\nSee here for more information on this approach:\r\n<https://pubs.opengroup.org/onlinepubs/009695399/utilities/command.html>\r\n\r\nTested with bash, sh (bash invoked as sh), posh, dash, zsh and mksh.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7270\r\n\r\n`mvn clean verify` passed.\r\n\r\nI've signed the CLA.\r\n\r\n----\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "jmtd-init-which",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624426fa14f302d393b5acf",
    "number": 555,
    "body": "Maven Artifact Transfer silently prevents group level metadata to reach Resolver and causes metadata loss on install/deploy. Fix is to \"bridge\" this from maven-resolver-provider (and core) by reusing the actual metadata that m-plugin-p:addPluginArtifactMetadata mojo adds, but m-a-t filters out.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7055",
    "head_branch": "fix-group-metadata-deploy",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7055] Fix G level metadata handling (#555)\n\nMaven Artifact Transfer silently prevents group level metadata to reach Resolver and causes metadata loss on install/deploy. Fix is to \"bridge\" this from maven-resolver-provider (and core) by reusing the actual metadata that m-plugin-p:addPluginArtifactMetadata mojo adds, but m-a-t filters out."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244270a14f302d393b5ad0",
    "number": 554,
    "body": "Now that Plexus XMLs (and components) are out, no need\r\nfor this plugin in maven-core module anymore.\r\n\r\nChanges:\r\n* convert DefaultLifecyclePluginAnalyzer to JSR330 (last plexus component in core)\r\n* drop dependency on plexus-component-annotations (note: it is still there but only as transitive dep of plexus-shim, needed to boot up Plexus Shim in tests)\r\n* remove plexus-component-metadata plugin from build\r\n* drop unused test Plexus XML\r\n\r\nFixes https://issues.apache.org/jira/browse/MNG-6898",
    "head_branch": "drop-core-plexus-component-metadata",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6898] Drop plexus-component-metadata plugin from maven-core (#554)\n\nNow that Plexus XMLs (and components) are out, no need\r\nfor this plugin in maven-core module anymore.\r\n\r\nChanges:\r\n* convert DefaultLifecyclePluginAnalyzer to JSR330 (last plexus component in core)\r\n* drop dependency on plexus-component-annotations (note: it is still there but only as transitive dep of plexus-shim, needed to boot up Plexus Shim in tests)\r\n* remove plexus-component-metadata plugin from build\r\n* drop unused test Plexus XML"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244271a14f302d393b5ad1",
    "number": 553,
    "body": "This PR is a proposal to get rid of the `PlexusContainer` interface in maven.  All the remaining references arena `maven-compat` (which should hopefully be removed, see https://github.com/apache/maven/pull/552) and in the new `maven-container` module.  The `plexus-testing` module has been switched to the test-jar from the new module which uses the new API.  \r\n\r\nI think the idea would be to make `maven-container` it's own project so that it can be reused through other maven components, like `maven-resolver`.  A possible evolution is to completely get rid of `sisu-plexus` and implement it inside this new `maven-container` project, but that's definitely out of scope for this PR.\r\n",
    "head_branch": "container",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244272a14f302d393b5ad2",
    "number": 552,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7266",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244273a14f302d393b5ad3",
    "number": 551,
    "body": "This change gets rid of another set of Plexus components\r\ndefined in XML.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7265",
    "head_branch": "convert-artifact-handlers-xml",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244274a14f302d393b5ad4",
    "number": 550,
    "body": "This change get rids of Plexus components defined in META-INF/plexus/default-bindings.xml and converts them to Providers.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7264",
    "head_branch": "drop-default-bindings.xml",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7264] Convert maven-core default-bindings to Providers (#550)\n\nThis change get rids of Plexus components defined in META-INF/plexus/default-bindings.xml and converts them to Providers."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244275a14f302d393b5ad5",
    "number": 549,
    "body": "This change get's rid of component.xml in maven-core\r\n\r\nIssue: https://issues.apache.org/jira/browse/MNG-7263",
    "head_branch": "drop-components-xml",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #549 from apache/drop-components-xml\n\n[MNG-7263] Convert maven-core components XML to Providers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244276a14f302d393b5ad6",
    "number": 548,
    "body": "https://issues.apache.org/jira/browse/MNG-6898\r\n\r\nThis is a hackish solution for the conversion.\r\n\r\nIssue is correct, w/o hack the MavenITmng4385LifecycleMappingFromExtensionInReactorTest\r\nIT fails, while with this hack all ITs pass.\r\n\r\nStill, I consider this hack, and probably could be solved\r\non much better way as well.",
    "head_branch": "MNG-6898-DefaultLifecyclePluginAnalyzer-hack",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244277a14f302d393b5ad7",
    "number": 547,
    "body": "A few refactoring commits....\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-5577] Use JSR 330 constructor injection\n\n# Conflicts:\n#\tmaven-core/src/main/java/org/apache/maven/lifecycle/internal/DefaultLifecyclePluginAnalyzer.java"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244278a14f302d393b5ad8",
    "number": 546,
    "body": "Hi all,\r\n\r\nThis patch fixes the warnings issued by `dependency:analyze`. I used the command `mvn dependency:analyze -Drat.skip=true` to analyze my branch `MNG-7248`. There is no warning about `compile` locally. But I didn't use `mvn clean verify` to run the test because the `rat test` failed and other issues occurred locally.\r\n\r\nThanks for taking the time to review.\r\nAnd should I sign the [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf)?\r\n\r\nBest Regards,\r\n-- Guoxiong\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7248",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244279a14f302d393b5ad9",
    "number": 545,
    "body": "This closes #545",
    "head_branch": "MNG-7210",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7210] Deprecate mavenrc_{pre,post}.{bat,cmd} scripts\n\nThis closes #545"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244279a14f302d393b5ada",
    "number": 544,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624427aa14f302d393b5adb",
    "number": 543,
    "body": "Following this checklist to help us incorporate your \ncontribution quickly and easily:\n\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \n       for the change (usually before you start working on it).  Trivial changes like typos do not \n       require a JIRA issue.  Your pull request should address just this issue, without \n       pulling in other changes.\n - [X] Each commit in the pull request should have a meaningful subject line and body.\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\n       is to use the JIRA issue title in the pull request title and in the first line of the \n       commit message.\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \n       be performed on your pull request automatically.\n - [x] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under \nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "MNG-7253",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624427ba14f302d393b5adc",
    "number": 542,
    "body": "…29 (workaround)\r\n\r\nThis closes #542\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7254_maven-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624427ca14f302d393b5add",
    "number": 541,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7252",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624427da14f302d393b5ade",
    "number": 540,
    "body": "This closes #540\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7045_maven-3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7045] Drop CDI API from Maven\n\nThis closes #540"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624427ea14f302d393b5adf",
    "number": 539,
    "body": "This PR updates SISU Inject/Plexus to 0.3.5 release.\r\n\r\nThis change fixes the issue MNG-7214 as the HTTP repository is gone (only HTTPS are used), actually all comes from Maven Central now.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7249",
    "head_branch": "sisu-inject-035",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7250] Upgrade Sisu Inject/Plexus to 0.3.5\n\nSince we have replaced the old JSR 250 library with javax.annotation library we\ngo straight to 1.3.2 because Maven Resolver 1.7.0 introduced this already as a\ntransitive dependency in fc806a25eb2aa22d15c5fd1b7a31f52c7202112e.\nThe only difference between version 1.2 and 1.3.2 is a Java upgrade from 6 to 8.\n\nThis closes #539"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624427fa14f302d393b5ae0",
    "number": 538,
    "body": "This PR updates SISU Inject/Plexus to upcoming 0.3.5 release.\r\n\r\nNote: javax.annotation-api (used instead of ancient jsr250 jar) is CDDL licensed, hence RAT will fail if you try to build this branch (`-Drat.skip`).\r\n\r\nThis change fixes the issue MNG-7214 as the HTTP repository is gone (only HTTPS are used), actually all comes from Maven Central now. In this very moment, SISU 0.3.5 is _staged only_, is not available from Maven Central yet (but from OSSRH https://oss.sonatype.org/content/groups/staging/)",
    "head_branch": "sisu-inject-035",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244280a14f302d393b5ae1",
    "number": 537,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7234-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244281a14f302d393b5ae2",
    "number": 536,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7234-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244282a14f302d393b5ae3",
    "number": 535,
    "body": "Just like #527 but for `master`.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7220-clone-tl-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244283a14f302d393b5ae4",
    "number": 534,
    "body": "Both plexus-cipher and plexus-sec-dispatcher had\r\ngroupId change, but plexus-cipher change was implemented\r\nfor 1.8 version.\r\n\r\nLatest versions of artifacts are 2.0. This PR\r\nups plexus-cipher version and adds proper changes\r\nfor plexus-sec-dispatcher groupId change.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-7246",
    "head_branch": "MNG-7246-plexus-sec-dispatcher",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7246] Upgrade Plexus Cipher and Sec Dispatcher to 2.0\n\nBoth plexus-cipher and plexus-sec-dispatcher have had a\ngroupId change, but plexus-cipher change was implemented\nfor 1.8 version.\n\nLatest versions of artifacts are 2.0. This PR\nups plexus-cipher version and adds proper changes\nfor plexus-sec-dispatcher groupId change.\n\nThis closes #534"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244284a14f302d393b5ae5",
    "number": 533,
    "body": "…the session\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7236-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7236] The DefaultPluginVersionResolver should cache results for the session"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244285a14f302d393b5ae6",
    "number": 532,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7235-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244286a14f302d393b5ae7",
    "number": 531,
    "body": "…the session\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7236-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7236] The DefaultPluginVersionResolver should cache results for the session"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244287a14f302d393b5ae8",
    "number": 530,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7235-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244288a14f302d393b5ae9",
    "number": 529,
    "body": "I didn't create a JIRA issue, this is a trivial change.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "doc_for_checksumPolicy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244289a14f302d393b5aea",
    "number": 528,
    "body": "as it ignores pom file\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7226",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7226] DefaultModelBuilder.buildRawModel fails (#528)\n\nas it ignores pom file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624428aa14f302d393b5aeb",
    "number": 527,
    "body": "Details are here: https://issues.apache.org/jira/browse/MNG-7220?focusedCommentId=17402807&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17402807\r\n\r\nAgain, I had to become creative with removing empty lines to comply with the Checkstyle 2000 lines max check.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7220-clone-tl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624428ba14f302d393b5aec",
    "number": 526,
    "body": "To familiarize yourself with the feature we recommend to start with the provided doc: https://github.com/deutschebank/maven/blob/7d1b8c094f2145909978142a0faa4257a244dc22/Documentation/CACHE.md\r\n\r\n\r\nAn example of nginx config for remote cache:\r\n```\r\nworker_processes  4;\r\n\r\nevents {\r\n    worker_connections  1024;\r\n}\r\n\r\n\r\nhttp {\r\n    include       mime.types;\r\n    default_type  application/octet-stream;\r\n\r\n    sendfile        on;\r\n\r\n    keepalive_timeout  65;\r\n\r\nuht=\"$upstream_header_time\" urt=\"$upstream_response_time\"';\r\n\r\n    server {\r\n        listen       10080;\r\n        server_name  localhost;\r\n\r\nupstream_time;\r\n        access_log   off;\r\n\r\n        location / {\r\n            root  <PATH_TO_CACHE_FOLDER>;\r\n            autoindex on;\r\n            client_max_body_size 1G;\r\n            client_body_temp_path <PATH_TO_TEMP_CACHE_FOLDER>;\r\n            dav_methods PUT DELETE MKCOL COPY MOVE;\r\n            create_full_put_path  on;\r\n            dav_access            group:rw  all:r;\r\n        }\r\n    }\r\n}\r\n```",
    "head_branch": "MNG-7129/maven-3.6.3-incremental",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #4 in ABFX/maven-forked from incremental-maven-3.6.3 to MNG-7129/maven-3.6.3-incremental\n\nSquashed commit of the following:\n\ncommit 21c620a34ddbbf84b3c44014b069a7b222cf91a7\nAuthor: Maximilian Novikov <maximilian.novikov@db.com>\nDate:   Tue Aug 10 19:41:41 2021 +0200\n\n    Merge pull request #3 in ABFX/maven-forked from code-cleanup-2 to incremental-maven-3.6.3\n\n    Squashed commit of the following:\n\n    commit 3401739ec9eb957fb03887f6a3c24477c9c3327b\n    Author: Alexander Ashitkin <alexander.ashitkin@db.com>\n    Date:   Tue Aug 10 13:37:13 2021 -0400\n\n        cleanup db specifics\n\n    commit 5d32f00559951445ecaf7d5ec4d847541c10e7e9\n    Author: Alexander Ashitkin <alexander.ashitkin@db.com>\n    Date:   Tue Aug 10 11:05:28 2021 -0400\n\n        cleanup db specifics\n\ncommit fcec28f82c0d447de64032c610b39fa75bb344b0\nMerge: 6fd401af2 5b0dc1858\nAuthor: Alexander Ashitkin <alexander.ashitkin@db.com>\nDate:   Mon Aug 9 13:22:16 2021 +0100\n\n    Pull request #9: Remote cache setup\n\n    Merge in BND/maven-forked from feature/remote-cache-setup to incremental-maven-3.6.3\n\n    * commit '5b0dc1858cf4ca499502f0741b2f3bf2ac55530c':\n      remote cache setup - fail fast, baseline build, diff reporting, documentation.\n\ncommit 5b0dc1858cf4ca499502f0741b2f3bf2ac55530c\nAuthor: Alexander Ashitkin <alexander.ashitkin@db.com>\nDate:   Mon Mar 22 03:30:03 2021 +0100\n\n    remote cache setup - fail fast, baseline build, diff reporting, documentation.\n\ncommit 6fd401af285692df568312ee66ee00edfe21f1cc\nAuthor: Maximilian Novikov <maximilian.novikov@db.com>\nDate:   Tue Apr 13 17:36:49 2021 +0100\n\n    Pull request #8: Incremental Maven - added non-overrideable cache entries\n\n    Merge in BND/maven-forked from non-overritable-build-info to incremental-maven-3.6.3\n\n    Squashed commit of the following:\n\n    commit 405bbef8a59cabc0b83e9a64717f65fbd6fb9e3d\n    Author: maximilian.novikov@db.com <maximilian.novikov@db.com>\n    Date:   Mon Apr 12 20:18:27 2021 +0200\n\n        Incremental Maven - added non-overrideable cache entries - review fixes\n\n    commit 197704672756e558fb3521e16859d0be324044b8\n    Author: maximilian.novikov@db.com <maximilian.novikov@db.com>\n    Date:   Fri Apr 9 11:35:48 2021 +0200\n\n        Incremental Maven - added non-overrideable cache entries\n\ncommit 64c4b1f5cbdf920ad43560f34cc5be56d4557acf\nAuthor: Alexander Ashitkin <alexander.ashitkin@db.com>\nDate:   Tue Mar 9 04:10:20 2021 +0100\n\n    injected version\n\ncommit 727e507ae2fd90dce7011f3f1c76eb4969577d5e\nAuthor: maximilian.novikov@db.com <maximilian.novikov@db.com>\nDate:   Wed Jan 13 16:17:25 2021 +0100\n\n    Incremental Maven - Java 11 fix\n\ncommit b2f297566d5afcb0a285985cb5540685a28cafec\nAuthor: maximilian.novikov@db.com <maximilian.novikov@db.com>\nDate:   Tue Jan 12 14:10:08 2021 +0100\n\n    Incremental Maven - initial commit"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6624428ca14f302d393b5aed",
    "number": 525,
    "body": "@mickaelistria Please have a look.",
    "head_branch": "test-for-MNG-5669",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624428da14f302d393b5aee",
    "number": 524,
    "body": "This reverts commit 5a8997312680a4b9c69a129801524691bc546c08.",
    "head_branch": "maven-3.8.x-revert-MNG-7170",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624428da14f302d393b5aef",
    "number": 523,
    "body": "This requires #522 first to be merged.",
    "head_branch": "MNG-7208",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624428ea14f302d393b5af0",
    "number": 522,
    "body": "This closes #522\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7209",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624428fa14f302d393b5af1",
    "number": 521,
    "body": "Signed-off-by: Olivier Lamy <olamy@apache.org>\n\nFollowing this checklist to help us incorporate your \ncontribution quickly and easily:\n\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \n       for the change (usually before you start working on it).  Trivial changes like typos do not \n       require a JIRA issue.  Your pull request should address just this issue, without \n       pulling in other changes.\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\n       is to use the JIRA issue title in the pull request title and in the first line of the \n       commit message.\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \n       be performed on your pull request automatically.\n - [ ] You have run the [Core IT][core-its] successfully.\n\nIf your pull request is about ~20 lines of code you don't need to sign an\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\nplease ask on the developers list.\n\nTo make clear that you license your contribution under \nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\nyou have to acknowledge this by using the following check-box.\n\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\n\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\n\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\n",
    "head_branch": "maven-3.8.x_mavenProject_use_InheritableThreadLocal",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244290a14f302d393b5af2",
    "number": 520,
    "body": "This closes #520\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7205",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7205] Simplify/unify Cygwin/MingGW handling in startup scripts\n\nThis closes #520"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244291a14f302d393b5af3",
    "number": 519,
    "body": "This closes #519\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7203",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7203] Introduce a long option --verbose and deprecate --debug\n\nThis closes #519"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244292a14f302d393b5af4",
    "number": 518,
    "body": "…les two options at once\r\n\r\nThis closes #518\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7199",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7199] MAVENHOME_CONFIG var in mvnlauncher script improperly handles two options at once\n\nThis closes #518"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244293a14f302d393b5af5",
    "number": 517,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "collapse-mvnDebug-into-mvn",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244294a14f302d393b5af6",
    "number": 516,
    "body": "Replace ci-builds occurences by ci-maven\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - ~[ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.~\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - ~[ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.~\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - ~[ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.~\r\n - ~[ ] You have run the [Core IT][core-its] successfully.~\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "ci-maven",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #516 from aheritier/ci-maven\n\n[chore] - Update CI environment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244295a14f302d393b5af7",
    "number": 515,
    "body": "This closes #515\r\n\r\n\r\nPlease review especially the Windows part, it works for me in PowerShell, but who knows.\r\n\r\nOne thing is missing: Shall It touch `mvnwDebug` and `mvnwDebug.cmd` also?",
    "head_branch": "MNG-7075",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244296a14f302d393b5af8",
    "number": 514,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7195",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244297a14f302d393b5af9",
    "number": 513,
    "body": "This closes #512\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7197",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7197] Simplify exit code handling in Windows command startup script\n\nThis closes #512"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244298a14f302d393b5afa",
    "number": 512,
    "body": "This closes #512\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7010",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244299a14f302d393b5afb",
    "number": 511,
    "body": "…rc in Bourne shell does\r\n\r\nThis closes #511\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6648",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624429aa14f302d393b5afc",
    "number": 510,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6656_Features",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624429ba14f302d393b5afd",
    "number": 509,
    "body": "This closes #509",
    "head_branch": "MNG-7046",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624429ca14f302d393b5afe",
    "number": 492,
    "body": "…tartup scripts\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7192",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624429da14f302d393b5aff",
    "number": 490,
    "body": "…startup scripts\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7189",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624429da14f302d393b5b00",
    "number": 489,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6271",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624429ea14f302d393b5b01",
    "number": 488,
    "body": "Since we don't have a clear specification of the file format change\r\nreading of the file to a one-arg-per-line basis just like Java's\r\n@argfiles or Python's argparse would handle it.\r\nConsider that jvm.config suffers from the same issue its parsing is not\r\nportable between Bourne shell and Windows Command prompt.\r\n\r\n\r\nWe also need to change [this](https://maven.apache.org/configure.html) and mention that `jvm.config` parsing is not portable.\r\n\r\nI am inclined to backport this to 3.8.x although this might break for people for two reasons:\r\n* Consistency between Maven 3 and 4\r\n* Config files can be changed and will continue to work on older Maven versions\r\n* All other arg file approaches use a one-arg-per-line approach",
    "head_branch": "MNG-7131",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624429fa14f302d393b5b02",
    "number": 487,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7185",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a0a14f302d393b5b03",
    "number": 486,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "pull-parser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7182] Use the MX xpp parser instead of a STAX transformation (#486)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a1a14f302d393b5b04",
    "number": 485,
    "body": "This closes #485\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6241",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a2a14f302d393b5b05",
    "number": 484,
    "body": "This is a backport of be8ced6be3e9758a2373a8b62647329a2110151f.\r\n\r\nThe difference to master is that I had to implement `org.apache.maven.model.building.DefaultModelBuilderTest.BaseModelResolver.resolveModel(String, String, String)` otherwise it ends with a NPE.",
    "head_branch": "MNG-7034_3.8.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a3a14f302d393b5b06",
    "number": 483,
    "body": "This is a proposed merge request that came from the discussion of \r\nhttps://github.com/apache/maven-shade-plugin/pull/26\r\nhttps://issues.apache.org/jira/browse/MSHADE-326\r\n\r\nEssentially the discussion (with @michael-o @rfscholte) came to the point where it seemed that the rootcause of the problem in the maven-shade-plugin was really a problem in maven itself where it does not reload the changes in the project (after shade modified it) thus causing incorrect data to be read in the rest of a multi-module project.\r\n\r\nThis simply removes this \"skip cache refresh\" code (that was originally annotated as a hack!)\r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MSHADE-326-RemoveHack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a4a14f302d393b5b07",
    "number": 482,
    "body": "Backport of #413 as suggested here: https://issues.apache.org/jira/browse/MNG-6843?focusedCommentId=17369837&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17369837 (/cc @michael-o)\r\n\r\nCherry-picked, but had to drop the lambda expression, which in turn bumped the line count to > 2000 and since I could not figure out how to suppress the FileLength checkstyle rule, I removed some blank lines where I saw fit.\r\n\r\nPS: Checklist removed for less noise, ICLA is present.",
    "head_branch": "MNG-6843-parallel-classpath-3.8.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a5a14f302d393b5b08",
    "number": 481,
    "body": "dummy line added\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a6a14f302d393b5b09",
    "number": 480,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7172",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a7a14f302d393b5b0a",
    "number": 479,
    "body": "It is broken since 3.6.2 or so, when ModelBuilder got decorated with\r\nJSR330 injections, that work in sisu but not in Guice as it needs\r\nexplicit bindings added.\r\n\r\nThis is an UT that proves that module is incomplete.\r\n",
    "head_branch": "MNG-7173-resolver-guice-module",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a8a14f302d393b5b0b",
    "number": 478,
    "body": "Actually a subset of MNG-5669 / 5cdb8332f99a36e5a1da202da43e3c7dfbb49322\r\n\r\nAlso-By: rfscholte <rfscholte@apache.org>\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7170",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442a9a14f302d393b5b0c",
    "number": 477,
    "body": "This PR improves the build time wrt to checkstyle.\r\nTwo other PRs will follow eventually to incorporate https://github.com/codehaus-plexus/modello/pull/116, https://github.com/codehaus-plexus/modello/pull/117 and https://github.com/mojohaus/animal-sniffer/pull/165 if possible.\r\nThose 4 fixes make subsequent builds much smoother.",
    "head_branch": "build-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve the use of checkstyle in the build (#477)\n\n* Improve the use of checkstyle in the build\r\n* Fix wording"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442aaa14f302d393b5b0d",
    "number": 476,
    "body": "…oals\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7156",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442aba14f302d393b5b0e",
    "number": 475,
    "body": "… from a MavenProject inside a mojo\r\n\r\nFollow-up on #413 ...",
    "head_branch": "MNG-7157",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442aca14f302d393b5b0f",
    "number": 474,
    "body": "Sometimes I have nothing additional to say in a message, I just want to propagate the Throwable.\r\n\r\nSee https://issues.apache.org/jira/browse/MNG-7164\r\n\r\n",
    "head_branch": "MNG-7164",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442ada14f302d393b5b10",
    "number": 473,
    "body": "…ensible limits.\r\n\r\nSlightly modified version of https://github.com/apache/maven/pull/472 / https://github.com/apache/maven/pull/472/commits/e47d647eee04888713a1875ddadf2ae1f28bc94e\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6915",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6915] Adapt the logging width to the terminal width, including sensible limits.\n\nSlightly modified version of https://github.com/apache/maven/pull/472/commits/e47d647eee04888713a1875ddadf2ae1f28bc94e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442aea14f302d393b5b11",
    "number": 472,
    "body": "This PR uses the newly introduced Jansi's `getTerminalWidth()` to make the terminal a little bit more responsive.\r\nWe used sensible defaults to ensure the logging output makes sense.\r\nThis is especially useful for bigger screens.\r\n\r\nBy the way, this does not fix issues around characters which are larger than one column. That is still working the same as in master. \r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6915) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6915-make-terminal-width-responsive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442afa14f302d393b5b12",
    "number": 471,
    "body": "",
    "head_branch": "resolver-1.7.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7151] Upgrade Maven Resolver to 1.7.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b0a14f302d393b5b13",
    "number": 470,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6294",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b0a14f302d393b5b14",
    "number": 469,
    "body": "Submitted by: Guillaume Dufour\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7090",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b1a14f302d393b5b15",
    "number": 468,
    "body": "Only there to test https://github.com/apache/maven-integration-testing/pull/107.",
    "head_branch": "use-loopback-address-for-connecting-to-localhost",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b2a14f302d393b5b16",
    "number": 467,
    "body": "@rfscholte ",
    "head_branch": "ver",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b3a14f302d393b5b17",
    "number": 466,
    "body": "Follow-up for #456, now adding Java 17-ea to the matrix.",
    "head_branch": "run-github-actions-it-on-java17-ea",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Run GitHub actions integration tests with Java 17-ea (#466)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b4a14f302d393b5b18",
    "number": 464,
    "body": "\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7133",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b5a14f302d393b5b19",
    "number": 463,
    "body": "This PR intends to briefly explain the new features of 4.0.0 (and the undocumented exclusion prefix).\r\nIn [MNGSITE-444](https://issues.apache.org/jira/browse/MNGSITE-444) we will extend the documentation on the site in more detail.\r\nThis PR depends on https://github.com/apache/maven/pull/459.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n",
    "head_branch": "extend-mvn-help-text",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442b9a14f302d393b5b1a",
    "number": 462,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7134",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442baa14f302d393b5b1b",
    "number": 461,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442bba14f302d393b5b1c",
    "number": 460,
    "body": "The MavenCliTest.testStyleColors is not failing when the build\r\nis under JDK 8 or JDK 11.\r\n\r\nAfter changing to JDK 16, the test fails, this commit is to fix\r\nthe NullPointerException.\r\n\r\nTested on JDK 8, 11 adn 16 with:\r\n\r\n`mvn clean verify`\r\n\r\nIn JDK 8 the method `Paths.get` used in [ResolveFile.java#L47](https://github.com/apache/maven/blob/master/maven-embedder/src/main/java/org/apache/maven/cli/ResolveFile.java#L47) is using internally:\r\n\r\n```java\r\npublic static Path get(String first, String... more) {\r\n    return FileSystems.getDefault().getPath(first, more);\r\n}\r\n```\r\n\r\nbut in JDK 16\r\n\r\n```java\r\npublic static Path get(String first, String... more) {\r\n    return Path.of(first, more);\r\n}\r\n```\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7127-fix-tests-java16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7127] fix MavenCliTest.testStyleColors test in JDK 16\n\nThe MavenCliTest.testStyleColors is not failing when the build\nis under JDK 8 or JDK 11.\n\nAfter changing to JDK 16, the test fails, this commit is to fix\nthe NullPointerException.\n\nTested on JDK 8, 11 adn 16 with:\n\n`mvn clean verify`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442bca14f302d393b5b1d",
    "number": 459,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7112) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\nRelated integration tests: https://github.com/apache/maven-integration-testing/pull/104\r\n",
    "head_branch": "MNG-7112-projects-with-non-recursive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442bda14f302d393b5b1e",
    "number": 458,
    "body": "Follow-up from !448\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7102) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7102-exclude-child-of-aggregator-empty-reactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7102] Exclude all children of aggregators, even if the aggregator was already removed from the reactor."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442bea14f302d393b5b1f",
    "number": 457,
    "body": "",
    "head_branch": "MNG-6806",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442bea14f302d393b5b20",
    "number": 456,
    "body": "",
    "head_branch": "run-github-actions-it-on-java16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Run GitHub actions integration tests with Java 16 (#456)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442bfa14f302d393b5b21",
    "number": 455,
    "body": "…l version",
    "head_branch": "MNG-6075",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c0a14f302d393b5b22",
    "number": 454,
    "body": "Attempt to make it clearer how to bootstrap.  `Run Maven`  wasn't clear which to me.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c1a14f302d393b5b23",
    "number": 453,
    "body": "This PR is raised because the functionality should be consistent with project selection: \r\nhttps://github.com/apache/maven/pull/446#discussion_r579859091\r\n\r\nRelevant Integration test: https://github.com/apache/maven-integration-testing/pull/102\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7051-optional-profile-info-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7051] When an optional profile could not be found, an info message should be thrown instead of a warning."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c2a14f302d393b5b24",
    "number": 452,
    "body": "In #429 we deprecated a few methods related to selecting a profile from the CLI. This pull request updates those deprecated methods, so its easier to find their replacements.\r\n\r\nAlso, the deprecated methods now return unmodifiable collections. This is because the current (Maven 4.0.0-snapshot) implementations return a view of the profiles. If some extension or whatever would add elements to this list it will not have any effect, as opposed to Maven 3.6.3. Our theory is that if we make it unmodifiable, it'll throw an exception if someone tries this. This hopefully points the dev to the method and they notice the replacement methods.\r\n\r\n\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully --> running through GitHub actions.\r\n\r\nTo make clear that you license your contribution under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0) you have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) signed\r\n",
    "head_branch": "MNG-7051-update-deprecation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c3a14f302d393b5b25",
    "number": 451,
    "body": "see https://issues.apache.org/jira/browse/MNG-7107",
    "head_branch": "MNG-7107",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7107] relax profile id validation, different from coordinate id"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c4a14f302d393b5b26",
    "number": 450,
    "body": "Implements a helper component for plugin dependency resolution that provider\r\nfilter and selector that leaves out core artifacts from collection\r\nand resolution.\r\n",
    "head_branch": "MNG-7097-plugin-resolution",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c5a14f302d393b5b27",
    "number": 449,
    "body": "MNG-7103: Instead to ad-hoc create the instance as needed, it is thread safe,\r\nso is fine to have it shared across whole system.\r\n\r\nMoreover, touched classes got converted from ancient plexus-field-like\r\ninjection to proper immutable components, something we really need\r\nstart doing.\r\n\r\nFull conversion (of resolver classes) will become possible once ServiceLocator dropped\r\n(see MRESOLVER-157).\r\n\r\nAlso, the idea of MNG-7104 that a \"touched\" (changed) class become refactored to ctor injection as well.",
    "head_branch": "make-version-scheme-component",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c6a14f302d393b5b28",
    "number": 448,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7102) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7102-exclude-projects-recursively",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7102] The child modules of excluded projects are now excluded as well, making the behavior consistent with MNG-6981."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c7a14f302d393b5b29",
    "number": 447,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "dup-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c8a14f302d393b5b2a",
    "number": 446,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6511) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n-- \r\nThis feature allows users to mark projects as optional when using the --projects (or -pl) switch using the `?`-prefix.\r\nOld behavior is that a non-existing project in the -pl switch will break the build.\r\nIt works similar as the [optional profile functionality (MNG-7051)](https://issues.apache.org/jira/browse/MNG-7051) which was recently introduced on master.\r\n\r\nMatching integration tests: https://github.com/apache/maven-integration-testing/pull/100",
    "head_branch": "MNG-6511-optional-project-selection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442c9a14f302d393b5b2b",
    "number": 444,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7095",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442caa14f302d393b5b2c",
    "number": 443,
    "body": "It fails with maven 4\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442cba14f302d393b5b2d",
    "number": 442,
    "body": "Fix exception on master when using parallel builds.",
    "head_branch": "parallel-builds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442cca14f302d393b5b2e",
    "number": 441,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7093",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442cda14f302d393b5b2f",
    "number": 440,
    "body": "@cstamas Here it it, yet incomplete.",
    "head_branch": "MRESOLVER-157",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442cea14f302d393b5b30",
    "number": 439,
    "body": "This one turns non-sense output like this:\r\n```\r\n[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]\r\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\r\n[FATAL] input contained no data @\r\n @\r\n[ERROR] The build could not read 1 project -> [Help 1]\r\norg.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:\r\n[FATAL] input contained no data @\r\n```\r\nto this:\r\n```\r\n[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[plexus.core, parent: null]\r\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\r\n[FATAL] input contained no data\r\n[ERROR] The build could not read 1 project -> [Help 1]\r\norg.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:\r\n[FATAL] input contained no data\r\n```",
    "head_branch": "avoid-empty-locations",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Test for empty value and avoid needless space"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442cfa14f302d393b5b31",
    "number": 438,
    "body": "as discussed in the dev mailing list [[1](https://mail-archives.apache.org/mod_mbox/maven-dev/202101.mbox/%3CCAGjJkv0%2BAa1ffGYnxWVYkz8_QWt7KsAYcJ0CsEe%2BMGy6h6FQ6w%40mail.gmail.com%3E)][[2](https://mail-archives.apache.org/mod_mbox/maven-dev/202101.mbox/%3CCAGjJkv2trLUX6W0UQwmsizPUNdZ6GXS9FB3ApP7w%2B7MhbBXT-g%40mail.gmail.com%3E)] this PR enhances org.apache.maven.plugin.logging.Log by adding a lazy log method with a `java.util.function.Supplier` for each log level.\r\nFor each level the supplier will be called only if the corresponding log level is active.\r\nUsing java 8 interface default method ensures backward compatibility with other potential existing implementations.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] \r\n\r\nStill two unrelatd ITs tests are failing locally\r\n````\r\n[ERROR] Errors:\r\n[ERROR]   MavenITmng5669ReadPomsOnce>AbstractMavenIntegrationTestCase.runTest:255->testWithBuildConsumer:119 » Verification\r\n[ERROR]   MavenITmng5669ReadPomsOnce>AbstractMavenIntegrationTestCase.runTest:255->testWithoutBuildConsumer:65 » Verification\r\n````\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n> PS: I'll verify by asking on the mailing list if I have an ICLA already, or fill one if not.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7083",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d0a14f302d393b5b32",
    "number": 437,
    "body": "as discussed in the dev mailing list [[1](https://mail-archives.apache.org/mod_mbox/maven-dev/202101.mbox/%3CCAGjJkv0%2BAa1ffGYnxWVYkz8_QWt7KsAYcJ0CsEe%2BMGy6h6FQ6w%40mail.gmail.com%3E)][[2](https://mail-archives.apache.org/mod_mbox/maven-dev/202101.mbox/%3CCAGjJkv2trLUX6W0UQwmsizPUNdZ6GXS9FB3ApP7w%2B7MhbBXT-g%40mail.gmail.com%3E)] this PR removes depreciation on `org.apache.maven.plugin.logging.Log` \r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] \r\n\r\nTwo unrelatd ITs tests are failing locally\r\n````\r\n[ERROR] Errors:\r\n[ERROR]   MavenITmng5669ReadPomsOnce>AbstractMavenIntegrationTestCase.runTest:255->testWithBuildConsumer:119 » Verification\r\n[ERROR]   MavenITmng5669ReadPomsOnce>AbstractMavenIntegrationTestCase.runTest:255->testWithoutBuildConsumer:65 » Verification\r\n````\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n",
    "head_branch": "MNG-7082",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d1a14f302d393b5b33",
    "number": 436,
    "body": "This PR is layered on top of #433 \r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7080",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7080] Add a --color option to simplify color support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d2a14f302d393b5b34",
    "number": 435,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7032",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7032] Evaluate --help and --version after configuring the logging/color"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d3a14f302d393b5b35",
    "number": 434,
    "body": "This PR is built on top of #433 and https://github.com/apache/maven-shared-utils/pull/70 and fails because it currently requires a snapshot of maven-shared-utils.",
    "head_branch": "MNG-6915",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d4a14f302d393b5b36",
    "number": 433,
    "body": "This PR depends on https://github.com/apache/maven-shared-utils/pull/69 and the release of `maven-shared-utils`.",
    "head_branch": "MNG-7079",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7079] Upgrade to jansi 2.2.0 and mave-shared-utils 3.3.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d5a14f302d393b5b37",
    "number": 432,
    "body": "This is a follow-up on #431 \r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7077",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d6a14f302d393b5b38",
    "number": 431,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7035-maven5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d7a14f302d393b5b39",
    "number": 430,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7071) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licensed under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n---\r\n\r\nI hope it's not an issue that some classes have been removed from maven-compat. I am guessing it's for compatibility between Maven 2 and 3, so I hope it's fine to remove them. ",
    "head_branch": "MNG-7071-remove-profiles-xml-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7071] Remove the profiles.xml warning, since the functionality is ignored since Maven 3."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d7a14f302d393b5b3a",
    "number": 429,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7051) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n\r\n---\r\n\r\nSummary of the changes:\r\n- Add question mark support to the -P flag to mark profiles as optional\r\n- When a requested profile is not marked as optional and is non-existent, the build should break\r\n\r\nRelated integration tests PR: https://github.com/apache/maven-integration-testing/pull/87\r\nRelated website change: https://github.com/apache/maven-site/pull/225",
    "head_branch": "mng-7051-non-existing-profile-activation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7051] Optionally skip non-existing profiles and break on missing required profiles."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d8a14f302d393b5b3b",
    "number": 428,
    "body": "Update resolver and make use of newly introduced method in https://github.com/apache/maven-resolver/pull/87\r\n\r\nThis PR is NOT meant for merge as is, is more just an example.",
    "head_branch": "repo-scoping",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442d9a14f302d393b5b3c",
    "number": 427,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6727",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442daa14f302d393b5b3d",
    "number": 426,
    "body": "Fixes [MNG-7068](https://issues.apache.org/jira/browse/MNG-7068)\r\n\r\nThe proposal is first to add com.google.guava:guava to the excludes of guice. Second guava and failureaccess shall be added as direct dependencies.\r\n\r\nThis has two advantages: Downstream projects only get the needed dependencies and the version of guava can be independently set.\r\n\r\nThe runtime dependencies for Guava are explained in the last section of the [README](https://github.com/google/guava/tree/v30.1) \"Important Warnings\" #3\r\n\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically. (org.apache.maven.xml.Factories checkstyle fail. Not related to this PR)\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nICLA signed and send to the secretary.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-7068_google_guice_guava_deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442dba14f302d393b5b3e",
    "number": 425,
    "body": "This strives to consistently quote non-numeric args and bracketing collections as done in other spots of the codebase. `DefaultBuildResumptionDataRepository` wasn't touched intentionally as this will be subject so a separate PR. I also have likely missed something and have left out dynamically composed messages.\r\n\r\nIT PR: https://github.com/apache/maven-integration-testing/pull/97",
    "head_branch": "consistent-logging",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442dca14f302d393b5b3f",
    "number": 424,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "system-line-separator",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442dda14f302d393b5b40",
    "number": 423,
    "body": "…alled\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7060",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442dea14f302d393b5b41",
    "number": 422,
    "body": "https://issues.apache.org/jira/browse/MNG-6727\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442dfa14f302d393b5b42",
    "number": 421,
    "body": "Simplifying usage of Java NIO API (since Java 7), so the *calling* code does not need to convert to / from Path ON ITS OWN again and again.\r\n\r\nBy using `default` interface methods, this should not imply any side effects to any existing code.\r\n",
    "head_branch": "nio-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e0a14f302d393b5b43",
    "number": 420,
    "body": "Changes:\r\n- Fix typo (duplicate `]`)\r\n- Add link to NOTICE file\r\n- Use indentation for code block belonging to list item\r\n\r\n\r\n---\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e1a14f302d393b5b44",
    "number": 419,
    "body": "… be more easily changed\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-4645",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e2a14f302d393b5b45",
    "number": 418,
    "body": "… elements from the user settings\r\n\r\nThis supersedes and closes #142",
    "head_branch": "MNG-6114",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e3a14f302d393b5b46",
    "number": 417,
    "body": "",
    "head_branch": "MNG-6888",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e4a14f302d393b5b47",
    "number": 416,
    "body": "When the user resumes a build (MNG-4660), they could see a message \"Packaged artifact is not up-to-date compared to the build output directory\". This could even be logged multiple times for one build. It was unclear why it was logged and what a user could do to address it. This change adds a little bit of detail to that message so it becomes more clear to the user what has happened and where to look for solutions. It also adds a few words so the user knows what Maven will decide to do to address the situation (i.e. resolve using build output directory or consider artifact \"not found\").\r\n\r\nThe [integration test](https://github.com/apache/maven-integration-testing/pull/91) is updated as well.\r\n\r\nICLA and CCLA signed.",
    "head_branch": "more-useful-logging-for-outdated-artifacts-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e5a14f302d393b5b48",
    "number": 415,
    "body": "This PR will fix MNG-7032: ANSI will not be used when using both `--batch-mode` and `--version`.\r\nThis is a bug because with batch mode, ANSI colours should not be used.\r\n\r\nThe tests works on a char level: By comparing the stripped and the non-stripped version, the test would fail if they differed. Or put in another way: If the sysout-version contained ANSI colour information, it would not match the stripped version.\r\n\r\n---\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7032_versioncolours",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e6a14f302d393b5b49",
    "number": 414,
    "body": "When the user resumes a build (MNG-4660), they could see a message \"Packaged artifact is not up-to-date compared to the build output directory\". This could even be logged multiple times for one build. It was unclear why it was logged and what a user could do to address it. This change adds a little bit of detail to that message so it becomes more clear to the user what has happened and where to look for solutions.\r\n\r\nThe [integration test](https://github.com/apache/maven-integration-testing/pull/90) is updated as well.\r\n\r\nICLA and CCLA signed.",
    "head_branch": "more-useful-logging-for-outdated-artifacts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e7a14f302d393b5b4a",
    "number": 413,
    "body": "Avoids concurrency issues when aggregator plugins are involved.\r\nA detailed summary of the problem can be found here: https://github.com/apache/maven/pull/310#issuecomment-617783528\r\n\r\nMight also fix:\r\n- https://issues.apache.org/jira/browse/MNG-4996\r\n- https://issues.apache.org/jira/browse/MNG-5750\r\n- https://issues.apache.org/jira/browse/MNG-5960\r\n\r\nThis is an alternative to #310 in which @rfscholte raised concerns whether cloning is the right approach.\r\n\r\nI went with a wrapper and a single `ThreadLocal` because mutliple TLs would bloat the code and would theoretically increase overhead (haven't measured it, though).\r\nI had to be creative with removing empty lines because Checkstyle was complaining about the class exceeding 2000 lines.\r\n\r\nPS: I removed the checklist to avoid noise (checked everything, ICLA is present).",
    "head_branch": "MNG-6843-parallel-classpath",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e8a14f302d393b5b4b",
    "number": 412,
    "body": "This merge request will cache .m2 dependencies for the integration tests that are running on currently 12 different OS + JDK versions.\r\n\r\nThis should solve the (relatively) many dependency retrieval failures we get in GA jobs currently. \r\n\r\nI've tested it under my own profile.",
    "head_branch": "test-github-actions-dependency-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade github actions cache and use m2 cache for integration testing as well"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442e9a14f302d393b5b4c",
    "number": 411,
    "body": "",
    "head_branch": "MNG-7029",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442eaa14f302d393b5b4d",
    "number": 410,
    "body": "",
    "head_branch": "MNG-6054",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442eba14f302d393b5b4e",
    "number": 409,
    "body": "",
    "head_branch": "revert-MNG-5639",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7046] Revert MNG-5639 and make repo config static only\n\nThis closes #409"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442eca14f302d393b5b4f",
    "number": 408,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7045",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442eda14f302d393b5b50",
    "number": 407,
    "body": "Reverts apache/maven#405",
    "head_branch": "revert-405-MNG-5728",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"[MNG-5728] Switch the default checksum policy from \"warn\" to \"fail\"\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442eea14f302d393b5b51",
    "number": 406,
    "body": "Update resolver from 1.4.1 to 1.6.1\r\nNo Jira open on this subject\r\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-15777\r\n",
    "head_branch": "fix/cve-2020-15777",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442eea14f302d393b5b52",
    "number": 405,
    "body": "Signed-off-by: rfscholte <rfscholte@apache.org>\r\nSigned-off-by: Michael Osipov <michaelo@apache.org>",
    "head_branch": "MNG-5728",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge branch 'MNG-5728' of https://gitbox.apache.org/repos/asf/maven"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442efa14f302d393b5b53",
    "number": 404,
    "body": "",
    "head_branch": "fix-4.0.0-since",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f0a14f302d393b5b54",
    "number": 403,
    "body": "",
    "head_branch": "MNG-7042",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f1a14f302d393b5b55",
    "number": 402,
    "body": "While initially working on [MNG-7027](https://issues.apache.org/jira/projects/MNG/issues/MNG-7027), I came across several issues, so I'm raising this PR in order to gather feedback.\r\nI've split the changes in small commits in order to make reviewing them easier.\r\nThere are 2 big important (and non trivial) commits though: https://github.com/apache/maven/commit/331e402b1a7f6e158444984d1272aeff18f54549 and https://github.com/apache/maven/commit/aa285f20bc2c4aef9898e42e297dd43430ac2c11.  Those have comments in the commit, but I can explain more if needed.\r\n\r\nThis PR is layered on top of #399 and #391 to avoid conflicts.",
    "head_branch": "dpb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f2a14f302d393b5b56",
    "number": 401,
    "body": "\n\n<!-- Reviewable:start -->\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/apache/maven/401)\n<!-- Reviewable:end -->\n",
    "head_branch": "MNG-7028",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f3a14f302d393b5b57",
    "number": 400,
    "body": "Migration of all tests to Unit 4 without any refactoring beyond the bare minimum (i.e. add @Test, @Before and @After) methods.\r\nFor plexus powered tests, I had to copy the migrated `PlexusTestCase` as there is currently no shared test jar.",
    "head_branch": "MNG-7035",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f4a14f302d393b5b58",
    "number": 399,
    "body": "This is a very old regression, but while working on the `DefaultModelBuilder`, I found a few weird code paths, so investigating a bit lead me to create MNG-7034 and this PR.\r\nThis is mainly a revert of https://github.com/apache/maven/commit/94fde61ad2c556c9aa84596a256de6c556bb2793",
    "head_branch": "MNG-7034",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f5a14f302d393b5b59",
    "number": 398,
    "body": "I don't know whether this should be included, but it is trivial to provide. I will let the community decide. If accepted someone should write an IT for that.",
    "head_branch": "MNG-6268",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f6a14f302d393b5b5a",
    "number": 397,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6566) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n- [x] A CCLA has also been signed by Info Support b.v.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n\r\n\r\n**Related Core ITs pull request**: \r\nhttps://github.com/apache/maven-integration-testing/pull/74",
    "head_branch": "mng-6566-execute-annotation-should-not-re-execute-goals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f7a14f302d393b5b5b",
    "number": 396,
    "body": "…ckward compat code",
    "head_branch": "MNG-7022",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f8a14f302d393b5b5c",
    "number": 395,
    "body": "",
    "head_branch": "MNG-7021",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442f9a14f302d393b5b5d",
    "number": 394,
    "body": null,
    "head_branch": "MNG-7020",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7020] Remove Maven 2 WagonExcluder backward compat code\n\nThis closes #394"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442faa14f302d393b5b5e",
    "number": 393,
    "body": "@rfscholte Here it is, prerequisite for release profile removal.",
    "head_branch": "MNG-7019",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7019] Notify also at start when profile is missing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442fba14f302d393b5b5f",
    "number": 392,
    "body": "…ry' in the 4.0.0 super POM\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6113",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442fca14f302d393b5b60",
    "number": 391,
    "body": "Original summary: cannot build Maven Archetype with versionless reactor atifacts",
    "head_branch": "MNG-6957",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442fda14f302d393b5b61",
    "number": 390,
    "body": "Just JUnit dependency update version",
    "head_branch": "feature/update_versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442fea14f302d393b5b62",
    "number": 389,
    "body": "…new way to set environment variables, since set-env is deprecated.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7004) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7004-refactor-github-actions-environment-variables",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-7004] Replacing set-env in the GitHub Actions workflow with the new way to set environment variables, since set-env is deprecated."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662442ffa14f302d393b5b63",
    "number": 388,
    "body": "This method now returns its result instead of modifying one of its arguments.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure please ask on the developers list.\r\n\r\n - [X] I have signed the ICLA, and my employer has signed the CCLA.",
    "head_branch": "refactor-projectscollector-collectprojects-return-result",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244300a14f302d393b5b64",
    "number": 387,
    "body": "…ng the --pl switch.\r\n\r\nThis was easy to pick up since MNG-6118 extended the testcase with a multi-level hierarchy project:\r\nhttps://github.com/apache/maven/pull/373/files#diff-72ccd31ee50f74b4685bab505c4fbbe21f1eea8c55aea23c75ad9b620a462c06R73-R80\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-7002) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-7002-include-unit-test-for-pl-including-children",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #387 from infosupport/MNG-7002-include-unit-test-for-pl-including-children\n\n[MNG-7002] Added a test scenario for including child modules when using the --pl switch."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244301a14f302d393b5b65",
    "number": 386,
    "body": "",
    "head_branch": "MNG-6999",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244302a14f302d393b5b66",
    "number": 385,
    "body": "",
    "head_branch": "MNG-6931",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244303a14f302d393b5b67",
    "number": 384,
    "body": "",
    "head_branch": "MNG-6957",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244304a14f302d393b5b68",
    "number": 383,
    "body": "As mentioned in MNG-6997, maven should work out of the box for beginners. Hence, upgrading the `maven-compiler-plugin` version.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244305a14f302d393b5b69",
    "number": 382,
    "body": "Previous version change [commit](https://github.com/apache/maven/commit/4ec06bf67cc6bdffa026f46c5836e3bc895865ed).\r\n\r\nReason:\r\n[Why does maven-site-plugin always use version 3.3](https://stackoverflow.com/questions/51103120/why-does-maven-site-plugin-always-use-version-3-3) question on StackOverflow reached 2k views.\r\n\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244306a14f302d393b5b6a",
    "number": 381,
    "body": "Reuse `MavenExecutionRequest#getStartTime()` for expanded snapshot\r\nversions when deploying to a remote repository throughout the entire\r\nreactor for all modules.\r\n\r\nThis closes #381",
    "head_branch": "MNG-6754",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6754] Set the same timestamp in multi module builds\n\nReuse MavenExecutionRequest#getStartTime() throughout for snapshot versions,\nlast updated fields in metadata consistently for local and remote repositories\nfor the entire reactor and its modules.\n\nThis closes #381"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244307a14f302d393b5b6b",
    "number": 380,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-6993",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244308a14f302d393b5b6c",
    "number": 379,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-6992",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244309a14f302d393b5b6d",
    "number": 378,
    "body": "The refactoring of MavenCli.populateRequest introduced a subtle bug. It would select ~/.m2/repository as the local repository instead of something that is configured in ~/.m2/settings.xml.\r\n\r\nSee [MNG-6991](https://issues.apache.org/jira/browse/MNG-6991) and [this Slack discussion](https://the-asf.slack.com/archives/C7Q9JB404/p1601016907001000) for additional details.\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed for the change (usually before you start working on it).\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`, where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice is to use the JIRA issue title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-6991-settings-defined-local-repository",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624430aa14f302d393b5b6e",
    "number": 377,
    "body": "Get the correct PR origin user and branch name from the GitHub Actions context, in order to run the matching integration tests repo and branch.\r\nThis didn't work before, one example is this run: https://github.com/apache/maven/actions/runs/246744958\r\nThe reason why it failed on pull requests, was that GitHub Actions creates a new ref for running the workflow on (refs/pull/...), this broke the script which determines the base branch name and repo user.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6949-fix-pull-request-head-lookup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624430ba14f302d393b5b6f",
    "number": 376,
    "body": "🎉 Java 15 is out! This change\r\n* removes the EA builds of Java 15 from the GitHub Actions build matrix\r\n* adds the EA builds of Java 16 to the GitHub Actions build matrix\r\n* removes the Java 14 from the GitHub Actions build matrix",
    "head_branch": "update-build-matrix-for-release-of-java-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624430ca14f302d393b5b70",
    "number": 375,
    "body": "In most other places, we order the groupId before the artefactId in POM files. Exclusion was the odd one out, so I changed it to be in line with the others.\r\n\r\nWe observe this when using `maven-model` to parse, modify, and write back a POM file roughly like so:\r\n```java\r\nMavenXpp3Reader reader = new MavenXpp3Reader();\r\nModel model = reader.read(new FileReader(input));\r\n// make modifications to the model\r\nMavenXpp3Writer writer = new MavenXpp3Writer();\r\nwriter.write(new FileWriter(output), model);\r\n```\r\n\r\nBefore this change, exclusions in the output file would be ordered like so:\r\n```xml\r\n        <exclusions>\r\n          <exclusion>\r\n            <artifactId>plexus-cipher</artifactId>\r\n            <groupId>org.sonatype.plexus</groupId>\r\n          </exclusion>\r\n        </exclusions>\r\n```\r\n\r\nAfter:\r\n```xml\r\n        <exclusions>\r\n          <exclusion>\r\n            <groupId>org.sonatype.plexus</groupId>\r\n            <artifactId>plexus-cipher</artifactId>\r\n          </exclusion>\r\n        </exclusions>\r\n```\r\n\r\nTo be honest, I'm not entirely sure what other consequences this has, or if it would cause breaking changes for users of the library. But I thought I'd put it up anyway.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n",
    "head_branch": "reorder-exclusion-fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624430ca14f302d393b5b71",
    "number": 374,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6981) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n",
    "head_branch": "MNG-6981-pl-should-include-children",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624430da14f302d393b5b72",
    "number": 373,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6118) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully. (see https://github.com/infosupport/maven/actions)\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n---\r\n\r\nThis pull request enables resolving inter-module dependencies of the whole multi module project while building a part of a multi module project (by using `-f` or by navigating to a subdirectory). \r\nThis makes the following scenarios consistent:\r\n- mvn <goal> -pl module-a\r\n- mvn <goal> -f module-a/pom.xml\r\n- cd module-a && mvn <goal>",
    "head_branch": "mng-6118-submodule-invocation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624430ea14f302d393b5b73",
    "number": 372,
    "body": "I came here because of a project where some maven plugins are not executed without any warning or error. Debugging the issue brought me to the implementation of the `key` field in `Plugin.java`. It constructs the key _once_ on first use from the plugins groupId and artifactId. The key is not updated when either of this values changes.\r\n\r\nIt is not easy for me to say where exactly this construct start to fail, but take a look on the following screenshot. At one point `ManagementModelMerger.mergePluginContainerPlugins` tries to enhance the child pom plugin instance with the version information from the parents pluginManagement. But it fails to match both plugin instances. Both plugins have the same (interpolated) groupId and artifactId but different keys. Obviously for one instance `getKey()` was called before the groupId was interpolated but not for the other, resulting in different keys for the same plugin.\r\n\r\n![mvn-debug](https://user-images.githubusercontent.com/13628240/92512300-e2fe4500-f20e-11ea-8c65-8dd06b0324ac.png)\r\n\r\nMy suggested fix is to basically follow the TODO comment found on `key`. Reset the `key` if groupId or artifactId changes. Since the key calculation is so simple I actually see no reason to cache it at all.\r\nFurthermore, while writing this description, I noticed that the implementation of `ReportPlugin` is very similar (looks like it was copy&pasted at one point) and it already does what I propose for this pull request.\r\n\r\nPS: an additional note and warning if you want to debug the current code. All debuggers I know tend to call the `toString` method when inspecting object instances. In case of `Plugin` this also triggers the _one time calculation_ of `key`. I.e. inspecting the `Plugin` object in debugger can change the instance state and as result the issue does not appear anymore or at a different place as without debugging.",
    "head_branch": "MNG-6983",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624430fa14f302d393b5b74",
    "number": 371,
    "body": "If build number or timestamp have changed, snapshot versions needs to\r\nbe updated as well.\r\n\r\nsee:\r\nhttps://github.com/apache/maven/blob/master/maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadata.java#L134\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244310a14f302d393b5b75",
    "number": 370,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244311a14f302d393b5b76",
    "number": 369,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244312a14f302d393b5b77",
    "number": 368,
    "body": "fixes MNG-6972\r\n\r\nWith this PR, maven extensions can access the GraphBuilder to update the dependency graph after adding dependencies.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6972",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244313a14f302d393b5b78",
    "number": 367,
    "body": "TODO: ITs failed for few test cases: https://builds.apache.org/view/M-R/view/Maven/job/maven-box/job/maven/job/MNG-6965/\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/apache/maven/367)\n<!-- Reviewable:end -->\n",
    "head_branch": "MNG-6965",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244314a14f302d393b5b79",
    "number": 366,
    "body": "[MNG-6893] Upgrade maven-dependency-plugin to 3.1.2",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244315a14f302d393b5b7a",
    "number": 365,
    "body": "… testing changes\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6949) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n",
    "head_branch": "MNG-6949-github-actions-ci-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6949] Run integration tests on large matrix, build on small one.\n\nIntegration tests now run on Java 8, 11 and 14 with Windows, macOS and Linux."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244316a14f302d393b5b7b",
    "number": 364,
    "body": "[MCHECKSTYLE-393] Upgrade Doxia Version to 1.9.2",
    "head_branch": "MCHECKSTYLE-393-upgrade-doxia-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244317a14f302d393b5b7c",
    "number": 363,
    "body": "This pull request is a follow-up on #342, in which two little bugs had sneaked in. Since the feature hasn't been released yet, I haven't added new JIRA tickets for these bugs.\r\n\r\n1. Resolution of **resume.properties** file didn't work as expected. I have fixed it and added a unit test to illustrate how it should work.\r\n1. When the `excludedProjects` property in the  **resume.properties** file was empty, the build would break (since it added an empty project to the list of excluded projects). Of course, this shouldn't happen, so that's fixed too.\r\n\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`, where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice is to use the JIRA issue title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully. Also, the previously added test case for this feature is now added to the suite.\r\n\r\n**ICLA has been signed by @MartinKanters and myself. CCLA has been signed by our employer, Info Support.**\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-5760-resume-feature-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244318a14f302d393b5b7d",
    "number": 362,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes alignment in settings.xml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244319a14f302d393b5b7e",
    "number": 361,
    "body": "Don't compare baseDir in a canonical form when the second comparator\r\n(System.getProperty( \"user.dir\" )) is not canonicalized.",
    "head_branch": "MNG-6937",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624431aa14f302d393b5b7f",
    "number": 360,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\nThis is a change followed up with this [pr](https://github.com/apache/maven/pull/337/files). I found since we have only accept WARN and ERROR level logging, and other level logging we will throw the exception. The int value of Error > WARN, then the next few lines codes won't be executed. So here this pr is to delete the codes.\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "wangchong--improve-logging-level",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624431ba14f302d393b5b80",
    "number": 359,
    "body": "Remove touch'ed file by `wget` on `wget` failure. Fixes MNG-6929.\r\n\r\nIf an empty file is left, the wrapper would try to execute it without any further error message. A missing file (e.g. due to a proxy authentication error or no network) will already result in a better error message.\r\n\r\n--\r\n\r\nFollowing this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure please ask on the developers list.\r\n\r\nTo make clear that you license your contribution under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0) you have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6929",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624431ca14f302d393b5b81",
    "number": 358,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "no_duplicate_artifacts_in_attached_artifacts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-5868] No duplicate artifacts in attached artifacts\nif attached artifacts already contains the artifact remove it and add the new one\n\nSigned-off-by: olivier lamy <olamy@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624431da14f302d393b5b82",
    "number": 357,
    "body": "When specifying an execution-id for a goal on the command line (e.g. `mvn plugin:goal@my-execution-id`) this PR now also allows wildcard syntax to select all execution ids of the goal (e.g. `mvn plugin:goal@*`).\r\n\r\nThis builds on the work done previously in https://issues.apache.org/jira/browse/MNG-5768\r\n\r\nI don't have a JIRA ticket id for this yet. This is my first exposure to working on the Apache Maven code-base. Before I invest further time, I would like to know if such a feature is desirable for the community?\r\n\r\n\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] I already have an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) in place :-)\r\n",
    "head_branch": "feature/goal-execution-ids",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624431ea14f302d393b5b83",
    "number": 356,
    "body": "…er (attachArtifact) does not produce a failure\r\n\r\no Updated to restore the behavior consensus had been reached in MNG-5387.\r\no Kept 'MavenProject.getAttachedArtifacts' to return an unmodifiable list.\r\no Updated to log an informational message when an existing artifact got replaced.\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/apache/maven/356)\n<!-- Reviewable:end -->\n",
    "head_branch": "MNG-5868",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624431fa14f302d393b5b84",
    "number": 355,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "it_runs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add a Jenkinsfile to run it test (per default it runs it master branch but now there is a parameter to use a different it source branch) (#355)\n\n* add Jenkinsfile for its running with a branch of integration-testing source\r\n\r\nSigned-off-by: olivier lamy <olamy@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244320a14f302d393b5b85",
    "number": 354,
    "body": "New maven wrapper will guess the maven user home location via system props, system envs\r\nand at last the default location (`~/.m2`).\r\nThis guessing order is the convention of the gradle wrapper.\r\nFor maven, user home has [a fixed location](https://maven.apache.org/settings.html#quick-overview), i.e. `~/.m2`.\r\n\r\nThis pr is ported from https://github.com/takari/maven-wrapper/pull/159\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "work/MNG-6920-wrapper-user-home",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244321a14f302d393b5b86",
    "number": 353,
    "body": "new maven-wrapper inherits 2 bugs for windows batch scripts:\r\n\r\n* correct file ending for windows cmd scripts\r\n* download.cmd should parse the config file\r\n\r\nThis pr is ported from https://github.com/takari/maven-wrapper/pull/161.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "work/MNG-6919-windows-cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244322a14f302d393b5b87",
    "number": 352,
    "body": "when auth for the http proxy, MVNW_{USERNAME,PASSWORD} should be fetched via `System.getenv`.\r\n\r\nThis pr is ported from a [takari/maven-wrapper pending pr](https://github.com/takari/maven-wrapper/pull/158).\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "work/MNG-6918-fix-downloader-auth-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244322a14f302d393b5b88",
    "number": 351,
    "body": "While working on the _resume_ feature (#342) I noticed that the [`MavenCli#populateRequest` method](https://github.com/apache/maven/blob/c6c7311713b0d60e445b2ffe32c5588791edf7ac/maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java#L1322) is very long and a bit unstructured. It follows all types of patterns for parsing and processing command line arguments and populating the `MavenExecutionRequest`.\r\n\r\nI've refactored this method step-by-step. Hence there are a lot of small(ish) commits but I hope this makes it easier to review the changes and verify they don't break anything. The method itself is not easily testable so I couldn't rely on that. Where possible I created a few unit tests.\r\n\r\nThere are some bits & pieces left:\r\n\r\n* The `determineProjectActivation` and `determineProfileActivation` methods are very much alike. We could merge them but it would lose quite some semantics, so I initially decided not to do so.\r\n* The `determineLocalRepositoryPath` only uses information from the `MavenExecutionRequest` itself. I wonder if we could move it into the `DefaultMavenExecutionRequest`, but I'm unsure where / how exactly.\r\n\r\n## Checklist\r\n\r\n- [ ] ~~Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.~~\r\n- [X] Each commit in the pull request should have a meaningful subject line and body.\r\n- [ ] ~~Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`, where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice is to use the JIRA issue title in the pull request title and in the first line of the commit message.~~\r\n- [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n- [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\r\n- [X] You have run the [Core IT][core-its] successfully.\r\n\r\nI have signed the Individual Contributor License Agreement, and my employer signed the Corporate Contributor License Agreement.\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "refactor-mavencli-populaterequest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244323a14f302d393b5b89",
    "number": 350,
    "body": "Avoid endless recursion by checking for equality between current parameter and recursion parameter. Although it seems unreasonable to have Java classes, where the superclass is identical to the current class, I've experienced this in practice.\r\n\r\nI've verified there are no other code locations using a similar recursion pattern in StringSearchModelInterpolator or its successor StringVisitorModelInterpolator.\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/projects/MNG/issues/MNG-6907) filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nCore IT has not been run. Documentation says to use profile \"run-tis\", but there is no such profile.\r\n\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "MNG-6907",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244324a14f302d393b5b8a",
    "number": 349,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5937",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244325a14f302d393b5b8b",
    "number": 348,
    "body": "Determine active profiles based on 'tmpModel' rather than 'rawModel', thus ensuring the 'rawModel' is not modified in any way.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6912",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244326a14f302d393b5b8c",
    "number": 347,
    "body": "FileProfileActivator changes FileProfileActivator.exists \r\nwhich lets flattened resolveCiFriendliesOnly depending \r\nfail activating profile.\r\n\r\n#### Problem\r\nThe root of the problem that [FileProfileActivator](https://github.com/apache/maven/blob/master/maven-model-builder/src/main/java/org/apache/maven/model/profile/activation/FileProfileActivator.java#L154)\r\ninterpolates path value and `rawModel` is updated [here](https://github.com/apache/maven/blob/master/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java#L310)\r\nand becomes not raw anymore.\r\n\r\nIt affects i.e. [flatten-maven-plugin](https://github.com/mojohaus/flatten-maven-plugin/pull/152)\r\n\r\n#### Solution\r\n`FileProfileActivator` has to have an absolute path to check\r\nif a file exists but shouldn't update `Profile`.\r\n\r\nOn the other side [DefaultModelBuilder](https://github.com/apache/maven/blob/master/maven-model-builder/src/main/java/org/apache/maven/model/building/DefaultModelBuilder.java#L314)\r\nneeds to have interpolated profiles to build an effective model. \r\nTo interpolate profiles, `DefaultModelBuilder` also needs absolute paths.\r\n\r\nThe interpolation logic is needed in two places.\r\nThat's why I extracted the common logic to `ProfileActivationFilePathInterpolator`.\r\n\r\nI use it in both places. In `FileProfileActivator` I only check if the file exists.\r\nIn `DefaultModelBuilder` I interpolate profiles.\r\n\r\nI added `DefaultModelBuilderFactoryTest#test_pom_changes()`\r\nto check that `getRawModel()` is still raw and `getEffectiveModel()` is interpolated.\r\n\r\nAlso, I added `FileProfileActivatorTest` to show that the activator doesn't update profiles anymore.\r\n\r\n#### Discussion\r\nPlease, let me know if I can do something else to make this PR accepted.\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6802-dont-update-profile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6802] Fix bug in FileProfileActivator  (#347)\n\n* [MNG-6802] FileProfileActivator changes exists\r\n\r\nFileProfileActivator changes FileProfileActivator.exists\r\nwhich lets flattened resolveCiFriendliesOnly depending\r\nfail activating profile.\r\n\r\n* [MNG-6802] Add java docs\r\n\r\n* [MNG-6802] PR comments fixes\r\n\r\n* Make ProfileActivationFilePathInterpolator a class\r\n* call super.tearDown() last\r\n\r\n* [MNG-6802] PR comments fixes\r\n\r\n* Get rid of reusing local variables\r\n* Rename file-> activationFile\r\n* Move if ( missing ) to try block\r\n* Update javadocs\r\n* Replace string format with concatenation\r\n* Replace FileReader to FileInputStream\r\n\r\n* [MNG-6802] Update javadoc\r\n\r\n* [MNG-6802] Switch to commons lang3 StringUtils\r\n\r\n* [MNG-6802] Switch to commons lang3 StringUtils\r\n\r\n* [MNG-6802] Switch to plexus-utils StringUtils back\r\n\r\n* [MNG-6802] Switch to plexus-utils StringUtils back\r\n\r\n* [MNG-6802] Resolve conflicts\r\n\r\n* [MNG-6802] Upgrade tests\r\n\r\n* [MNG-6802] Fix for windows\r\n\r\n* [MNG-6802] Remove annotation\r\n\r\n* [MNG-6802] Create a temp dir\r\n\r\n* [MNG-6802] Remove space\r\n\r\n* [MNG-6802] Small refactoring\r\n\r\n* [MNG-6802] Use JUnit5 tempDir\r\n\r\n* [MNG-6802] Use static import\r\n\r\n* [MNG-6802] Remove plexus\r\n\r\n* [MNG-6802] Remove plexus\r\n\r\n* [MNG-6802] Fix checklstyle\r\n\r\n* [MNG-6802] Restart build\r\n\r\n* [MNG-6802] Restart build\r\n\r\n* [MNG-6802] Restart build (last attempt)\r\n\r\n* [MNG-6802] Fix PR comments\r\n\r\n* [MNG-6802] Refactor try-catch\r\n\r\n* [MNG-6802] Fix comments in FileProfileActivatorTest\r\n\r\n* [MNG-6802] Use primitive\r\n\r\n* [MNG-6802] Push down path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244327a14f302d393b5b8d",
    "number": 346,
    "body": "simplify tests - use Guice CDI to inject beans - instead of manually in setup methods\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/apache/maven/346)\n<!-- Reviewable:end -->\n",
    "head_branch": "MNG-6909",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244328a14f302d393b5b8e",
    "number": 345,
    "body": "Note requires the additional commits in maven-resolver and maven-wagon.\r\nhttps://github.com/apache/maven-resolver/pull/51\r\nhttps://github.com/apache/maven-wagon/pull/67\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "feature/MNG-5583",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244329a14f302d393b5b8f",
    "number": 344,
    "body": "This is a demo of how the Maven Metrics API can be used to instrument Maven Core.\r\n \r\nhttps://github.com/apache/maven-metric/blob/master/maven-metrics-api/src/main/java/org/apache/maven/metrics/MetricsSystem.java",
    "head_branch": "maven-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624432aa14f302d393b5b90",
    "number": 343,
    "body": "\n\n<!-- Reviewable:start -->\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/apache/maven/343)\n<!-- Reviewable:end -->\n",
    "head_branch": "MNG-6893",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624432ba14f302d393b5b91",
    "number": 342,
    "body": "This pull request adds the `--resume` / `-r` switch. It works like `--resume-from` / `-rf`, but does more than that:\r\n\r\n1. It takes no arguments. Instead, when a build fails, it creates `target/resume.properties` which is read when the `--resume` / `-r` switch is specified.\r\n1. It is smarter. When other modules later in the failed build succeeded, they will be excluded from the next (resumed) build. This only happens if there are no dependencies between the former and the latter.\r\n\r\n## Status\r\nThis pull request is a work-in-progress. Not all functionality is finished. We're working on accompanying integration tests.\r\n\r\n## Pull request checklist\r\n- [X] There is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-5760).\r\n- [X] Each commit in the pull request has a meaningful subject line and body.\r\n- [X] The pull request title is correctly formatted.\r\n- [X] The pull request description is detailed enough to understand what the pull request does, how, and why.\r\n- [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\r\n- [X] You have run the [Core IT][core-its] successfully.\r\n\r\n**ICLA has been signed by @MartinKanters and myself. CCLA has been signed by our employer, Info Support.**\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-5760-resume-feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624432ca14f302d393b5b92",
    "number": 341,
    "body": "Refactoring the DefaultGraphBuilder class by mainly using the Java 8 streams API.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6863-graph-builder-refactoring-readability",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624432da14f302d393b5b93",
    "number": 340,
    "body": "[MNG-5571] Resume from generates misleading hint when multiple projects fail.\r\nLog the topologically sorted first failed project instead of the chronologically first failed project.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5571-resume-from-multiple-failed-projects-misleading-hint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624432ea14f302d393b5b94",
    "number": 339,
    "body": "\n\n<!-- Reviewable:start -->\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/apache/maven/339)\n<!-- Reviewable:end -->\n",
    "head_branch": "MNG-6169/MNG-6893",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624432fa14f302d393b5b95",
    "number": 338,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-6863) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-6863-also-make-with-resume-from",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6863] --also-make is being ignored when calling --resume-from\n\n[MNG-6676] Resume reactor build after skipped project using -pl !X -rf X combination\r\n\r\nCo-authored-by: Martin Kanters <Martin.Kanters@infosupport.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244330a14f302d393b5b96",
    "number": 337,
    "body": "Following this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n- [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed for the change (usually before you start working on it). Trivial changes like typos do not  require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes. **See [MNG-6891](https://issues.apache.org/jira/browse/MNG-6891).**\r\n- [X] Each commit in the pull request should have a meaningful subject line and body.\r\n- [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`, where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice is to use the JIRA issue title in the pull request title and in the first line of the commit message.\r\n- [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n- [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\r\n- [ ] You have run the [Core IT][core-its] successfully. There's one test case that fails (_testitMNG6386UnicodeChars_) but it also fails on master.\r\n\r\n- [X] If your pull request is about ~20 lines of code you don't need to sign an [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure please ask on the developers list. **ICLA and CCLA have been signed**\r\n\r\nTo make clear that you license your contribution under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0) you have to acknowledge this by using the following check-box.\r\n\r\n- [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-6891-improve-error-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6891] Improve user-friendliness --fail-on-severity"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244331a14f302d393b5b97",
    "number": 336,
    "body": "@rfscholte ",
    "head_branch": "xu",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update xmlunit (#336)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244332a14f302d393b5b98",
    "number": 335,
    "body": "Signed-off-by: olivier lamy <olamy@apache.org>\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6886-plexus-cipher-1.8",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6886] upgrade plexus-cipher to 1.8 and update changed groupId (#335)\n\nSigned-off-by: olivier lamy <olamy@apache.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244333a14f302d393b5b99",
    "number": 334,
    "body": "`/D` disables any registered autorun command, which would be called before the `exit`.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244334a14f302d393b5b9a",
    "number": 333,
    "body": "The last cmd command should be quoted. \r\n\r\nUnder windows, use jenkins, and use \"Execute Windows batch command\" to build a maven project until the end saying \"'cmd' is not an internal or external command or a runnable program\", just add quotes.\r\n\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244335a14f302d393b5b9b",
    "number": 332,
    "body": "The aim of this PR is to get `git grep 'org.codehaus.plexus.component.annotations' maven-core/src/main/java/` down as low as possible; it covers everything except `DefaultLifecyclePluginAnalyzer`.\r\n\r\n(For `DefaultLifecyclePluginAnalyzer`, switching `@Requirement` to `@Inject` for `lifecycleMappings` means it's no longer wired up with a `RealmFilteredBeans`, and [`MNG-4385`](https://issues.apache.org/jira/browse/MNG-4385) regresses.)\r\n\r\nTests are also simplified, to avoid injection in tests of concrete classes, and remove some no-longer-used mocks.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ x Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5577-convert-most-of-maven-core-to-jsr330",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244336a14f302d393b5b9c",
    "number": 331,
    "body": "align library versions...",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244337a14f302d393b5b9d",
    "number": 330,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6839",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244338a14f302d393b5b9e",
    "number": 329,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG-5760) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\nThis PR solves MNG-5760 which allows for resuming the build from the last failed module.\r\nIt works by saving a file in the build directory of the root pom including that module as file content.\r\n\r\nRelevant integration test:\r\nhttps://github.com/apache/maven-integration-testing/pull/56",
    "head_branch": "mng-5760-resume-from-without-args",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244339a14f302d393b5b9f",
    "number": 328,
    "body": "The build method of the class \"\"PluginDescriptorBuilder\" was very long.\r\n\r\nI extracted several methods and harmonized the methodolgy to set all values. It now follows the strict concept: extracting the necessary element from the PlexusConfiguration and setting it on the PluginDescriptor.\r\n",
    "head_branch": "refactor_extract_methods_plugin_descriptor_builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244339a14f302d393b5ba0",
    "number": 327,
    "body": "This refactoring refers to a more intuitive API approach.\r\n\r\nThe interface \"MavenExecutionRequest\" now provides an object scope method to copy itself. This has to be implemented by each sub type of \"MavenExecutionRequest\". Neverteless: I only found the class \"DefaultMavenExecutionRequest\" implementing the interface.\r\n\r\n1. Providing an object scope copy method makes the usage less verbose.\r\n2. As the copy method is defined abstract: the MavenCli class got rid of the concrete class \"DefaultMavenExecutionRequest\" dependency\r\n\r\nThe static copy method has been declared deprecated and can be made private in the future.",
    "head_branch": "refactor_copy_in_object_scope",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624433aa14f302d393b5ba1",
    "number": 326,
    "body": "Apply \"extract method\" refactoring to make methods smaller. Considering principle \"single level of abstraction\".",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624433ba14f302d393b5ba2",
    "number": 325,
    "body": "Following this checklist to help us incorporate your contribution quickly and easily:\r\n\r\n- [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes. <br /> [**MNG-4660**](https://issues.apache.org/jira/browse/MNG-4660).\r\n- [X] Each commit in the pull request should have a meaningful subject line and body.\r\n- [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,        where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice is to use the JIRA issue title in the pull request title and in the first line of the commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why. \r\n**This pull request makes sure that the `ReactorReader` looks at _all_ modules in the project, not only those that are part of the reactor. It also checks whether the workspace might contain built artifacts from earlier Maven invocations, and uses those files for the artifacts that they belong to.**\r\n- [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\r\n**Additionally, there is an extra integration test in maven-integration-testing: [apache/maven-integration-testing #54](https://github.com/apache/maven-integration-testing/pull/54).**\r\n- [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an [Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure please ask on the developers list.\r\n\r\nTo make clear that you license your contribution under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0) you have to acknowledge this by using the following check-box.\r\n\r\n- [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n- [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n**ICLA has been signed by @MartinKanters and myself. CCLA has been signed by our employer, Info Support.**\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "mng-4660-resume-from",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-4660] --resume-from flag resolves inter-module dependencies\n\nCo-authored-by: Martin Kanters <Martin.Kanters@infosupport.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624433ca14f302d393b5ba3",
    "number": 324,
    "body": "mvn gole added\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "Develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624433da14f302d393b5ba4",
    "number": 323,
    "body": "[![mitm_build](https://user-images.githubusercontent.com/1323708/59226671-90645200-8ba1-11e9-8ab3-39292bef99e9.jpeg)](https://medium.com/@jonathan.leitschuh/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb?source=friends_link&sk=3c99970c55a899ad9ef41f126efcde0e)\n\n- [Want to take over the Java ecosystem? All you need is a MITM!](https://medium.com/@jonathan.leitschuh/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb?source=friends_link&sk=3c99970c55a899ad9ef41f126efcde0e)\n- [Update: Want to take over the Java ecosystem? All you need is a MITM!](https://medium.com/bugbountywriteup/update-want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-d069d253fe23?source=friends_link&sk=8c8e52a7d57b98d0b7e541665688b454)\n\n---\n\nThis is a security fix for a  vulnerability in your [Apache Maven](https://maven.apache.org/) `pom.xml` file(s).\n\nThe build files indicate that this project is resolving dependencies over HTTP instead of HTTPS.\nThis leaves your build vulnerable to allowing a [Man in the Middle](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) (MITM) attackers to execute arbitrary code on your or your computer or CI/CD system.\n\nThis vulnerability has a CVSS v3.0 Base Score of [8.1/10](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H).\n\n[POC code](https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/) has existed since 2014 to maliciously compromise a JAR file in-flight.\nMITM attacks against HTTP are [increasingly common](https://security.stackexchange.com/a/12050), for example [Comcast is known to have done it to their own users](https://thenextweb.com/insights/2017/12/11/comcast-continues-to-inject-its-own-code-into-websites-you-visit/#).\n\nThis contribution is a part of a submission to the [GitHub Security Lab](https://securitylab.github.com/) Bug Bounty program.\n\n## Detecting this and Future Vulnerabilities\n\nThis vulnerability was automatically detected by [LGTM.com](https://lgtm.com) using this [CodeQL Query](https://lgtm.com/rules/1511115648721/).\n\nAs of September 2019 LGTM.com and Semmle are [officially a part of GitHub](https://github.blog/2019-09-18-github-welcomes-semmle/).\n\nYou can automatically detect future vulnerabilities like this by enabling the free (for open-source) [LGTM App](https://github.com/marketplace/lgtm).\n\nI'm not an employee of GitHub nor of Semmle, I'm simply a user of [LGTM.com](https://lgtm.com) and an open-source security researcher.\n\n## Source\n\nYes, this contribution was automatically generated, however, the code to generate this PR was lovingly hand crafted to bring this security fix to your repository.\n\nThe source code that generated and submitted this PR can be found here:\n[JLLeitschuh/bulk-security-pr-generator](https://github.com/JLLeitschuh/bulk-security-pr-generator)\n\n## Opting-Out\n\nIf you'd like to opt-out of future automated security vulnerability fixes like this, please consider adding a file called\n`.github/GH-ROBOTS.txt` to your repository with the line:\n\n```\nUser-agent: JLLeitschuh/bulk-security-pr-generator\nDisallow: *\n```\n\nThis bot will respect the [ROBOTS.txt](https://moz.com/learn/seo/robotstxt) format for future contributions.\n\nAlternatively, if this project is no longer actively maintained, consider [archiving](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-archiving-repositories) the repository.\n\n## CLA Requirements\n\n_This section is only relevant if your project requires contributors to sign a Contributor License Agreement (CLA) for external contributions._\n\nIt is unlikely that I'll be able to directly sign CLAs. However, all contributed commits are already automatically signed-off.\n\n> The meaning of a signoff depends on the project, but it typically certifies that committer has the rights to submit this work under the same license and agrees to a Developer Certificate of Origin \n> (see [https://developercertificate.org/](https://developercertificate.org/) for more information).\n>\n> \\- [Git Commit Signoff documentation](https://developercertificate.org/)\n\nIf signing your organization's CLA is a strict-requirement for merging this contribution, please feel free to close this PR.\n\n## Tracking\n\nAll PR's generated as part of this fix are tracked here: \nhttps://github.com/JLLeitschuh/bulk-security-pr-generator/issues/2",
    "head_branch": "fix/JLL/use_https_to_resolve_dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624433ea14f302d393b5ba5",
    "number": 322,
    "body": "This closes #322",
    "head_branch": "MNG-6859",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624433fa14f302d393b5ba6",
    "number": 321,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5669",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244340a14f302d393b5ba7",
    "number": 320,
    "body": "https://jira.apache.org/jira/browse/MNG-6856\r\nhttps://builds.apache.org/view/M-R/view/Maven/job/maven-box/job/maven/job/MNG-6856/\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/apache/maven/320)\n<!-- Reviewable:end -->\n",
    "head_branch": "MNG-6856",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6856] Remove dependency to Powermock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244341a14f302d393b5ba8",
    "number": 319,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "simplify_code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244342a14f302d393b5ba9",
    "number": 318,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "redundant_boxing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244343a14f302d393b5baa",
    "number": 317,
    "body": "* Stream line the output of the license listing\r\n* Exclude jsoup from final distribution since we only need its license information\r\n* Use proper SPDX ID for our license\r\n\r\nThis closes #317",
    "head_branch": "improve-license-handling",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improve license handling\n\n* Stream line the output of the license listing\n* Exclude jsoup from final distribution since we only need its license information\n* Use proper SPDX ID for our license\n\nThis closes #317"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244344a14f302d393b5bab",
    "number": 316,
    "body": "https://blogs.apache.org/maven/entry/apache-maven-source-plugin-version2\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244345a14f302d393b5bac",
    "number": 315,
    "body": "Just cosmetic changes, no real useful additions but makes code less verbose\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6847-explicit-type-replaced-by-diamonds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244346a14f302d393b5bad",
    "number": 314,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ x ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ x ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\nwhen I use dynamic ci, I find that if the variable ${reversion} exists in other projects, it will be forced to change the version. This part should be filtered out. We cannot control the version of other projects. I tested the sample used [mng-6846](https://github.com/zhaoyunxing92/mng-6846)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244347a14f302d393b5bae",
    "number": 313,
    "body": "Relates to the 735b72fcf1b848ee424d6755e5a624fbcbc65862 commit.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6844] Remove outdated TODOs\n\nRelates to the 735b72fcf1b848ee424d6755e5a624fbcbc65862 commit."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244348a14f302d393b5baf",
    "number": 312,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6844-use-standardcharsets-remove-suppressions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244348a14f302d393b5bb0",
    "number": 311,
    "body": "See [Jira issue ](https://issues.apache.org/jira/browse/MNG-6842) for more details\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6842-do-not-use-guava",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244349a14f302d393b5bb1",
    "number": 310,
    "body": "# Description\r\nThe MavenProject objects are shared among all build threads via `MavenSession` - member `org.apache.maven.execution.MavenSession#projects`.\r\nAs all the `MavenSession` objects are created by cloning an initial `MavenSession` object, I have added cloning of projects into the `MavenSession#clone` method.\r\nWith this change each build has its own copy of `MavenProject` objects and this way unintention changes of the objects from different build threads is avoided.\r\n\r\n-----\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6843-missing-jars-in-parallel-build-classpath",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624434aa14f302d393b5bb2",
    "number": 309,
    "body": "\r\n\r\nMain site says plexus-interpolation version is 1.25 but apparently it's 1.26\r\n\r\nhttps://codehaus-plexus.github.io/plexus-interpolation/\r\n\r\n \r\n\r\nThe main change in 1.26 is a performance improvement: https://github.com/codehaus-plexus/plexus-interpolation/pull/23\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6841-update-plexus-interpolation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624434ba14f302d393b5bb3",
    "number": 308,
    "body": "Update commons-lang to 3.9\r\n\r\nchangelog is here: https://github.com/apache/commons-lang/blob/master/RELEASE-NOTES.txt\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6840-update-commons-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624434ca14f302d393b5bb4",
    "number": 307,
    "body": "The removed 'stripMHome' recursive function is not needed anymore.\r\n\r\nPart of the 'mvn -version' output before this change:\r\nMaven home: D:\\develop\\apache-maven-3.6.3\\bin\\..\r\n\r\nSame part of the 'mvn -version' output after this change:\r\nMaven home: D:\\develop\\apache-maven-3.6.3\r\nI.e. now it's fully qualified.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624434da14f302d393b5bb5",
    "number": 306,
    "body": "I think we should pass also user properties when building a Model for a pom.\r\nLocally tests passed for https://issues.apache.org/jira/browse/MNG-5982\r\n\r\nIs this a good way to fix the problem? How ITs should look?\r\n",
    "head_branch": "MNG-5982",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-7417] Several classes do not set properties properly for building requests\n\nThis closes #306"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624434ea14f302d393b5bb6",
    "number": 305,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n\r\nThis file was created and misplaced during this PR: https://github.com/apache/maven/pull/287",
    "head_branch": "fix-location-org-slf4j-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6065] Moved org.slf4j.impl.MavenLoggerFactoryTest to the correct submodule"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624434fa14f302d393b5bb7",
    "number": 304,
    "body": "This fixes following bug and also consistent with another 'cd /d \"%EXEC_DIR%\"' a few lines above.\r\nWhen you're on the root of some disk running mvn.cmd prints an extra line with current dir before the correct output.\r\nFor example:\r\n\r\nD:\\>mvn -version\r\nD:\\\r\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\r\nMaven home: D:\\develop\\apache-maven-3.6.3\\bin\\..\r\nJava version: 11.0.5, vendor: Oracle Corporation, runtime: C:\\Program Files\\Java\\jdk-11.0.5\r\nDefault locale: en_US, platform encoding: Cp1252\r\nOS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244350a14f302d393b5bb8",
    "number": 303,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6831-replace-anonymous-classes-by-lambdas",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244351a14f302d393b5bb9",
    "number": 302,
    "body": "\r\n\r\n`StringUtils.defaultString` from plexus-utils is deprecated and suggests to use `Objects#toString(Object, String)`\r\n\r\n\r\nAlso replace one more deprecation `import junit.framework.Assert;` -> `import org.junit.Assert;`\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6827-replace-deprecations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244352a14f302d393b5bba",
    "number": 301,
    "body": "## Desc\r\n\r\nHere is a clue to reproduce the NPE.\r\n```\r\n            <plugin>\r\n                <artifactId>maven-antrun-plugin</artifactId>\r\n                <executions>\r\n                    <execution>\r\n                        <phase>package</phase>\r\n                        <configuration>\r\n                            <tasks>\r\n                                <unzip\r\n                                    src=\"${project.build.directory}/${project.build.finalName}.${project.packaging}\"\r\n                                    dest=\"${project.build.directory}/xxx\" />\r\n                            </tasks>\r\n                        </configuration>\r\n                        <goals>\r\n                            <goal>run</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n```\r\n\r\n`project.build.finalName` is the previous value, and the interpolated value is null.\r\n\r\n\r\nFix NullPointerException.\r\n\r\nnull is not allowed as a Hashtable value.\r\n\r\n```\r\n$ mvn clean compile -e  # on a private project\r\n[ERROR] NullPointerException\r\njava.lang.NullPointerException\r\n    at java.util.Hashtable$Entry.setValue (Hashtable.java:1286)\r\n    at org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor.visit (StringVisitorModelInterpolator.java:1429)\r\n    at org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor.visit (StringVisitorModelInterpolator.java:1027)\r\n    at org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor.visit (StringVisitorModelInterpolator.java:170)\r\n    at org.apache.maven.model.interpolation.StringVisitorModelInterpolator.interpolateModel (StringVisitorModelInterpolator.java:107)\r\n    at org.apache.maven.model.building.DefaultModelBuilder.interpolateModel (DefaultModelBuilder.java:789)\r\n    at org.apache.maven.model.building.DefaultModelBuilder.build (DefaultModelBuilder.java:393)\r\n    at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.loadPom (DefaultArtifactDescriptorReader.java:292)\r\n    at org.apache.maven.repository.internal.DefaultArtifactDescriptorReader.readArtifactDescriptor (DefaultArtifactDescriptorReader.java:171)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.resolveCachedArtifactDescriptor (DefaultDependencyCollector.java:541)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.getArtifactDescriptorResult (DefaultDependencyCollector.java:524)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:412)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.doRecurse (DefaultDependencyCollector.java:509)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:461)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.processDependency (DefaultDependencyCollector.java:365)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.process (DefaultDependencyCollector.java:352)\r\n    at org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector.collectDependencies (DefaultDependencyCollector.java:254)\r\n    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.collectDependencies (DefaultRepositorySystem.java:284)\r\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:169)\r\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\r\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n```\r\n\r\n## Checklist\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix/npe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244353a14f302d393b5bbb",
    "number": 300,
    "body": "\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6816-prefer-separate-system-calls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244354a14f302d393b5bbc",
    "number": 299,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n----\r\n\r\nThis pull request changes the maven xsd urls from http to https according to https://issues.apache.org/jira/browse/MNG-6778. It *does not* change the urls for other xsds `core-extension`, `settings`, `profiles`, `paramdoc`, `lifecycle`, `profiles`, `metadata` and `toolchains`.",
    "head_branch": "MNG-6778",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6778] - Use https for maven schemaLocations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244355a14f302d393b5bbd",
    "number": 298,
    "body": "Remember in MavenSession if Maven model problems were detected in\r\nDefaultGraphBuilder.\r\n\r\nThe reason for this is to be able to read the problems flag in Maven Enforcer plugin rule that would stop build if any Maven model problems were encountered.\r\n\r\nSee also [MNG-6797](https://issues.apache.org/jira/projects/MNG/issues/MNG-6797).\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maven-remember-problems",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244356a14f302d393b5bbe",
    "number": 297,
    "body": "Draft PR for https://issues.apache.org/jira/browse/MNG-6771\r\n\r\n- Start fixing the template for LICENSE file\r\n- Have consistent naming for LICENSE file and final jars by removing 'classifier' from the name of jars\r\n- Introduce a script to check for license, from Apache BookKeeper project, original author ivank@apache.org\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6771",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6771] Fix license issues on binary distribution\n- Update slf4j to 1.7.29\n- Do not download ASL v2 license files but copy from local\n- add Jsoup license\n- keep a specific copy of MIT license for each dependency\n- Add NOTICE to binary distribution\n- Add Eclipse SISU about.html contents\n\nPatch co-authored by Hervé Boutemy and Enrico Olivelli"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244357a14f302d393b5bbf",
    "number": 296,
    "body": "cliMerge has a code to append all unrecognized arguments (i.e. goals)\r\nfrom maven.config to the resulting CommandLine object. But this code\r\nalways does nothing since the result of maven.config parsing is checked\r\nfor absence of any such unrecognized arguments right before the merging\r\nis performed.\r\n\r\nA corresponding assert statement is added instead of this dead code, so\r\nthat anyone looking at this method can immediately see that this\r\narguments are not just being ignored, but are actually not present.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "MNG-6790",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244358a14f302d393b5bc0",
    "number": 295,
    "body": "The original patch is made by: Christian Schulte <schulte@apache.org>\r\n@ChristianSchulte\r\n\r\nFor more information kindly ask you to visit the original pull request  #148",
    "head_branch": "MNG-5600",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244359a14f302d393b5bc1",
    "number": 294,
    "body": "… repositories when preparing artifact metadata\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\nPlease see the issue description at https://issues.apache.org/jira/browse/MNG-6759. The basic issue is that when there's a dependency graph like A -> B -> C, and C is in some non-Central repository listed by B's POM, Maven is supposed to look for it in the repositories listed by B. As of 3.6.2, this doesn't always happen.\r\n\r\nThe issue is caused by an oversight in https://github.com/apache/maven/commit/d3ace78602405079d6416a63c13216568ba97995. When the optimization is triggered, the \"pomRepositories\" variable is not set. In the slow path, it will be set to the remoteRepositories of the parent artifact in the dependency trail. \r\n\r\nI'd like advice on improving this fix, as I'm using a deprecated method which is probably not a good idea. The optimized path gets the Model of the artifact. I need a list of ArtifactRepository, but the Model only contains a list of Repository. Should I use a RepositorySystem to map them? It feels like a waste, as they already exist in the session's set of MavenProject. I'd get them from the ReactorReader, but it unfortunately only exposes the Model.\r\n",
    "head_branch": "MNG-6759",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6759] Maven fails to use <repositories> section from dependency when resolving transitive dependencies in some cases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624435aa14f302d393b5bc2",
    "number": 293,
    "body": "MavenCli.resolveFile and\r\nconfiguration.SettingsXmlConfigurationProcessor.resolveFile\r\nutility methods are identical. Moving them into separate\r\nResolveFile class.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "MNG-6777",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624435ba14f302d393b5bc3",
    "number": 292,
    "body": "This pull requests implements the proposed change in the resolving of relative paths from maven.config options: instead of using the current working directory whatever it happens to be, it uses the parent of the .mvn directory containing the maven.config file.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "MNG-6762",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624435ca14f302d393b5bc4",
    "number": 291,
    "body": null,
    "head_branch": "MNG-6776-tc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624435da14f302d393b5bc5",
    "number": 290,
    "body": "Initial implementation of DefaultGraphBuilder is single threaded and doesn't scale on multi-core servers/workstations. \r\nThe proposal is to use fork join pool to build the project graph  - as per initial result, graph build time reduced ~2.5 times with -T4 from 14..15 to 5..6 sec\r\n\r\nImplementation is rather trivial - current implementation walks projects tree in depth which is naturally fits fork join model - sub-modules are forked and joined to get final result\r\n\r\nRisks: mostly mutable objects in domain model and non-functional initial implementation.\r\nSafety could be improved with model rework to immutable model.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6774",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624435ea14f302d393b5bc6",
    "number": 289,
    "body": "This change resets the `repositoryIds` that have been added to `ModelResolver`s when a new copy is created, which at least within the Maven project is only used while importing dependencyManagement.\r\n\r\nThe issue is that after interpolation, the ModelResolver is reconfigured, which adds the `central` repository ID from the Super POM if there isn't an override present in that direct POM lineage (but overwrites any `central` override in the request). The Super POM's entry should be a last-resort fallback and should only be applied when no other `central` repository is present.\r\n\r\nThis largely comes into play when working in an environment where the true Maven Central repository is unreachable, or when using JFrog Artifactory. Artifactory removes all repository definitions from the POMs it serves from its virtual repositories, meaning even if every project has a direct `central` override in its POM, when pulled in as a dependency/import, the repository will be absent and this issue will be encountered.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6772",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624435fa14f302d393b5bc7",
    "number": 288,
    "body": "Synopsis\r\nSynchronized method DefaultProjectBuildingHelper#createProjectRealm on project critical path invokes io under lock by calling ProjectRealmCache#createKey\r\nThat's restricts scaling of graph build horizontally by invoking more threads\r\n\r\nProposal:\r\nCache results of first file access to prevent subsequent io\r\n\r\nRisks:\r\n* it is unclear why need to get file attributes each times. That could mean that file is supposed to mutate during the build which renders implementation incorrect \r\n\r\nOptions:\r\n* install file watcher to get notifications of file replacement\r\n* minimize synchronized section in DefaultProjectBuildingHelper#createProjectRealm - move ProjectRealmCache#createKey out of it\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6773",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244360a14f302d393b5bc8",
    "number": 287,
    "body": "Submitted by: Luc Klaassen and Martin Kanters.\r\n\r\nSquashed work from Luc Klaassen and me.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6065_create-log-fail-level-option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6065] Create option --fail-on-severity"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244361a14f302d393b5bc9",
    "number": 286,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6656",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244362a14f302d393b5bca",
    "number": 285,
    "body": "parameters\r\n\r\n- Added warning when setting deprecated parameter with value different\r\nthan the default.\r\n- Stop using deprecated DebugConfigurationListener class.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5222",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244363a14f302d393b5bcb",
    "number": 284,
    "body": "use utility method ( Objects.equals ) to rewrite some equals logic in code base. ",
    "head_branch": "refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[refactor] use utility method of Objects to simplify code (#284)\n\n* [refactor] use utility method of Objects to simplify code\r\n\r\n* [refactor] use utility method of Objects to simplify code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244364a14f302d393b5bcc",
    "number": 283,
    "body": "having to specify -e or -X\r\n\r\n- forces show errors by default if -e option not specified in CLI (-X\r\nstill required in CLI to activate debug mode).\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5587",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244364a14f302d393b5bcd",
    "number": 282,
    "body": "fix typo",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244365a14f302d393b5bce",
    "number": 281,
    "body": "Save the artifacts temporarily in a Map ordered by tree depth, and only\r\nafter finishing iterating over the dependency tree are the artifacts\r\nadded to the collection in depth order.\r\n\r\nNote: IT-core test needs to be added replacing IT 3813 which does not apply any longer for a maven version containing this change.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6357",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244366a14f302d393b5bcf",
    "number": 280,
    "body": "Remove redundant code.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244367a14f302d393b5bd0",
    "number": 279,
    "body": "When I inspect with idea, I find some codes can be optimized, so I submit a PR here",
    "head_branch": "refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244368a14f302d393b5bd1",
    "number": 278,
    "body": "To provide a maven version working properly with with tycho, I propose to increase the minor version for the next one including new features. Afterwards the current minor version can be used to provide a patch for 3.6.\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-6642\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244369a14f302d393b5bd2",
    "number": 277,
    "body": "This PR is to allow DefaultArtifactDescriptorReader.loadPom to check IGNORE_MISSING policy upon ArtifactTransferException.\r\n\r\nProblem description in https://issues.apache.org/jira/browse/MNG-6732\r\n\r\nExample project to demonstrate effect of ArtifactTransferException even when a dependency is unnecessary: https://github.com/suztomo/maven-missing-artifact .\r\n\r\n\r\n----------------------------\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "artifacttransferexception2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624436aa14f302d393b5bd3",
    "number": 276,
    "body": "This PR is to allow DefaultArtifactDescriptorReader.loadPom to check IGNORE_MISSING policy upon ArtifactTransferException.\r\n\r\nProblem description in https://issues.apache.org/jira/browse/MNG-6732\r\n\r\nExample project to demonstrate effect of ArtifactTransferException even when a dependency is unnecessary: https://github.com/suztomo/maven-missing-artifact .\r\n\r\n\r\n----------------------------\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "artifacttransferexception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624436ba14f302d393b5bd4",
    "number": 275,
    "body": "The current implementation of `StringSearchModelInterpolator` introspects Java objects, e.g. `java.io.File`. This fix stops introspecting such objects. See the unit test `testNotInterpolateFile`.\r\n\r\nWe found this issue when our build process failed with this warning on the console output:\r\n\r\n```\r\njunit.framework.AssertionFailedError: expected:<[]> but was:<[WARNING: An illegal reflective access operation has occurred, WARNING: Illegal reflective access by org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$CacheField (file:/home/jenkins/jenkins-slave/workspace/ven-box_maven_removed-java-tools/test/core-it-suite/target/apache-maven/lib/maven-model-builder-3.6.2-SNAPSHOT.jar) to field java.io.File.fs, WARNING: Please consider reporting this to the maintainers of org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$CacheField, WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations, WARNING: All illegal access operations will be denied in a future release]>\r\nat org.apache.maven.it.MavenITmng4387QuietLoggingTest.testit(MavenITmng4387QuietLoggingTest.java:71)\r\n```\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ x] You have run the [Core IT][core-its] successfully.\r\nThe build is successful: https://builds.apache.org/job/maven-box/job/maven/job/MNG-6729/\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6729",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6729] StringSearchModelInterpolator introspects objects from Java API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624436ca14f302d393b5bd5",
    "number": 274,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6716",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624436da14f302d393b5bd6",
    "number": 273,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6723",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624436ea14f302d393b5bd7",
    "number": 272,
    "body": "Otherwise the sessionFinished event may be sent before some\r\nprojects/goals finish, which violates the contracts of execution\r\nlisteners and makes it hard to properly lifecycle components that\r\nare needed for goal execution.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "oehme/multithreaded-event-order",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624436fa14f302d393b5bd8",
    "number": 271,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6718",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6718] Upgrade to plexus-utils 3.2.1 (#271)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244370a14f302d393b5bd9",
    "number": 270,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MAVEN-3.6/MNG-6399",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244371a14f302d393b5bda",
    "number": 269,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-wildcard-exclusion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6713] Fix ExclusionArtifactFilter to respect wildcard exclusions. (#269)\n\n* [MNG-6713] Fix ExclusionArtifactFilter to respect wildcard exclusions.\r\n\r\n* Moved `*` to a constant"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244372a14f302d393b5bdb",
    "number": 268,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6702",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244373a14f302d393b5bdc",
    "number": 267,
    "body": "while at it, did a little bit of cleanup:\r\n- removed aopalliance (like done in maven-resolver-provider)\r\n- removed guice dependency management that should be part of MNG-6475\r\n\r\nsee https://issues.apache.org/jira/browse/MNG-6549",
    "head_branch": "MNG-6549",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244374a14f302d393b5bdd",
    "number": 266,
    "body": "Maven 3.6.1 introduces a bug that basedir and \".\" can be added twice to `compileSourceRoots`,\r\nwhich breaks some compiler plugin. This commit fixes this issue by correctly normailzing \".\"\r\nwhen it's added to `compileSourceRoots`.\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "fix-mvn-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244375a14f302d393b5bde",
    "number": 265,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNGSITE-353_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244376a14f302d393b5bdf",
    "number": 264,
    "body": "Refine the original PR (#199) to the test that improves coverage and give it a clearer description of its behaviour.\r\n\r\nAlthough this isn't a major change, it does improve coverage (this case works, but isn't currently tested), and resolves the original ticket.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6535-improve-test-coverage-for-UrlNormalizer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244377a14f302d393b5be0",
    "number": 263,
    "body": "",
    "head_branch": "MNG-6698",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244377a14f302d393b5be1",
    "number": 262,
    "body": "",
    "head_branch": "MNG-6695",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244378a14f302d393b5be2",
    "number": 261,
    "body": "",
    "head_branch": "MNG-6697",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6697] New fast model interpolator not using reflection (#261)\n\n* [MNG-6697] New fast model interpolator not using reflection\r\n\r\n* [MNG-6697] Fix management key in case a field has been modified\r\n\r\n* [MNG-6697] Remove the unused FIELDS_CACHE and make the InnerInterpolator private\r\n\r\n* [MNG-6697] Clean up the code to remove a few warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244379a14f302d393b5be3",
    "number": 260,
    "body": "",
    "head_branch": "MNG-6693",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624437aa14f302d393b5be4",
    "number": 259,
    "body": "",
    "head_branch": "speed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624437ba14f302d393b5be5",
    "number": 258,
    "body": "Copied from #232, split from #257. cc @michael-o",
    "head_branch": "remove-plexus-component-plugin-from-maven-artifact-module",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624437ca14f302d393b5be6",
    "number": 257,
    "body": "Further conversion to JSR 330 annotations, following [Plexus Migration](https://wiki.eclipse.org/Sisu/PlexusMigration) -- `maven-embedder`, including logging improvements.\r\n\r\nThis incorporates #232 by @slachiewicz, including the logging change suggested by @olamy in 39ca59d8bcce6b1.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6686-convert-maven-embedder-to-jsr-330",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624437da14f302d393b5be7",
    "number": 256,
    "body": "Further conversion to JSR 330 annotations, following [Plexus Migration](https://wiki.eclipse.org/Sisu/PlexusMigration), for `maven-model-builder`, with some test changes to adjust.\r\n\r\nIn tests, use of `PlexusTestCase` for trivial wiring is reduced, to directly construct the classes under test. Tests that do more significant wiring are modified to use `PlexusConstants.SCANNING_ON` so JSR 330-annotated classes no longer included in component indexes are picked up.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6685-convert-maven-model-builder-to-jsr-330",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624437ea14f302d393b5be8",
    "number": 255,
    "body": "Further conversion to JSR 330 annotations, following [Plexus Migration](https://wiki.eclipse.org/Sisu/PlexusMigration) -- everything outside core and compat, with some test changes to adjust.\r\n\r\nThis incorporates #232 by @slachiewicz, but omits the logging change in 39ca59d8bcce6b1 to focus on the annotations.\r\n\r\nIn tests, use of `PlexusTestCase` for trivial wiring is reduced, to directly construct the classes under test. Tests that do more significant wiring are modified to use `PlexusConstants.SCANNING_ON` so JSR 330-annotated classes no longer included in component indexes are picked up.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5577-convert-remaining-non-core-modules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624437fa14f302d393b5be9",
    "number": 254,
    "body": "removed misleading \"While it usually represents the extension on the filename of the dependency, that is not always the case. A type can be mapped to a different extension and a classifier. The type often corresponds to the packaging used, though this is also not always the case.\"",
    "head_branch": "MNG-6681",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "MNG-6681 dependency type = extension+classifier\n\nremoved misleading \"While it usually represents the extension on the\nfilename of the dependency, that is not always the case. A type can be\nmapped to a different extension and a classifier. The type often\ncorresponds to the packaging used, though this is also not always the\ncase.\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244380a14f302d393b5bea",
    "number": 253,
    "body": "…consistent\r\n\r\nThis closes #124\r\n\r\nBased on the work of @ChristianSchulte . Rebased and cleaned up. Passes all ITs and brings in more consistency. Nominate this for 3.6.2. Please review.",
    "head_branch": "MNG-6675",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244381a14f302d393b5beb",
    "number": 252,
    "body": "Follow-up to https://github.com/codehaus-plexus/modello/pull/31\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "oehme/update-modello",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244382a14f302d393b5bec",
    "number": 251,
    "body": "Submitted by: Mike Mol and Martin Kanters\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6665_toolchains-environment-variable-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6665] toolchain.xml file should support environment variables"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244383a14f302d393b5bed",
    "number": 250,
    "body": "Signed-off-by: Mickael Istria <mistria@redhat.com>\r\n",
    "head_branch": "deploy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Always deploy snapshot from master (#250)\n\nSigned-off-by: Mickael Istria <mistria@redhat.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244384a14f302d393b5bee",
    "number": 249,
    "body": "This closes #249\r\n\r\n",
    "head_branch": "MNG-6655",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6655] Add support for \"release\" qualifier\n\nThis closes #249"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244385a14f302d393b5bef",
    "number": 248,
    "body": "To make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244386a14f302d393b5bf0",
    "number": 247,
    "body": "Switch from (deprecated) `OptionBuilder` to `Option.Builder`. Confirm by inspection that the resulting `Option` objects are the same.\r\n\r\nFor now, leave `GnuParser`. Despite the upgrade advice in the `GnuParser` Javadoc (\"since 1.3, use the `DefaultParser` instead\"), it behaves differently (see [this Stack Overflow answer](https://stackoverflow.com/questions/34549044/why-are-detected-cli-options-different-when-using-defaultparser-instead-of-gnupa) for possible reasons).\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6069-use-undeprecated-commons-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244387a14f302d393b5bf1",
    "number": 246,
    "body": "Convert maven-settings-builder to JSR 330 annotations. Use @Named\r\nand @Singleton throughout, and switch to constructor injection\r\nfor DefaultSettingsBuilder.\r\n\r\nThis PR restricts the change to one module to get feedback on the approach.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5577-convert-maven-settings-builder-to-jsr-330",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244388a14f302d393b5bf2",
    "number": 245,
    "body": "Running Error Prone over Maven triggers an infinite recursion\r\ncheck in AbstractCoreMavenComponentTestCase.PluginBuilder; on\r\ninspection, the class is unused. Remove it, along with the commented-\r\nout (since bc257a588e) reference to it.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n",
    "head_branch": "remove-unused-test-code-with-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244389a14f302d393b5bf3",
    "number": 244,
    "body": "If a dependency on another project is found, don't parse its\r\nPOM again, but instead use the model we already have in memory.\r\n\r\nThis saves a large amount of time and memory for builds that have\r\nlots of subprojects and dependencies between them.\r\n\r\nThe approach was directly copied from DefaultArtifactDescriptorReader,\r\nwhich does the same optimization.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "oehme/leaner-project-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624438aa14f302d393b5bf4",
    "number": 243,
    "body": "ExcludesArtifactFilter was highly inefficient.\r\nIt took the group and artifact ID of an Exclusion, concatenated them into\r\na new String, which was kept in memory for the whole duration\r\nof the build and then compared that String against the concatenation\r\nof group and artifact ID of each incoming artifact, adding more\r\nCPU cycles than necessary.\r\n\r\nInstead we now just wrap the existing Exclusion object and check its\r\ngroupId and artifactId against the artifact to tell whether it should\r\nbe excluded.\r\n\r\nThe old class is kept around for binary compatibility, but is now unused.\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "oehme/leaner-excludes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624438ba14f302d393b5bf5",
    "number": 242,
    "body": "I profiled the project discovery phase of a large (2000 module) Maven build today, because it was taking several minutes before it actually started executing goals. I found some low-level hotspots that this PR fixes. It shaves off about 2.5min of the startup time of this build. See the individual commit messages for more details. There are still other hotspots left, but they are in the plexus-interpolation project, for which I'll open a separate PR.\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624438ba14f302d393b5bf6",
    "number": 241,
    "body": "https://issues.apache.org/jira/browse/MNG-6626\r\n`DefaultExceptionHandler.handleException` throws NPE in case if root cause is `NoClassDefFoundError` with `null` message.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6626",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624438ca14f302d393b5bf7",
    "number": 240,
    "body": null,
    "head_branch": "MNG-5001",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624438da14f302d393b5bf8",
    "number": 239,
    "body": "A solution for quieting the `Download[ed|ing] from ...` messages.\r\n\r\nThis solution introduces the system property flag `-Dorg.apache.maven.cli.transfer.ConsoleMavenTransferListener.quiet` which can either be used on the cli or be set in the `MAVEN_OPTS` so that it affects system wide.\r\n\r\nSigned-off-by: Raymond Auge <rotty3000@apache.org>\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6605",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624438ea14f302d393b5bf9",
    "number": 238,
    "body": "It is safer to use \"$@\".\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "maoshuai-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624438fa14f302d393b5bfa",
    "number": 237,
    "body": "",
    "head_branch": "MNG-6611",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6611] Update animal-sniffer-maven-plugin to version 1.17\n\nFixes #237"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244390a14f302d393b5bfb",
    "number": 236,
    "body": "https://issues.apache.org/jira/browse/MNG-6599\r\nhttps://issues.apache.org/jira/browse/MNG-6600\r\nhttps://issues.apache.org/jira/browse/MNG-6597\r\nhttps://issues.apache.org/jira/browse/MNG-6601\r\n",
    "head_branch": "MNG-6597",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244391a14f302d393b5bfc",
    "number": 235,
    "body": "",
    "head_branch": "MNG-6573",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244392a14f302d393b5bfd",
    "number": 234,
    "body": "- Added class IntItem and LongItem for handling numbers lower than 2^31\r\nand 2^63.\r\n- Renamed IntegerItem to BigIntegerItem for handling larger numbers.\r\n- Changed old Stack implementation to LinkedList.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6572",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244393a14f302d393b5bfe",
    "number": 233,
    "body": "",
    "head_branch": "MNG-6562",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6562] added WARNING on default bindings plugins unlocked versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244394a14f302d393b5bff",
    "number": 232,
    "body": "",
    "head_branch": "MNG-5577",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244395a14f302d393b5c00",
    "number": 231,
    "body": "Emit the `ToolchainsBuildingResult` event to the `EventSpy` instead the `ToolchainsBuildingRequest` event two times.\r\n\r\nCorresponding IT test: https://github.com/apache/maven-integration-testing/pull/42\r\n\r\n---\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "mgn6558",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244396a14f302d393b5c01",
    "number": 230,
    "body": "The details are in https://issues.apache.org/jira/browse/MNG-6559.",
    "head_branch": "fix-mailing-list-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6559] Fix mailing list URL (#230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244397a14f302d393b5c02",
    "number": 229,
    "body": "",
    "head_branch": "MNG-5693",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244398a14f302d393b5c03",
    "number": 228,
    "body": "",
    "head_branch": "MNG-6346",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244399a14f302d393b5c04",
    "number": 227,
    "body": "",
    "head_branch": "MNG-6520",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624439aa14f302d393b5c05",
    "number": 226,
    "body": "Since version commons-cli 1.3 `org.apache.commons.cli.OptionBuilder` is deprecated and should be replaced with `Option#builder(String)`. \r\n\r\nPlease note that:\r\n\r\n - this PR changes some public fields in `CLIManager` from `char` to `String` (this could be a backward incompatible change for some users);\r\n - I tried to replace the deprecated `org.apache.commons.cli.GnuParser.GnuParser` but there are test failures  (e.g. cannot parse options like  \"-Drevision=1.3\").\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "use-non-deprecated-options-parser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624439ba14f302d393b5c06",
    "number": 225,
    "body": "[MNG-6405](https://issues.apache.org/jira/browse/MNG-6405) since https://github.com/mojohaus/flatten-maven-plugin/issues/53#issuecomment-447826001 brought this up again. I have not received any hints on the proper approach to test this.\r\n\r\n-----\r\n\r\nBy the way\r\n\r\n - [ ] You have run the Core IT successfully.\r\n\r\nIs this not already done by the `Jenkinsfile`? Maybe an obsolete PR template.",
    "head_branch": "forked-basedir-MNG-6405",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6405] Fix basedir in MavenProject.deepCopy (#225)\n\n* [MNG-6405] Fix basedir in MavenProject.deepCopy.\r\n\r\n* Reproduced bug in test.\r\nFailure without patch:\r\njunit.framework.AssertionFailedError: Base directory is preserved across clone expected:<…/maven-core/target/test-classes> but was:<…/maven-core/target/test-classes/target>\r\n\tat org.apache.maven.project.MavenProjectTest.testCloneWithBaseDir(MavenProjectTest.java:188)\r\n\r\n* Code style. Not enforced in tests during build?"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624439ca14f302d393b5c07",
    "number": 224,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624439da14f302d393b5c08",
    "number": 223,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624439ea14f302d393b5c09",
    "number": 199,
    "body": "Hi,\r\n\r\nI've analysed your codebase and produced some unit tests for the following classes - org.apache.maven.model.path.DefaultUrlNormalizer.\r\n\r\nI've written the tests for these functions with the help of [Diffblue](https://www.diffblue.com/) [Cover](https://www.diffblue.com/datasheet).\r\n\r\nHopefully, these tests should help you detect regressions caused by future code changes.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "add-unit-tests-defaulturlnormalizer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624439fa14f302d393b5c0a",
    "number": 198,
    "body": "https://builds.apache.org/job/maven-box/job/maven/job/MNG-6520",
    "head_branch": "MNG-6071",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6071] Normalize relative paths for working directory"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a0a14f302d393b5c0b",
    "number": 197,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6533",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a1a14f302d393b5c0c",
    "number": 196,
    "body": "Hi,\r\n\r\nI've analysed your codebase and produced some unit tests for the following classes - org.apache.maven.repository.MavenArtifactMetadata.\r\n\r\nI've written the tests for these functions with the help of [Diffblue](https://www.diffblue.com/) [Cover](https://www.diffblue.com/datasheet).\r\n\r\nHopefully, these tests should help you detect regressions caused by future code changes.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "add-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a2a14f302d393b5c0d",
    "number": 195,
    "body": "Hi,\r\n\r\nI've analysed your codebase and produced some unit tests for the following classes - org.apache.maven.plugin.CacheUtils.\r\n\r\nI've written the tests for these functions with the help of [Diffblue](https://www.diffblue.com/) [Cover](https://www.diffblue.com/datasheet).\r\n\r\nHopefully, these tests should help you detect regressions caused by future code changes.\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/",
    "head_branch": "add-unit-tests-cacheutils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a2a14f302d393b5c0e",
    "number": 194,
    "body": "Using a model cache that doesn't check for last file change leads to\r\nresolving against out of date models, generating erroneous\r\nMavenProjects.\r\n\r\nSigned-off-by: Mickael Istria <mistria@redhat.com>",
    "head_branch": "MNG-6311-regression",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a3a14f302d393b5c0f",
    "number": 193,
    "body": "This adds a (failing) unit test showcasing that ProjectBuilder.build(List<File> projects, boolean, ProjectBuildingRequest) doesn't honor ProjectBuildingRequest.isResolveDependencies().\r\nAnd then it adds a fix that turns the test green.\r\n\r\n\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6529-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6529] ProjectBuilder.build(List<Project> ...) honor\nrequest.isResolveDependency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a4a14f302d393b5c10",
    "number": 192,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6261",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6261] Relative parent POM resolution failing in 3.5.0 with complex multimodule builds\n\nUsing java File api to compare"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a5a14f302d393b5c11",
    "number": 191,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-5180",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a6a14f302d393b5c12",
    "number": 190,
    "body": "- add id property to Scm model\r\n- add hashCode() and equals() methods to Scm model\r\n- add additional tests to Scm model\r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n - [x] The changes are trivial and do not require to run the Core IT test suite?\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure please ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MPOM-211",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a7a14f302d393b5c13",
    "number": 189,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6169_2/all-updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a8a14f302d393b5c14",
    "number": 188,
    "body": "",
    "head_branch": "MNG-6490",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6490] Maven shall not fail reporting circular dependency when the dependency is a classified secondary artifact"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443a9a14f302d393b5c15",
    "number": 187,
    "body": "",
    "head_branch": "MNG-6496",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443aaa14f302d393b5c16",
    "number": 186,
    "body": "Can we merge this so I can fix some logging for long module name.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443aba14f302d393b5c17",
    "number": 185,
    "body": "With this change, we can manually delete maven-compat.jar from dist and then test other plugins.\r\n\r\nmvn clean works fine, but mvn verify fails with maven-enforcer (even from snapshot)",
    "head_branch": "MNG-5995",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443aca14f302d393b5c18",
    "number": 184,
    "body": "Fixes errors like: Cannot relativize 'c:\\mvn-it-0.tmp\\core-it-support\\..' relatively to '/mvn-it-0.tmp'\r\n\r\nReference JENKINS-52657",
    "head_branch": "jenkins-relativize-problem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443ada14f302d393b5c19",
    "number": 183,
    "body": "Small change only for maven-model-builder but lib later can be used by other modules\r\n\r\nhttps://github.com/xmlunit/user-guide/wiki/DiffBuilder",
    "head_branch": "MNG-6479",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6479] Upgrade XMLUnit to 2.2.1 (#183)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443aea14f302d393b5c1a",
    "number": 182,
    "body": "Remove unused Guava dependencies from POM files.\r\n\r\n(https://issues.apache.org/jira/browse/MNG-6475)\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6475",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443afa14f302d393b5c1b",
    "number": 181,
    "body": "",
    "head_branch": "MNG-6473",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6473] Update Mockito to 2.21.0 (#181)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b0a14f302d393b5c1c",
    "number": 180,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Trivial change, no need for JIRA ticket.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b1a14f302d393b5c1d",
    "number": 179,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Jenkins build to use Maven 3.5.4 (#179)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b2a14f302d393b5c1e",
    "number": 178,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n[mavne log.TXT](https://github.com/apache/maven/files/2363377/mavne.log.TXT)\r\n\r\nI use manve 3.0.4 ，jdk1.7.0_80 . I find always have this bug.\r\nException in thread \"main\" java.lang.StackOverflowError\r\n\tat org.sonatype.aether.util.graph.transformer.NearestVersionConflictResolver$1.accept(NearestVersionConflictResolver.java:193)\r\nplz sed the mavne.log.TXT File.",
    "head_branch": "maven-3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b3a14f302d393b5c1f",
    "number": 177,
    "body": "\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "using-artifact-as-thread-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b4a14f302d393b5c20",
    "number": 176,
    "body": "This PR fixes the following issue:\r\nhttps://issues.apache.org/jira/browse/MNG-6455\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b5a14f302d393b5c21",
    "number": 175,
    "body": "This fixes [MNG-6450](https://issues.apache.org/jira/browse/MNG-6450) \r\n\r\nFollowing this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully. (There's no `run-its` profile, though...)\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licensed under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6450",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b6a14f302d393b5c22",
    "number": 174,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b7a14f302d393b5c23",
    "number": 173,
    "body": "to be updated/merged with final version",
    "head_branch": "MNG-6441",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b8a14f302d393b5c24",
    "number": 172,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MNG-6424",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[MNG-6424] - Upgrade plexus-interpolation to 1.25"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b9a14f302d393b5c25",
    "number": 171,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [ ] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [ ] Each commit in the pull request should have a meaningful subject line and body.\r\n - [ ] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [ ] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [ ] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [ ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [ ] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443b9a14f302d393b5c26",
    "number": 170,
    "body": "\r\n",
    "head_branch": "fix/log-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed typo in exception logging LegacyRepositorySystem\n\nFixes #170"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443baa14f302d393b5c27",
    "number": 169,
    "body": "I provide it, if someone could run tests on it and check on larger projects.",
    "head_branch": "feature/MNG-6344-guice-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443bba14f302d393b5c28",
    "number": 168,
    "body": "jar-no-fork should be used when attaching to the build lifecycle\r\n\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x ] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n\r\n",
    "head_branch": "MNG-5940-super-pom-jar-no-fork",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443bca14f302d393b5c29",
    "number": 167,
    "body": "…text\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)",
    "head_branch": "fix/MNG-6414-apache-license",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6414] Add more Apache license header patterns to skip downloading Apache license\n\nAdditional patterns for the Apache license exception list:\n\"Apache License, Version 2.0\"\n\"The Apache Software License, Version 2.0\"\n\"ASLv2\"\n\"Apache Public License 2.0\"\n\nFixes #167"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443bda14f302d393b5c2a",
    "number": 166,
    "body": "Make sure that resume suggestion contains a valid value for restarting the build, as same artifact name might occur in different places of multi-module project, it is necessary to check if there is conflict in name.\r\n\r\nBy this way returned suggestion will always be correct and less experienced developers will not get confused with it.\r\n\r\nJIRA issue: https://issues.apache.org/jira/browse/MNG-6410.\r\nA extra note, this pull request depends on another pull #165 - for MNG-6028, which changes the same line, both commits are included in this PR.",
    "head_branch": "MNG-6410",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443bea14f302d393b5c2b",
    "number": 165,
    "body": "This PR is small improvement which allows to simply pick up returned sugestion and restart the build.\r\n\r\nJIRA issue: https://issues.apache.org/jira/browse/MNG-6028.",
    "head_branch": "MNG-6028",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443bfa14f302d393b5c2c",
    "number": 164,
    "body": "This pull request aims to improve usability of error message returned when invalid value for resume from option is passed:\r\nhttps://issues.apache.org/jira/browse/MNG-6411\r\n\r\nIt's just formatting tweak.",
    "head_branch": "MNG-6411",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c1a14f302d393b5c2d",
    "number": 163,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [x] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [x] Each commit in the pull request should have a meaningful subject line and body.\r\n - [x] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [x] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [x] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [x] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [x] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [x] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n",
    "head_branch": "MGN-6401_fix_interpolation_problem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c2a14f302d393b5c2e",
    "number": 162,
    "body": "Following this checklist to help us incorporate your \r\ncontribution quickly and easily:\r\n\r\n - [X] Make sure there is a [JIRA issue](https://issues.apache.org/jira/browse/MNG) filed \r\n       for the change (usually before you start working on it).  Trivial changes like typos do not \r\n       require a JIRA issue.  Your pull request should address just this issue, without \r\n       pulling in other changes.\r\n - [X] Each commit in the pull request should have a meaningful subject line and body.\r\n - [X] Format the pull request title like `[MNG-XXX] - Fixes bug in ApproximateQuantiles`,\r\n       where you replace `MNG-XXX` with the appropriate JIRA issue. Best practice\r\n       is to use the JIRA issue title in the pull request title and in the first line of the \r\n       commit message.\r\n - [X] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\r\n - [X] Run `mvn clean verify` to make sure basic checks pass. A more thorough check will \r\n       be performed on your pull request automatically.\r\n - [X] You have run the [Core IT][core-its] successfully.\r\n\r\nIf your pull request is about ~20 lines of code you don't need to sign an\r\n[Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf) if you are unsure\r\nplease ask on the developers list.\r\n\r\nTo make clear that you license your contribution under \r\nthe [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\nyou have to acknowledge this by using the following check-box.\r\n\r\n - [X] I hereby declare this contribution to be licenced under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n - [X] In any other case, please file an [Apache Individual Contributor License Agreement](https://www.apache.org/licenses/icla.pdf).\r\n\r\n[core-its]: https://maven.apache.org/core-its/core-it-suite/\r\n\r\n",
    "head_branch": "MNG-6389",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c3a14f302d393b5c2f",
    "number": 161,
    "body": "…nfinishedProjects",
    "head_branch": "fix/MNG-6370",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c3a14f302d393b5c30",
    "number": 160,
    "body": "- skip download of Apache License files\r\n- correct address to Oracle CDDL and MIT licenses",
    "head_branch": "fix/licence1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c4a14f302d393b5c31",
    "number": 159,
    "body": "o Updated the 'DefaultModelResolver' to handle replacing repositories the same way the\r\n  'DefaultDependencyCollector' does. When the 'DefaultDependencyCollector' finds\r\n  a repository in a child node with an id matching a repository already in use,\r\n  it will only merge any mirror definitions but never change the repository already\r\n  in use. The 'DefaultModelResolver' needs to follow the same logic. What has been\r\n  provided must not change for consistency.\r\n\r\nCherry-picked from @ChristianSchulte's fork, per comment on the MNG-4347 ticket.  I made the same changes to the ProjectModelResolver, since it seems that's the implementation that's getting used by the dependencyManagement import resolution rather than the DefaultModelResolver.",
    "head_branch": "bugfix/MNG-4347-recursive-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c5a14f302d393b5c32",
    "number": 158,
    "body": "When a set of default repositories are specified via a profile in the global settings.xml, recursive dependencyManagement imports cannot be resolved from repositories in the profiles, since the profiles are not currently passed along to the ModelBuildingRequest used for resolving recursive imports.  This adds the profile to that ModelBuildingRequest.\r\n",
    "head_branch": "bugfix/recursive-dependency-management-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c6a14f302d393b5c33",
    "number": 157,
    "body": "",
    "head_branch": "MNG-6360_export-slf4j-event",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c7a14f302d393b5c34",
    "number": 156,
    "body": "",
    "head_branch": "remove-guava-java7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c8a14f302d393b5c35",
    "number": 155,
    "body": "",
    "head_branch": "fix/MNG-5378",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443c9a14f302d393b5c36",
    "number": 154,
    "body": "",
    "head_branch": "fix/MNG-5967",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443caa14f302d393b5c37",
    "number": 153,
    "body": "Without 2nd commit 719234d when I set -Dstyle.color=never is not working correctly and returns value \"true\" not \"never\"",
    "head_branch": "fix/MNG-6069",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443cba14f302d393b5c38",
    "number": 152,
    "body": "Fix password printout to logs\r\n\r\nCredit to: Ryan J. McDonough",
    "head_branch": "fix/MNG-5992-maven-release-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443cca14f302d393b5c39",
    "number": 151,
    "body": "o Updated default plugin versions to latest release version to bring in the latest fixes (and issues to report).\r\no Updated to correct the 'ear' packaging bindings.\r\no Downgraded the 'maven-plugin-plugin' from 3.4 to 3.3  due to MPLUGIN-296.\r\no Updated to 'maven-site-plugin' 3.7",
    "head_branch": "fix/MNG-5968",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443cda14f302d393b5c3a",
    "number": 150,
    "body": "Also change scope to test",
    "head_branch": "feature/mockito",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443cea14f302d393b5c3b",
    "number": 149,
    "body": "",
    "head_branch": "feature/checkstyle-3.18-maven",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443cfa14f302d393b5c3c",
    "number": 148,
    "body": null,
    "head_branch": "MNG-5600",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d0a14f302d393b5c3d",
    "number": 147,
    "body": "",
    "head_branch": "MNG-5527",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d1a14f302d393b5c3e",
    "number": 146,
    "body": "Closes #64 without merging. ITs are pending to be committed.",
    "head_branch": "MNG-4463",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d2a14f302d393b5c3f",
    "number": 145,
    "body": "…pdate policy 'never'.",
    "head_branch": "MNG-6112",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d3a14f302d393b5c40",
    "number": 144,
    "body": "…n for controlling it's transitive dependencies",
    "head_branch": "MNG-2893",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d4a14f302d393b5c41",
    "number": 143,
    "body": "…regression)",
    "head_branch": "MNG-5359",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d5a14f302d393b5c42",
    "number": 142,
    "body": "… profiles from the user settings.",
    "head_branch": "MNG-6114",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d6a14f302d393b5c43",
    "number": 141,
    "body": "",
    "head_branch": "MNG-6164",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d7a14f302d393b5c44",
    "number": 140,
    "body": "maven-core should export org.slf4j.event.* from slf4j-api 1.7.15 or later.\r\nFor example, this package is where the `Level` class is located.\r\n\r\nOtherwise, issues similar to MNG-5842 and MNG-5845 will arise with plugins that use Slf4j themselves (or more likely plugins that use libraries that use Slf4j).\r\n\r\nDiscovered while working on in-house Maven plugin that failed with `java.lang.NoClassDefFoundError: org/slf4j/event/Level`.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d7a14f302d393b5c45",
    "number": 139,
    "body": "Adding exportedPackage to find class:\r\njavax.annotation.security.RolesAllowed\r\n\r\nFirst maven commit :) Works but might be deeper issue",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d8a14f302d393b5c46",
    "number": 138,
    "body": "",
    "head_branch": "feature/MNG-6306",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443d9a14f302d393b5c47",
    "number": 137,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443daa14f302d393b5c48",
    "number": 136,
    "body": "Idea is to let the user identify how many modules are still to be executed/processed",
    "head_branch": "fb/MNG-6302_module-progress",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "logging the module count to let the user identify how many module are still to be executed/processed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443dba14f302d393b5c49",
    "number": 135,
    "body": "",
    "head_branch": "colored-output-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443dca14f302d393b5c4a",
    "number": 134,
    "body": "Patch for https://issues.apache.org/jira/browse/MNG-6294",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443dda14f302d393b5c4b",
    "number": 133,
    "body": "https://github.com/ChristianSchulte/maven/commit/679a34b86e3d69b7a832481c7f21e5eab367cd11 cherry picked into master\r\n\r\nhttps://issues.apache.org/jira/browse/MNG-5600",
    "head_branch": "MNG-5600",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443dea14f302d393b5c4c",
    "number": 132,
    "body": "",
    "head_branch": "pr/doc-mavenproject-projectbuilder-ref",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443dfa14f302d393b5c4d",
    "number": 131,
    "body": "This is a patch for MNG-6213: https://issues.apache.org/jira/browse/MNG-6213",
    "head_branch": "MNG-6213",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e0a14f302d393b5c4e",
    "number": 130,
    "body": "This is a patch for MNG-6213: https://issues.apache.org/jira/browse/MNG-6213",
    "head_branch": "MNG-6213",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e1a14f302d393b5c4f",
    "number": 129,
    "body": "JIRA ticket: https://issues.apache.org/jira/browse/MNG-6282\r\n\r\n",
    "head_branch": "MNG-6282-jansi-downgrade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e2a14f302d393b5c50",
    "number": 128,
    "body": "This is a patch for issue MNG-6256. https://issues.apache.org/jira/browse/MNG-6256",
    "head_branch": "MNG-6256",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e3a14f302d393b5c51",
    "number": 127,
    "body": "Change `tr` command to deal with CRLF line endings properly.\r\n\r\nThis was triggered by running the `mvn` shell script on a Windows machine (with the Git bash shell and utilities) against a GitHub repository generated on a Mac, which contained a `.mvn/jvm.config` file with CRLF line endings.\r\n\r\nSee https://issues.apache.org/jira/browse/MNG-6255 for further details.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e4a14f302d393b5c52",
    "number": 126,
    "body": "correct code style(most standart)\r\nand change correct history \"Hello, World!\"",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e5a14f302d393b5c53",
    "number": 125,
    "body": "\r\n[mng-5965.zip](https://github.com/apache/maven/files/1124059/mng-5965.zip)\r\nThis p/r should also fix MNG-5705.\r\n\r\n### Problem\r\nWhen multiple tasks are given so that they are grouped in different task segments, the MultiThreadedBuilder fails. \r\nThe reason is that it creates project segments, which is a set of unique pairs of (module, task).\r\nIt then handles each task separately, and it will schedules the build of the task for **all** root module in those pairs, instead of scheduling only the root modules which are associated with that particular task.\r\n\r\n### Example\r\nFor example, given the project with the following hierarchy of modules:\r\n```\r\nroot\r\n-- module1\r\n```\r\n\r\nIf we run `mvn task1 task2`, being task2 an aggregating task, we get the following project segments:\r\n   (task1, root), (task1, module1), (task2, root).\r\n\r\nThe MultiThreadedBuilder will first handle task1, and will schedule the build of: (task1, root), (task1, root).\r\nEach of these builds will then recursively build its children, meaning that _task1 will be executed twice for every module in the project_.\r\n\r\n### Fix\r\nThis fix changes the builder so that it considers the project segments of each task segment separately, by creating a ConcurrencyDependencyGraph for each task segment.\r\n\r\n\r\n### Related\r\nI believe that MNG-5705 is a consequence of the same problem, because the builder will not count correctly the number of projects that are built because of the shared ConcurrencyDependencyGraph, resulting in a NPE.\r\n\r\n### Test\r\nI opened a separate P/R to add an IT for this issue: https://github.com/apache/maven-integration-testing/pull/22\r\n\r\nIt uses a very simple multi module project, which is attached here too.\r\n\r\nTo reproduce:\r\n```\r\nmvn clean install:help install -T10\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Summary:\r\n[INFO] \r\n[INFO] module-1 ........................................... SUCCESS [  0.069 s]\r\n[INFO] module-2 ........................................... SUCCESS [  0.069 s]\r\n[INFO] base-project ....................................... SUCCESS [  0.001 s]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 0.197 s (Wall Clock)\r\n[INFO] Finished at: 2017-07-05T11:06:42+02:00\r\n[INFO] Final Memory: 8M/240M\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] NullPointerException\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n```\r\n\r\nNote the clean goal being executed twice for each module, and the NPE (as described by MNG-5705).\r\n\r\nExpected result, after the fix:\r\n```\r\n/tmp/apache-maven-3.5.1-SNAPSHOT/bin/mvn clean install:help install -T10\r\n[INFO] Error stacktraces are turned on.\r\n[INFO] Scanning for projects...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Build Order:\r\n[INFO] \r\n[INFO] module-1\r\n[INFO] module-2\r\n[INFO] base-project\r\n[INFO] \r\n[INFO] Using the MultiThreadedBuilder implementation with a thread count of 10\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-2 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-2 ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building module-1 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ module-1 ---\r\n[INFO] \r\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ base-project ---\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building base-project 0.1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] --- maven-install-plugin:2.4:help (default-cli) @ base-project ---\r\n[INFO] Maven Install Plugin 2.4\r\n  Copies the project artifacts to the user's local repository.\r\n\r\nThis plugin has 3 goals:\r\n\r\ninstall:help\r\n  Display help information on maven-install-plugin.\r\n  Call mvn install:help -Ddetail=true -Dgoal=<goal-name> to display parameter\r\n  details.\r\n\r\ninstall:install\r\n  Installs the project's main artifact, and any other artifacts attached by\r\n  other plugins in the lifecycle, to the local repository.\r\n\r\ninstall:install-file\r\n  Installs a file in the local repository.\r\n```\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e6a14f302d393b5c54",
    "number": 124,
    "body": "The graph returned by the resolver after resolution is logged at debug level. This pull request only updates those debug log messages to be consistent across project and plugin resolution and to provide as much information as possible to make users aware of what is going on.",
    "head_branch": "debugging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e7a14f302d393b5c55",
    "number": 123,
    "body": "JIRA ticket: [MNG-6207: Create WARNINGs in case of using system scope](https://issues.apache.org/jira/browse/MNG-6207)\r\n\r\n**Note:** this PR is created instead of  #119 \r\n\r\n@khmarbaise: FYI",
    "head_branch": "MNG-6207",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e8a14f302d393b5c56",
    "number": 121,
    "body": "**JIRA ticket**: [MNG-6206: We should produce a WARNING by using RELEASE, LATEST as versions](https://issues.apache.org/jira/browse/MNG-6206)\r\n\r\n(Note: replaces previously closed PR #120)",
    "head_branch": "MNG-6206-deprecating-metaversions-for-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443e9a14f302d393b5c57",
    "number": 120,
    "body": "JIRA ticket: [MNG-6206: We should produce a WARNING by using RELEASE, LATEST as versions](https://issues.apache.org/jira/browse/MNG-6206)\r\n\r\n",
    "head_branch": "MNG-6206-deprecating-metaversions-for-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443eaa14f302d393b5c58",
    "number": 119,
    "body": "JIRA ticket: [MNG-6207: Create WARNINGs in case of using system scope](https://issues.apache.org/jira/browse/MNG-6207)\r\n\r\nNote: since **_system_** scope requires _**systemPath**_ I decided to expand  and rename existing systemPath tests; if that kind of change is not acceptable please suggest different approach. \r\n",
    "head_branch": "MNG-6207-system-scope-deprecation-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443eba14f302d393b5c59",
    "number": 118,
    "body": "The changes to SLF4J required to support maven-slf4j-provider have been [released ](https://jira.qos.ch/browse/SLF4J-394) in the version 1.7.25. If I'm not mistaken it should be possible to remove the patching tweak now.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443eca14f302d393b5c5a",
    "number": 117,
    "body": "Renamed previous printing of JRE to \"JRE used\" and provided\r\nseparate mechanism to actually tell value of JAVA_HOME",
    "head_branch": "jre-reporting-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443eda14f302d393b5c5b",
    "number": 116,
    "body": "... which is not setting the VersionRangeResolver; cause NPE when use w/o plexus requirement injection",
    "head_branch": "DefaultArtifactDescriptorReader-injection-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443eea14f302d393b5c5c",
    "number": 115,
    "body": "I read the discursion of issue MNG-5756 and I change code out for JAVA_HOME and JRE.\r\nNow, print two information to JAVA.",
    "head_branch": "MNG-5756-Java-home-output",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443efa14f302d393b5c5d",
    "number": 114,
    "body": "https://issues.apache.org/jira/browse/MNG-6220",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f0a14f302d393b5c5e",
    "number": 113,
    "body": "PR for maven-integration-testing: https://github.com/apache/maven-integration-testing/pull/21",
    "head_branch": "MNG-6127",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f0a14f302d393b5c5f",
    "number": 112,
    "body": "The snapshot regular expression should only match an explicit period.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f1a14f302d393b5c60",
    "number": 111,
    "body": "There is some unnecessary code in the MavenCli.java from line #1465 to #1474.\r\nThe functionality has been moved to line #1215.\r\n\r\nSigned-off-by: Stefan Eicher <stefan.eicher@gmail.com>",
    "head_branch": "MNG-6203",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f2a14f302d393b5c61",
    "number": 110,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f3a14f302d393b5c62",
    "number": 109,
    "body": "Mockito 2.7.19\r\nslf4j 1.7.25\r\nlogback-classic 1.2.2",
    "head_branch": "feature/MNG-6196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f4a14f302d393b5c63",
    "number": 108,
    "body": "Added javadoc help for making easier to compare two versions in command line.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f5a14f302d393b5c64",
    "number": 107,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f6a14f302d393b5c65",
    "number": 106,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f7a14f302d393b5c66",
    "number": 105,
    "body": "This commit moves the initialisation of the allProjects field in\r\nMavenSession into the DefaultGraphBuilder as the full list of projects\r\nin the reactor is only available there.\r\n\r\nSince MavenSessions's projects and projectDependencyGraph fields were\r\nalready initialised in DefaultGraphBuilder, the code that sets them\r\nagain in DefaultMaven is removed.",
    "head_branch": "MNG-6173-get-all-projects",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f8a14f302d393b5c67",
    "number": 104,
    "body": "This is the fix I did in https://git-wip-us.apache.org/repos/asf?p=maven.git;a=blobdiff;f=maven-embedder/src/main/resources/META-INF/maven/slf4j-configuration.properties;h=cd01f9e6bb29cf31371e0e6df04d095430d3ea9b;hp=87418363b1812e85d6a41a63df4486d07227e1d5;hb=202f757af3aba6e1b96631de025e0ba692098009;hpb=5a3332ca347628605bec7d3e9f9309081aaba46c",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443f9a14f302d393b5c68",
    "number": 103,
    "body": "split from #100 \r\n\r\nThis is for consistency. I know it's a public API. But, I don't know if this is the word you want. If it is, we can add the @Deprecated annotation. If it isn't, then we should figure out the right word and fix the others too.",
    "head_branch": "spelling-consistency-excident",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443faa14f302d393b5c69",
    "number": 102,
    "body": "split from #100 \r\n\r\nI think this is a bug fix. I can't figure out how it could work otherwise.",
    "head_branch": "spelling-vertices",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443fba14f302d393b5c6a",
    "number": 101,
    "body": "split from #100 ",
    "head_branch": "spelling-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443fca14f302d393b5c6b",
    "number": 100,
    "body": "",
    "head_branch": "spelling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443fda14f302d393b5c6c",
    "number": 99,
    "body": "PR for maven-integration-testing: https://github.com/apache/maven-integration-testing/pull/16",
    "head_branch": "MNG-6127",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443fea14f302d393b5c6d",
    "number": 98,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[MNG-6084] Support JSR 250 @PreDestory and @PostContruct"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662443ffa14f302d393b5c6e",
    "number": 97,
    "body": "This PR provides two commits, the first one adds Travis build support.  https://travis-ci.org/trajano/maven the README is coded to point to apache/maven though.\r\n\r\nThe second adds SonarQube support.  For the SonarQube support to work, the token needs to change to something that is owned by apache/maven repository rather than something associated with my ID.\r\n\r\nhttps://sonarqube.com/dashboard/index?id=org.apache.maven%3Amaven\r\n\r\n@apache Please create tokens for GITHUB and SonarQube, I had documented the instructions here https://www.trajano.net/2016/11/integrating-travis-sonarqube/\r\n\r\n<pre>\r\ntravis encrypt SONAR_TOKEN=[token from sonarqube.com]\r\ntravis encrypt SONAR_GITHUB_TOKEN=[token from github.com]\r\n</pre>\r\n\r\nThis will also enable pull request analyisis in the future as well.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244400a14f302d393b5c6f",
    "number": 95,
    "body": "TODO:\r\n\r\n* Upgrade to 1.2.0 once it's released.\r\n* Should `maven-aether-provider` be renamed?\r\n* Update Javadoc link for Maven Resolver in reactor POM.",
    "head_branch": "MNG-6110",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244401a14f302d393b5c70",
    "number": 94,
    "body": "…he search for the .mvn directory at the location of the specified POM when present\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244402a14f302d393b5c71",
    "number": 93,
    "body": "…he search for the .mvn directory at the location of the specified POM when present\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244403a14f302d393b5c72",
    "number": 92,
    "body": "Suggested solution for MNG-5909 : the file activation element will understand basic boolean expressions such as and(file1,file2) or(file3,!file4) etc... Please see added unit test for expression examples.\nIf you think this could benefit to other activators (property, os, ...) please say so and I will happily modify them too.\nI will also post a message on maven dev mailing list.\n",
    "head_branch": "MNG-5909",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244404a14f302d393b5c73",
    "number": 91,
    "body": "Implemented feature that will add the description if the project contains the description. I couldn't find any exisiting unit tests for this.\n\nPlease review.\n",
    "head_branch": "MDEP-519",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244404a14f302d393b5c74",
    "number": 90,
    "body": "Added a Null check when copying System Properties in MavenRepositorySystemUtils.newSession().\nMany NPEs were reported when using Maven in Eclipse[1]. The error is most probably caused by some concurrency issue.\n\n[1] https://bugs.eclipse.org/bugs/show_bug.cgi?id=493871\n\nSigned-off-by: Fred Bricon fbricon@gmail.com\n",
    "head_branch": "MNG-6053",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244405a14f302d393b5c75",
    "number": 89,
    "body": "Please review and let me know of any changes.\n\nThanks.\n",
    "head_branch": "MNG-5995",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244406a14f302d393b5c76",
    "number": 88,
    "body": "Please review and let me know any changes.\n\nThanks.\n",
    "head_branch": "MNG-5910",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244407a14f302d393b5c77",
    "number": 87,
    "body": "I have added the repository id within both the AbstractMavenTransferListener.java & Slf4jMavenTransferListener.java.\n\nHopefully, this should fix this issue.\n\nPlease review and let me know of any changes.\n\nThanks.\n",
    "head_branch": "MNG-5457",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244408a14f302d393b5c78",
    "number": 86,
    "body": "The two tests testGetMissingJar and testGetMissingJarForced have exactly the same test bodies. From their names, it seems testGetMissingJarForced should be invoking the method getArtifact with the argument for forced being true. This pull request updates testGetMissingJarForced to invoke getArtifact with true for the forced argument.\n",
    "head_branch": "wagonmanagertest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244409a14f302d393b5c79",
    "number": 85,
    "body": "In FileSizeFormatTest, the two tests testProgressedSizeWithZeroSize and testProgressedSizeZeroAndSizeZero are exactly the same, so one of them should be deleted. This pull request deletes testProgressedSizeWithZeroSize.\n\nFrom looking at the test names, it seems testProgressedSizeWithZeroSize is supposed to be testing formatProgress with the first parameter being non-zero. However, having the first parameter being non-zero while the second parameter being zero results in an IllegalArgumentException, similar to what is being tested in testNegativeProgressedSizeBiggerThanSize.\n\nIf deleting this test is no good, then perhaps it should be changed to testing the first parameter being non-zero and second parameter being zero, and then expecting an IllegalArgumentException. This might still overlap with testNegativeProgressedSizeBiggerThanSize.\n",
    "head_branch": "removetest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624440aa14f302d393b5c7a",
    "number": 84,
    "body": "Similar to Pull Request #83, I found more test names I believe are misspelled, and this pull request simply addresses those misspellings.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing misspellings in test names"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624440ba14f302d393b5c7b",
    "number": 83,
    "body": "I noticed that there seem to be some misspellings in the test names in this test class (along with some similar misspellings in local variable names), and so this pull request simply addresses those misspellings.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing misspellings in test names"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624440ca14f302d393b5c7c",
    "number": 82,
    "body": "",
    "head_branch": "mng6025",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624440da14f302d393b5c7d",
    "number": 81,
    "body": "Replaces slf4j-simple with gossip-slf4j ( https://github.com/jdillon/gossip ) and adds support for colorized output (via https://github.com/fusesource/jansi ).\n\n![maven-color](https://cloud.githubusercontent.com/assets/20114/15301594/53c3be3c-1b63-11e6-90e6-e44a4d7e1f2f.png)\n\nTo enable colorized output:\n\n```\nMAVEN_OPTS=\"-Dmaven.logging=color\" bin/mvn\n```\n\nor set in ~/.mavenrc\n\nPresently has to be passed in via MAVEN_OPTS as there is no context to access the -D flags early enough to configure the backend w/o more changes to the Slf4jConfiguration api.\n\nDefault is presently plain, so users need to elect to use color explicitly as described above.\n\nColorization is a subset of the color handling available in mvnsh, as this can only colorize log events, so anything going directly to output streams (like bits from surefire, etc) can not be colorized by this mechanism.\n\nLeft the assembly conf/logging/\\* bits alone, as its not clear if other configurations are expecting this directory to exist or not, but likely should be cleaned up.\n",
    "head_branch": "gossip-slf4j-backend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624440ea14f302d393b5c7e",
    "number": 80,
    "body": "",
    "head_branch": "mng-4777",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624440fa14f302d393b5c7f",
    "number": 79,
    "body": "The `requestType.equals( MetadataResolutionRequestTypeEnum.classpathRuntime` case is repeated three times. One should be removed, and the other looks like it should be `requestType.equals( MetadataResolutionRequestTypeEnum.classpathTest`\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244410a14f302d393b5c80",
    "number": 78,
    "body": "https://issues.apache.org/jira/browse/MNG-5981\n",
    "head_branch": "MNG-5981-upgrade-sisu-to-0.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244411a14f302d393b5c81",
    "number": 77,
    "body": "https://issues.apache.org/jira/browse/MNG-5958\n\nWhile MNG-5805 restored binary compatibility of Lifecycle.getPhases it didn't do the same for Lifecycle.setPhases. This breaks plugins like flexmojos-maven-plugin which have their own lifecycle mapping implementations.\n\nThe following pom.xml demonstrates the issue:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>org.example</groupId>\n  <artifactId>mng-5958</artifactId>\n  <version>1.0</version>\n\n  <packaging>swf</packaging>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.sonatype.flexmojos</groupId>\n        <artifactId>flexmojos-maven-plugin</artifactId>\n        <version>4.0-RC2</version>\n        <extensions>true</extensions>\n      </plugin>\n    </plugins>\n  </build>\n\n</project>\n```\n\nUsing \"mvn validate\" with Maven 3.3.9 you get the following exception:\n\n```\n[INFO] Scanning for projects...\n[ERROR] Internal error: java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.maven.lifecycle.mapping.LifecyclePhase -> [Help 1]\norg.apache.maven.InternalErrorException: Internal error: java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.maven.lifecycle.mapping.LifecyclePhase\n    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:121)\n    at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)\n    at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)\n    at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\nCaused by: java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.maven.lifecycle.mapping.LifecyclePhase\n    at org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer.getPluginsBoundByDefaultToAllLifecycles(DefaultLifecyclePluginAnalyzer.java:119)\n    at org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector.injectLifecycleBindings(DefaultLifecycleBindingsInjector.java:64)\n    at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:451)\n    at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:421)\n    at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:620)\n    at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:411)\n    at org.apache.maven.graph.DefaultGraphBuilder.collectProjects(DefaultGraphBuilder.java:419)\n    at org.apache.maven.graph.DefaultGraphBuilder.getProjectsForMavenReactor(DefaultGraphBuilder.java:410)\n    at org.apache.maven.graph.DefaultGraphBuilder.build(DefaultGraphBuilder.java:83)\n    at org.apache.maven.DefaultMaven.buildGraph(DefaultMaven.java:491)\n    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:219)\n    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)\n    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)\n    ... 11 more\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/InternalErrorException\n```\n\nWith Maven 3.3.3 this exception doesn't occur.\n",
    "head_branch": "MNG-5958-restore-lifecycle-setphases-compatibility",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244412a14f302d393b5c82",
    "number": 76,
    "body": "The lifecycle phase can be configured as a comma-separated list of plugins specified with the following data:\n\n```\n<groupId>:<artifactId>:<version>:<goal>\n```\n\nthat are not enough for my plugin.\nMy plugin has to reconfigure the default lifecycle using other plugins with dedicated configuration different from their defaults'.\nSo, I'd suppose to enhance the lifecycle phase parsing to support additional configuration as:\n\n```\n<groupId>:<artifactId>:<version>:<goal>[<configuration>]\n```\n\nFinally, the components.xml would support configurations like:\n\n``` xml\n<component-set>\n    <components>\n        <component>\n            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>\n            ...\n            <configuration>\n                <lifecycles>\n                    <lifecycle>\n                        <id>default</id>\n                        <phases>\n                            <process-resources>\n                                org.apache.maven.plugins:maven-resources-plugin:resources\n                            </process-resources>\n                            ...\n                            <install>\n                                <![CDATA[\n                                org.apache.maven.plugins:maven-install-plugin:install,\n                                org.apache.felix:maven-bundle-plugin:install[\n                                        &lt;supportedProjectTypes&gt;\n                                            &lt;supportedProjectType&gt;buzz&lt;/supportedProjectType&gt;\n                                        &lt;/supportedProjectTypes&gt;]]]>\n                            </install>\n```\n",
    "head_branch": "mng-5957",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244413a14f302d393b5c83",
    "number": 75,
    "body": "Issue raised https://issues.apache.org/jira/browse/MNG-5956\n\nIf you use modules, and that results in the same project/pom being included multiple times then an exception is thrown. But as it's the exact same project/pom it can simple be ignore in my view.\n\nSimple project structure;\n./pom.xml\n./common/pom.xml\n./sub1/pom.xml\n./sub2/pom.xml\n\nIf sub1 has nested modules but for some reason common should 50% of the time be rebuilded if sub1 i rebuilt then adding ../common aids developers.\n\nif sub2 has a similar setup to sub2, then when you build at the root directory an error is produces as both sub1 and sub2 reference common.\n\nThis pull request should ignore where the project is an exact match of the same physical pom.\n",
    "head_branch": "bugfix/MNG-5956-invalid-DuplicateProjectException",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244414a14f302d393b5c84",
    "number": 74,
    "body": "o DepenencyManagement model updated to contain declared dependencies\n  and imported dependency managements\no DefaultModelBuilder responsible for filling updated\n  DependencyManagement model\no DefaultDepenendcyManagementImporter uses graph of dependencyManagement\n  imports to properly find depth of a dependency in a tree and use\n  \"nearest\" version (instead of first match)\n",
    "head_branch": "MNG-5947-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244415a14f302d393b5c85",
    "number": 73,
    "body": "dependencies using \"nearest\" definition\n\no DepenencyManagement model updated to contain declared dependencies \n  and imported dependency managements\no DefaultModelBuilder responsible for filling updated\n  DependencyManagement model\no DefaultDepenendcyManagementImporter uses graph of dependencyManagement\n  imports to properly find depth of a dependency in a tree and use\n  \"nearest\" version (instead of first match)\n",
    "head_branch": "MNG-5947",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244416a14f302d393b5c86",
    "number": 72,
    "body": "The code linting tool [PMD](http://pmd.sourceforge.net/pmd-5.2.0/) identified numerous places where Maven's string handling is inefficient. I've prepared a set of patches that should help speed things up.\n\nThe command I used was `pmd -d . -R java-strings`\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244417a14f302d393b5c87",
    "number": 71,
    "body": "This improves user settings to have a mirrors list switched on/off via Maven profile.\nSee commit messages for details.\n\nDirect issue link: https://issues.apache.org/jira/browse/MNG-3525\n\nAny feedback is welcome.\n",
    "head_branch": "MNG-3525",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244418a14f302d393b5c88",
    "number": 70,
    "body": "The discussion on issue [MNG-3092](https://issues.apache.org/jira/browse/MNG-3092) shows the seriously needs of different kinds of version range resolving in Maven.\n\nI know about the risk on changing the resolving mechanism in Maven.\nI always had the backward compatibility in mind, if I have something changed.\nI added some basic tests for the default version range resolver before I've started with the refactoring.\n\nThe idea behind is the `DependencySelector` suggested by @jvanzyl in [comment](https://issues.apache.org/jira/browse/MNG-3092?focusedCommentId=14417976&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14417976):\n\n> So allow a pluggable DependencySelector to Aether is the answer here. But we need to find a way to expose it.\n\nBut without compromise the dependency resolving algorithm itself.\n\nThis pull request contains the basic tests and a **less invasive** solution based on a filter that works on resolved version range results.\n\nThe actual version range resolving algorithm **wasn't changed** and the internal used default filter implementation don't filter anything.\n\nThe goal:\nProvide a hook for Maven extensions/plugins to change the list of resolved version range results as required.\n\nThese changes are only placed in _maven-aether-provider_.\n",
    "head_branch": "MNG-3092",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244419a14f302d393b5c89",
    "number": 69,
    "body": "",
    "head_branch": "MNG-5899",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624441aa14f302d393b5c8a",
    "number": 68,
    "body": "The discussion on issue [MNG-3092](https://issues.apache.org/jira/browse/MNG-3092) shows the seriously needs of different kinds of version range resolving in Maven.\n\nI know about the risk on changing the resolving mechanism in Maven.\nI always had the backward compatibility in mind, if I have something changed.\nI added some basic tests for the default version range resolver before I've started with the refactoring.\n\nThis pull request contains the basic tests and a less invasive solution based on a filter works with resolved version range results.\n\nThe actual version range resolving algorithm **wasn't changed** and the internal used default filter implementation don't filter anything.\n\nThe goal:\nProvide a hook for Maven extensions/plugins to change the list of resolved version range results as required.\n\nThese changes are only placed in _maven-aether-provider_.\n",
    "head_branch": "MNG-3092-filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624441ba14f302d393b5c8b",
    "number": 67,
    "body": "",
    "head_branch": "log-option-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624441ca14f302d393b5c8c",
    "number": 66,
    "body": "http://wiki.eclipse.org/Sisu/Changelog\n\nIncludes the following fixes of interest to Maven:\n\n[470780](https://bugs.eclipse.org/bugs/show_bug.cgi?id=470780) - Date AM/PM parsing should use explicit locale\n[470781](https://bugs.eclipse.org/bugs/show_bug.cgi?id=470781) - Only fall back to default-value if Plexus configuration has no value and no children\n[475588](https://bugs.eclipse.org/bugs/show_bug.cgi?id=475588) - Make conversion of comma-separated strings to arrays/collections more consistent\n\nIf you spot anything odd/unexpected after upgrading please report it at https://bugs.eclipse.org/bugs/enter_bug.cgi?product=Sisu&format=guided\n",
    "head_branch": "eclipse-sisu-0.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624441da14f302d393b5c8d",
    "number": 65,
    "body": "Snapshot versioning should use the Gregorian calendar for consistency\nacross systems. Apply the fix reported by Anders Forsell to make that\nexplicit, and include a somewhat overengineered test to confirm that\nit's working.\n",
    "head_branch": "MNG-5877-use-gregorian-calendar-for-snapshot-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624441ea14f302d393b5c8e",
    "number": 64,
    "body": "MNG-4463:  Version ranges cannot be used for artifacts with 'import' scope\nThis is a quick patch to support version range resolution for artifacts with pom import.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624441fa14f302d393b5c8f",
    "number": 63,
    "body": "find_maven_basedir() doesn't handle a current working directory containing spaces; this patch fixes this behaviour.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244420a14f302d393b5c90",
    "number": 62,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244421a14f302d393b5c91",
    "number": 61,
    "body": "This fixes `release-profile` in Maven's default pom so that it invokes `source:jar-no-fork` instead of `source:jar`, because the forked build can sometimes make troubles.\n\nMore details are in jira: [MNG-5863](https://issues.apache.org/jira/browse/MNG-5863).\n",
    "head_branch": "pk/fix-release-profile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244422a14f302d393b5c92",
    "number": 60,
    "body": "- I don't like this, but it does let all the integration tests pass:\n\n```\nRunning org.apache.maven.it.MavenITmng2199ParentVersionRangeTest\nmng2199ParentVersionRange(ValidParentVersionRangeWithInclusiveUpperBound)OK (3.7 s)\nmng2199ParentVersionRange(ValidParentVersionRangeWithExclusiveUpperBound)OK (1.7 s)\nmng2199ParentVersionRange(InvalidParentVersionRange)........OK (0.7 s)\nmng2199ParentVersionRange(ValidParentVersionRangeInvalidVersionExpression)OK (0.5 s)\nmng2199ParentVersionRange(ValidParentVersionRangeInvalidVersionInheritance)OK (0.4 s)\nmng2199ParentVersionRange(ValidLocalParentVersionRange).....OK (0.4 s)\nTests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.509 sec - in org.apache.maven.it.MavenITmng2199ParentVersionRangeTest\nRunning org.apache.maven.it.MavenITmng5840ParentVersionRanges\nmng5840ParentVersionRanges(ParentRangeRelativePathPointsToWrongVersion)OK (0.4 s)\nmng5840ParentVersionRanges(ParentRangeRelativePathPointsToCorrectVersion)OK (0.4 s)\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.784 sec - in org.apache.maven.it.MavenITmng5840ParentVersionRanges\nRunning org.apache.maven.it.MavenITmng5840RelativePathReactorMatching\nmng5840RelativePathReactorMatching(RelativePathPointsToWrongVersion)OK (0.4 s)\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.374 sec - in org.apache.maven.it.MavenITmng5840RelativePathReactorMatching\n```\n\nI have created this as a pull request because I do not like the dependency change it requires.\n",
    "head_branch": "mng-5840-version-range-hack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244422a14f302d393b5c93",
    "number": 59,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244423a14f302d393b5c94",
    "number": 58,
    "body": "There was a problem with the logic in the while loop that detects\nthe base dir - it should first look in the current directory,\notherwise you can't build in a directory with local settings because\nit will always climb up and find .mvn in a parent directory (e.g. user's\nhome).\n\nFixes [MNG-5858](https://issues.apache.org/jira/browse/MNG-5858)\n",
    "head_branch": "fix/basedir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244424a14f302d393b5c95",
    "number": 57,
    "body": "The discussion on issue [MNG-3092](https://issues.apache.org/jira/browse/MNG-3092) shows the seriously needs of different kinds of version range resolving in Maven.\n\nI know about the risk on changing the resolving mechanism in Maven.\nI always had the backward compatibility in mind, if I have something changed.\nI added some basic tests for the default version range resolver (strategy) before I've started with the refactoring.\n\nThis pull request contains a solution based on the strategy pattern.\n\nThe actual version range resolving algorithm **wasn't change** but moved into a strategy.\nThe provided other strategies are, more or less, only result filter around the result of the default version range strategy.\n\nThese changes are only placed in _maven-aether-provider_.\n\n---\n\nThe original `DefaultVersionRangeResolver` will be replaced by the\nnew strategy pattern based version range resolver.\n\nThe actual version range resolving algorithm, formerly located in\n`DefaultVersionRangeResolver`, is moved into a new strategy class\n`MavenDefaultVersionRangeResolver` with the name/hint `\"mavenDefault\"`.\nThe resolving algorithm **WAS NOT CHANGED**.\n\nThe new `StrategyVersionRangeResolver` will be registered as new\ndefault version range resolver (without name/hint).\nAdditional strategies are registered as `VersionRangeResolver` with a\nunique name/hint.\n\nThe used strategy will be configured in `StrategyVersionRangeResolver`\nvia the Maven system parameter `-Dmaven.versionRangeResolver.strategy=...`.\n\nIf no strategy is configured or the strategy is unknown, the Maven\ndefault version range resolver `\"mavenDefault\"` will be used.\nOtherwise the named strategy will be used.\n\nThe following strategies are available:\n- `MavenDefaultVersionRangeResolver` `\"mavenDefault\"`\n  - the actual UNTOUCHED default\n  - resolves all versions including all _SNAPSHOT_ versions.\n- `ReleaseOnBoundariesVersionRangeResolver` `\"releaseOnBoundaries\"`\n  - Used the `MavenDefaultVersionRangeResolver` internally and filters\n    the result. Removes all SNAPSHOT versions at the begin and the end of\n    the resolved versions list until to a released version.\n- `OnlyReleaseVersionRangeResolver` `\"onlyReleases\"`\n  - Used the `MavenDefaultVersionRangeResolver` internally and filters\n    the result. Removes all SNAPSHOT versions at the resolved versions list.\n",
    "head_branch": "MNG-3092",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244425a14f302d393b5c96",
    "number": 56,
    "body": "These changes replaces the default version range resolver with a strategy based version range resolver.\n",
    "head_branch": "MNG-3092",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244426a14f302d393b5c97",
    "number": 55,
    "body": "",
    "head_branch": "MNG-3092",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244427a14f302d393b5c98",
    "number": 54,
    "body": "Merge all commits from apache/master into barthel/master.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244428a14f302d393b5c99",
    "number": 53,
    "body": "Place the close method in the finally clause, so we can ensure it always\nruns regardless of how the method exits.\n",
    "head_branch": "Close-In-Finally",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244429a14f302d393b5c9a",
    "number": 52,
    "body": "I have a reproducible scenario, cannot currently update/reopen MNG-5288\n\nour in-house plugin is calling MavenProjectBuilder.buildFromRepository() which causes this problem for the case of a parent pom that is not of 'pom' packaging. (someone uploaded the wrong metadata apparently)\n\n```\norg.apache.maven.project.InvalidProjectModelException: Some problems were encountered while processing the POMs:\n[ERROR] Invalid packaging for parent POM com.atlassian.plugins:remote-link-aggregator:2.0.13, must be \"pom\" but is \"jar\" @ com.atlassian.plugins:remote-link-aggregator:2.0.13\n[ERROR] 'dependencies.dependency.version' for com.atlassian.plugins.rest:atlassian-rest-module:jar is missing. @ line 84, column 21\n[ERROR] 'dependencies.dependency.version' for com.google.guava:guava:jar is missing. @ line 89, column 21\n[ERROR] 'dependencies.dependency.version' for com.google.code.findbugs:jsr305:jar is missing. @ line 94, column 21\n for project \n    at org.apache.maven.project.DefaultMavenProjectBuilder.transformError(DefaultMavenProjectBuilder.java:193)\n    at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:240)\n    at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromRepository(DefaultMavenProjectBuilder.java:251)\n    at com.atlassian.plugin.maven.license.ArtifactResolver.com$atlassian$plugin$maven$license$ArtifactResolver$$projectBuilder(ArtifactResolver.scala:120)\n    at com.atlassian.plugin.maven.license.ArtifactResolver$$anonfun$allArtifacts$1$$anonfun$apply$3.apply(ArtifactResolver.scala:28)\n    at com.atlassian.plugin.maven.license.ArtifactResolver$$anonfun$allArtifacts$1$$anonfun$apply$3.apply(ArtifactResolver.scala:28)\n    at com.atlassian.plugin.maven.license.ArtifactDetails.license(ArtifactDetails.scala:27)\n    at com.atlassian.plugin.maven.license.CompositeLicenseOps$$anonfun$license$1.apply(Stuff.scala:20)\n    at com.atlassian.plugin.maven.license.CompositeLicenseOps$$anonfun$license$1.apply(Stuff.scala:20)\n    at scala.Option.orElse(Option.scala:257)\n    at com.atlassian.plugin.maven.license.CompositeLicenseOps.license(Stuff.scala:20)\n    at com.atlassian.plugin.maven.license.LicenseHandler$$anonfun$run$1$$anonfun$allLicenses$lzycompute$1$1.apply(LicenseHandler.scala:22)\n    at com.atlassian.plugin.maven.license.LicenseHandler$$anonfun$run$1$$anonfun$allLicenses$lzycompute$1$1.apply(LicenseHandler.scala:22)\n    at scala.collection.TraversableLike$$anonfun$filterNot$1.apply(TraversableLike.scala:274)\n    at scala.collection.TraversableLike$$anonfun$filterNot$1.apply(TraversableLike.scala:274)\n    at scala.collection.TraversableLike$$anonfun$filter$1.apply(TraversableLike.scala:264)\n    at scala.collection.immutable.List.foreach(List.scala:318)\n    at scala.collection.TraversableLike$class.filter(TraversableLike.scala:263)\n    at scala.collection.AbstractTraversable.filter(Traversable.scala:105)\n    at scala.collection.TraversableLike$class.filterNot(TraversableLike.scala:274)\n    at scala.collection.AbstractTraversable.filterNot(Traversable.scala:105)\n    at com.atlassian.plugin.maven.license.LicenseHandler$$anonfun$run$1.allLicenses$lzycompute$1(LicenseHandler.scala:20)\n    at com.atlassian.plugin.maven.license.LicenseHandler$$anonfun$run$1.com$atlassian$plugin$maven$license$LicenseHandler$$anonfun$$allLicenses$1(LicenseHandler.scala:20)\n    at com.atlassian.plugin.maven.license.LicenseHandler$$anonfun$run$1$$anon$1.licenses(LicenseHandler.scala:26)\n    at com.atlassian.plugin.maven.license.goal.Verify$$anonfun$apply$1.apply(Verify.scala:11)\n    at com.atlassian.plugin.maven.license.goal.Verify$$anonfun$apply$1.apply(Verify.scala:9)\n    at com.atlassian.plugin.maven.license.LicenseHandler$$anonfun$run$1.apply(LicenseHandler.scala:36)\n    at com.atlassian.plugin.maven.license.LicenseHandler$$anonfun$run$1.apply(LicenseHandler.scala:18)\n    at com.atlassian.plugin.maven.license.LicenseVerifyMojo.execute(LicenseVerifyMojo.java:27)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\n    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)\n    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)\n    at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)\n    at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)\n    at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)\n[ERROR] Error executing Maven.\n[ERROR] null\n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624442aa14f302d393b5c9b",
    "number": 51,
    "body": "MNG-4840 indicates that the Enforcer plugin should be\npreferred to <prerequisites>. Indicate that in the documentation.\n",
    "head_branch": "MNG-5297-mark-prerequisites-maven-as-deprecated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624442ba14f302d393b5c9c",
    "number": 50,
    "body": "'local' is not POSIX, but supported by most shells. However, it's not\nsupported by Solaris's /bin/sh, so use a subshell instead.\n\nTested on OS X by invoking with `/bin/ksh`.\n",
    "head_branch": "MNG-5837-avoid-non-posix-local-keyword",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624442ca14f302d393b5c9d",
    "number": 49,
    "body": "Jira: https://issues.apache.org/jira/browse/MNG-5824\n",
    "head_branch": "mavenargs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624442da14f302d393b5c9e",
    "number": 48,
    "body": "I found a small typo and I fixed it.\n",
    "head_branch": "fix-typo-maven-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 49a3e55208fdfb2c163c729b36eb61380a810ca7 into f27c348bbaf51046029ce2853feeaf98700f1aca"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624442ea14f302d393b5c9f",
    "number": 47,
    "body": "Avoided adding a non empty configuration argument that causes exception.\n",
    "head_branch": "MNG-5816",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624442fa14f302d393b5ca0",
    "number": 46,
    "body": "Converted project base dir from Cygwin path to Windows path before\nexecuting Maven when running Maven in a Cygwin environment.\n",
    "head_branch": "MNG-5812",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244430a14f302d393b5ca1",
    "number": 45,
    "body": "For anyone interested in using Guice 4.0 with Maven :)\n\nPS. you should use Eclipse/Sisu 0.3.1 with Guice 4.0, luckily master branch is already using that version\n",
    "head_branch": "guice4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244431a14f302d393b5ca2",
    "number": 44,
    "body": "- Add a temp env variable for save the MAVEN_OPTS before load .mavenrc.\n\nSigned-off-by: Francisco Collao Garate pcollaog@gmail.com\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244432a14f302d393b5ca3",
    "number": 43,
    "body": "mojo executions\n",
    "head_branch": "mng-5805-lifecycle-mojo-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244433a14f302d393b5ca4",
    "number": 42,
    "body": "...ed by relativePath when a reactor specifies the child by symlink\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244433a14f302d393b5ca5",
    "number": 41,
    "body": "Noticed a typo in an error log message:\n\"occured\" should be \"occurred\".\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244434a14f302d393b5ca6",
    "number": 40,
    "body": "See [MNG-5786](https://jira.codehaus.org/browse/MNG-5786) for details. The commit message explains the issue in different words:\n\n```\nMNG-5786: Fix maven.multiModuleProjectDirectory.\n\nFixes an edge case where maven.multiModuleProjectDirectory is set incorrectly.\nConsider the following scenario:\n\n  /some/path/to/the/workspace/.mvn\n  /some/path/to/the/workspace/project/.mvn\n  /some/path/to/the/workspace/project/pom.xml\n\nPrior to the fix, running Maven inside the *project* directory will cause\nmaven.multiModuleProjectDirectory to be set to the *workspace* directory. The\nfix entails testing for the presence of .mvn before traversing one directory\nup, rather than afterwards.\n\nThe loop termination condition was moved inside the loop, so as to ensure that\n.mvn can also be placed in the file system root.\n```\n",
    "head_branch": "MNG-5786",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244435a14f302d393b5ca7",
    "number": 39,
    "body": "",
    "head_branch": "MNG-5688",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244436a14f302d393b5ca8",
    "number": 38,
    "body": "General consensus on maven-dev ([Remove M2_HOME setup from download page instructions](http://mail-archives.apache.org/mod_mbox/maven-dev/201501.mbox/%3CCAPCjjnG_SUEbKTV9DW-tPN54WA-FgDm4wUpsjnVW01sjxb2POA@mail.gmail.com%3E)) was to deprecate M2_HOME from public documentation and eventually remove it from the source.\n\nAs part of doing that, avoid using it in the bootstrapping instructions in the README and use the equivalent `maven.home` property instead.\n",
    "head_branch": "remove-M2_HOME-reference-from-bootstrapping-instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244437a14f302d393b5ca9",
    "number": 37,
    "body": "An incorrect non-blank module is currently treated as an error. Behave\nthe same way for a blank module, rather than simply warning about\nthe mistake.\n",
    "head_branch": "MNG-5734-fail-on-empty-modules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244438a14f302d393b5caa",
    "number": 36,
    "body": "Related to JIRA issue MNG-5728 : https://jira.codehaus.org/browse/MNG-5728 regarding the default usage of the \"fail\" checksum policy.\n\nPuts \"fail\" as the default checksum policy, when no \"-C\" or \"-c\" option\nis given in the command line. \"-C\" option no longer has any effect, but\nhas remained in the options for backwards compatibility.\n",
    "head_branch": "MNG-5728",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244439a14f302d393b5cab",
    "number": 35,
    "body": "This fixes the /usr/libexec/java_home choser (OSX) for the main script and adds the missing section to the other tows (ASF Commiter Signoff: ecki)\n",
    "head_branch": "mng-5686",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624443aa14f302d393b5cac",
    "number": 34,
    "body": "Upon our discussion with Karl in \nhttp://maven.40175.n5.nabble.com/Maven-Commit-3b671d07340b002e13775883d09e7f7e0d9a3c49-td5821660.html\ni have improved MavenProject.java and surrounding code.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624443ba14f302d393b5cad",
    "number": 33,
    "body": "Cf. https://jira.codehaus.org/browse/MPIR-149\nNeed first this new qualityManagement element into the Project Object Model\nThen another patch will be possible to add a new Quality Management report into the maven-project-info-reports-plugin\n",
    "head_branch": "MPIR-149",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624443ca14f302d393b5cae",
    "number": 32,
    "body": "See http://jira.codehaus.org/browse/MNG-5738\n\nThis pull request will add a new command line flag '--legacy-reactor-resolution' to Maven to allow disabling workspace resolution. The name was choosen to be consistent with '--legacy-local-repositoy'.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624443da14f302d393b5caf",
    "number": 31,
    "body": "Based on [man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/java_home.1.html)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624443ea14f302d393b5cb0",
    "number": 30,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624443fa14f302d393b5cb1",
    "number": 29,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244440a14f302d393b5cb2",
    "number": 28,
    "body": "The latest patch from https://jira.codehaus.org/browse/MNG-5486 as a Pull Request as requested by Jason van Zyl.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244441a14f302d393b5cb3",
    "number": 27,
    "body": "This applies the uploaded patch.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244441a14f302d393b5cb4",
    "number": 26,
    "body": "With the update of Guice to 3.2.3, the limitation on the Guava dependency no longer applies.\n",
    "head_branch": "update-guava-to-18.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244442a14f302d393b5cb5",
    "number": 25,
    "body": "maven-compat has a test dependency on easymock, which is not really used for anything. Dependency on easymock should be removed.\n\nJIRA bug report: https://jira.codehaus.org/browse/MNG-5696\n",
    "head_branch": "MNG-5696",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244443a14f302d393b5cb6",
    "number": 24,
    "body": "This fixes JAVA_HOME being falsely set, resulting in the following error:\n\n```\nError: JAVA_HOME is not defined correctly.\n  We cannot execute /usr/libexec/java_home/bin/java\n```\n",
    "head_branch": "apple_jdk_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244444a14f302d393b5cb7",
    "number": 23,
    "body": "...nts\n\nnested import POMs from resolving their dependencies.\n\nThe cuplrit was the resetRepositories method in tandem with the repository\nlist instances being shared between ModelResolvers.\n- The copy constructor for the ModelResolvers now creates new lists.\n- The resetRepositories method has been removed. Instead there is a\n  'replace' parameter on the addRepository method that allows the\n  desired parameter replacement of MNG-5639 to take place.\n",
    "head_branch": "MNG-5663",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244445a14f302d393b5cb8",
    "number": 22,
    "body": "- logging configuration now no longer overwrites the default log level as specified in conf/logging/simplelogger.properties (see [MNG-2570](http://jira.codehaus.org/browse/MNG-2570) (related)); the default log level was always set to \"info\" unless either option \"debug\" or \"quiet\" were used; this made it effectively impossible to change the default log level to something other than \"debug\", \"error\" or \"info\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244446a14f302d393b5cb9",
    "number": 21,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244447a14f302d393b5cba",
    "number": 20,
    "body": "Add possibilty to use multiple activators and have AND between them\n",
    "head_branch": "MNG-4565",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244448a14f302d393b5cbb",
    "number": 19,
    "body": "OSGi 'bundle' = 'jar' + metadata\nhttps://jira.codehaus.org/browse/MNG-5642\n",
    "head_branch": "MNG-5642",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244449a14f302d393b5cbc",
    "number": 18,
    "body": "Even in case of failing build. As currently, in case of failed build (`session.getResult().hasExceptions()` return `true`), return statement stops and execution never reaches participants for `afterSessionEnd`.\n",
    "head_branch": "mng-5640",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624444aa14f302d393b5cbd",
    "number": 17,
    "body": "...s a ${parameter}\n\nhttps://jira.codehaus.org/browse/MNG-5639\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624444ba14f302d393b5cbe",
    "number": 16,
    "body": "",
    "head_branch": "MNG-4565",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624444ca14f302d393b5cbf",
    "number": 15,
    "body": "Simple solution to this bug. Add possibility to have multiple condition in profile activation. Add simple test with positive and negative case. \n\nhttp://jira.codehaus.org/browse/MNG-4565\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624444da14f302d393b5cc0",
    "number": 14,
    "body": "Fix for this issue http://jira.codehaus.org/browse/MNG-5625\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624444ea14f302d393b5cc1",
    "number": 13,
    "body": "Same as [this pull request](https://github.com/apache/maven/pull/12) but with unit tests.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6624444fa14f302d393b5cc2",
    "number": 12,
    "body": "As described in MNG-5613 a NPE occurs if the dependency graph creation fails. Errors where properly catched and added to the result. However, after the call to createProjectDependencyGraph, the resulting projectDependencyGraph was null and as result was not checked for exceptions the call to projectDependencyGraph.getSortedProjects() resulted in a NPE.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244450a14f302d393b5cc3",
    "number": 11,
    "body": "  This patch falls back on the system configured JVM for the current\n  user, only when no prior methods for detecting JAVA_HOME succeed.\n  If one of the prior methods was successful, then that prior behavior\n  is preserved.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244451a14f302d393b5cc4",
    "number": 10,
    "body": "No code change, just a bit of dependency reshuffling\ndue to module changes in Aether itself.\n",
    "head_branch": "upgrade-to-aether-m3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244452a14f302d393b5cc5",
    "number": 9,
    "body": "Artifact filtering was not updated when Aether swapped from Sonatype to Eclipse, causing it to be loaded by Plugin Class Realms and potentially leading to linkage problems.\n\nAlso, according to Benjamin, another import is needed in plugin Class Realm to restore Maven 3.0.x behaviour, due to package changes in Eclipse Aether.\n\nIssue\nhttp://jira.codehaus.org/browse/MNG-5513\n",
    "head_branch": "mng-5513-eclipse-aether-filtering",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 97732f7ee7ed82796049aab6a2251028c7cfa38f into 02d12423060361d5444817083c64adf276c3953e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244453a14f302d393b5cc6",
    "number": 8,
    "body": "Fix for [MNG-5075](http://jira.codehaus.org/browse/MNG-5075): `MavenProject.getParent` throws `IllegalStateException` when there is a model building error. Patch (updated version of JIRA original) just sends any problems to the logger and returns `null`, which is not great but is at least now documented and will prevent innocent clients from being fatally broken by an unchecked exception.\n\nI am `jglick@apache.org` and intend this patch to be submitted to the ASF under the ASL 2.0.\n",
    "head_branch": "MavenProject-getParent-MNG-5075",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244454a14f302d393b5cc7",
    "number": 7,
    "body": "Issue : MNG-3092 \n\nDisallow snapshots in ranges when they are not an explicit boundary. If User keeps SNAPSHOT at any boundary we will allow SNAPSHOT in range.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244455a14f302d393b5cc8",
    "number": 6,
    "body": "Just pushed the release button, so the new artifacts are on their way to central+mirrors.\n\nChanges from 0.0.0.M2:\n- Use trace when logging internals\n- Cleanup+clarify dependencies\n- Configurator fixes for Maven 3.1\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244455a14f302d393b5cc9",
    "number": 5,
    "body": "Note: the main blocker to using Google-Guice for Maven3 is the lack of a release with the new ProvisionListener API, which is needed to support Plexus lifecycles. While there are other fixes/features in Sisu-Guice that are nice-to-have (such as removal of the big global singleton lock) they aren't strictly required for Maven3.\n",
    "head_branch": "align-guice-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244456a14f302d393b5cca",
    "number": 4,
    "body": "Use LoggerFactory to make sure we get the right instance to reset, as SimpleLoggerFactory.INSTANCE is not actually used by slf4j-simple's StaticLoggerBinder (instead it has its own SINGLETON field to hold the logger factory).\n\nCan now remove temporary reflection workaround.\n",
    "head_branch": "slf4j-simple-reset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244457a14f302d393b5ccb",
    "number": 3,
    "body": "Not sure if these dependency changes were meant to be included or not in the last commit to master, but given there were no changes to other modules or the source I assume they got in by mistake...\n",
    "head_branch": "fix-build-break",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244458a14f302d393b5ccc",
    "number": 2,
    "body": "See https://jira.codehaus.org/browse/MNG-5453\n\nThe major differences between the new Eclipse/Sisu artifacts and the old bundles are:\n- brand new Plexus configurator code\n- no shading/jarjar of any dependencies\n\nFrom a Plexus API perspective the artifacts are \"drop-in\" compatible. Local testing has not revealed any issues with the new Plexus configurators, but as this code was developed indirectly from the behaviour of the old configurators further real-world testing may reveal differences that could either be beneficial or unwanted...\n\nPS. Any Eclipse/Sisu issues can be logged at https://bugs.eclipse.org/bugs/enter_bug.cgi?product=Sisu&format=guided or discussed at https://dev.eclipse.org/mailman/listinfo/sisu-users\n",
    "head_branch": "MNG-5453-eclipse-sisu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66244459a14f302d393b5ccd",
    "number": 1,
    "body": "See http://jira.codehaus.org/browse/MNG-5445\n",
    "head_branch": "MNG-5445",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]