[
  {
    "_id": "6620f67218912b45d36a05ab",
    "number": 1309,
    "body": "Change performance test to be run on net8.0 to follow the framework installed by install-dotnet function.\r\n\r\nI've configured PR patch to include the perf tests variant to show it working now.",
    "head_branch": "run-perf-tests-on-net8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67318912b45d36a05ac",
    "number": 1308,
    "body": null,
    "head_branch": "use-net8-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use net8.0 SDK for build script. (#1308)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67418912b45d36a05ad",
    "number": 1307,
    "body": null,
    "head_branch": "release-notes-2.25.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "2.25.0 Release notes (#1307)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67518912b45d36a05ae",
    "number": 1306,
    "body": null,
    "head_branch": "fix-null-reference-in-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix NullReferenceException in no-auth tests (#1306)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67618912b45d36a05af",
    "number": 1305,
    "body": null,
    "head_branch": "csharp5021",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-5021: Replace use of DisposableEnvironmentVariable with EnvironmentVariableProvider (#1305)\n\n* CSHARP-5021: Use EnvironmentVariableProvider where relevant\r\n\r\n* fix build issues for net472\r\n\r\n* better variable naming\r\n\r\n* use simpler code\r\n\r\n* missed environment change"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67718912b45d36a05b0",
    "number": 1304,
    "body": "### Description\r\nOn a sharded cluster, retrying reads and writes will attempt to prioritize other mongos for selection if available.\r\n\r\n### What is changing?\r\n- Server selection now takes a collection of servers to deprioritize and will attempt to exclude those servers when the topology is sharded and multiple mongoses are present.\r\n- Adds unit tests for server selection and prose tests for retryable reads and writes.\r\n- Adds functionality to provide a collection of servers to deprioritize in relevant places. ",
    "head_branch": "csharp3757",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67818912b45d36a05b1",
    "number": 1303,
    "body": "Added solution-level layer contains following customization:\r\n- Live code templates for standard Equals implementation (based on #1273)\r\n- File header template",
    "head_branch": "rider-live-template-poc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add solution DotSettings file (#1303)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67a18912b45d36a05b2",
    "number": 1302,
    "body": "This result's in the packages using a license expression so that license analysis can occur etc.",
    "head_branch": "chore/SwitchToLicenseExpression",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67b18912b45d36a05b3",
    "number": 1301,
    "body": "This will reduce the dependencies for net standard projects",
    "head_branch": "chore/ConditionalPackages",
    "is_a_fork": true,
    "comments": [
      "Thanks for submitting this PR @thompson-tomo.\r\nIn the upcoming major release we'll be updating our target frameworks, and also optimizing our dependencies accordingly.\r\n\r\nWe'll be closing this PR as this or similar optimization will be done as part of an upcoming change.\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67c18912b45d36a05b4",
    "number": 1300,
    "body": null,
    "head_branch": "csharp4979",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4979: Gossip cluster time from internal MongoClient to session entities (#1300)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67d18912b45d36a05b5",
    "number": 1299,
    "body": "These timings seem to solve the issue.",
    "head_branch": "csharp3995",
    "is_a_fork": true,
    "comments": [
      "Good question @JamesKovacs \r\nWe are tracking this change in [DRIVERS-2874](https://jira.mongodb.org/browse/DRIVERS-2874).\r\nTo minimize the chance of further changes for all drivers, in addition to standalone experiments I suggested to run our tests for a week before changing the test for all drivers."
    ],
    "commit_messages": [
      "CSHARP-3995: Fix flaky pool-checkout-maxConnecting-is-enforced.json:maxConnecting_is_enforced (#1299)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f67e18912b45d36a05b6",
    "number": 1298,
    "body": null,
    "head_branch": "csharp1378",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-1378: Make BulkWrite enumerate requests argument only once (#1298)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f67f18912b45d36a05b7",
    "number": 1297,
    "body": "- Disable preview range tests on 8.0",
    "head_branch": "csharp5009",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-5009: Investigate changes in SERVER-85756: rename rangePreview to range (#1297)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68018912b45d36a05b8",
    "number": 1296,
    "body": "Change sh to bash as per Driver ticket request.",
    "head_branch": "csharp5004",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-5004: Invoke all Drivers Evergreen Tools Scripts with Bash (#1296)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68118912b45d36a05b9",
    "number": 1295,
    "body": "Enables container and kubernetes awareness in the driver as specified in the [MongoDB Handshake Spec](https://github.com/abr-egn/specifications/blob/c4831b426c7eab8749723d7f3cd6bb5c237bcbbe/source/mongodb-handshake/handshake.rst#container) .\r\n\r\n\r\n#### What is the motivation for this change?\r\n - Allows Product to track user usage of docker and kubernetes.",
    "head_branch": "csharp4718",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4718: Enable Container and kubernetes awareness (#1295)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f68218912b45d36a05ba",
    "number": 1294,
    "body": "Let's not try and push this to master until after I get back. Feel free to take a look and comment. Mainly I wanted to get this work backed up.\r\n\r\nI probably need a few more tests (though there are some tests already).",
    "head_branch": "csharp4985",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68318912b45d36a05bb",
    "number": 1293,
    "body": null,
    "head_branch": "csharp5006",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-5006: Fix macOS compilation failure (#1293)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68418912b45d36a05bc",
    "number": 1292,
    "body": null,
    "head_branch": "csharp5005",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "- Add .NET8 TF to Astrolabe (#1292)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68518912b45d36a05bd",
    "number": 1291,
    "body": null,
    "head_branch": "csharp4976",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4976: MongoDB C# Driver no longer compatible with DevExpress ASP.NET Core Middleware (#1291)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68618912b45d36a05be",
    "number": 1290,
    "body": null,
    "head_branch": "csharp2456",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2442: Multiply by 2 instead of adding 1 for increased StringBuilder capacity."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68818912b45d36a05bf",
    "number": 1289,
    "body": "Taking a look at our `gh-pages` branch, the `1.11` directory is a hodgepodge of 1.11 and 2.0 docs. For example, both the 1.11 and 2.0 `What is New?` page refer to the 2.0 driver though the 1.11 version isn’t linked from anywhere. The same is true for many other pages in the 1.11 directory.\r\nhttps://mongodb.github.io/mongo-csharp-driver/1.11/what_is_new/\r\nhttps://mongodb.github.io/mongo-csharp-driver/2.0/what_is_new/\r\n\r\nGiven that the 1.11 driver is long-deprecated and no longer supported, it was easiest to simply delete the 1.11 directory and its contents. I could not find any external links into the old 1.11 docs. I could only find links between pages within 1.11/apidocs. The only way I could get Google to produce a link to the 1.11/apidocs is if I searched for a class name unique to the 1.X API.\r\n\r\nMy recommendation is to delete the entire `1.11` directory.",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4997: Removed the long-deprecated 1.11 refdocs and apidocs. (#1289)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f68918912b45d36a05c0",
    "number": 1288,
    "body": null,
    "head_branch": "csharp3848",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3848: Fix flaky test pool-create-min-size-error.json:error during minPoolSize population clears pool (#1288)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68a18912b45d36a05c1",
    "number": 1287,
    "body": "- Fixes .NET8 installation issue with Plain Auth tests on M1\r\n- Simplifies EG script",
    "head_branch": "csharp5001",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-5001: Pass OS variable to run-plain-auth-tests.sh (#1287)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68b18912b45d36a05c2",
    "number": 1286,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3742: Sync BSON corpus tests; fix minor issue where JsonReader was allowing nulls in  pattern and option values. (#1286)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f68c18912b45d36a05c3",
    "number": 1285,
    "body": null,
    "head_branch": "csharp4993",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4993: Avoid TruncationException when deserializing Decimal from Decimal128."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f68d18912b45d36a05c4",
    "number": 1284,
    "body": "- Added a new URI options `srvServiceName` which allows the user to change the srv address prefix from the default of `mongodb`",
    "head_branch": "csharp3745",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3745: Add support for srvServiceName URI option (#1284)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f68e18912b45d36a05c5",
    "number": 1283,
    "body": "Also addresses [CSHARP-2354](https://jira.mongodb.org/browse/CSHARP-2354)",
    "head_branch": "csharp2353",
    "is_a_fork": true,
    "comments": [
      "> Visual Studio warned that the line endings in BsonDocument.cs are inconsistent.\r\n> \r\n> Other than that everything looks OK.\r\n\r\nThanks, line endings should be consistent now."
    ],
    "commit_messages": [
      "CSHARP-2353: BsonDocument.DeepClone() fails on documents with duplicate element names (#1283)\n\nCo-authored-by: Adam Milazzo <admilazz@microsoft.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f68f18912b45d36a05c6",
    "number": 1282,
    "body": null,
    "head_branch": "csharp4995",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4995: Fix NET8 installation failure of macOS (#1282)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69118912b45d36a05c7",
    "number": 1281,
    "body": null,
    "head_branch": "csharp3315",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69218912b45d36a05c8",
    "number": 1280,
    "body": null,
    "head_branch": "csharp4991",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4991: Add .NET 8 to Smoke Tests (#1280)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69318912b45d36a05c9",
    "number": 1279,
    "body": null,
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CSHARP-4953: dot-net-driver Evergreen Configuration May Be Leaking Secrets (#1279)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69418912b45d36a05ca",
    "number": 1278,
    "body": "- Added support for records (IsExternalInit.cs)\r\n- Added RenderArgs overloads\r\n- Removed RenderForFind and FilterDefinitionRenderContext workarounds\r\n- Added obsoletion attributes for older Render methods",
    "head_branch": "csharp4955",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69518912b45d36a05cb",
    "number": 1277,
    "body": null,
    "head_branch": "csharp4988",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4988: Fix flaky ServerMonitor test (#1277)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69618912b45d36a05cc",
    "number": 1276,
    "body": "This is the C# implementation for automated testing of a deployed lambda function.\r\n\r\n- Added the lambda function in tests/LambdaTests\r\n- Created the evergreen tasks to execute the scripts in drivers-evergreen-tools. (https://github.com/mongodb-labs/drivers-evergreen-tools/blob/master/.evergreen/aws_lambda/run-deployed-lambda-aws-tests.sh)\r\n\r\nSpec for this changes can be found here: [mongodb/specifications@master/source/faas-automated-testing/faas-automated-testing.rst](https://github.com/mongodb/specifications/blob/master/source/faas-automated-testing/faas-automated-testing.rst?rgh-link-date=2023-02-14T20%3A45%3A23Z)\r\n\r\nWhat is the motivation for this change?\r\n- WRITING-11435/[DRIVERS-2384](https://jira.mongodb.org/browse/DRIVERS-2384)\r\n- The scripts in the evergreen tasks automate running everything described in the drivers ticket above and produces output we can inspect. ",
    "head_branch": "csharp4350",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4350: Add AWS Lambda tests (#1276)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69718912b45d36a05cd",
    "number": 1275,
    "body": "Test console before the fix:\r\n1 - sync method works as expected.\r\n2 - async method \"exit\" before inner operations are completed.\r\n![image](https://github.com/mongodb/mongo-csharp-driver/assets/31327136/c6087572-2df7-46b3-a41c-872fddd28cfa)\r\n![image](https://github.com/mongodb/mongo-csharp-driver/assets/31327136/16275717-c0d8-4bd8-8eb5-abdc49c0c433)\r\n\r\nTest console after the fix:\r\nboth sync and async methods work as expected:\r\n![image](https://github.com/mongodb/mongo-csharp-driver/assets/31327136/ff01c096-c97a-4d67-a274-a2c9c71a319b)\r\n![image](https://github.com/mongodb/mongo-csharp-driver/assets/31327136/17998ac6-e506-4749-81a6-7deba5e9f730)\r\n\r\n",
    "head_branch": "ExecuteTasksOnNewThreads-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make ThreadingUtilities.ExecuteTasksOnNewThreads await on the operation completion. (#1275)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69818912b45d36a05ce",
    "number": 1274,
    "body": null,
    "head_branch": "csharp4684",
    "is_a_fork": true,
    "comments": [
      "Confirmed I'm seeing the MQL in the right place in the EF Provider that I may log it.",
      "Removed ExecuteAndLog."
    ],
    "commit_messages": [
      "CSHARP-4684: Provide a way for applications to see what MQL was executed for a LINQ query."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f69918912b45d36a05cf",
    "number": 1273,
    "body": null,
    "head_branch": "csharp4432poc",
    "is_a_fork": true,
    "comments": [
      "I'm about to implement a bunch of new `Equals` methods. \r\n\r\nBefore doing so I'd like us to agree as a team on how we want to implement `Equals` going forward.\r\n",
      "I've re-requested a review from everyone on this PR.",
      "Closing the PR as it is only a POC. See CSHARP-3315 for new examples of Equals methods implemented in this standard way."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69a18912b45d36a05d0",
    "number": 1272,
    "body": "Added EmbedUntrackedSources attribute and set ContinuousIntegrationBuild to true to make nuget validation happy. Screenshot from the locally built package after the changes:\r\n\r\n![image](https://github.com/mongodb/mongo-csharp-driver/assets/31327136/68687682-422b-4b62-968d-87c7d264433a)\r\n",
    "head_branch": "csharp3994",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3994: Consider adding EmbedUntrackedSources for a build process (#1272)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69b18912b45d36a05d1",
    "number": 1271,
    "body": null,
    "head_branch": "2.23.2-release-notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "2.23.2 Release Notes (#1271)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69c18912b45d36a05d2",
    "number": 1270,
    "body": "I tested locally against 4.2.24 sharded. Let's see if all the variants pass on the patch build.",
    "head_branch": "csharp4827-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4827: Don't add RetryableWriteError label on pre 4.4 mongos."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69d18912b45d36a05d3",
    "number": 1269,
    "body": null,
    "head_branch": "csharp4970",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4970: Switch to Ubuntu 20 to run serverless tests (#1269)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f69e18912b45d36a05d4",
    "number": 1268,
    "body": null,
    "head_branch": "csharp4969",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4969: Fix failing CSFLE mocked kms tls tests (#1268)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a018912b45d36a05d5",
    "number": 1267,
    "body": "The gist of  DRIVERS-1641 is:\r\n\r\n Drivers MUST NOT add a RetryableWriteError label based on the following:\r\n\r\n  - any `writeErrors[].code` fields in a mongod or mongos response\r\n  - the `writeConcernError.code` field in a mongos response\r\n\r\nwhen connected to a pre-4.4 server.\r\n\r\nI added the new unified tests and they pass without any changes to the driver.\r\n\r\nI searched the driver code base for uses of `.Code` and verified that we are not adding a `RetryableWriteError` anywhere based on the value of `Code`.",
    "head_branch": "csharp4827",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4827: Verify that driver does not add RetryableWriteError when it should not."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a118912b45d36a05d6",
    "number": 1266,
    "body": "- Add wireVersions 22 and 23 to list of known wireVersions and updates tests as needed.\r\n\r\n- Check that I updated everything that needs to be updated.",
    "head_branch": "csharp4965",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4965: Bump maxWireVersion for MongoDB 7.2 (#1266)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6a218912b45d36a05d7",
    "number": 1265,
    "body": "This is the optimization that Boris suggested in our meeting today, namely that while we are examining the string to see if it needs to be escaped we can simultaneously calculate the length of the escaped string.\r\n\r\nI haven't done any measurements to see whether this is faster or not. It's probably going to be faster with some string values than with others (depending on whether any characters need to be escaped or how many).",
    "head_branch": "csharp2442",
    "is_a_fork": true,
    "comments": [
      "I was reluctant to push this change to master without measuring the impact.\r\n\r\nBoris ran some initial measurements and found that the new code was slightly slower.\r\n\r\nLeaving on the back burner for now.",
      "Closing PR as it did not actually improve performance."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a318912b45d36a05d8",
    "number": 1264,
    "body": "Run packages-pack on Windows host + set priority to 10 for all package-related tasks.",
    "head_branch": "csharp4962",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4962: Fix package build script on CI to produce 472 binaries (#1264)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a418912b45d36a05d9",
    "number": 1263,
    "body": null,
    "head_branch": "csharp4859-0209-fixtests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4869: Fix a few tests failing against newer server versions."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a518912b45d36a05da",
    "number": 1262,
    "body": null,
    "head_branch": "csharp4825",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a618912b45d36a05db",
    "number": 1261,
    "body": null,
    "head_branch": "releasenotes-2.24.0",
    "is_a_fork": true,
    "comments": [
      "> No mention of nested AsQueryable support?\r\n\r\nGood question. I didn't want to mention it since no user should ever be writing queries this way. This feature was solely for the benefit of the EF Core Provider.\r\n\r\n@JamesKovacs what do you think?",
      "> > No mention of nested AsQueryable support?\r\n> \r\n> Good question. I didn't want to mention it since no user should ever be writing queries this way. This feature was solely for the benefit of the EF Core Provider.\r\n> \r\n> @JamesKovacs what do you think?\r\n\r\nWe should mention it on the off chance that it affects a user's query. We may want to mention that it is intended for internal use only (or however we want to word it).",
      "> We should mention it on the off chance that it affects a user's query.\r\n\r\nHow could that be? Any use of nested AsQueryable before resulted in an `ExpressionNotSuportedException`.",
      "The release seems to be absent on NuGet and Github Releases.\r\nAlso seems to be not tagged correctly in Git.",
      "This is in preparation of the upcoming release of 2.24.0. The release has not happened yet."
    ],
    "commit_messages": [
      "Release notes for 2.24.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a718912b45d36a05dc",
    "number": 1260,
    "body": null,
    "head_branch": "csharp4824",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4824: Treated ExceededTimeLimit is a retryable read error."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6a818912b45d36a05dd",
    "number": 1259,
    "body": "Current PR contains following changes:\r\n1) Added async counterparts for Initialize of SaslMechanism\r\n2) Implemented OIDC authenticator\r\n3) Implemented spec tests (will need to add read.me on how to run the tests locally)\r\n4) Implement Prose spec tests.\r\n5) Configure EG scripts/variants.\r\n",
    "head_branch": "csharp4448-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4448: Implement OIDC SASL mechanism (#1259)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6a918912b45d36a05de",
    "number": 1258,
    "body": null,
    "head_branch": "csharp4820",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6aa18912b45d36a05df",
    "number": 1257,
    "body": null,
    "head_branch": "csharp4859rapid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4859: Fix a few tests that were failing on rapid."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ab18912b45d36a05e0",
    "number": 1256,
    "body": "When calling `gss_delete_sec_context` we passed in a handle (aka `IntPtr` aka `void*`), but the function was expecting a `void**`. Strangely the function returned success even when passed a `void*` rather than a `void**`.",
    "head_branch": "csharp4797",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4797: Fix segfault when disposing of GSSAPI (Kerberos) security context on Linux. (#1256)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ac18912b45d36a05e1",
    "number": 1255,
    "body": null,
    "head_branch": "csharp4937",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ad18912b45d36a05e2",
    "number": 1254,
    "body": null,
    "head_branch": "csharp4940",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4940: Update libmongocrypt version (#1254)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6af18912b45d36a05e3",
    "number": 1253,
    "body": null,
    "head_branch": "csharp4831",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4831: Emit heartbeat started event before connection establishment in ServerMonitor (#1253)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6b018912b45d36a05e4",
    "number": 1252,
    "body": "Also added typed field expression overloads  for Score* helpers",
    "head_branch": "csharp4939",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4939: Add VectorSearchScore builder for $vectorSearch stage (#1252)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6b118912b45d36a05e5",
    "number": 1251,
    "body": null,
    "head_branch": "csharp4894",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6b218912b45d36a05e6",
    "number": 1250,
    "body": "…ed type.\r\n\r\nThis will allow for a proper \"downcasing\" of the type. With my proposed changes we will now be able to run filters if the collection type is an interface.\r\n\r\nI also had to change the default implementation of how the DiscriminatedInterfaceSerializer works as there would always be an exception as the object serializer enforces a whitelist for types to be serialized. I would actually like it better if we would instead resolve the class map of the underlying type to serialize a dependent object, but I did not want to touch on this in this PR.\r\n\r\nI am unsure about the placement of the ConvertExpressionToFilterTranslatorTest as it is a bit different to the other tests in that file, but it was the only way to trigger the conversion in ConvertExpressionToFilterFieldTranslator",
    "head_branch": "allow-linq-for-interface-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6b318912b45d36a05e7",
    "number": 1249,
    "body": null,
    "head_branch": "csharp4927",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4927: Add support for Atlas Search $in operator to builder (#1249)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6b418912b45d36a05e8",
    "number": 1248,
    "body": null,
    "head_branch": "csharp4832",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4832: Support sort by score $search stage (#1248)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6b518912b45d36a05e9",
    "number": 1247,
    "body": null,
    "head_branch": "csharp4890",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4890: Search index management operations fail with a different error message (#1247)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6b618912b45d36a05ea",
    "number": 1246,
    "body": "Hello everyone\r\n\r\nIn this PR I am trying to address the challenge of using interfaces as root objects in MongoDB and BSON respectively. I am trying to address this [issue](https://jira.mongodb.org/browse/CSHARP-1907). MongoDB does not support discriminating against interface types, only against ClassTypes. \r\n\r\nBesides the serialization, this change also allows for the support of using the .OfType<TInterface>(). meaning that collections can now discriminate against the actual interfaces implemented. \r\n\r\nI've added tests for the serialization, but could not figure out where I would write integration tests for the .OfType<TInterface> part. \r\n\r\nAdditionally I would like some guidance in how to proceed with breaking changes as the changes introduced break some tests, specifically CSharp564Tests, looking at the described issue in Jira I do not think I am breaking the implementation there, simply the value of _t has changed to include more information. \r\n\r\nI've used this code to test the implementation of \".OfType<TInterface>()\":\r\n\r\n```csharp\r\npublic interface IAnimal\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public int Age { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n\r\npublic class Bear : IAnimal\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public int Age { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n\r\npublic interface  ICat : IAnimal\r\n{\r\n}\r\n\r\npublic class Tiger : ICat\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public int Age { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n\r\npublic class Lion : ICat\r\n{\r\n    public ObjectId Id { get; set; }\r\n    public int Age { get; set; }\r\n    public string Name { get; set; }\r\n}\r\n\r\npublic class Program\r\n{\r\n    public static void Main(params string[] args)\r\n    {\r\n        BsonSerializer.RegisterSerializer(new DiscriminatedInterfaceSerializer<IAnimal>(new InterfaceDiscriminatorConvention<IAnimal>(\"_t\")));\r\n        BsonClassMap.RegisterClassMap<Bear>();\r\n        BsonClassMap.RegisterClassMap<Tiger>();\r\n        BsonClassMap.RegisterClassMap<Lion>();\r\n\r\n\r\n        var client = new MongoClient();\r\n        var collection = client.GetDatabase(\"test\").GetCollection<IAnimal>(\"animal\");\r\n\r\n        collection.DeleteMany(x => true);\r\n        \r\n        collection.InsertOne(new Bear()\r\n        {\r\n            Id = ObjectId.GenerateNewId(),\r\n            Age = 1,\r\n            Name = \"Bob the bear\",\r\n        });\r\n        \r\n        \r\n        collection.InsertOne(new Lion()\r\n        {\r\n            Id = ObjectId.GenerateNewId(),\r\n            Age = 1,\r\n            Name = \"Leon the lion\",\r\n        });\r\n        \r\n        collection.InsertOne(new Tiger()\r\n        {\r\n            Id = ObjectId.GenerateNewId(),\r\n            Age = 1,\r\n            Name = \"Theo the tiger\",\r\n        });\r\n        \r\n        var cats = client.GetDatabase(\"test\").GetCollection<IAnimal>(\"animal\").OfType<ICat>().Find(x => true).ToList();\r\n\r\n        foreach (var cat in cats)\r\n        {\r\n            Console.WriteLine(cat.Name);   \r\n        }\r\n\r\n    }\r\n}\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6b718912b45d36a05eb",
    "number": 1245,
    "body": "This will cause the method call above to thow an \"Unknown discriminator value [type name]\" which is much more descriptive than the current behavior where System...GetType throws \"System.ArgumentException: String cannot have zero length.\" Also by returning null rather than throwing, it is more compliant with the method description.",
    "head_branch": "bmelton.discriminator-exception",
    "is_a_fork": true,
    "comments": [
      "Thank you for your PR @bradamelton \r\nCould please file a Jira ticket describing this issue?\r\n\r\nPlease see [contribution guidelines](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md) for more details.",
      "Thanks! \r\n\r\nIt looks like it could address this issue: https://jira.mongodb.org/browse/CSHARP-4533\r\n\r\nI have added a new commit to link this in.\r\n\r\n\r\n\r\n",
      "Hi @bradamelton, thanks again for submitting this PR. We have revisited the issue in the ticket: https://jira.mongodb.org/browse/CSHARP-4533 and will make further changes on our end. So I will close this PR but we'll keep your commit and add you to the contributors list once the work is done."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6b818912b45d36a05ec",
    "number": 1244,
    "body": "…causes errors in downloading the original file",
    "head_branch": "CSHARP-4900",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4900: Uploading a duplicate file larger than the original one causes errors in downloading the original file (#1244)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ba18912b45d36a05ed",
    "number": 1243,
    "body": "Additional entities to consider: \r\nUtf8Helper\r\nIBsonChunk\r\nIBsonChunkSource\r\nIByteBuffer\r\nIChildSerializerConfigurable",
    "head_branch": "csharp4886",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6bb18912b45d36a05ee",
    "number": 1242,
    "body": null,
    "head_branch": "csharp4540",
    "is_a_fork": true,
    "comments": [
      "You should probably review the Exists/IsMissing PR first:\r\n\r\nhttps://github.com/mongodb/mongo-csharp-driver/pull/1224",
      "Rebased on master and 4548 approach using static Mql method and force pushed."
    ],
    "commit_messages": [
      "CSHARP-4540: Add full support for $dateFromString."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6bc18912b45d36a05ef",
    "number": 1241,
    "body": "`DriverInfo` name was inspired by Python driver.",
    "head_branch": "csharp4891",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4891: Append LibraryInfo to DriverDocument (#1241)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6bd18912b45d36a05f0",
    "number": 1240,
    "body": null,
    "head_branch": "csharp4888",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4888: Fix known serializer issue with enum underlying types."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6be18912b45d36a05f1",
    "number": 1239,
    "body": null,
    "head_branch": "csharp1893",
    "is_a_fork": true,
    "comments": [
      "What's the difference between `SelectMany(a => a.Names).Distinct()` and `DistinctMany(a => a.Name)` ?",
      "> What's the difference between `SelectMany(a => a.Names).Distinct()` and `DistinctMany(a => a.Name)` ?\r\n\r\nSelectMany/Distinct are LINQ methods.\r\n\r\nDistinctMany is an IMongoCollection method (it's a variation of the existing Distinct method).\r\n\r\nThe also execute differently. The LINQ methods are translated to an aggregation pipeline. The Distinct and DistinctMany methods are executed using the distinct command (no aggregation pipeline involved).",
      "So it just performs a Distinct operation directly against an array? I'm not sure where the Many part comes from then. SelectMany is a way of effectively combining many arrays into a new array hence the \"Many\" semantics.",
      "> So it just performs a Distinct operation directly against an array? I'm not sure where the Many part comes from then. SelectMany is a way of effectively combining many arrays into a new array hence the \"Many\" semantics.\r\n\r\nSo the method name DistinctMany was proposed by the original submitter of an external PR. At first I wasn't sure how they had come up with the name, but thinking about it I realized that this method had a lot in common with SelectMany.\r\n\r\nSelectMany takes each input object and produces multiple (i.e many) output objects (the result of the selector) and concatenates them all into one output sequence.\r\n\r\nDistinctMany takes each input document (object) and produces multiple (i.e many) output values (the items of an array field) and concatenates them all into one output sequence and then returns only the distinct values in that sequence.\r\n\r\nWe don't have to call this new method DistinctMany, but we have to call it something different than Distinct to avoid potential ambiguities with the existing Distinct method. But the name DistinctMany sounds as good as any other to me.",
      "The tests for DistinctMany are just modifed versions of the tests for Distinct.\r\n\r\nI can change them to be integrations tests. Do you want the tests for Distinct to be changed also?"
    ],
    "commit_messages": [
      "CSHARP-1893: Changes from original PR."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6bf18912b45d36a05f2",
    "number": 1238,
    "body": null,
    "head_branch": "2.23.1-release-notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "2.23.1 release notes (#1238)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c018912b45d36a05f3",
    "number": 1237,
    "body": "- Adds serverMonitoringMode (stream|poll|auto) to URI options and MongoClientOptions\r\n- Updates monitor behaviour to poll or stream based on options or environment.\r\n- Ensures no dedicated connection is used for RTT pinging in polling mode.\r\n- Updates Unified test runner to work with schema 1.17\r\n- Syncs SDAM unified tests\r\n- Syncs URI options tests\r\n\r\n### Highlight\r\n\r\nFor users that want to control the behaviour of the server monitoring connection between each node in the topology, a new option, `serverMonitoringMode`, has been added. This defaults to auto but can be forced into a specific mode by providing a value of poll or stream. A polling monitor periodically issues a hello command to the node at an interval of `heartbeatFrequencyMS`. A streaming monitor sends an initial hello and then will automatically get a response from the Node when a change in server configuration occurs or at a maximum time of `heartbeatFrequencyMS`",
    "head_branch": "csharp4615",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4615: Switch to polling monitoring on FaaS environment. (#1237)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6c118912b45d36a05f4",
    "number": 1236,
    "body": null,
    "head_branch": "csharp4870",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4870: CreateCluster throws NullReferenceException when not setting LoggingSettings (#1236)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c218912b45d36a05f5",
    "number": 1235,
    "body": null,
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CSHARP-4837: Pull mongohouse image from ADL ECR repo (#1235)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c318912b45d36a05f6",
    "number": 1234,
    "body": null,
    "head_branch": "csharp4869",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4869: Add member page for api-docs (#1234)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c418912b45d36a05f7",
    "number": 1233,
    "body": "We don't explicitly test different TLS versions as we rely on the underlying TLS libraries to negotiate the protocol. This commit opts into TLS1.3 as an option. I verified that a `netcoreapp2.1` could still connect to an Atlas cluster with TLS1.2 enabled after adding the enum value for TLS1.3 to the flags. The value of the `SslProtocols.Tls13` flag is from:\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.security.authentication.sslprotocols?view=net-8.0",
    "head_branch": "csharp4862",
    "is_a_fork": true,
    "comments": [
      "I don't like scattering the numeric value for `SslProtocols.Tls13` across multiple classes, but because of the core/high split, I would need to make the constant public - which is an even worse choice given that it already exists in `SslProtocols` in newer framework versions. I choose the lesser evil of duplicating the constant value across core/high and tests. If anyone has a better idea, I'm willing to consider it.",
      "IMHO duplicating the constant is ok for now, as we can handle this in 3.0.\r\nThere is also an option of declaring `internal` constant (internals are visible to MongoDB.Driver)",
      "Good point. I thought that we had InternalsVisibleTo between Core/Core.Tests and Driver/Driver.Tests, but not Core/Driver.Tests. I was wrong and we have it between all 3. (Just not Driver/Core.Tests - which makes sense.) Refactored to use an internal constant `SslStreamSettings.SslProtocolsTls13` until we update to `net5.0` as our minimum TFM."
    ],
    "commit_messages": [
      "CSHARP-4862: Include TLS1.3 in the list of acceptable TLS protocols. (#1233)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6c518912b45d36a05f8",
    "number": 1232,
    "body": null,
    "head_branch": "2.23-release-notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "2.23.0 Release notes (#1232)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c618912b45d36a05f9",
    "number": 1231,
    "body": null,
    "head_branch": "csharp3788",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3788: Use OP_MSG to authenticate if server supports OP_MSG (#1231)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c718912b45d36a05fa",
    "number": 1230,
    "body": null,
    "head_branch": "csharp4863",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c818912b45d36a05fb",
    "number": 1229,
    "body": null,
    "head_branch": "CSHARP-1893",
    "is_a_fork": true,
    "comments": [
      "Thank you for your pull request. I have made some further changes based on your excellent initial work and initiated an internal code review on a new PR:\r\n\r\nhttps://github.com/mongodb/mongo-csharp-driver/pull/1239\r\n\r\nI'll close this one and you can follow and comment on that one.\r\n\r\nThanks again."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6c918912b45d36a05fc",
    "number": 1228,
    "body": "Adds support for additional time series options when creating a collection.\r\n\r\n- Updates collection management spec tests.\r\n- Adds 2 new options to TimeSeriesOptions, bucketMaxSpanSeconds and bucketRoundingSeconds.",
    "head_branch": "csharp4539",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4539: Improving Time Series Bucketing Scalability (#1228)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6ca18912b45d36a05fd",
    "number": 1227,
    "body": null,
    "head_branch": "csharp4861",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4861: Count comparison with constant on the left is not translated correctly."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6cc18912b45d36a05fe",
    "number": 1226,
    "body": null,
    "head_branch": "csharp4859",
    "is_a_fork": true,
    "comments": [
      "The general pattern of how each translator method had to be modified to support nested AsQueryable is:\r\n\r\n1. Accept the Queryable equivalent of the relevant method\r\n2. If it's a queryable method ensure the source is a nested AsQueryable\r\n3. If it's a queryable method with lambda arguments they need to be Unquoted\r\n4. Use the correct serializer for the result\r\n",
      "I've refactored the few failing tests to pass on all server versions."
    ],
    "commit_messages": [
      "CSHARP-4859: Nested AsQueryable."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6cd18912b45d36a05ff",
    "number": 1225,
    "body": null,
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CSHARP-4380: Remove legacy shell from test scripts (#1225)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ce18912b45d36a0600",
    "number": 1224,
    "body": null,
    "head_branch": "csharp4858",
    "is_a_fork": true,
    "comments": [
      "The latest commit explores Alex's suggestion to define `IsMissing` and `IsNullOrMissing` as extension methods against a dummy `MongoDBFunctions` class. This idea comes from how EF Core does something similar.\r\n\r\nThis is just a prototype of such an approach. I need you to review the approach and the naming even more than reviewing the code itself. If we use this approach we are committing to it for future methods.",
      "The latest commit adds an Exists method to test for the existence of a field.\r\n\r\nUsing `Exists` is more convenient than `!IsMissing`.\r\n",
      "> MongoDBLinq.Functions.IsMissing (and friends) isn't readily discoverable. Make sure you mark this as requiring documentation. I would have said the same thing about MongoDBFunctions. It's not the name change. It's the fact that it won't appear readily in Intellisense.\r\n\r\nThis is unfortunately the case and has been since LINQ was introduced. There's no way to bring a function like this into scope and be discoverable only inside expressions so functions like `SqlFunctions` (EF 4) and `EF.Functions` (EF Core) end up being introduced.\r\n\r\nWhile it's not that discoverable there are at least similarities elsewhere in .NET like the `Math` static class with it's less-regularly-used math operations rather than them existing on the numeric data types themselves.\r\n\r\n",
      "LGMT"
    ],
    "commit_messages": [
      "CSHARP-4858: Shorten long filename to work around Windows limitation when building on Evergreen."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6cf18912b45d36a0601",
    "number": 1223,
    "body": null,
    "head_branch": "csharp4706",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4706: Support for $out to Time-series collections (#1223)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6d018912b45d36a0602",
    "number": 1222,
    "body": null,
    "head_branch": "ef73",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "EF-73: Add more EF Core metadata to Client Metadata Handshake (#1222)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d118912b45d36a0603",
    "number": 1221,
    "body": null,
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CSHARP-4836: Add driver tests for Serverless Proxy incremental rollout (#1221)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d218912b45d36a0604",
    "number": 1220,
    "body": null,
    "head_branch": "csharp4851",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4851: Render full form for $and/$eq in $vectorSearch stage filter (#1220)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d318912b45d36a0605",
    "number": 1219,
    "body": null,
    "head_branch": "csharp4853",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4853: \"Thread static buffer is already in use.\" error after bad utf8 string write. (#1219)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d418912b45d36a0606",
    "number": 1218,
    "body": null,
    "head_branch": "csharp4854",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4854: Suppress vulnerability warnings for netcoreapp2.1 TF in tests (#1218)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d518912b45d36a0607",
    "number": 1217,
    "body": "added test and fix for Thread Static buffer issue\r\n",
    "head_branch": "thread-static-fix",
    "is_a_fork": true,
    "comments": [
      "Thanks @andreabalducci for reporting this bug and providing a fix! Closing this PR as I made another PR(https://github.com/mongodb/mongo-csharp-driver/pull/1219) that uses your commit and made some other changes per our development practices. We'll make sure to add you to the contributor list as well.",
      "@adelinowona 👀 contributor list (for Self-esteem 😁)",
      "@andreabalducci Hi! thanks for the reminder, I have added you to the contributor list! 😎"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d618912b45d36a0608",
    "number": 1216,
    "body": "Benchmark implemented per this spec: https://github.com/mongodb/specifications/blob/master/source/client-side-encryption/tests/benchmarks.rst \r\n\r\nImportant to note that I am using the pure time metrics for running a decrypt operation as performance data rather than counting the number of decrypt operations we can complete in a second. I am doing this to keep uniformity in the benchmarking mechanism for our driver (using benchmarkDotNet) and also using the time metrics seems enough to me to see any performance gains. \r\n\r\nHere is the data from benchmarks showing improvements made.\r\n\r\nBenchmarks without improvements:\r\n| Method                     | ThreadsCount | Mean       | Error      | StdDev     |\r\n|--------------------------- |------------- |-----------:|-----------:|-----------:|\r\n| BulkDecryptionUsingBinding | 1            |   7.563 ms |  0.4013 ms |  0.3753 ms |\r\n| BulkDecryptionUsingBinding | 2            |  10.876 ms |  1.1460 ms |  1.0719 ms |\r\n| BulkDecryptionUsingBinding | 8            |  84.420 ms |  2.4353 ms |  2.2780 ms |\r\n| BulkDecryptionUsingBinding | 64           | 878.740 ms | 37.7653 ms | 35.3257 ms |\r\n\r\n------------------------------------------------------------------------------------------------\r\n\r\nBenchmarks with improvements:\r\n| Method                     | ThreadsCount | Mean       | Error      | StdDev     |\r\n|--------------------------- |------------- |-----------:|-----------:|-----------:|\r\n| BulkDecryptionUsingBinding | 1            |   6.181 ms |  0.3903 ms |  0.3650 ms |\r\n| BulkDecryptionUsingBinding | 2            |   9.630 ms |  0.4241 ms |  0.3760 ms |\r\n| BulkDecryptionUsingBinding | 8            |  80.497 ms |  4.2131 ms |  3.9409 ms |\r\n| BulkDecryptionUsingBinding | 64           | 714.617 ms | 58.1227 ms | 54.3680 ms |\r\n\r\nWe get modest improvements but still, the most impactful change would be to enable usage of the native libmonogcrypt crypto implementation as outlined in [DRIVERS-2718](https://jira.mongodb.org/browse/DRIVERS-2718).",
    "head_branch": "csharp4719",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4719: Benchmark performance of in-use Encryption (#1216)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d718912b45d36a0609",
    "number": 1215,
    "body": null,
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix CSFLE tests on Mac (#1215)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d818912b45d36a060a",
    "number": 1214,
    "body": null,
    "head_branch": "csharp4843",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4843: Suppress any exceptions in the code checking if legacy driver was loaded (#1214)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6d918912b45d36a060b",
    "number": 1213,
    "body": null,
    "head_branch": "csharp-4841",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4841: Update ZstdSharp package to fix MissingMethodException (#1213)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6da18912b45d36a060c",
    "number": 1212,
    "body": null,
    "head_branch": "csharp4761",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4761: Enable serverless tests with failpoints (#1212)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6db18912b45d36a060d",
    "number": 1211,
    "body": null,
    "head_branch": "csharp4821",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4821: LINQ3 Where with enum filter followed by Select with cast throws System.ArgumentException."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6dc18912b45d36a060e",
    "number": 1210,
    "body": null,
    "head_branch": "csharp4444",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4444: Display all tests results in EG (#1210)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6dd18912b45d36a060f",
    "number": 1209,
    "body": null,
    "head_branch": "csharp4633",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4633: Avoiding Errors if Change Stream Events Exceed 16MB (#1209)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6de18912b45d36a0610",
    "number": 1208,
    "body": null,
    "head_branch": "csharp4486",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4486: Add support for bitwise operators."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6e018912b45d36a0611",
    "number": 1207,
    "body": null,
    "head_branch": "csharp4730",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4730: Always encode CompressionType.ZStandard as zstd. (#1207)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6e218912b45d36a0612",
    "number": 1206,
    "body": "Here is an example of generated site: https://sanych-sun.github.io/mongo-csharp-driver/api/index.html",
    "head_branch": "doc_fx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4783: API docs generating with docfx (#1206)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6e318912b45d36a0613",
    "number": 1205,
    "body": "Basically the main change is in EG project settings as BUILD team provided  new arn.",
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CSHARP-4814: Update AWS Auth test host and ECS Task (#1205)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6e418912b45d36a0614",
    "number": 1204,
    "body": "To make the review process more manageable and efficient, I've divided the PR into two batches for review. Each batch focuses on specific sections to ensure a detailed yet digestible review process.\r\n\r\nBatch 1: Overall methodology, benchmarking approach and code structure changes.\r\n- all files **not** in the BSON, Multi-Doc, ParallelBench and Single-Doc folders\r\n\r\nBatch 2: Performance improvements and benchmarks accuracy\r\n- all files in the these folders: BSON, Multi-Doc, ParallelBench and Single-Doc",
    "head_branch": "csharp4670",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4670: Implement Drivers Performance Benchmarking Spec (#1204)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6e518912b45d36a0615",
    "number": 1203,
    "body": null,
    "head_branch": "csharp4716",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4716: Log informational message client-side based on detected environment (DocumentDB or CosmosDB) (#1203)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6e618912b45d36a0616",
    "number": 1202,
    "body": null,
    "head_branch": "csharp4813",
    "is_a_fork": true,
    "comments": [
      "So here are the key insights for the third commit:\r\n\r\nThe following two questions are not the same:\r\n\r\n* does serializer represent values as a document\r\n* does serializer represent members as fields in a document\r\n\r\nand:\r\n\r\n`serializer is IBsonDocumentSerializer` doesn't tell us anything (because some classes implemented `IBsonDocumentSerializer` when they shouldn't have)\r\n\r\nSo all code that used `is IBsonDocumentSerializer` now uses the new helper methods `IsRepresentedAsDocument` and `AreMembersRepresentedAsFields` instead (LINQ3 only, LINQ2 is unchanged).\r\n\r\n"
    ],
    "commit_messages": [
      "CSHARP-4813: Verify more carefully that property named Count is a collection method."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6e718912b45d36a0617",
    "number": 1201,
    "body": null,
    "head_branch": "csharp4808",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4808: \"Updating stale electionId and setVersion\" even when electionId/setVersion match (#1201)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6e818912b45d36a0618",
    "number": 1200,
    "body": null,
    "head_branch": "csharp4809",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4809: If a string serializer doesn't implement IHasRepresentationSerializer don't assume string values are actually represented as strings."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6e918912b45d36a0619",
    "number": 1199,
    "body": null,
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CSHARP-4805: Use Ubuntu 20.04 for MongoDB 7.0+ on Evergreen (#1199)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ea18912b45d36a061a",
    "number": 1198,
    "body": null,
    "head_branch": "csharp4775",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4775: Use MongoDB managed Azure KMS credentials (#1198)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6eb18912b45d36a061b",
    "number": 1197,
    "body": "Also I've reorganized build variants a little, but I've double-checked and current pipeline have the same amount of tasks run + 1 (for auth test task for new defined OS). Here is a link to the test evergreen pipeline:\r\n\r\nhttps://spruce.mongodb.com/version/dot_net_driver_ci_experiments_5765b0e7f76b2cd7747d0d0906e909ac40599b88/tasks\r\n\r\nPlease also note: not all problems are solved yet. We still have a problems with running AWS tests.",
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "CSHARP-4805: Use Ubuntu 20.04 for MongoDB 7.0+ on Evergreen (#1197)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ec18912b45d36a061c",
    "number": 1196,
    "body": null,
    "head_branch": "csharp4685",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4685: Add e2e testing against Atlas to the search index management API (#1196)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6ed18912b45d36a061d",
    "number": 1195,
    "body": null,
    "head_branch": "csharp4566tests",
    "is_a_fork": true,
    "comments": [
      "Closed because there are unresolved issues. I will create a new PR when further changes are made."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ee18912b45d36a061e",
    "number": 1194,
    "body": null,
    "head_branch": "csharp4804tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4804: Fix some tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ef18912b45d36a061f",
    "number": 1193,
    "body": null,
    "head_branch": "releasenotes2.22.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.22.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6f018912b45d36a0620",
    "number": 1192,
    "body": null,
    "head_branch": "sandcastlewarnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Sandcastle warning."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6f118912b45d36a0621",
    "number": 1191,
    "body": "MongoDBCompass can copy a connectionstring, and for the DEFAULT auth mechanism it will include `authMechanism=DEFAULT` literaly. This PR makes the `ToAuthenticator` method accept that.\r\n\r\nBefore this, it would only use the default if the authMechanism was not specified at all, and including it in the connectionstring would lead to an exception.",
    "head_branch": "fix/allow_default_mechanism_specified",
    "is_a_fork": true,
    "comments": [
      "Hi, @cknaap,\r\n\r\nThank you for submitting this PR. I confirmed that MongoDB Compass is including the connection string option `authMechanism=DEFAULT` when you select username/password as the authentication mechanism. However this is invalid according to the Auth specification. See the [Auth Related Options section](https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst#auth-related-options) for allowed values. The correct behaviour is to simply omit `authMechanism` if the default mechanism rules are to be followed. I've filed [COMPASS-7308](https://jira.mongodb.org/browse/COMPASS-7308) to have this issue resolved in Compass.\r\n\r\nThank you for bringing this to our attention.\r\n\r\nSincerely,\r\nJames"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6f318912b45d36a0622",
    "number": 1190,
    "body": null,
    "head_branch": "csharp4804",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4804: Slice projection must be rendered differently for Find and Aggregate."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6f418912b45d36a0623",
    "number": 1189,
    "body": null,
    "head_branch": "csharp4803",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4803: Refactor StringExpressionToRegexFilterTranslator.TryTranslate to not use an exception for flow control when possible."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6f518912b45d36a0624",
    "number": 1188,
    "body": null,
    "head_branch": "csharp4799",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4799: Pipeline stage with BsonDocumentSearchDefinition can be rendered only once (#1188)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6f618912b45d36a0625",
    "number": 1187,
    "body": null,
    "head_branch": "csharp4768",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4768: Introduce $vectorSearch aggregation stage (#1187)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6f718912b45d36a0626",
    "number": 1186,
    "body": null,
    "head_branch": "csharp4778",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4778: Add synonym support to text operator for Atlas Search (#1186)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6f818912b45d36a0627",
    "number": 1185,
    "body": null,
    "head_branch": "ef26",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "EF-26: Pass EF Provider data to Client Meta Data Handshake (#1185)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6f918912b45d36a0628",
    "number": 1184,
    "body": "This is an additional cleanup step if the EC2 instance profile was changed during variant setup for MONGODB-AWS auth testing. This should improve the stability of the EG environment and avoid failures on future runs by any driver when run on the same host.",
    "head_branch": "csharp4714",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4714: Reset EC2 instance profile at end of test if necessary. (#1184)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6fa18912b45d36a0629",
    "number": 1183,
    "body": null,
    "head_branch": "csharp4801",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4801: Accessing ChangeStreamDocument.FullDocumentBeforeChange throw if pre-image was already expired (#1183)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6fb18912b45d36a062a",
    "number": 1182,
    "body": "I sync'd `$/specifications/connection-string/tests` to the spec repo. The changes are minimal and all tests pass. The reason for the large diff is a formatting change in the JSON files. The YAML files (from which the JSON files were generated) were not significantly altered.",
    "head_branch": "csharp4792",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4792: Verify that delimiting slash bewteen hosts and options is optional. (#1182)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f6fc18912b45d36a062b",
    "number": 1181,
    "body": "The commit for CSHARP-4018 is causing tests to fail in relation to changes that may have introduced null reference hazards. ",
    "head_branch": "csharp4018fix",
    "is_a_fork": true,
    "comments": [
      "Using the null-coalescing operator in both the RoundTripMonitor and ServerMonitor code seemed to have fixed the null reference issue. However, there are other places where I make use of the pattern of checking for the LoadBalanced setting in the connection settings but I am not too sure if I should also make use of the null-coalescing operator in those cases. Those uses can be found in `DefaultAuthenticator.Authenticate(Async)` and `CommandWireProtocol.CreateSupportedWireProtocol`. I can't guarantee that in these cases the connection settings will never be null and was thinking we should err on the side of caution and use null-coalescing here too",
      "There doesn't seem to be a code path in the driver that allows for connection settings to be null in a connection object that is in use. It seems the root cause might be that the setup for `CSharp3302Tests ` didn't set the connection settings for the mock connection object used in tests which resulted in the null reference. "
    ],
    "commit_messages": [
      "Fix null reference exception causing failed tests (#1181)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6fd18912b45d36a062c",
    "number": 1180,
    "body": null,
    "head_branch": "csharp4802",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4802: Projection of nested field does not compute dotted field name properly."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6fe18912b45d36a062d",
    "number": 1179,
    "body": "…rmat",
    "head_branch": "csharp4789",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4789: MongoUrlBuilder builds urls with invalid query string fo… (#1179)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f6ff18912b45d36a062e",
    "number": 1178,
    "body": null,
    "head_branch": "csharp-4781",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4781: DefaultIfEmpty using wrong default value."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70018912b45d36a062f",
    "number": 1177,
    "body": null,
    "head_branch": "csharp4722",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4722: Add durations to connection pool events (#1177)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f70118912b45d36a0630",
    "number": 1176,
    "body": null,
    "head_branch": "csharp4566",
    "is_a_fork": true,
    "comments": [
      "Note: even thought the status of this PR is \"Merged\" it was later reverted when some remaining issues with it were discovered."
    ],
    "commit_messages": [
      "CSHARP-4566: Support widening numeric and nullable-numeric conversions."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f70218912b45d36a0631",
    "number": 1175,
    "body": "Based on [question in the community forums](https://www.mongodb.com/community/forums/t/c-decode-and-encode-guids-in-mongosh/244163). It was easy enough to shim the existing script so that it works in both old and new shells.",
    "head_branch": "csharp4786",
    "is_a_fork": true,
    "comments": [
      "LGTM"
    ],
    "commit_messages": [
      "CSHARP-4786: Added shim to uuidhelpers.js so that it works in both the old mongo shell as well as the new mongosh shell. (#1175)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70318912b45d36a0632",
    "number": 1174,
    "body": "Ensures that if load balancing is enabled, both 'hello' and OP_MSG are used for the connection handshake.",
    "head_branch": "csharp4018",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4018: Require hello_command + OP_MSG when loadBalanced=true (#1174)\n\n* CSHARP-4018: Require hello_command + OP_MSG when loadBalanced=true\r\n\r\n* Fix null reference causing failed tests\r\n\r\n* Fix more null reference hazards\r\n\r\n* Incorporated review feedback"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70518912b45d36a0633",
    "number": 1173,
    "body": null,
    "head_branch": "csharp4669",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4669: Mitigated clientEncrytion.Encrypt using a lot of memory (#1173)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f70618912b45d36a0634",
    "number": 1172,
    "body": null,
    "head_branch": "csharp4747",
    "is_a_fork": true,
    "comments": [
      "Pushed a new commit to skip tests on older servers."
    ],
    "commit_messages": [
      "CSHARP-4747: Add support for $set stage."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f70718912b45d36a0635",
    "number": 1171,
    "body": null,
    "head_branch": "csharp4772",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4772: Add support for List<T>.Exists and Array.Exists<T> in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70818912b45d36a0636",
    "number": 1170,
    "body": null,
    "head_branch": "csharp4776",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4776: Support additional array length comparisons."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70918912b45d36a0637",
    "number": 1169,
    "body": "Link to CI:\r\nhttps://spruce.mongodb.com/commits/dot-net-driver-ci-experiments\r\n\r\nExample of the build run by tag:\r\nhttps://spruce.mongodb.com/version/dot_net_driver_ci_experiments_v0.0.1_dev44_64ee6d6a32f417766ac6bd2f",
    "head_branch": "evergreen-experiments",
    "is_a_fork": false,
    "comments": [
      "@sanych-sun  can you please add a EG link demonstrating this new CI?"
    ],
    "commit_messages": [
      "CSHARP-4765: CI script to generate Driver's dev-package (#1169)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70a18912b45d36a0638",
    "number": 1168,
    "body": null,
    "head_branch": "csharp4739",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4739: Added BsonBinarySubType.Sensitive (0x08). (#1168)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f70b18912b45d36a0639",
    "number": 1167,
    "body": null,
    "head_branch": "csharp4756",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4756: MongoDB.Bson.BsonSerializationException (when serializing List of MongoDBRef) (#1167)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f70c18912b45d36a063a",
    "number": 1166,
    "body": "Account for additional properties in KMS response body, like `message`.",
    "head_branch": "csharp4764",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4764: Fix ClientEncryptionProseTests.OnDemandCredentialsTest failure (#1166)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70d18912b45d36a063b",
    "number": 1165,
    "body": null,
    "head_branch": "csharp4763",
    "is_a_fork": true,
    "comments": [
      "I think we should push this branch to master even though it's only a repro so that we can link to the code from the ticket.",
      "Given how many client-side projections we have in our codebase (v2), and our desire to upgrade to v3,  I really hope the team chooses to restore support for client-side projections. They should be optimized to project only the known accessed keys (obviously `x => LocalMethod(x)` won't be optimizable).\r\n\r\nI don't expect support for aggregation expressions, but `Find().Project()` or even simple `Where().Select().ToList()` where no complex aggregations are needed should work.\r\n\r\nAdditionally, if possible, `.Project(x => x.Lines.Select(x => x.Name).MyOwnLinqExtension())` should be split into part server-side projection `{ \"Lines.Name\": 1, _id: 0 }` and part client-side.",
      "Closing for now until we have a PR for an actual implementation."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70e18912b45d36a063c",
    "number": 1164,
    "body": "Enabling tracked in CSHARP-4761",
    "head_branch": "csharp4760",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4760: Temporary disable serverless tests with failpoints (#1164)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f70f18912b45d36a063d",
    "number": 1163,
    "body": null,
    "head_branch": "csharp4757",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4757: Modify BsonSerializationInfo to handle properties that are grouped in a nested document."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f71018912b45d36a063e",
    "number": 1162,
    "body": "Tests moved to UnifiedTestSpecRunner",
    "head_branch": "csharp4755",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4755: Disable Atlas Search Index management tests on Sharded clusters (#1162)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71118912b45d36a063f",
    "number": 1161,
    "body": null,
    "head_branch": "efcorecompoundprimarykey",
    "is_a_fork": true,
    "comments": [
      "Moving to a new PR now that we have a JIRA ticket number:\r\n\r\nhttps://github.com/mongodb/mongo-csharp-driver/pull/1161"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71218912b45d36a0640",
    "number": 1160,
    "body": "Simple change that will allow us to set up automated PR review assignments.",
    "head_branch": "csharp4750",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4750: Added global CODEOWNERS file. (#1160)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71318912b45d36a0641",
    "number": 1159,
    "body": null,
    "head_branch": "csharp4748",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4748: ContainsKey throws an exception when key is not a string but is serialized as a string."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71418912b45d36a0642",
    "number": 1158,
    "body": null,
    "head_branch": "v2.21.0_docs_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "v2.21.0 Documentation fixes (#1158)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f71518912b45d36a0643",
    "number": 1157,
    "body": null,
    "head_branch": "release_notes_v2.21.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for v2.21.0 (#1157)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71618912b45d36a0644",
    "number": 1156,
    "body": "I don't think we want to push anything to master here. I just want you to look at my repro and also read my analysis in the CSHARP-4749 JIRA ticket to see if you agree.",
    "head_branch": "csharp4749",
    "is_a_fork": true,
    "comments": [
      "Investigation concluded for now."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71818912b45d36a0645",
    "number": 1155,
    "body": null,
    "head_branch": "csharp4477",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4477: Implement embeddedDocuments operator in Atlas Search (#1155)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f71918912b45d36a0646",
    "number": 1154,
    "body": null,
    "head_branch": "csharp4744",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4744: Improve optimization of Count with predicate in Group."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71a18912b45d36a0647",
    "number": 1153,
    "body": null,
    "head_branch": "csharp4746",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4746: PipelineUpdateDefinition cannot be combined with any other update definition."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71b18912b45d36a0648",
    "number": 1152,
    "body": null,
    "head_branch": "csharp4743",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4743: Add support for DateTime.Date and DateTime.TimeOfDay."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71c18912b45d36a0649",
    "number": 1151,
    "body": null,
    "head_branch": "csharp4742",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71d18912b45d36a064a",
    "number": 1150,
    "body": null,
    "head_branch": "csharp4675",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4675: Ignore __safecontent__ field in deserialization (#1150)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f71e18912b45d36a064b",
    "number": 1149,
    "body": null,
    "head_branch": "csharp4732",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4732: Add SearchOptions overload to Search API (#1149)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f71f18912b45d36a064c",
    "number": 1148,
    "body": "Creating a new PR rebased on master to trigger a patch build.\r\n\r\nOriginal PR is:\r\n\r\nhttps://github.com/mongodb/mongo-csharp-driver/pull/1108",
    "head_branch": "csharp4676",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4676: Add MongoDB.Driver support for big-endian clients."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f72018912b45d36a064d",
    "number": 1147,
    "body": null,
    "head_branch": "csharp4734",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4734: Throw an exception when an aggregation style projection is used with Find on servers prior to 4.4."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f72118912b45d36a064e",
    "number": 1146,
    "body": null,
    "head_branch": "csharp4681",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4681: InvalidCastException when rendering projections (#1146)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f72218912b45d36a064f",
    "number": 1145,
    "body": null,
    "head_branch": "csharp4735",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4735: Flaky AtlasSearchTests.MustNot test (#1145)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72318912b45d36a0650",
    "number": 1144,
    "body": null,
    "head_branch": "csharp4723",
    "is_a_fork": true,
    "comments": [
      "Let's focus on the PR for CSHARP-4681 first.\r\n\r\nSome of the changes in that PR are relevant to this ticket also.\r\n\r\nOnce we've merged CSHARP-4681 this PR can focus on just the `FindAndModify` methods."
    ],
    "commit_messages": [
      "CSHARP-4723: Linq V2 Projection when upgrading from 2.19.1 to 2.19.2 (#1144)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72418912b45d36a0651",
    "number": 1143,
    "body": "The 7 June 2023 release of MongoDB Atlas Search introduced support for tracking search terms.\r\n\r\n[07 June 2023 Release](https://www.mongodb.com/docs/atlas/atlas-search/changelog/#07-june-2023-release)\r\n\r\n[Track search terms](https://www.mongodb.com/docs/atlas/atlas-search/tracking/#std-label-fts-tracking-ref)\r\n\r\nIt would be very nice to have access to the tracking field from the C# driver",
    "head_branch": "feature/CSHARP-4733-track-search-terms",
    "is_a_fork": true,
    "comments": [
      "Update: Use the new SearchOptions overload instead",
      "Somehow this PR shows unrelated changes, and contains commits that are already in master.\r\nCan you please rebase this PR on latest master, so it contains only relevant commits to this change?\r\n\r\nThanks.",
      "PR cleaned :)"
    ],
    "commit_messages": [
      "CSHARP-4733: Add implementation for Atlas Search Tracking search terms (#1143)\n\nCo-authored-by: Samir Boulema <samir@auto.nl>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f72518912b45d36a0652",
    "number": 1142,
    "body": null,
    "head_branch": "csharp4731",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4731: Support assigning List<T> value to IList<T> property in Select."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72718912b45d36a0653",
    "number": 1141,
    "body": "While migrating an application to .NET6+ I noticed PerformanceCounter related code was not available. This is an attempt to put it back.\n\nAs a side effect, targetting `net6.0-windows` is enabling some code analyzers issues. I'm leaving the code at is for now. Let me know if you have interest to go forward with the changes.",
    "head_branch": "enable-performancecounters-on-net6-0-windows",
    "is_a_fork": true,
    "comments": [
      "Thank you for contributing this PR. Unfortunately it is not possible to use compile-time directives to differentiate between Windows and non-Windows operating systems at runtime. When you compile the assemblies and build the NuGet package on Windows, it would include code that only works on `net6.0-windows`. When you ran the driver on a non-Windows OS, it would call APIs that do not exist and would fail.\r\n\r\nIn order to do runtime detection, you would have to use code similar to the following:\r\n\r\n```\r\nif (OperatingSystemHelper.CurrentOperatingSystem == OperatingSystemPlatform.Windows)\r\n```\r\n\r\nwhere `OperatingSystemHelper` is an internal helper class in the driver.\r\n\r\nAdditionally we currently ship `net472` (full .NET Framework on Windows), `netstandard2.0` (AKA .NET Core 2.X), and `netstandard2.1` (AKA .NET Core 3.X) targets in our NuGet package. `netstandard2.1` is compatible with .NET 5+ as well, but it is not possible to access .NET 6.0 specific features like those in the `net6.0-windows` TFM. We plan to introduce newer TFMs in an upcoming release to leverage new features, but this hasn't been done yet.\r\n\r\nI have closed this PR, but I encourage you to file a [CSHARP ticket](https://jira.mongodb.org/browse/CSHARP) to request this feature. We would be happy to provide you guidance in that ticket as to when the `net6.0` TFM will be added to the driver so that this feature could be implemented in a new PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72818912b45d36a0654",
    "number": 1140,
    "body": null,
    "head_branch": "csharp4534",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4534: Allow anonymous types in ObjectSerializer.DefaultAllowedTypes."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72918912b45d36a0655",
    "number": 1139,
    "body": "The 10 July 2023 release of MongoDB Atlas Search introduced the sort option.\r\n\r\n[Atlas Search Changelog - 10 July 2023 Release](https://www.mongodb.com/docs/atlas/atlas-search/changelog/#10-july-2023-release)\r\n\r\n[Sort Atlas Search Results](https://www.mongodb.com/docs/atlas/atlas-search/sort/#std-label-sort-ref)\r\n\r\nIt would be very nice to have access to the sort field from the C# driver",
    "head_branch": "feature/CSHARP-4728-atlas-search-sort",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4728: Add implementation for Atlas Search Sort (#1139)\n\nCo-authored-by: Samir Boulema <samir@auto.nl>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f72a18912b45d36a0656",
    "number": 1138,
    "body": null,
    "head_branch": "ensurefindprojectionissupported",
    "is_a_fork": true,
    "comments": [
      "@JamesKovacs see what you think of this idea. If you think it has merit we can create a JIRA ticket for it.\r\n\r\nThis idea grew out of a concern about how some find projections are failing silently on servers prior to 4.4. This PR turns the silent failures into exceptions.\r\n\r\nI think the idea is fairly safe. On servers 4.4 and newer this change is a no-op. While there is a risk that we will throw an exception on some projection that is actually supported prior to 4.4, if/when we find out that we missed a valid case we can just tweak the code accordingly.\r\n",
      "I was aware of the \"truthy\" variants but didn't think we had to support them. If this concerns you we can try to be more detailed in our checks and look for things that \"look\" like aggregation expressions.\r\n\r\nMy concern is that's it's far worse to accidentally fail silently because the logic failed to identify an invalid projection than it is to not support the occasional non-canonical projection.\r\n\r\nRemember also that it's all moot with 4.4+ because we don't even perform these checks there.",
      "This PR has been superseded by https://github.com/mongodb/mongo-csharp-driver/pull/1147."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72b18912b45d36a0657",
    "number": 1137,
    "body": "### Problem\r\nAn error occurred while deserializing the Value property of class Locator: Unknown discriminator value 'CategoryData'.\r\n ---> MongoDB.Bson.BsonSerializationException: Unknown discriminator value 'CategoryData'.\r\n\r\n### Example to reproduce\r\n```\r\nnamespace UnManagementLibrary.Models\r\n{\r\n    public class WikiLocator\r\n    {\r\n        public string Method { get; set; } = \"locator.wiki\";\r\n        \r\n        public CategoryData Value { get; init; }\r\n        public class CategoryData\r\n        {\r\n            public long CategoryId { get; set; }\r\n            public string CategoryName { get; set; }\r\n        }\r\n    }\r\n    \r\n// ...\r\n// and 20 classes like this\r\n// ...\r\n\r\n    public class LevelPriorityLocator\r\n    {\r\n        public string Method { get; set; } = \"locator.priority\";\r\n        \r\n        public LevelPriorityData Value { get; init; }\r\n        public class LevelPriorityData\r\n        {\r\n            public long Level { get; set; }\r\n            public long Priority { get; set; }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```\r\nnamespace Program\r\n{\r\n    public class Locator\r\n    {\r\n        [MongoDB.Bson.Serialization.Attributes.BsonId]\r\n        public string Id { get; init; }\r\n        public string Method { get; init; }\r\n        public object Value { get; init; }\r\n    }\r\n}\r\n```\r\n\r\nWhen i trying to save `Localor` instances (set all props as is from UnManagementLibrary.Models) to db, i see:\r\n```\r\n{\r\n    \"_id\" : \"99b889d8-8b8e-4d2f-a4e3-e1a650bdd39c\",\r\n    \"Method\" : \"locator.wiki\",\r\n    \"Value\" : {\r\n        \"_t\" : \"CategoryData\",\r\n        \"CategoryId\" : NumberLong(10),\r\n        \"CategoryName\" : \"Europe\"\r\n    },\r\n    \"UpdateDt\" : ISODate(\"2023-07-18T05:20:30.877+0000\")\r\n}\r\n```\r\n\r\nbut i want _classType.FullName in _t, like that (see _t):\r\n\r\n```\r\n{\r\n    \"_id\" : \"99b889d8-8b8e-4d2f-a4e3-e1a650bdd39c\",\r\n    \"Method\" : \"locator.wiki\",\r\n    \"Value\" : {\r\n        \"_t\" : \"UnManagementLibrary.Models.WikiLocator+CategoryData\",\r\n        \"CategoryId\" : NumberLong(10),\r\n        \"CategoryName\" : \"Europe\"\r\n    },\r\n    \"UpdateDt\" : ISODate(\"2023-07-18T05:20:30.877+0000\")\r\n}\r\n```\r\n\r\nto avoid problem (exeption).",
    "head_branch": "discriminator/defaultvalue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72c18912b45d36a0658",
    "number": 1136,
    "body": null,
    "head_branch": "csharp4360",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4360: Add log messages to SDAM spec (#1136)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f72d18912b45d36a0659",
    "number": 1135,
    "body": "Bumps [MongoDB.Driver](https://github.com/mongodb/mongo-csharp-driver) from 0.0.0.0 to 2.19.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mongodb/mongo-csharp-driver/releases\">MongoDB.Driver's releases</a>.</em></p>\n<blockquote>\n<h2>NET Driver Version 2.19.0 Release Notes</h2>\n<h1>.NET Driver Version 2.19.0 Release Notes</h1>\n<p>This is the general availability release for the 2.19.0 version of the driver.</p>\n<p>The main new features in 2.19.0 include:</p>\n<ul>\n<li>Atlas Search builders</li>\n<li>Default LinqProvider changed to LINQ3</li>\n<li>ObjectSerializer allowed types configuration</li>\n<li>Bucket and BucketAuto stages support in LINQ3</li>\n<li>Support Azure VM-assigned Managed Identity for Automatic KMS Credentials</li>\n<li>Native support for AWS IAM Roles</li>\n</ul>\n<p>This version addresses <a href=\"https://www.cve.org/CVERecord?id=CVE-2022-48282\">CVE-2022-48282</a>.</p>\n<h3>ObjectSerializer allowed types configuration</h3>\n<p>The <code>ObjectSerializer</code> has been changed to only allow deserialization of types that are considered safe.\nWhat types are considered safe is determined by a new configurable <code>AllowedTypes</code> function (of type <code>Func&lt;Type, bool&gt;</code>).\nThe default <code>AllowedTypes</code> function is <code>ObjectSerializer.DefaultAllowedTypes</code> which returns true for a number of well-known framework types that we have deemed safe.\nA typical example might be to allow all the default allowed types as well as your own types. This could be accomplished as follows:</p>\n<pre><code>var objectSerializer = new ObjectSerializer(type =&gt; ObjectSerializer.DefaultAllowedTypes(type) || type.FullName.StartsWith(&quot;MyNamespace&quot;));\nBsonSerializer.RegisterSerializer(objectSerializer);\n</code></pre>\n<p>More information about the <code>ObjectSerializer</code> is available in <a href=\"https://www.mongodb.com/docs/drivers/csharp/v2.19/faq\">our FAQ</a>.</p>\n<h3>Default LinqProvider changed to LINQ3</h3>\n<p>Default LinqProvider has been changed to LINQ3.\nLinqProvider can be changed back to LINQ2 in the following way:</p>\n<pre><code>var connectionString = &quot;mongodb://localhost&quot;;\nvar clientSettings = MongoClientSettings.FromConnectionString(connectionString);\nclientSettings.LinqProvider = LinqProvider.V2;\nvar client = new MongoClient(clientSettings);\n</code></pre>\n<p>If you encounter a bug in LINQ3 provider, please report it in <a href=\"https://jira.mongodb.org/projects/CSHARP/issues\">CSHARP JIRA project</a>.</p>\n<p>An online version of these release notes is available <a href=\"https://github.com/mongodb/mongo-csharp-driver/blob/master/Release%20Notes/Release%20Notes%20v2.19.0.md\">here</a>.</p>\n<p>The full list of issues resolved in this release is available at <a href=\"https://jira.mongodb.org/issues/?jql=project%20%3D%20CSHARP%20AND%20fixVersion%20%3D%202.19.0%20ORDER%20BY%20key%20ASC\">CSHARP JIRA project</a>.</p>\n<p>Documentation on the .NET driver can be found <a href=\"https://www.mongodb.com/docs/drivers/csharp/v2.19/\">here</a>.</p>\n<h1>.NET Driver Version 2.18.0 Release Notes</h1>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/mongodb/mongo-csharp-driver/commits/v2.19.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=MongoDB.Driver&package-manager=nuget&previous-version=0.0.0.0&new-version=2.19.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/mongodb/mongo-csharp-driver/network/alerts).\n\n</details>",
    "head_branch": "dependabot/nuget/tests/SmokeTests/MongoDB.Driver.SmokeTests.Sdk/MongoDB.Driver-2.19.0",
    "is_a_fork": false,
    "comments": [
      "This automated PR is incorrect as we use version 0.0.0.0 to indicate the locally built assemblies.",
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.",
      "@dependabot ignore this major version",
      "OK, I won't notify you about version 2.x.x again, unless you re-open this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72e18912b45d36a065a",
    "number": 1134,
    "body": null,
    "head_branch": "csharp4708",
    "is_a_fork": true,
    "comments": [
      "I've rebased on master and pushed a new commit. This work is now ready to review."
    ],
    "commit_messages": [
      "CSHARP-4708: Support Expression.MakeIndex in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f72f18912b45d36a065b",
    "number": 1133,
    "body": "Using `python` worked until some OS variants started to map `python` to `python2` but others `python3`. The standard way to work around this is to use `python3` where you require `python3`, but some variants (cough cough Windows) don't map `python3`.\r\n\r\nI tried the alternate approach of doing `python3` detection as many of our OCSP and other tests do. Unfortunately these aliases are evaluated before `drivers-evergreen-tools` is sourced and thus our `python3` detection scripts aren't available yet.\r\n\r\nI then tried switching to `jq -sRjr @uri` for `urlencode`, which worked great except some MacOS machines don't have `jq` installed and the EG user doesn't have sufficient privileges to run `brew install jq`.\r\n\r\nThis lead me to take the same approach as `mongo-python-driver` to ensure that `python3` is used for these build scripts - which is to include the `python3` path as an environment variable configured for each OS variant.\r\n\r\nComplete run of all variants can be found here:\r\nhttps://spruce.mongodb.com/version/64a759231e2d1741743513aa/tasks",
    "head_branch": "csharp4626-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4626: Fix urlencode on MacOS variants. (#1133)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73018912b45d36a065c",
    "number": 1132,
    "body": null,
    "head_branch": "csharp4520",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4520: Add databaseName property to Command Events (#1132)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f73218912b45d36a065d",
    "number": 1131,
    "body": null,
    "head_branch": "csharp4666-alt",
    "is_a_fork": true,
    "comments": [
      "Hey! What is considered an \"older server\"? Like version-wise? Anything prior to 4.4?\r\n\r\nThanks in advance 😊 ",
      "> Hey! What is considered an \"older server\"? Like version-wise? Anything prior to 4.4?\r\n> \r\n> Thanks in advance 😊\r\n\r\nYes, anything prior to 4.4, which is the server version that added support for aggregation/$project style projections."
    ],
    "commit_messages": [
      "CSHARP-4666: Support projecting a single field with Find on servers prior to 4.4."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73318912b45d36a065e",
    "number": 1130,
    "body": null,
    "head_branch": "csharp4423",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4423: LinqProvider.V3 Odata filter problem with id filter (#1130)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73418912b45d36a065f",
    "number": 1129,
    "body": null,
    "head_branch": "csharp4666",
    "is_a_fork": true,
    "comments": [
      "Closing in favor of alternate approach in https://github.com/mongodb/mongo-csharp-driver/pull/1131"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73518912b45d36a0660",
    "number": 1128,
    "body": null,
    "head_branch": "csharp4702",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4702: Recognize all Contains methods that are equivalent to Enumerable.Contains."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73618912b45d36a0661",
    "number": 1127,
    "body": null,
    "head_branch": "csharp4700",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4700: Fix issue with GroupBy followed by OrderBy."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73718912b45d36a0662",
    "number": 1126,
    "body": "Adds implementation for the scoreDetails feature",
    "head_branch": "CSHARP-4703-scoreDetails",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4703: Add implementation for ScoreDetails\n\nCo-authored-by: Samir Boulema <samir@auto.nl>\r\nCo-authored-by: BorisDog <BorisDog@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f73818912b45d36a0663",
    "number": 1125,
    "body": null,
    "head_branch": "csharp4697",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4697: Expression not supported: -i.A (#1125)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73918912b45d36a0664",
    "number": 1124,
    "body": null,
    "head_branch": "csharp4696",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4696: Expression not supported: Math.Round (#1124)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f73a18912b45d36a0665",
    "number": 1123,
    "body": null,
    "head_branch": "scharp4695",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4695: Expression not supported: string.Concat (#1123)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73b18912b45d36a0666",
    "number": 1122,
    "body": null,
    "head_branch": "csharp4694",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f73c18912b45d36a0667",
    "number": 1121,
    "body": null,
    "head_branch": "csharp4690",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4690: InvalidCastException on converting underlying type to enum (#1121)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f73d18912b45d36a0668",
    "number": 1120,
    "body": null,
    "head_branch": "csharp4698",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4698: Expression not supported: Regex.IsMatch (#1120)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f73e18912b45d36a0669",
    "number": 1119,
    "body": "Tested manually.\r\nE2E testing will be done in [DRIVERS-2630](https://jira.mongodb.org/browse/DRIVERS-2630)\r\n",
    "head_branch": "csharp4660",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4660: Add search index management helpers (#1119)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f73f18912b45d36a066a",
    "number": 1118,
    "body": null,
    "head_branch": "csharp4691",
    "is_a_fork": true,
    "comments": [
      "Added a second commit supporting GetType equals and is in aggregation expressions as well as filters."
    ],
    "commit_messages": [
      "CSHARP-4691: Support GetType comparison in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74018912b45d36a066b",
    "number": 1117,
    "body": null,
    "head_branch": "csharp4183",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4183: Convert APM spec tests to unified test format (#1117)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74118912b45d36a066c",
    "number": 1116,
    "body": null,
    "head_branch": "csharp4688",
    "is_a_fork": true,
    "comments": [
      "This is an initial POC for just Any and First (and async versions).\r\n\r\nIf you approve of the approach we can flesh it out for the rest of the affected methods."
    ],
    "commit_messages": [
      "CSHARP-4688: Calling queryable.First when queryable is of type IMongoQueryable<T> doesn't add { $limit : 1 } stage to pipeline."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f74218912b45d36a066d",
    "number": 1115,
    "body": null,
    "head_branch": "csharp4684",
    "is_a_fork": true,
    "comments": [
      "Closing this PR because we are backlogging the JIRA ticket."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74418912b45d36a066e",
    "number": 1114,
    "body": null,
    "head_branch": "csharp4683",
    "is_a_fork": true,
    "comments": [
      "Renamed:\r\n\r\nLinq2ImplementationTests => Linq2Implementation\r\nLinq3ImplementationTests => Linq3Implementation\r\n\r\nand\r\n\r\nLinq2ImplementationTestsOnLinq3 => Linq3ImplementationWithLinq2Tests\r\n\r\nThe prefix on the last one is more properly `Linq3` because these tests are testing LINQ3 (not LINQ2)."
    ],
    "commit_messages": [
      "CSHARP-4683: Rename Linq3ImplementationTests folder to Linq3Implementation."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74518912b45d36a066f",
    "number": 1113,
    "body": "There are multiple reasons why you would prefer to have types like `MongoUrl` being decorated with a custom `TypeConverter`, but for me the most pressing one is, that it allows typed configuration to use properties to be of the the type `MongoUrl`.\r\n\r\n## Example\r\nCreationg a web app:\r\n\r\n``` C#\r\n var builder = WebApplication.CreateBuilder(args);\r\n var settings = new MyAppsettings();\r\nbuilder.Configuration.Bind(settings);\r\n```\r\n\r\nWith some typed app settings,\r\n\r\n``` C#\r\nsealed class MyAppSettings\r\n{\r\n    public MongoUrl MongoConnection { get; init; }\r\n    public Uri SomeEndpoint { get; init; }\r\n    // ...\r\n}\r\n```\r\n",
    "head_branch": "mongurl-type-converter",
    "is_a_fork": true,
    "comments": [
      "@Corniel  thank you for your PR.\r\nPlease submit a Jira ticket describing the use case for this functionality, it would be helpful to have a sample of such typed configuration.\r\n[How to submit a ticket](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md)\r\n",
      "> @Corniel thank you for your PR. Please submit a Jira ticket describing the use case for this functionality, it would be helpful to have a sample of such typed configuration. [How to submit a ticket](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md)\r\n\r\nSee: [CSHARP-4689](https://jira.mongodb.org/browse/CSHARP-4689)\r\n\r\nExample added to PR.\r\n\r\n"
    ],
    "commit_messages": [
      "CSHARP-4689: MongoUrl should have a registered TypeConverter\n\nCo-authored-by: Corniel Nobel <mail@corniel.nl>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f74618912b45d36a0670",
    "number": 1112,
    "body": null,
    "head_branch": "release-notes-2.20.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for v2.20.0 (#1112)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74718912b45d36a0671",
    "number": 1111,
    "body": null,
    "head_branch": "csharp4678",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4678: Additional collections are created in QE v2 on older servers (#1111)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f74818912b45d36a0672",
    "number": 1110,
    "body": "[Failure](https://evergreen.mongodb.com/task/dot_net_driver_load_balancer_tests__version~rapid_os~ubuntu_1804_topology~sharded_cluster_auth~noauth_ssl~nossl_test_load_balancer_netstandard21_32f1d3069af21a68de56f88fe43dc6c36f12dd28_23_06_15_15_18_44)",
    "head_branch": "csharp4677",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4677: Server selection logging tests fail on Load Balancer (#1110)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74918912b45d36a0673",
    "number": 1109,
    "body": null,
    "head_branch": "csharp4654",
    "is_a_fork": true,
    "comments": [
      "> failures\r\n\r\nThe test were failing because of [CSHARP-4678](https://jira.mongodb.org/browse/CSHARP-4678). The recent few failures are unrelated."
    ],
    "commit_messages": [
      "CSHARP-4654: Enable QEv2 tests on Serverless (#1109)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74a18912b45d36a0674",
    "number": 1108,
    "body": "The current MongoDB.Driver causes a crash when used on big-endian systems. This error stems from the use of BitConverter function used in method definitions across the code.\r\n\r\nThe BitConverter class does conversions according to the endianess of the system it is operating on which causes incorrect reads of little-endian packets sent by the server.\r\n\r\nBitConverter can be replaced with BinaryPrimitives provided by C# but due to their lack of support for netstandard2.0 and to maintain backcompatibility implemented a PacketBitConverter under MongoDB.Bson.IO namespace.",
    "head_branch": "BigEndianFix",
    "is_a_fork": true,
    "comments": [
      "@rstam I have made the requested changes, is there anything else you expect me to change?\r\nIf not can this be merged?\r\n\r\nThank you.",
      "Squashed, rebased and pushed to master.\r\n\r\nThanks for the contribution!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74b18912b45d36a0675",
    "number": 1107,
    "body": "The current MongoDB.Driver causes a crash when used on big-endian systems. This error stems from the use of BitConverter function used in method definitions across the code.\r\n\r\nThe BitConverter class does conversions according to the endianess of the system it is operating on which causes incorrect reads of little-endian packets sent by the server.\r\n\r\nBitConverter can be replaced with BinaryPrimitives provided by C# but due to their lack of support for netstandard2.0 and to maintain backcompatibility implemented a PacketBitConverter under MongoDB.Bson.IO namespace.\r\n\r\nWith the changes the following error is fixed:\r\n```\r\nUnhandled Exception:\r\nSystem.TimeoutException: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : \"1\", Type : \"Unknown\", State : \"Disconnected\", Servers : [{ ServerId: \"{ ClusterId : 1, EndPoint : \"127.0.0.1:27017\" }\", EndPoint: \"127.0.0.1:27017\", ReasonChanged: \"Heartbeat\", State: \"Disconnected\", ServerVersion: , TopologyVersion: , Type: \"Unknown\", HeartbeatException: \"MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.\r\n ---> MongoDB.Driver.MongoConnectionException: An exception occurred while receiving a message from the server.\r\n ---> System.FormatException: The size of the message is invalid.\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.EnsureMessageSizeIsValid(Int32 messageSize)\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(Int32 responseTo, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location ---\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.Dropbox.RemoveMessage(Int32 responseTo)\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveBuffer(Int32 responseTo, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.ReceiveMessage(Int32 responseTo, IMessageEncoderSelector encoderSelector, MessageEncoderSettings messageEncoderSettings, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.WireProtocol.CommandUsingQueryMessageWireProtocol`1[[MongoDB.Bson.BsonDocument, MongoDB.Bson, Version=2.19.2.0, Culture=neutral, PublicKeyToken=null]].Execute(IConnection connection, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.WireProtocol.CommandWireProtocol`1[[MongoDB.Bson.BsonDocument, MongoDB.Bson, Version=2.19.2.0, Culture=neutral, PublicKeyToken=null]].Execute(IConnection connection, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Connections.HelloHelper.GetResult(IConnection connection, CommandWireProtocol`1 helloProtocol, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Connections.ConnectionInitializer.SendHello(IConnection connection, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)\", LastHeartbeatTimestamp: \"2023-06-12T09:11:05.4264866Z\", LastUpdateTimestamp: \"2023-06-12T09:11:05.4264870Z\" }] }.\r\n   at MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)\r\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)\r\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChanged(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Clusters.Cluster.SelectServer(IServerSelector selector, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterServerSelection(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoClient.AreSessionsSupported(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoClient.StartImplicitSession(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.OperationExecutor.StartImplicitSession(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1[[MongoDB.Bson.BsonDocument, MongoDB.Bson, Version=2.19.2.0, Culture=neutral, PublicKeyToken=null]].UsingImplicitSession[BulkWriteResult`1](Func`2 func, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1[[MongoDB.Bson.BsonDocument, MongoDB.Bson, Version=2.19.2.0, Culture=neutral, PublicKeyToken=null]].BulkWrite(IEnumerable`1 requests, BulkWriteOptions options, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionBase`1.<>c__DisplayClass75_0[[MongoDB.Bson.BsonDocument, MongoDB.Bson, Version=2.19.2.0, Culture=neutral, PublicKeyToken=null]].<InsertMany>b__0(IEnumerable`1 requests, BulkWriteOptions bulkWriteOptions)\r\n   at MongoDB.Driver.MongoCollectionBase`1[[MongoDB.Bson.BsonDocument, MongoDB.Bson, Version=2.19.2.0, Culture=neutral, PublicKeyToken=null]].InsertMany(IEnumerable`1 documents, InsertManyOptions options, Action`2 bulkWrite)\r\n   at MongoDB.Driver.MongoCollectionBase`1[[MongoDB.Bson.BsonDocument, MongoDB.Bson, Version=2.19.2.0, Culture=neutral, PublicKeyToken=null]].InsertMany(IEnumerable`1 documents, InsertManyOptions options, CancellationToken cancellationToken)\r\n```",
    "head_branch": "BigEndianFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74c18912b45d36a0676",
    "number": 1106,
    "body": "Fixed the nuspec file that I borked.",
    "head_branch": "csharp4667",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4667: Updated the nuspec reference to LICENSE.md. (#1106)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f74d18912b45d36a0677",
    "number": 1105,
    "body": null,
    "head_branch": "csharp4665",
    "is_a_fork": true,
    "comments": [
      "I've refactored the tests to not assume the server returns documents in insertion order.\r\n\r\n@JamesKovacs I would like to know whether this was necessary or not?",
      "Rebased on master (after pushing CSHARP-4683 to master). Should resolve the path too long on Evergreen issue."
    ],
    "commit_messages": [
      "CSHARP-4665: Add LINQ3 support for IsNullOrWhiteSpace."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f74f18912b45d36a0678",
    "number": 1104,
    "body": null,
    "head_branch": "csharp4644",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4644: Flaky Open_should_create_authenticators_only_once (#1104)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75018912b45d36a0679",
    "number": 1103,
    "body": null,
    "head_branch": "csharp4347",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4347: Add log messages to Server selection spec (#1103)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f75118912b45d36a067a",
    "number": 1102,
    "body": "Update libmongocrypt to 1.8.0",
    "head_branch": "csharp4647",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4647: Remove \"Public Technical Preview\" from Queryable Encryption Equality API (#1102)\n\nCSHARP-4647: Remove \"Public Technical Preview\" from Queryable Encryption Equality API\r\n- update libmongocrypt to 1.8.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f75218912b45d36a067b",
    "number": 1101,
    "body": null,
    "head_branch": "csharp4653",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4653: Implement Convert translator for subclasses. (#1101)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75318912b45d36a067c",
    "number": 1100,
    "body": null,
    "head_branch": "Dadsgoosen-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75418912b45d36a067d",
    "number": 1099,
    "body": null,
    "head_branch": "csharp4357",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4357: Error if RewrapManyDataKey is called with masterKey and without provider (#1099)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75518912b45d36a067e",
    "number": 1098,
    "body": null,
    "head_branch": "csharp4659",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4659: Improve BsonClassMapSerializer to support stuctures (#1098)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f75618912b45d36a067f",
    "number": 1097,
    "body": null,
    "head_branch": "DRIVERS-2328",
    "is_a_fork": true,
    "comments": [
      "Closing as stale."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75718912b45d36a0680",
    "number": 1096,
    "body": null,
    "head_branch": "csharp4662",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75818912b45d36a0681",
    "number": 1095,
    "body": null,
    "head_branch": "csharp4504",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4504: Do not perform server selection to determine sessions support (#1095)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f75918912b45d36a0682",
    "number": 1094,
    "body": null,
    "head_branch": "csharp4632",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4632: Consolidate new and init expression translation (#1094)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75a18912b45d36a0683",
    "number": 1093,
    "body": null,
    "head_branch": "csharp4656-fixtest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4656: Fix failing test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75b18912b45d36a0684",
    "number": 1092,
    "body": null,
    "head_branch": "csharp4550-struct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4550: Make MemberInitExpression work with struct also as long as suitable constructor exists."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75c18912b45d36a0685",
    "number": 1091,
    "body": null,
    "head_branch": "csharp4658",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4658: NullReferenceException when using certain projections."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75d18912b45d36a0686",
    "number": 1090,
    "body": null,
    "head_branch": "csharp4631",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4631: Test against MongoDB 7.0 (#1090)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75e18912b45d36a0687",
    "number": 1089,
    "body": "Please note this PR is to be followed by another, that will actually remove all code related to new expression translation, by calling init expression translator.",
    "head_branch": "csharp4550",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4550: NewExpression and MemberInitExpression behaviour differs (#1089)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f75f18912b45d36a0688",
    "number": 1088,
    "body": null,
    "head_branch": "releasenotes-2.19.2",
    "is_a_fork": true,
    "comments": [
      "Hi there, we're looking forward to this release. Is there any ETA for it? Thank you"
    ],
    "commit_messages": [
      "Release notes for 2.19.2."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76118912b45d36a0689",
    "number": 1087,
    "body": null,
    "head_branch": "csharp4656",
    "is_a_fork": true,
    "comments": [
      "> There is still one call to:\r\n> \r\n> ```\r\n> new FindExpressionProjectionDefinition\r\n> ```\r\n> \r\n> in `IFindFluentExtensions.cs`.\r\n> \r\n> I think it can be replaced with a call to:\r\n> \r\n> ```\r\n> new ExpressionProjectionDefinition\r\n> ```\r\n> \r\n> That would mean that the `FindExpressionProjectionDefinition` class is no longer used at all (and that's a good thing).\r\n> \r\n> We can't really remove the `FindExpressionProjectionDefinition` class because it is `public` and we don't know if any users is creating it directly.\r\n\r\n@rstam @sanych-sun Prior to 2.19.2, (2.19.1) this was valid below, where `Projection = Builders<TDocumentEntity>.Projection.Expression` returned _public_ `FindExpressionProjectionDefinition` but now returns _sealed_ `ExpressionProjectionDefinition`. What's your suggestion on how I can continue to Cast/Select/Project this. This is used within a test suite and I know there are a lot of missing pieces below, but I wanted to get your shot from the hip opinion? Much appreciated, no matter how brutal it is :D! This does seem to be addressed in one case https://github.com/mongodb/mongo-csharp-driver/pull/1146\r\n\r\n```csharp\r\npublic void ApplyProjections<TDocumentEntity, TSelectEntity>()\r\n{\r\n    Expression<Func<TDocumentEntity, TSelectEntity>> select = null;\r\n    var findOpts = new FindOptions<TDocumentEntity, TSelectEntity>\r\n    {\r\n        Projection = Builders<TDocumentEntity>.Projection.Expression(select)\r\n    };\r\n    var projectedData = GetData<TDocumentEntity, TSelectEntity, TSelectEntity>(findOpts.Projection);\r\n}\r\n\r\npublic async Task<List<TReturnEntity>> GetData<TDocumentEntity, TSelectEntity, TReturnEntity>(\r\n    ProjectionDefinition<TDocumentEntity, TSelectEntity> select)\r\n{\r\n    var queryable = _instance.CollectionDocuments.AsQueryable();\r\n    var additionalExp = GetSomeExpression();\r\n    queryable = queryable.Where(additionalExp);\r\n    var expSelect = select as FindExpressionProjectionDefinition<TDocumentEntity, TSelectEntity>;\r\n    return queryable.Select(expSelect.Expression).Cast<TReturnEntity>().ToList();\r\n}\r\n```",
      "Bypassing with some temporary reflection as noted in [CSHARP-4860](https://jira.mongodb.org/browse/CSHARP-4860). "
    ],
    "commit_messages": [
      "CSHARP-4656 Simplify A : \"$A\" to A : 1 only on find (#1087)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f76218912b45d36a068a",
    "number": 1086,
    "body": null,
    "head_branch": "csharp4567",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4567: Support implicit conversion when lambda body returns a type assignable to the lambda return type."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f76318912b45d36a068b",
    "number": 1085,
    "body": null,
    "head_branch": "csharp4646",
    "is_a_fork": true,
    "comments": [
      "The following test is failing on MongoDB 3.6:\r\n\r\n`MongoDB.Driver.Tests.Jira.CSharp624.CSharp4646Tests.MongoDB.Driver.Tests.Jira.CSharp624.CSharp4646Tests.Watch_database_filtering_on_collection_name`\r\n\r\nWe also have some other variant failures, which should be investigated.",
      "> The following test is failing on MongoDB 3.6:\r\n> \r\n> `MongoDB.Driver.Tests.Jira.CSharp624.CSharp4646Tests.MongoDB.Driver.Tests.Jira.CSharp624.CSharp4646Tests.Watch_database_filtering_on_collection_name`\r\n> \r\n> We also have some other variant failures, which should be investigated.\r\n\r\n MongoDB.Driver.MongoCommandException : Command aggregate failed: cannot open $changeStream for non-existent database: test.\r\n\r\nLooks like 3.6 requires that the database exist before you can watch it?"
    ],
    "commit_messages": [
      "CSHARP-4646: Support namespace queries in ChangeStreamDocument pipelines."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f76418912b45d36a068c",
    "number": 1084,
    "body": null,
    "head_branch": "csharp4652",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4652: TagSet.Equals should ignore tags order (#1084)\n\n* CSHARP-4652: TagSet.Equals should ignore tags order"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f76518912b45d36a068d",
    "number": 1083,
    "body": null,
    "head_branch": "csharp4651",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4651: Fix bug in PartialEvaluator."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76618912b45d36a068e",
    "number": 1082,
    "body": null,
    "head_branch": "csharp4627",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4627: Ignore UnionWith tests on servers prior to 4.4 (#1082)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76718912b45d36a068f",
    "number": 1081,
    "body": null,
    "head_branch": "csharp4638",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4638: AWS Lambda metadata detection logic is too permissive (#1081)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76818912b45d36a0690",
    "number": 1080,
    "body": null,
    "head_branch": "csharp4634",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4634: Error in LINQ3 provider when custom ObjectSerializer is used (#1080)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f76918912b45d36a0691",
    "number": 1079,
    "body": null,
    "head_branch": "csharp4648",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4648: Standardize handling of decimal vs Decimal128."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76a18912b45d36a0692",
    "number": 1078,
    "body": null,
    "head_branch": "csharp4627",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4627: Support Union via $unionWith in LINQ3 (#1078)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76b18912b45d36a0693",
    "number": 1077,
    "body": null,
    "head_branch": "csharp4496",
    "is_a_fork": true,
    "comments": [
      "PR replaced by PR for CSHARP-4648."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76c18912b45d36a0694",
    "number": 1076,
    "body": "I've added a test that verifies bug I've opened in jira [CSHARP-4637](https://jira.mongodb.org/projects/CSHARP/issues/CSHARP-4637). Actually the bug was introduced in commit 9bbca930bc062c36f806a6d17dbf3a40d97ff831 when base serialization for decimal whas changed to Decimal128 actually breaking serialization as showed in the test.\r\n\r\nAlso I think that tests for serialization / deserialization are not entirely correct, you should verify that the rehydrated object in memory is the same of the original object.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for providing this test.\r\n\r\nWhile your test mentions CSHARP-4637 I believe this was fixed by CSHARP-4648."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76d18912b45d36a0695",
    "number": 1075,
    "body": null,
    "head_branch": "csharp4616",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4616: OfType should match derived types (#1075)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76e18912b45d36a0696",
    "number": 1074,
    "body": null,
    "head_branch": "csharp4622",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4622: Process constant expression to a filter query (#1074)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f76f18912b45d36a0697",
    "number": 1073,
    "body": null,
    "head_branch": "csharp-4620-simplify-transactions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4620: Simplify transaction examples (#1073)\n\n* fix typo\r\n\r\n* simplify transactions"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77118912b45d36a0698",
    "number": 1072,
    "body": null,
    "head_branch": "csharp4493",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4493: Fix incorrect flattening of $expr in $and operator (#1072)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77218912b45d36a0699",
    "number": 1071,
    "body": null,
    "head_branch": "csharp4629",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4629: Use max wire version from a connection level instead of server. (#1071)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77318912b45d36a069a",
    "number": 1070,
    "body": null,
    "head_branch": "csharp4626",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77418912b45d36a069b",
    "number": 1069,
    "body": null,
    "head_branch": "csharp4624",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77518912b45d36a069c",
    "number": 1068,
    "body": null,
    "head_branch": "csharp4490_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix rapid envs. (#1068)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77618912b45d36a069d",
    "number": 1067,
    "body": null,
    "head_branch": "csharp4492",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4492: Drivers should not create the ECC collection in v2 of queryable encryption. (#1067)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f77718912b45d36a069e",
    "number": 1066,
    "body": null,
    "head_branch": "csharp4353_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4353: Follow-up changes. (#1066)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77818912b45d36a069f",
    "number": 1065,
    "body": null,
    "head_branch": "csharp4609",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4609: Replace DowncastingSerializer with more permissive ConvertIfPossibleSerializer when rendering values associated with a FieldDefnition."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f77918912b45d36a06a0",
    "number": 1064,
    "body": "`GridFSBucket.Find` was failing because we always included `noCursorTimeout` even when not specified. `noCursorTimeout` is not supported with Stable API. That change was simple (removing the defaulting to false), but we had no integration tests around GridFS. Additionally while we test Stable API, we don't test it in strict mode nor do we have a mechanism to do so. I added `Feature.StableApi` so that I could write a strict mode Stable API test. Feedback appreciated especially if you can think of a better way to test it.",
    "head_branch": "csharp4595",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4595: Support GridFS with Stable API. (#1064)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f77a18912b45d36a06a1",
    "number": 1063,
    "body": null,
    "head_branch": "csharp4582",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4582: Fix sandcastle warnings during docs building (#1063)\n\n* CSHARP-4582: Fix sandcastle warnings during docs building"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f77b18912b45d36a06a2",
    "number": 1062,
    "body": "This is a test... This is only a test...",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Comment test...",
      "Testing again.",
      "Testing yet again...",
      "Closing PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77c18912b45d36a06a3",
    "number": 1061,
    "body": "# Summary\r\n- Reload expansions before deleting Azure resources\r\n\r\nVerified with this patch: https://spruce.mongodb.com/version/64345699d1fe076755db75cc/\r\n\r\n# Background & Motivation\r\n\r\nThis is an improvement to the `testazurekms_task_group` added as part of DRIVERS-2411. https://github.com/mongodb/mongo-c-driver/pull/1234 explains this improvement.\r\n",
    "head_branch": "CSHARP-4605",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4605 Clean up Azure resources on task failure (#1061)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77d18912b45d36a06a4",
    "number": 1060,
    "body": null,
    "head_branch": "csharp4607",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4607: Support $all filters with more Contains methods."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77e18912b45d36a06a5",
    "number": 1059,
    "body": null,
    "head_branch": "csharp4596",
    "is_a_fork": true,
    "comments": [
      "`MongoDB.Driver.Tests.Linq.Linq3ImplementationTests.Jira.CSharp4596Tests.MongoDB.Driver.Tests.Linq.Linq3ImplementationTests.Jira.CSharp4596Tests.Subtract_DateTimes_should_work_linqProvider__V3_` is failing on MongoDB 4.4 and earlier.\r\n`Command aggregate failed: Invalid $project :: caused by :: Unrecognized expression '$dateDiff'.`",
      "This work has been incorporated into the work for CSHARP-4566, so this PR is now moot."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f77f18912b45d36a06a6",
    "number": 1058,
    "body": null,
    "head_branch": "csharp4541",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4541: Update libmongocrypt payloads to new QE protocol (#1058)\n\n* CSHARP-4541: Update libmongocrypt payloads to new QE protocol"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78118912b45d36a06a7",
    "number": 1057,
    "body": "Added an upgrade tip to fix error with BsonDateTime.\r\n\r\nWhen upgrading from v2.18 an error occurs if a filter is using `new BsonDateTime()` with a date as parameter. Example:\r\n```\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var mongo = new MongoClient(\"mongodb://localhost:27017/test\");\r\n            var db = mongo.GetDatabase(\"test\");\r\n\r\n            db.DropCollection(\"employee\");\r\n            db.CreateCollection(\"employee\");\r\n\r\n            var collection = db.GetCollection<Employee>(\"employee\");\r\n\r\n            var today = DateTime.Now;\r\n            \r\n            collection.InsertOne(new Employee { CreatedAt = today });\r\n            \r\n            var filter = Builders<Employee>.Filter.Eq(x => x.CreatedAt, new BsonDateTime(today));            \r\n\r\n            collection.Find(filter).ToList();\r\n        }\r\n    }\r\n\r\n    public class Employee\r\n    {\r\n        [BsonId]\r\n        [BsonRepresentation(BsonType.ObjectId)]\r\n        public string Id { get; set; }\r\n        \r\n        public DateTime CreatedAt { get; set; }        \r\n    }\r\n```\r\n\r\nIn the last version this throws `MongoDB.Driver.Linq.ExpressionNotSupportedException`. To use version v2.19 filter have to be changed to:\r\n`var filter = Builders<Employee>.Filter.Eq(x => x.CreatedAt, today);`\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "When letting the compiler infer the type of the field you must take care that the value provided (which is used to infer the field type) actually matches the field type. In this example the field type was DateTime but the compiler inferred BsonDateTime for TField, which is incorrect. When the compiler infers the wrong field type the results are undefined.\r\n\r\nLINQ3 is more careful about ensuring the value provided is compatible with the field type, which is why the query was successful in LINQ2 but failed in LINQ3."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78218912b45d36a06a8",
    "number": 1056,
    "body": null,
    "head_branch": "csharp4589",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78318912b45d36a06a9",
    "number": 1055,
    "body": null,
    "head_branch": "csharp4592",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4592: Support indexer for IDictionary (as well as Dictionary)."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78418912b45d36a06aa",
    "number": 1054,
    "body": null,
    "head_branch": "csharp4353",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4353: Collect FaaS platform information as part of the environment information in driver handshake metadata. (#1054)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78518912b45d36a06ab",
    "number": 1053,
    "body": null,
    "head_branch": "csharp4590",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4590: Update doc comments to reflect that LINQ3 is now the default."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f78618912b45d36a06ac",
    "number": 1052,
    "body": null,
    "head_branch": "csharp4586",
    "is_a_fork": true,
    "comments": [
      "I missed that one failing test because it was in another project!"
    ],
    "commit_messages": [
      "CSHARP-4586: Map constructor in MemberInit and simplify $project for simple field inclusion."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78718912b45d36a06ad",
    "number": 1051,
    "body": "Although CSHARP-4417 changes the client and server connectionIds to use `int64`, the server description update code path was not tested. The update code path is where the server response is used update the `ConnectionId.LongServerValue`. `HelloResult.ConnectionIdServerValue` still parsed `connectionId` in the response as an `int32`. This has been fixed and additional tests added.\r\n\r\nAlthough `HelloResult` is public, it is in Core. We renamed this class during the offensive language removal initiative and no one complained. Thus changing the data type of `HelloResult.ConnectionIdServerValue` from `int?` to `long?` shouldn't be problematic.",
    "head_branch": "csharp4483",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4483: connectionId returned in heartbeats may be int32, double, or int64. (#1051)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f78818912b45d36a06ae",
    "number": 1050,
    "body": null,
    "head_branch": "release_notes_2_19",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78918912b45d36a06af",
    "number": 1049,
    "body": null,
    "head_branch": "csharp4551",
    "is_a_fork": true,
    "comments": [
      "> LGTM assuming we don't need to consider big-endian machines.\r\n\r\nI think, we can add big-endian support later if we have request for it"
    ],
    "commit_messages": [
      "CSHARP-4551: Avoid using PID when generating ObjectIds. (#1049)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f78d18912b45d36a06b0",
    "number": 1048,
    "body": "I've only copied the generated api changes for 2.19.1 release into 2.19 folder",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add v2.19.1 docs. (#1048)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78e18912b45d36a06b1",
    "number": 1047,
    "body": null,
    "head_branch": "csharp4490",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix wildcardProjection tests. (#1047)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f78f18912b45d36a06b2",
    "number": 1046,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.19.1. (#1046)\n\n* Release notes for 2.19.1.\r\n\r\n* Make links embedded."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79018912b45d36a06b3",
    "number": 1045,
    "body": null,
    "head_branch": "csharp4576",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4576: Atlas search: support score in Compound operator (#1045)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f79118912b45d36a06b4",
    "number": 1044,
    "body": null,
    "head_branch": "csharp4575",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4575: Fix uint and add DateTimeOffset support in Search.Range (#1044)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79318912b45d36a06b5",
    "number": 1043,
    "body": null,
    "head_branch": "csharp4528",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4528: Extend Search.Equals to support number and date (#1043)\n\n* CSHARP-4528: Extend Search.Equals to support number and date"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f79418912b45d36a06b6",
    "number": 1042,
    "body": null,
    "head_branch": "csharp4562",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4562: Use PartialEvaluator when translating an Expression to a field."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79518912b45d36a06b7",
    "number": 1041,
    "body": null,
    "head_branch": "csharp4557",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79618912b45d36a06b8",
    "number": 1040,
    "body": null,
    "head_branch": "csharp4549",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79718912b45d36a06b9",
    "number": 1039,
    "body": null,
    "head_branch": "csharp4564",
    "is_a_fork": true,
    "comments": [
      "A good way to review this is to compare the existing TupleSerializer to the new ValueTupleSerializer and the same for the tests.\r\n\r\nSince ValueTupleSerializer is a clone of TupleSerializer I've made the smallest changes possible (so no formatting improvements)."
    ],
    "commit_messages": [
      "CSHARP-4564: Implement ValueSerializers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f79818912b45d36a06ba",
    "number": 1038,
    "body": null,
    "head_branch": "csharp4554",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4554: Update fle2-* tests to match name requirements in SERVER-74069. (#1038)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79918912b45d36a06bb",
    "number": 1037,
    "body": null,
    "head_branch": "csharp4552",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4552: Fix speculative authentication. (#1037)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79a18912b45d36a06bc",
    "number": 1036,
    "body": null,
    "head_branch": "csharp4436",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4436: .NET/C# driver fails to create new mongo client in xamarin. (#1036)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79b18912b45d36a06bd",
    "number": 1035,
    "body": null,
    "head_branch": "csharp4485",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4485: Support Optional Inserted Ids in CSFLE Unified Tests. (#1035)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79c18912b45d36a06be",
    "number": 1034,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79d18912b45d36a06bf",
    "number": 1033,
    "body": null,
    "head_branch": "csharp4538onolderservers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4538: Skip some tests on older servers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79e18912b45d36a06c0",
    "number": 1032,
    "body": null,
    "head_branch": "csharp4542",
    "is_a_fork": true,
    "comments": [
      "No driver changes.\r\n\r\nJust verifying that CSHARP-4524 fixes the issue. The difference between `Tuple` and `ValueTuple` is that `Tuple` has *properties* called `Item1` etc and `ValueTuple` has *fields` called `Item1` etc.\r\n\r\nNote; the driver is using `BsonClassMapSerializer` for `ValueTuple`, we probably should provide custom serializers for all the `ValueTuple` types for better performance. If you agree I can create a ticket for that.",
      "Closing without merging because the new tests merely verify that CSHARP-4524 fixed the issue.\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f79f18912b45d36a06c1",
    "number": 1031,
    "body": null,
    "head_branch": "csharp4510",
    "is_a_fork": true,
    "comments": [
      "Closing without merging since there are no driver changes. The tests are merely confirming that this is a dup of CSHARP-4499."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7a018912b45d36a06c2",
    "number": 1030,
    "body": null,
    "head_branch": "csharp4538",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7a118912b45d36a06c3",
    "number": 1029,
    "body": null,
    "head_branch": "csharp4522",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4522: Issue with Casting via C# LINQ Statements."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7a218912b45d36a06c4",
    "number": 1028,
    "body": null,
    "head_branch": "csharp4054",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4054: One-to-many LINQ query using Join fails with InvalidOperationException."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7a318912b45d36a06c5",
    "number": 1027,
    "body": null,
    "head_branch": "csharp4511",
    "is_a_fork": true,
    "comments": [
      "@BorisDog minor change you requested.\r\n\r\n@JamesKovacs do you want to review this?"
    ],
    "commit_messages": [
      "CSHARP-4511: Allow separate allowed types for deserialization and serialization."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7a518912b45d36a06c6",
    "number": 1026,
    "body": null,
    "head_branch": "csharp4524",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4524: Handle projections using constructors for classes that use public fields instead of public properties."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7a618912b45d36a06c7",
    "number": 1025,
    "body": null,
    "head_branch": "csharp4521",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4521: Handle parameterName empty string the same as null."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7a718912b45d36a06c8",
    "number": 1024,
    "body": "Added support for `ObjectSerializer` to both read and write `Decimal128` data type.",
    "head_branch": "csharp4496",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4496: Add decimal support to ObjectSerializer. (#1024)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7a818912b45d36a06c9",
    "number": 1023,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks for the fix!"
    ],
    "commit_messages": [
      "correct MongoDB Community Forum URL in README (#1023)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7a918912b45d36a06ca",
    "number": 1022,
    "body": null,
    "head_branch": "csharp4505",
    "is_a_fork": true,
    "comments": [
      "Closed without merging since it is simply proving that something already works."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7aa18912b45d36a06cb",
    "number": 1021,
    "body": null,
    "head_branch": "csharp4517",
    "is_a_fork": true,
    "comments": [
      "The tests that are failing are not LINQ2 test but rather Linq2ImplementationTestsOnLinq3 tests.\r\n\r\nI'm going to have to rework this fix.\r\n\r\nI'll re-request your review when it's ready.",
      "Looks like it was sufficient to relax the requirement that operands be of the *same* type to just require that they be of *compatible* types, where compatible means one of:\r\n\r\n* one operand is null\r\n* both operands are the same type\r\n* one operand can be implicitly converted to the other"
    ],
    "commit_messages": [
      "CSHARP-4517: Values being compared must be compatible."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ab18912b45d36a06cc",
    "number": 1020,
    "body": null,
    "head_branch": "csharp4500",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4500: Move some simplifications from Render to AstSimplifier."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ac18912b45d36a06cd",
    "number": 1019,
    "body": null,
    "head_branch": "csharp4480_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4480: Add a test that drivers emit a CommandSucceededEvent when ok=1 and a writeConcernError is returned. (#1019)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ad18912b45d36a06ce",
    "number": 1018,
    "body": "https://jira.mongodb.org/browse/CSHARP-4513\r\n\r\nMy suggestion is to implement IDisposable in MongoClient, it'll allow controlling connections in such kind of way.\r\n\r\nusing (var client = new MongoClient(\"mongodb://localhost:27017\"))\r\n{\r\n    var db = client.GetDatabase(\"config\");\r\n    var collection = db.GetCollection<Element>(\"test\");\r\n    var x = collection.Aggregate().FirstOrDefault();\r\n    Console.WriteLine($\"{x.Name} : {x.Value}\");\r\n}",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for submitting this pull request. Unfortunately this fix does not work in the general case because {{Cluster}} can be shared between multiple {{MongoClient}} instances based on shared {{ClusterKey}}. It is not possible to simply dispose the {{Cluster}} when the {{MongoClient}} is disposed. The engineering work required to implement a disposable {{MongoClient}} is captured in [CSHARP-3431](https://jira.mongodb.org/browse/CSHARP-3431)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ae18912b45d36a06cf",
    "number": 1017,
    "body": null,
    "head_branch": "csharp4509",
    "is_a_fork": true,
    "comments": [
      "Based on csharp4499.\r\n\r\nOnly review last two commits (which I probably should have squashed into one, but at first I thought rebasing on csharp4499 alone would fix the issue)."
    ],
    "commit_messages": [
      "CSHARP-4509: Support Convert calls to a base type in expression translators."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7af18912b45d36a06d0",
    "number": 1016,
    "body": null,
    "head_branch": "drivers2539",
    "is_a_fork": true,
    "comments": [
      "There is no c# ticket for this change yet, I will update this description as soon as driver ticket will be moved to implementing"
    ],
    "commit_messages": [
      "CSHARP-4514: createEncryptedCollection should not accept keyAltNames. (#1016)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7b018912b45d36a06d1",
    "number": 1015,
    "body": null,
    "head_branch": "csharp4506",
    "is_a_fork": true,
    "comments": [
      "It might be that this change is not needed since the spec currently considers revering this requirement. Let's put this PR in draft until the actual spec wording will be changed. If it is reverted, the only required logic in this PR will be skipping fle2-Range tests on macos.",
      "This requirement was cancelled in this PR https://github.com/mongodb/specifications/pull/1376"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7b118912b45d36a06d2",
    "number": 1014,
    "body": null,
    "head_branch": "csharp4499",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4499: Support Convert calls to a base type in filter translators."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7b218912b45d36a06d3",
    "number": 1013,
    "body": null,
    "head_branch": "release_notes_2_19",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.19.0. (#1013)\n\n* Release notes for 2.19.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7b318912b45d36a06d4",
    "number": 1012,
    "body": null,
    "head_branch": "csharp4479",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4479: Add a command logging test covering unacknowledged write behavior (#1012)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7b418912b45d36a06d5",
    "number": 1011,
    "body": null,
    "head_branch": "fix_latest_eg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4490: Fix tests related to asserting wildcardProjection output. (#1011)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7b518912b45d36a06d6",
    "number": 1010,
    "body": null,
    "head_branch": "csharp4448",
    "is_a_fork": true,
    "comments": [
      "OIDC is supported for 7.0 release? The 7.0 release was targeted in August 2023.  Do we not support OIDC yes from the driver side ?  ",
      "> OIDC is supported for 7.0 release? The 7.0 release was targeted in August 2023. Do we not support OIDC yes from the driver side ?\r\n\r\nWe have not released support for OIDC machine workflows in the .NET/C# Driver yet. Please follow and comment on [CSHARP-4448](https://jira.mongodb.org/browse/CSHARP-4448) for updates.",
      "I'm closing this PR as we got updated requirements and re-implemented OIDC as a separate PR.\r\nThank you for the PR though, I've used it as a guide."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7b718912b45d36a06d7",
    "number": 1009,
    "body": null,
    "head_branch": "csharp4119",
    "is_a_fork": true,
    "comments": [
      "I just realized that I need to do similar work to support Compare in filters.\r\n\r\nThat work is in progress.\r\n\r\nIt shouldn't affect the work already done on this PR (for expressions) but you may wish to wait to review this PR.",
      "Will open a new PR when the corresponding work on filters is done."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7b818912b45d36a06d8",
    "number": 1008,
    "body": null,
    "head_branch": "csharp4475",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4475: Add an AllowedTypes filter to ObjectSerializer."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7b918912b45d36a06d9",
    "number": 1007,
    "body": null,
    "head_branch": "csharp4465",
    "is_a_fork": true,
    "comments": [
      "@BorisDog the BsonTypeMapper class is basically obsolete. It was created in the early days before serializers were invented.\r\n\r\nNot sure what you are using BsonTypeMapper for, but you might want to avoid it.",
      "Closing this PR without merging. Turns out there was already an external PR with the same fix, but the JIRA ticket didn't mention it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ba18912b45d36a06da",
    "number": 1006,
    "body": null,
    "head_branch": "csharp4447",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4447: Standardize on how tests are run against both LINQ providers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7bb18912b45d36a06db",
    "number": 1005,
    "body": null,
    "head_branch": "csharp4453",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4453: Support Bucket and BucketAuto stages in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7bc18912b45d36a06dc",
    "number": 1004,
    "body": null,
    "head_branch": "csharp4463",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4463: Add aws auth connectivity examples. (#1004)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7bd18912b45d36a06dd",
    "number": 1003,
    "body": null,
    "head_branch": "csharp4468",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4468: LINQ V3 SelectMany + GroupBy results with redundant $push within $group."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7be18912b45d36a06de",
    "number": 1002,
    "body": null,
    "head_branch": "csharp4466",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4466: MongoQueryable.AppendStage uses incorrect result serializer type."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7c018912b45d36a06df",
    "number": 1001,
    "body": "This PR is rebased on top of [CSHARP-4440](https://github.com/mongodb/mongo-csharp-driver/pull/989).\r\nThe main focus here is[ AtlasSearchTest.cs](https://github.com/mongodb/mongo-csharp-driver/blob/cb8a4be121c036a315f31eb7c43dda712e12116a/tests/MongoDB.Driver.Tests/Search/AtlasSearchTest.cs)\r\nPlease review just the last [commit](https://github.com/mongodb/mongo-csharp-driver/pull/1001/commits/cb8a4be121c036a315f31eb7c43dda712e12116a).",
    "head_branch": "csharp4420",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7c118912b45d36a06e0",
    "number": 1000,
    "body": null,
    "head_branch": "csharp4449",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4449: Implement Find projections in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7c218912b45d36a06e1",
    "number": 999,
    "body": "The error message to display when a BsonDocument is being mapped to an invalid type showed the target type name for BsonArray.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@juanii thanks for finding this and submitting a PR!\r\nPlease follow the updates here [CSHARP-4465](https://jira.mongodb.org/browse/CSHARP-4465)."
    ],
    "commit_messages": [
      "CSHARP-4465: Include correct type in exception in BsonTypeMapper.MapToDotNetValue."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7c318912b45d36a06e2",
    "number": 998,
    "body": null,
    "head_branch": "csharp4457",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4457: LINQ3 should support filters with bool fields as well as properties."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7c418912b45d36a06e3",
    "number": 997,
    "body": null,
    "head_branch": "csharp4416",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4416: Remove getNonce command usage for 6.2+. (#997)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7c518912b45d36a06e4",
    "number": 996,
    "body": null,
    "head_branch": "csharp4227_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4227: Convert SDAM integration spec tests to the unified test format. (#996)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7c618912b45d36a06e5",
    "number": 995,
    "body": "Related spec https://github.com/mongodb/specifications/pull/1351 and EG tools https://github.com/mongodb-labs/drivers-evergreen-tools/pull/247 PRs",
    "head_branch": "drivers2465",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4355: Test crypt_shared with older server versions. (#995)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7c818912b45d36a06e6",
    "number": 994,
    "body": null,
    "head_branch": "csharp4455",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4455: Fix test assertation. (#994)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7c918912b45d36a06e7",
    "number": 993,
    "body": null,
    "head_branch": "csharp4255_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4255: Fix bug and some tests. (#993)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7ca18912b45d36a06e8",
    "number": 992,
    "body": null,
    "head_branch": "cshar4255_fix_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4255: Fix merge conflict. (#992)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7cb18912b45d36a06e9",
    "number": 991,
    "body": null,
    "head_branch": "fixevergreen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix compilation errors resulting from merge."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7cc18912b45d36a06ea",
    "number": 990,
    "body": null,
    "head_branch": "csharp4445",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4445: Support 64-bit values for Skip and Limit/Take."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7cd18912b45d36a06eb",
    "number": 989,
    "body": null,
    "head_branch": "csharp4440",
    "is_a_fork": true,
    "comments": [
      "If using `init` on older TFs poses a risk we can just use `public` and be safe.\r\n\r\nSure we'd rather the class be immutable, but if the user mutates it, it can't hurt us.",
      "Summary of my `init` investigations. TL;DR: We can't use `init`.\r\n\r\nThe `init` magic is done by the compiler. You can use it on earlier TFMs using the `IsExternalInit` trick however you must use a compiler compatible with `init`. And this is where we run into problems...\r\n\r\nI defined a library `Lib` with an `init` property. TFM is `netstandard2.0` and `LangVersion` is 9.0. I then created a console app `App` and referenced `Lib`. App is `netcoreapp3.1` with `LangVersion` 8.0. I instantiated an instance of the init-only containing class from `Lib`. When I compiled, I got the following error:\r\n\r\n```\r\nerror CS8400: Feature 'init-only setters' is not available in C# 8.0. Please use language version 9.0 or greater.\r\n```\r\n\r\nIf you change the `LangVersion` of App to 9.0, then everything works. The problem is that if we use `init` in our driver we will require our users to upgrade their toolchain to C# 9 or later. If they’re still using `netcoreapp3.1` or earlier, they might not be able to upgrade their toolchain.\r\n\r\nThe safest option is to make the setters public on `SearchHighlight` and related so that users can instantiate their own instances for testing purposes."
    ],
    "commit_messages": [
      "CSHARP-4440: Incorporate MongoDB.Labs.Search library (#989)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7ce18912b45d36a06ec",
    "number": 988,
    "body": null,
    "head_branch": "csharp4182",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4182: Support for Range Indexes. (#988)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7cf18912b45d36a06ed",
    "number": 987,
    "body": "- Single runner for all unified tests, replaces 15 unified runners.\r\n- Navigation to unified spec test case (json file) directly via VS TestExplorer\r\n- Introduced `CategoryAttribute(params string[] categories)` as a shortcut for [Trait(\"Category\", \"SomeCatergory\")]",
    "head_branch": "csharp4422",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4422: Custom xunit test cases discoverer for unified format tests (#987)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7d018912b45d36a06ee",
    "number": 986,
    "body": null,
    "head_branch": "csharp4358",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4358: Update tests that only test against LINQ2 to test against LINQ3 instead of or in addition to LINQ2."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7d118912b45d36a06ef",
    "number": 985,
    "body": null,
    "head_branch": "csharp4446",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4446: MongoQueryable methods should validate that mandatory arguments are not null."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7d218912b45d36a06f0",
    "number": 984,
    "body": null,
    "head_branch": "csharp4339",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4339: Add support for $documents in LINQ."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7d318912b45d36a06f1",
    "number": 983,
    "body": null,
    "head_branch": "csharp4399",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4399: Remove use of activate_venv.sh and utils.sh. (#983)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7d418912b45d36a06f2",
    "number": 982,
    "body": "Reverts mongodb/mongo-csharp-driver#981",
    "head_branch": "revert-981-csharp4442",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Hide aws sdk package. (#981)\" (#982)\n\nThis reverts commit 77d144c715be7b0b658f22a15d00b98254739246."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7d518912b45d36a06f3",
    "number": 981,
    "body": "Without applied fix, a consumer will see:\r\n![image](https://user-images.githubusercontent.com/44870738/205463806-d5f43350-2bde-407e-bd80-1b6da7596485.png)\r\nand therefore will be able to use aws sdk public classes.\r\nThe applied change hides this internal (for the driver) classes from consumers. \r\n![image](https://user-images.githubusercontent.com/44870738/205463835-17b73f89-9f43-40a0-b51c-5d2fba50e082.png)\r\nAs a result, aws.sdk public classes will be unavailable for driver's consumers",
    "head_branch": "csharp4442",
    "is_a_fork": true,
    "comments": [
      "I would also consider the same changes for other 3rd parties we have even though it might be considered as minor BC",
      "Apparently this change broke our tests in core TFs. We need investigating how it can be fixed as a separate effort, reverted for now"
    ],
    "commit_messages": [
      "Hide aws sdk package. (#981)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7d718912b45d36a06f4",
    "number": 980,
    "body": "I've just noticed that implemented test changes actually not only required and there are more spec changes in the scope of this ticket that will be added soon. So postpone reviewing this change for now",
    "head_branch": "drivers2286",
    "is_a_fork": true,
    "comments": [
      "ACK. Put it up for PR review when all changes have been incorporated.",
      "Closed in favor of https://github.com/mongodb/mongo-csharp-driver/pull/988  "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7d818912b45d36a06f5",
    "number": 979,
    "body": null,
    "head_branch": "csharp4424",
    "is_a_fork": true,
    "comments": [
      "Hi @rstam, just wanted to let you know that I checked out PR #979 and it completely satisfies my request. I've gone ahead and closed out my own PR #941. Thanks so much for your hard work on this! Appreciate it a lot."
    ],
    "commit_messages": [
      "CSHARP-4424: Added TryRegisterClassMap method to BsonClassMap."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7d918912b45d36a06f6",
    "number": 978,
    "body": null,
    "head_branch": "csharp4428",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7da18912b45d36a06f7",
    "number": 977,
    "body": "This is a prerequisite for both [CSHARP-4422](https://jira.mongodb.org/browse/CSHARP-4422) and for Driver/Core unification. ",
    "head_branch": "csharp4421",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4421: Unify all spec tests in single test project (#977)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7db18912b45d36a06f8",
    "number": 976,
    "body": null,
    "head_branch": "csharp4413",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4413: Equality operator of MongoClientSettings is bugged (#976)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7dc18912b45d36a06f9",
    "number": 975,
    "body": null,
    "head_branch": "csharp4394",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4394: Improve test coverage for retryable handshake errors (#975)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7dd18912b45d36a06fa",
    "number": 974,
    "body": "ConnectionId should use longs for LocalValue and ServerValue to match 64-bit integer connectionId returned from the server.",
    "head_branch": "csharp4417",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4417: ConnectionId should use longs for LocalValue and ServerValue to match 64-bit integer connectionId returned from the server.(#974)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7de18912b45d36a06fb",
    "number": 973,
    "body": null,
    "head_branch": "csharp4430",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4430: Allow BasicAWSCredentials or SessionAWSCredentials to be configured for testing. (#973)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7df18912b45d36a06fc",
    "number": 972,
    "body": null,
    "head_branch": "csharp4429",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4429: Support resultSerializer = null in MongoQueryable.AppendStage (#972)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7e018912b45d36a06fd",
    "number": 971,
    "body": null,
    "head_branch": "csharp4377",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4377: Flush on read-only stream should be a NOP. (#971)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e118912b45d36a06fe",
    "number": 970,
    "body": null,
    "head_branch": "csharp4427",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4427: Negative array indexes should throw ExpressionNotSupportedException."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e318912b45d36a06ff",
    "number": 969,
    "body": null,
    "head_branch": "csharp4335",
    "is_a_fork": true,
    "comments": [
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-4335: Do not connect to mongocryptd if shared library is loaded. (#969)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e418912b45d36a0700",
    "number": 968,
    "body": null,
    "head_branch": "pr_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e518912b45d36a0701",
    "number": 967,
    "body": "Including correct commands and information on polling (<=4.2) versus streaming (>=4.4).",
    "head_branch": "csharp4327",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4327: Update Server Monitoring documentation with correct commands and information on polling (<=4.2) versus streaming (>=4.4). (#967)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e618912b45d36a0702",
    "number": 966,
    "body": null,
    "head_branch": "csharp4426",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4426: Fix docs generating with referenced AWS.SDK. (#966)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e718912b45d36a0703",
    "number": 965,
    "body": null,
    "head_branch": "csharp4386",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4386: Test mongocryptd is not spawned when shared library is loaded. (#965)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e818912b45d36a0704",
    "number": 964,
    "body": null,
    "head_branch": "csharp4262",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4262: Disable causal consistency in implicit sessions. (#964)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7e918912b45d36a0705",
    "number": 963,
    "body": "Preview [here](https://borisdog.github.io/mongo-csharp-driver/2.18/reference/driver/logging/).",
    "head_branch": "csharp4387",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4387: Logging documentation (#963)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ea18912b45d36a0706",
    "number": 962,
    "body": null,
    "head_branch": "csharp2727v3.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2727: Skip test using $toString when testing against server 3.6."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7eb18912b45d36a0707",
    "number": 961,
    "body": null,
    "head_branch": "csharp4255",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4255: Automatically create Queryable Encryption keys. (#961)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7ec18912b45d36a0708",
    "number": 960,
    "body": null,
    "head_branch": "csharp4425",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4425: Failing smoke tests (#960)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ed18912b45d36a0709",
    "number": 959,
    "body": null,
    "head_branch": "csharp4401",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7ee18912b45d36a070a",
    "number": 958,
    "body": null,
    "head_branch": "csharp2195",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2195: Support LINQ queries against RawBsonDocument."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7ef18912b45d36a070b",
    "number": 957,
    "body": null,
    "head_branch": "csharp4412fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4412: Fix a few tests that were missed."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7f018912b45d36a070c",
    "number": 956,
    "body": "Based on @dgolub  [project](https://github.com/mongodb-labs/mongo-csharp-search)\r\n\r\nSample usage:\r\n`coll.Aggregate().Search(SearchBuilders<Person>.Search.Text(x => x.Title, \"cat\")).ToList()`",
    "head_branch": "search_poc",
    "is_a_fork": true,
    "comments": [
      "Follow up work in [CSHARP-4440](https://jira.mongodb.org/browse/CSHARP-4440)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7f118912b45d36a070d",
    "number": 955,
    "body": null,
    "head_branch": "csharp4415",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4415: DateTime.Year throws an exception for IQueryable<DateTime>."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7f318912b45d36a070e",
    "number": 954,
    "body": null,
    "head_branch": "csharp2886",
    "is_a_fork": true,
    "comments": [
      "Closed without merging to master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7f418912b45d36a070f",
    "number": 953,
    "body": null,
    "head_branch": "csharp2113",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2113: Support LINQ queries against interfaces.."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7f518912b45d36a0710",
    "number": 952,
    "body": null,
    "head_branch": "csharp2727",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2727: Verify that string cast and queries on BsonDocument work in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7f618912b45d36a0711",
    "number": 951,
    "body": null,
    "head_branch": "csharp2786",
    "is_a_fork": true,
    "comments": [
      "I went off on the wrong track because I was editing the `PredicateTranslatorValidationTests.cs` file in the `Linq2ImplementationTests` folder, which I should not have done because this file is testing LINQ2.\r\n\r\nIf you do a diff against the `PredicateTranslatorValidationTests.cs` file in the `Linq2ImplementationTestsOnLinq3` folder you will find that almost exactly these same changes were made once before.\r\n\r\nBased on that I think this PR should not be pushed to master and CSHARP-2786 can just be closed as \"works in LINQ3\".",
      "Closed without merging to master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7f718912b45d36a0712",
    "number": 950,
    "body": "I don't think this repro needs to be pushed to master.",
    "head_branch": "csharp3237",
    "is_a_fork": true,
    "comments": [
      "Closed without merging to master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7f818912b45d36a0713",
    "number": 949,
    "body": null,
    "head_branch": "csharp4361",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4361: Add log messages to CMAP spec (#949)\n\n* CSHARP-4361: Add log messages to CMAP spec"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7f918912b45d36a0714",
    "number": 948,
    "body": null,
    "head_branch": "pull941poc",
    "is_a_fork": true,
    "comments": [
      "See https://jira.mongodb.org/browse/CSHARP-4424",
      "Closing this PR.\r\n\r\nTrack https://jira.mongodb.org/browse/CSHARP-4424 for further work."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7fa18912b45d36a0715",
    "number": 947,
    "body": "Asked a question about possible thead safe issue: https://github.com/aws/aws-sdk-net/discussions/2487",
    "head_branch": "csharp3740_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3740: Add native support for AWS IAM Roles for service accounts, EKS in particular. (#947)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7fb18912b45d36a0716",
    "number": 946,
    "body": null,
    "head_branch": "csharp4412",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4412: BsonRepresentationAttribute not respected when string array assigned to IList property."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7fc18912b45d36a0717",
    "number": 945,
    "body": null,
    "head_branch": "csharp4343_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4343: Enable AWS ECS tests. (#945)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7fd18912b45d36a0718",
    "number": 944,
    "body": "I hesitate to push this to master. Specially because it pollutes the global convention registry (but in a safe way).\r\n\r\nMainly it's just proving that CSHARP-3731 is no longer an issue.",
    "head_branch": "csharp3731",
    "is_a_fork": true,
    "comments": [
      "Closed without merging to master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f7fe18912b45d36a0719",
    "number": 943,
    "body": null,
    "head_branch": "csharp4410",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4410: Test full support for enums in aggregation expressions."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f7ff18912b45d36a071a",
    "number": 942,
    "body": "Quick doc fix.",
    "head_branch": "csharp1674",
    "is_a_fork": true,
    "comments": [
      "Closing as we are no longer updating our github.io docs."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80018912b45d36a071b",
    "number": 941,
    "body": "I've implemented the TryRegisterClassMap method which is an atomic version of the existing RegisterClassMap method.\r\nThis method is useful in highly concurrent scenarios as it avoids creating external locks before registering a class map.\r\n\r\nCurrent workaround:\r\n\r\n```c#\r\nlock (_lock)\r\n{\r\n    if (!BsonClassMap.IsClassMapRegistered(typeof(T)))\r\n        BsonClassMap.RegisterClassMap<T>(Map);\r\n}\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I don't think this is an approach we would recommend.\r\n\r\nNormally you would configure and register all your class maps once in your application's startup code before any other concurrent code starts running.\r\n\r\nAnd even if you can't stop the concurrent code from running before initialization is complete it would make more sense to gate your class map configuration code to only execute once, and it makes more sense for the configuration code to have its own lock. \r\nYou don't even need to call `IsClassMapRegistered`... if your configuration code is running for the first time, by definition the class maps have not been configured and registered.",
      "Hi,\r\nUnfortunately this is not always the case, sometimes this registration is used in external libraries and it's not executed at the application startup.\r\nFor example we are using MassTransit and the RegisterClassMap call is executed when the library services are resolved by the IoC container, well after the application startup.\r\nAnother example where the startup approach doesn't work is when the HostBuilder/Host pattern (which have become the standard when creating a new .NET application) is leveraged to create and dispose multiple instances of the application (under the same process) for automated testing.\r\nI think that this static configuration class doesn't fit anymore with the way the .NET ecosystem evolved, and doesn't play nice with the HostBuilder and the IoC container.\r\nThe best thing would be having an instance based configuration, this way every Host and/or every IoC container instantiated in the same program could have it's own class mapping registration, but I suppose that this would require substantial work to achieve.\r\nGiven what I've said before, I think that in the modern .NET ecosystem, having to relay on locks for registering the class maps becomes much more common, that's why I propose to have an atomic version of the registration out of the box.",
      "Class map registration is normally done at application startup, but it doesn't have to be. The only requirement is that it only be done once (and that it be done *before* it is first needed).\r\n\r\nI think it is better for the calling code to keep track of whether it has registered class maps yet or not. That is more efficient than repeatedly calling a tentative registration method that will do nothing every time it is called after the first time.\r\n\r\nYour point about the static nature of the class map registry is a good one. See https://jira.mongodb.org/browse/CSHARP-3985 for a proposal to make the configuration registries no longer be static.",
      "One recommended pattern for doing serialization configuration only once is something like:\r\n\r\n```\r\npublic static class ClassMapRegisterer\r\n{\r\n    private static int __classMapsAreRegistered;\r\n\r\n    public static void RegisterClassMaps()\r\n    {\r\n        if (Interlocked.CompareExchange(ref __classMapsAreRegistered, 1, 0) == 0)\r\n        {\r\n            BsonClassMap.RegisterClassMap<C>();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis is much more efficient than repeatedly calling a method like `TryRegisterClassMap`.",
      "Thanks for providing more information about scenarios in which conditional class map registration might prove helpful.\r\n\r\nI have created a JIRA ticket to track this feature request:\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-4424\r\n\r\n",
      "@Laurianti could you take a look at https://github.com/mongodb/mongo-csharp-driver/pull/979 and let us know if that change satisfies your need?\r\n\r\nIn particular, do you feel a need for the method to be named `TryRegisterClassMap`? My thought is that whether or not the class was already registered or is registered as a result of this call is irrelevant. The only thing that matters is that after this call the class *is* registered.",
      "Thank you for asking @rstam. I have reviewed the changes in your PR (#979) and I am happy to say that it satisfies my requirement. I appreciate your efforts in addressing this issue. I will proceed to close my request. Thank you again for your help."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80118912b45d36a071c",
    "number": 940,
    "body": null,
    "head_branch": "csharp2472skip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2472: Skip integration test on older servers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f80218912b45d36a071d",
    "number": 939,
    "body": null,
    "head_branch": "csharp2471skip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2471: Skip trig operator tests on older servers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f80418912b45d36a071e",
    "number": 938,
    "body": "- Fix \"Invalidating description\" log message in DefaultServer\r\n\r\nSDAM category was mistakenly split to Cluster and SDAM categories. Spec specifies single category for both.",
    "head_branch": "csharp4406",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4406: Unite logging \"Cluster\" and \"Sdam\" categories (#938)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80518912b45d36a071f",
    "number": 937,
    "body": null,
    "head_branch": "csharp4405",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4405: Add support for $week operator."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f80618912b45d36a0720",
    "number": 936,
    "body": null,
    "head_branch": "csharp4298",
    "is_a_fork": true,
    "comments": [
      "We have 5 failing variants in this patch build. Is there any commonality between the failures? Have these changes destabilized certain tests?",
      "Please let me know what you will find in EG results"
    ],
    "commit_messages": [
      "CSHARP-4298: SDAM should prioritize electionId over setVersion only on >=6.0 servers (#936)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f80718912b45d36a0721",
    "number": 935,
    "body": "SkippableTests removed",
    "head_branch": "csharp4400",
    "is_a_fork": true,
    "comments": [
      "> LGTM I think?\r\n> \r\n> You squashed and rebased and force pushed and I can no longer tell what changed since I last reviewed...\r\n\r\nYes sorry, I spent some time on rebasing beforehand and it was just easier that way. The only new changes are namespaces resolutions with master and `using Reflector = MongoDB.Bson.TestHelpers.Reflector;`"
    ],
    "commit_messages": [
      "CSHARP-4400: Upgrade xunit to 2.4.2 and remove SkippableFact package (#935)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f80818912b45d36a0722",
    "number": 934,
    "body": null,
    "head_branch": "csharp4385",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4385: Consider adding Directory.Build.props. (#934)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80918912b45d36a0723",
    "number": 933,
    "body": null,
    "head_branch": "csharp4395",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4395: C# Driver caches AWS credentials assumend for IAM Role untill the first error. (#933)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80a18912b45d36a0724",
    "number": 932,
    "body": null,
    "head_branch": "csharp1326fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-1326: Fix edge case in Implements and TryGetIEnumerableGenericInterface."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80c18912b45d36a0725",
    "number": 931,
    "body": null,
    "head_branch": "csharp4397",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4397: Translate conversions to short form like $toInt instead of $convert when possible."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80d18912b45d36a0726",
    "number": 930,
    "body": null,
    "head_branch": "csharp4244skip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4244: Skip tests on older server versions due to server bugs."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f80e18912b45d36a0727",
    "number": 929,
    "body": null,
    "head_branch": "csharp3136v3.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3136: Skip certain tests on server version 3.6."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f80f18912b45d36a0728",
    "number": 928,
    "body": null,
    "head_branch": "csharp1326",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81018912b45d36a0729",
    "number": 927,
    "body": null,
    "head_branch": "csharp2472",
    "is_a_fork": true,
    "comments": [
      "I wanted you to look at this PR as is for a first pass.\r\n\r\nI think we should create a separate ticket for the change to `Convert` to use the simpler `$toDouble` (for example) than the longer form `$convert`. Now we only use `$convert` when the shorter `$toDouble`-like form.",
      "Ticket number in commit is wrong. \r\n\r\nMust remember to fix it!!!"
    ],
    "commit_messages": [
      "CSHARP-2472: Get sample from ticket to pass."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81118912b45d36a072a",
    "number": 926,
    "body": null,
    "head_branch": "csharp3236",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3236: Verify that nested Contains works in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81218912b45d36a072b",
    "number": 925,
    "body": null,
    "head_branch": "csharp2134",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2314: Verify that All works in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81318912b45d36a072c",
    "number": 924,
    "body": null,
    "head_branch": "csharp3234",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3234: Verify that Contains equals false works in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81418912b45d36a072d",
    "number": 923,
    "body": "Don't know what transformations LINQ2 tried to do when there were two Selects in a row, but in LINQ3 if you write two Selects you get two $projects.",
    "head_branch": "csharp3197",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3197: Verify that Select/Select works in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81518912b45d36a072e",
    "number": 922,
    "body": null,
    "head_branch": "csharp2471",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81618912b45d36a072f",
    "number": 921,
    "body": null,
    "head_branch": "csharp4244",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4244: Support object comparison at root level in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81718912b45d36a0730",
    "number": 920,
    "body": null,
    "head_branch": "csharp4391",
    "is_a_fork": true,
    "comments": [
      "I'm surprised we didn't already support deserializing structs that had a constructor."
    ],
    "commit_messages": [
      "CSHARP-4391: BsonClassMap should support deserializing structs using a constructor."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f81818912b45d36a0731",
    "number": 919,
    "body": null,
    "head_branch": "csharp3924",
    "is_a_fork": true,
    "comments": [
      "As I suspected looks like this was just a special case of CSHARP-3922. Now that CSHARP-3922 is fixed Tuples work in LINQ3."
    ],
    "commit_messages": [
      "CSHARP-3924: Verify that current version of LINQ3 works with Tuples."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81918912b45d36a0732",
    "number": 918,
    "body": null,
    "head_branch": "csharp3965",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3965: Support OrderBy with an expression that does not resolve to a field."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81a18912b45d36a0733",
    "number": 917,
    "body": "Removed the Test task and ensured that our release process doc calls out ensuring that Evergreen is green. Asking for everyone's LGTM just in case I missed something else that should be updated.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4388: Removed Test task from Release task. (#917)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81b18912b45d36a0734",
    "number": 916,
    "body": null,
    "head_branch": "csharp4289",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4289: Projected class should use correct serializers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f81c18912b45d36a0735",
    "number": 915,
    "body": null,
    "head_branch": "csharp4376",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4376: Add LINQ3 support for untyped CreateQuery."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81d18912b45d36a0736",
    "number": 914,
    "body": null,
    "head_branch": "csharp4369",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4369: Translate Group/Where/Select correctly in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f81f18912b45d36a0737",
    "number": 913,
    "body": "The SourceLink setup is not done correctly.  I've gone ahead and hoisted all the common properties from the various .csproj files in your src folder to use the Directory.Build.props file and set it up set the required fags on your next release.\r\n\r\nYou can verify the setup is incorrect at [NuGet Package Explorer](https://nuget.info/packages/MongoDB.Driver/2.18.0)\r\n\r\nSince I cannot tell what CI system you are using I have it set the ContinuousIntegrationBuild setting when it is built in release mode.  Clearly we can tweak that setting to what you need.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks @buvinghausen for noticing this and your PR. Is there anything else incorrect in the SourceLink setup, besides untracked sources warning? If so please open Jira tickets for any other issue. \r\n\r\nUntracked sources fix is tracked in [CSHARP-3994](https://jira.mongodb.org/browse/CSHARP-3994). I've linked this PR to that ticket, please follow it of any further updates.",
      "@BorisDog yes you need to set the [ContinuousIntegrationBuild](https://github.com/buvinghausen/mongo-csharp-driver/blob/master/src/Directory.Build.props#L26) flag as well.  I have it set to conditionally only get set on release as I assume you build in release mode as part of your publish to nuget process.  I couldn't tell what CI server/service you use.",
      "> @BorisDog yes you need to set the [ContinuousIntegrationBuild](https://github.com/buvinghausen/mongo-csharp-driver/blob/master/src/Directory.Build.props#L26) flag as well. I have it set to conditionally only get set on release as I assume you build in release mode as part of your publish to nuget process. I couldn't tell what CI server/service you use.\r\n\r\nHey @buvinghausen , thanks for this catch. We already configure this option in our build scripts [here](https://github.com/mongodb/mongo-csharp-driver/blob/master/build.cake#L89), but apparently something is broken here. We will investigate this issue in this ticket https://jira.mongodb.org/browse/CSHARP-4384 \r\n\r\n",
      "I've also created a ticket to consider adding build.props to the solution https://jira.mongodb.org/browse/CSHARP-4385. Please follow to that ticket for further discussions",
      "Thank you for your contribution. I'll close this Pull Request as already done. Please feel free to reopen it if there are some additional work or help required.",
      "@sanych-sun not sure why you closed this after two years you STILL don't have this repository appropriately setup for Source Link\r\n\r\nhttps://nuget.info/packages/MongoDB.Driver/2.23.2\r\n\r\n![image](https://github.com/mongodb/mongo-csharp-driver/assets/1130210/d825d95b-190f-4e81-b672-54975b73ddfd)\r\n\r\nHere's an example of an appropriately setup package\r\nhttps://nuget.info/packages/SequentialGuid/4.0.4\r\n\r\n![image](https://github.com/mongodb/mongo-csharp-driver/assets/1130210/24210136-db22-4031-a687-3a53ecc747aa)\r\n",
      "I've closed this PR because the proposed changes was mostly implemented by using Directory.Build.props file in scope of [CSHARP-4385](https://jira.mongodb.org/browse/CSHARP-4385).\r\n\r\nThe issue with untracked sources you have mentioned was separated into additional Jira ticket and was not sorted yet: \r\n[CSHARP-3994](https://jira.mongodb.org/browse/CSHARP-3994). I haven't approach this problem yet though."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82018912b45d36a0738",
    "number": 912,
    "body": null,
    "head_branch": "csharp4368",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4368: Support Convert to BsonValue in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82018912b45d36a0739",
    "number": 911,
    "body": null,
    "head_branch": "csharp3136",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82218912b45d36a073a",
    "number": 910,
    "body": null,
    "head_branch": "drivers2411",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4378: add integration tests for Azure KMS (#910)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f82318912b45d36a073b",
    "number": 909,
    "body": null,
    "head_branch": "csharp3144",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3144: Linq Contains produce wrong expression."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82418912b45d36a073c",
    "number": 908,
    "body": null,
    "head_branch": "csharp4370",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4370: Confirm that sample code works with LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82518912b45d36a073d",
    "number": 907,
    "body": null,
    "head_branch": "csharp4261",
    "is_a_fork": true,
    "comments": [
      "There might be a way to make this work *without* requiring the custom serializer to implement `IRepresentationConfigurable` but that might have problems of its own. Let's discuss when @JamesKovacs gets back.",
      "Works as designed.\r\n\r\nWe've decided not to push repro to master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82618912b45d36a073e",
    "number": 906,
    "body": "Synced to latest spec update.",
    "head_branch": "csharp4346",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4346: Add log messages to Command monitoring spec (#906)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82718912b45d36a073f",
    "number": 905,
    "body": null,
    "head_branch": "postreleasenextversion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set next assumed release to 2.18.1."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82818912b45d36a0740",
    "number": 904,
    "body": null,
    "head_branch": "csharp4365",
    "is_a_fork": true,
    "comments": [
      "> LGTM. NOTE: I don't understand where we need this change and where not. Previously I thought that we need this change for 3rd party libs that may be not fully correct with some \"definitions\". But I would expect microsoft library should satisfy any \"assumptions\" about nugets, so it's a mystery for me\r\n\r\nIt's not part of any target framework. It's a Nuget package.",
      "> > LGTM. NOTE: I don't understand where we need this change and where not. Previously I thought that we need this change for 3rd party libs that may be not fully correct with some \"definitions\". But I would expect microsoft library should satisfy any \"assumptions\" about nugets, so it's a mystery for me\r\n> \r\n> It's not part of any target framework. It's a Nuget package.\r\n\r\ncan you clarify? I didn't say about TFs",
      "> can you clarify? I didn't say about TFs\r\n\r\nI think Sandcastle knows about all the public types in net472. Anything else has to come from a DLL in this list."
    ],
    "commit_messages": [
      "CSHARP-4365: Fix Sandcastle warning regarding Microsoft.Extensions.Logging.Abstraction assembly."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82918912b45d36a0741",
    "number": 903,
    "body": null,
    "head_branch": "csharp4364",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4364: Bump maxWireVersion for MongoDB 6.1. (#903)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f82a18912b45d36a0742",
    "number": 902,
    "body": null,
    "head_branch": "docsversionnumbers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update version numbers to 2.18.0 in docs files."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82b18912b45d36a0743",
    "number": 901,
    "body": null,
    "head_branch": "releasenotes218",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.18.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82c18912b45d36a0744",
    "number": 900,
    "body": null,
    "head_branch": "csharp4362",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4362: TestEmptySortedSet test failing on net6."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82d18912b45d36a0745",
    "number": 899,
    "body": null,
    "head_branch": "csharp4348",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4348: Improve logging related class and member names (#899)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82e18912b45d36a0746",
    "number": 898,
    "body": "NOTE: related spec changes are still under review https://github.com/mongodb/specifications/pull/1314. But I don't expect significant changes there :) ",
    "head_branch": "csharp4294",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4294: Support the Azure VM-assigned Managed Identity for Automatic KMS Credentials. (#898)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f82f18912b45d36a0747",
    "number": 897,
    "body": "All tests are passing just by finding everywhere that was still defaulting to LINQ2 and changing the default to LINQ3. For the most part the failing tests were failing because they were asserting on LINQ2 expected results (like filters and stages).\r\n\r\nBefore we flip the switch though we might should refactor those tests to test against both LINQ2 and LINQ3, or perhaps only LINQ3 where appropriate.",
    "head_branch": "csharp4331",
    "is_a_fork": true,
    "comments": [
      "@JamesKovacs this PR can wait until you get back since it's not going into 2.18.0.",
      "See also:\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-4358"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83018912b45d36a0748",
    "number": 896,
    "body": null,
    "head_branch": "csharp4322",
    "is_a_fork": true,
    "comments": [
      "> This seems like a good solution, but we should get Andreas' changes pulled into the main branch of `mongodb-labs` rather than depending on an arbitrary branch in his fork. I assume that you'll make these changes before merging with `master`?\r\n\r\nyes, I also added some comments to his PR, so his PR is not 100% ready yet"
    ],
    "commit_messages": [
      "CSHARP-4322: Run legacy Client Side Encryption tests on serverless. (#896)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83118912b45d36a0749",
    "number": 895,
    "body": null,
    "head_branch": "csharp4337",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4337: Use correct serializer for conditional result."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f83218912b45d36a074a",
    "number": 894,
    "body": "Some notes:\r\n1. The spec requirement about dedicated thread is removed at this point. so we just save creds somewhere globally. Spec should be updated. cc: @blink1073 \r\n2. There is an open question about clearing cache for CSFLE. (update: https://jira.mongodb.org/browse/DRIVERS-2464. It's about Azure, but I guess for Aws we can mimic their solution)",
    "head_branch": "csharp4273_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4273: Cache AWS Credentials Where Possible. (#894)\n\nCSHARP-4273: Cache AWS Credentials Where Possible."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f83418912b45d36a074b",
    "number": 893,
    "body": "We will also need to update the release notes to highlight that LINQ3 is now the default and link to the LINQ3 page on how to revert back to LINQ2 if necessary.",
    "head_branch": "csharp4331",
    "is_a_fork": true,
    "comments": [
      "I thought our integration tests always explicitly specified the LinqProvider, but apparently not. I've got a number of test failures to fix as some tests are still assuming the LINQ2 provider in their assertions. I'll re-request review once I have the test suite passing both locally and on EG.",
      "Closing as this PR has been superseded by PR #897."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83518912b45d36a074c",
    "number": 892,
    "body": null,
    "head_branch": "csharp4305",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4305: Update ChangeStreamEvent type definition to include clusterTime (#892)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83618912b45d36a074d",
    "number": 891,
    "body": "Part of [DRIVERS-1204](https://jira.mongodb.org/browse/DRIVERS-1204)",
    "head_branch": "csharp4279",
    "is_a_fork": true,
    "comments": [
      "As I start to review this PR I'm finding a number of naming issues that I would have raised earlier if I had been part of earlier PRs.\r\n\r\nAs a general rule class names should not be plural (e.g., `string` not `strings`, `Guid` not `Guids`) with a few exceptions like `XyzSettings`.\r\n\r\nAccordingly, I would like to see the following names changed in the new logging code:\r\n\r\nEventsLogger => EventLogger\r\nStructuredLogsTemplates => StructuredLogTemplate\r\nLoggingFactory => LoggerFactory (because it returns an `ILoggerFactory` not an `ILoggingFactory`)\r\nEventsPublisher => EventPublisher\r\nEventsLogsFormattingOptions => EventLogFormattingOptions\r\nExtentions => Extensions (spelling)\r\nLogsTemplateProvider => LogTemplateProvider\r\n\r\nIt would probably make sense to make these changes in a separate PR addressing only the name changes and then rebase this PR on master after pushing those changes to master.\r\n",
      "Boris agrees the renamings should be in a separate PR but he wants to do it after this one, so I'm resuming review of this ignoring the naming issues for now.\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-4348"
    ],
    "commit_messages": [
      "CSHARP-4279: Logs truncation (#891)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f83718912b45d36a074e",
    "number": 890,
    "body": "Relocated all spec tests to `$/specifications` to match the layout of `mongodb/specifications`. Added `LinkedBase` to our existing `EmbeddedResource` directives in the `csproj` files to keep the Solution Explorer layout the same. I made some minor updates to test runners to ensure the correct unified tests were sourced.",
    "head_branch": "csharp4169",
    "is_a_fork": true,
    "comments": [
      "NOTE: Although \"Files changed\" says 1,719, the vast majority are renames (AKA moves from one directory to another). Actual real changes were only in 4 `csproj` files and a handful of test runners.",
      "Note regarding:\r\n\r\n> Added LinkedBase to our existing EmbeddedResource directives in the csproj files to keep the Solution Explorer layout the same\r\n\r\nMy interpretation is slightly different. LinkBase PRIMARILY affects the path of the embedded resources. It results in the path of the embedded resources being the same as they were before the JSON files were moved (in the file system), so that the test runners can continue to find them without requiring changes to the test runner.\r\n\r\nWhat an IDE does with this information varies from IDE to IDE.\r\n\r\nIn Visual Studio 2022 it appears to continue to display the JSON test files in the same locations as before (deep inside the individual test projects). In Rider it displays them in the root of the Solution Explorer (according to James).",
      ">In Visual Studio 2022 it appears to continue to display the JSON test files in the same locations as before (deep inside the individual test projects). In Rider it displays them in the root of the Solution Explorer (according to James).\r\n\r\nTo clarify, Rider also displays the JSON files in their original locations just as VS2022 does.",
      "NOTE: Force-pushed after rebase and squash. Verified that total tests before and after the re-organization are the same."
    ],
    "commit_messages": [
      "CSHARP-4169: Move unified spec tests to  root folder. (#890)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83818912b45d36a074f",
    "number": 889,
    "body": null,
    "head_branch": "csharp2646",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2646: DateTimeOffsetSerializer should be forgiving of the actual numeric types it encounters during deserialization."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83918912b45d36a0750",
    "number": 888,
    "body": null,
    "head_branch": "csharp4304",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4304: Handle conversions to an interface."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83a18912b45d36a0751",
    "number": 887,
    "body": null,
    "head_branch": "csharp4338",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://spruce.mongodb.com/version/6335c6bb850e610d084ce6ae/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC\r\n"
    ],
    "commit_messages": [
      "CSHARP-4338: Update C# language version to 10."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83b18912b45d36a0752",
    "number": 886,
    "body": null,
    "head_branch": "csharp4303",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4303: Exclude create events from change stream events when testing showExpandedEvents (#886)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83c18912b45d36a0753",
    "number": 885,
    "body": null,
    "head_branch": "csharp4220",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83d18912b45d36a0754",
    "number": 884,
    "body": null,
    "head_branch": "csharp4332",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83e18912b45d36a0755",
    "number": 883,
    "body": null,
    "head_branch": "csharp4328",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4328: Code review changes."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f83f18912b45d36a0756",
    "number": 882,
    "body": "EGs:\r\n1. https://evergreen.mongodb.com/version/63252c6e2fbabe6dc475ca38\r\n2. https://evergreen.mongodb.com/version/63252c9d3627e012c6ca4981\r\n3. https://evergreen.mongodb.com/version/63252cbae3c331285526fb19\r\n4. https://evergreen.mongodb.com/version/63252cd561837d6cce9b03cf",
    "head_branch": "csharp4326",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4326: Fix serverless tests. (#882)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84018912b45d36a0757",
    "number": 881,
    "body": "Changes should be self-explanatory. The remarks are copied from the spec update that added the new field.",
    "head_branch": "csharp4274",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4274: Added DisambiguatedPaths to ChangeStreamDocument. (#881)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f84118912b45d36a0758",
    "number": 880,
    "body": null,
    "head_branch": "contributers_update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "- Contributors list update (#880)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84318912b45d36a0759",
    "number": 879,
    "body": null,
    "head_branch": "csharp4278",
    "is_a_fork": true,
    "comments": [
      "> \r\n@JamesKovacs Yes, that would make the code simpler. The downside is that we would be introducing two dictionary look-ups for each event and/or log. Beforehand each event handler was resolved once, so the idea was not to introduce unnecessary look-ups on the hot path. Furthermore I think lookup by type is not the most efficient one.\r\n\r\nIntroducing internal `IEvent` interface is actually an old idea [CSHARP-3433](https://jira.mongodb.org/browse/CSHARP-3433) that introduces more structure to event handling code. We do have a way to achieve the same performance without additional interface, but interface was the most straightforward approach."
    ],
    "commit_messages": [
      "CSHARP-4278: Unified runner for logging tests (#879)\n\n* CSHARP-4278: Unified runner for logging tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f84418912b45d36a075a",
    "number": 878,
    "body": null,
    "head_branch": "csharp4319",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4319: FLE - maxWireVersion should run on Mongo Server 4.0.x. (#878)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84518912b45d36a075b",
    "number": 877,
    "body": "New integration test only.",
    "head_branch": "csharp4317",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4317: Added integration test demonstrating that CSHARP-4316 fix also resolved dictionary key/value projection issue. (#877)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84618912b45d36a075c",
    "number": 876,
    "body": "We were accidentally matching all properties named `Value` or `HasValue` even if they weren't on `Nullable<T>` types.",
    "head_branch": "csharp4316",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4316: Ensure that LINQ3 only applies Nullable property translators to Nullables types and not properties with similar names."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84718912b45d36a075d",
    "number": 875,
    "body": null,
    "head_branch": "bug/linq3_nullable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84818912b45d36a075e",
    "number": 874,
    "body": "Removed `compile` variants along with unused `compile` and `test` tasks. `publish-snapshot` called `evergreen/publish.sh`, which only echoed \"Publishing .NET driver\" and did nothing else.\r\n\r\nI've also removed `compile` variants from running on EG patch requests.",
    "head_branch": "csharp4230",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4230: evergreen.yml cleanup (#874)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84918912b45d36a075f",
    "number": 873,
    "body": "Full EG run of all variants:\r\nhttps://spruce.mongodb.com/version/631131a7d1fe0729bd02f85c/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC",
    "head_branch": "csharp4189",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4189: Upgraded build scripts and Cake to support Apple M1 including fixing failing tests. (#873)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f84a18912b45d36a0760",
    "number": 872,
    "body": null,
    "head_branch": "csharp4267",
    "is_a_fork": true,
    "comments": [
      "> LGTM, but please launch LB tests too in the EG patch in this PR\r\n\r\nGood point. I added our LB variants to the patch build. I'll wait for them to go green before merging.",
      "Load balanced variants are all green. Proceeding with the merge."
    ],
    "commit_messages": [
      "CSHARP-4267: Updated to latest transaction spec tests and enabled load balanced transaction spec tests. (#872)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84b18912b45d36a0761",
    "number": 871,
    "body": "35% performance improvement for huge dto classes deserialization.\r\n1) optimized create instance - without reflection\r\n2) optimized set values to properties- without reflection, boxing, interface virtualization impact (for Deserialize Call)\r\n3) optimized collection deserialization- in most cases we can just return prepared List, in some other cases - removed reflection\r\n4) cache IsReadonly\r\n5) dont call SetRequiredFields if required fields does not exists (flag of required fields exist was cached)\r\n6) seporate deserialization of classes with default constructor and classes with creatorMap (to get rid of null checks)\r\n7) add generic BsonMemberMap<TClass> for some optimizations above\r\n8) fix one test , that used local culture in Parse method and failed\r\nvar expectedResult = decimal.Parse(expectedResultString, CultureInfo.InvariantCulture); -- pass culture here",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your PR. In order to consider accepting this PR, we require filing a CSHARP ticket in [our JIRA project](https://jira.mongodb.org/browse/CSHARP) clearly explaining the problem along with a repro. Be sure to link to your PR.",
      "@DmitryLukyanov I Tried, but get error:\r\n![image](https://user-images.githubusercontent.com/11777855/188148827-8c089744-aaf7-4916-beea-7cb29071245c.png)\r\n",
      "Any way, I created test project here:\r\nhttps://github.com/troepolik/testMongoDBPerformance\r\n\r\njust set reference to BSON project, sure you set release mode and run, and press key to repeate several times to see statistics, then switch to my optimized project. \r\n\r\nSugestion: press repeat in moment when CPU% is low.",
      "Thank you for your research and the PR.\r\n\r\nClosing this PR as we are going to consider those great ideas as part of a general serialization improvement effort [CSHARP-3230](https://jira.mongodb.org/browse/CSHARP-3230)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84c18912b45d36a0762",
    "number": 870,
    "body": "When object has value converted to decimal by system, the TypeCode assigned to it becomes TypeCode.Decimal and the switch case where TypeCode.Object is handled is ignored which is the only place where decimal is being added for object .Because of that, right now when the object is added to a collection instead of being added as \"$numberDecimal\" it gets processed as an non primitive object, the SerializeDiscriminatedValue method is called and the object gets serialized as \"_t\":\"System.Decimal\", \"_v\": value.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hi, @ajinkyagx,\r\n\r\nThank you for your PR. In order to consider accepting this PR, we require a few additional things:\r\n\r\n1. File a CSHARP ticket in [our JIRA project](https://jira.mongodb.org/browse/CSHARP] clearly explaining the problem along with a repro. Be sure to link to your PR.\r\n2. In your PR, add tests to `ObjectSerializerTests` demonstrating that the issue has been fixed.\r\n\r\nWe look forward to reviewing your updated PR.\r\n\r\nSincerely,\r\nJames",
      "We have closed this as there has been no response on this PR. If this is still an issue for you, please file a JIRA ticket and add the tests as requested. Thank you."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84d18912b45d36a0763",
    "number": 869,
    "body": null,
    "head_branch": "csharp4293_2",
    "is_a_fork": true,
    "comments": [
      "The provided solution is incorrect, instead converting a pipeline argument to regular update document, we should emulate `$SetOnInsert` with aggregate pipeline stage. This was recommended by query team:\r\n\r\n    rs:PRIMARY> db.mycoll.update({}, [{$set: {x: {$cond: [{$eq: [{$type: \"$_id\"}, \"missing\"]}, 1, 2]}}}], {upsert: true})\r\n    WriteResult({\r\n            \"nMatched\" : 0,\r\n            \"nUpserted\" : 1,\r\n            \"nModified\" : 0,\r\n            \"_id\" : ObjectId(\"630561dceb783de551833de9\")\r\n    })\r\n    rs:PRIMARY> db.mycoll.find()\r\n    { \"_id\" : ObjectId(\"630561dceb783de551833de9\"), \"x\" : 1 }\r\n    rs:PRIMARY> db.mycoll.update({}, [{$set: {x: {$cond: [{$eq: [{$type: \"$_id\"}, \"missing\"]}, 1, 2]}}}], {upsert: true})\r\n    WriteResult({ \"nMatched\" : 1, \"nUpserted\" : 0, \"nModified\" : 1 })\r\n    rs:PRIMARY> db.mycoll.find()\r\n    { \"_id\" : ObjectId(\"630561dceb783de551833de9\"), \"x\" : 2 }",
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-4293: Update with aggregation pipeline fails when used on a OfTypeMongoCollection (OfType<T>). (#869)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f84e18912b45d36a0764",
    "number": 868,
    "body": null,
    "head_branch": "csharp4295",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4295: Incorrect handling multiple mongocryptd arguments in mongocryptdSpawnArgs. (#868)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f84f18912b45d36a0765",
    "number": 867,
    "body": null,
    "head_branch": "csharp4272",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4272: Validate return value of bsonClassMap.CreateInstance() in BsonClassMapSerializer (#867)\n\n* CSHARP-4272: Avoids null reference exceptions when BsonClassMap::CreateInstance() returns null\r\n\r\n* CSHARP-4272: Validate return value of bsonClassMap.CreateInstance() in BsonClassMapSerializer\r\n\r\nCo-authored-by: Spreafico Matteo <matteo.spreafico@guess.eu>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85118912b45d36a0766",
    "number": 866,
    "body": null,
    "head_branch": "csharp4242",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4242: Do not use interpolated strings for logging"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f85218912b45d36a0767",
    "number": 865,
    "body": "[Smoke tests EG](https://spruce.mongodb.com/version/62e304fe3e8e865395b6ccd1)",
    "head_branch": "csharp4241",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4241: Smoke tests (#865)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f85318912b45d36a0768",
    "number": 864,
    "body": "Eliminated some boxing problems leading to substantial allocations in our code. Details located here: https://jira.mongodb.org/browse/CSHARP-4292",
    "head_branch": "CSHARP-4292",
    "is_a_fork": true,
    "comments": [
      "Everything fixed and cleaned up now using separate commits for easier change tracking - should arguably get squashed."
    ],
    "commit_messages": [
      "CSHARP-4292: Eliminated allocations in GetHashCode methods. (#864)\n\nCo-authored-by: Daniel Hegener <daniel.hegener@fisglobal.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f85418912b45d36a0769",
    "number": 863,
    "body": "Only call Socket.IOControl with IOControlCode.KeepAliveValues on Windows as non-Windows platforms will always throw PlatformNotSupportedExceptions.",
    "head_branch": "csharp4287",
    "is_a_fork": true,
    "comments": [
      "Here's a patch build:\r\nhttps://spruce.mongodb.com/version/62f1a0073066153bcb189396/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC"
    ],
    "commit_messages": [
      "CSHARP-4287: Only call Socket.IOControl with IOControlCode.KeepAliveValues on Windows. (#863)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85518912b45d36a076a",
    "number": 862,
    "body": null,
    "head_branch": "csharp4168",
    "is_a_fork": true,
    "comments": [
      "note: I see that tests failed on EG, looking at this"
    ],
    "commit_messages": [
      "CSHARP-4168: Obtain AWS credentials for CSFLE in the same way as for MONGODB-AWS. (#862)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f85618912b45d36a076b",
    "number": 861,
    "body": null,
    "head_branch": "csharp4285",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4285: Update expected error in fle2-InsertFind-Unindexed test. (#861)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85718912b45d36a076c",
    "number": 860,
    "body": "Related driver-EG-tools PR: https://github.com/mongodb-labs/drivers-evergreen-tools/pull/221",
    "head_branch": "csharp4254_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4252: Test with consistent versions of crypt_shared and server. (#860)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85818912b45d36a076d",
    "number": 859,
    "body": null,
    "head_branch": "csharp4284",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4284: add Rewrap prose test. (#859)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85918912b45d36a076e",
    "number": 858,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added 2.17.1 release notes. (#858)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85a18912b45d36a076f",
    "number": 857,
    "body": null,
    "head_branch": "csharp4281",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4281: Update key material for Azure and KMIP datakeys in RewrapManyDataKey. (#857)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f85b18912b45d36a0770",
    "number": 856,
    "body": null,
    "head_branch": "csharp4259",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4259: Spec test \"change stream resumes after StaleShardVersion\" fails on server version > 6.0. (#856)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85c18912b45d36a0771",
    "number": 855,
    "body": null,
    "head_branch": "csharp4256",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4256: Add a guard for CSFLE tests to ensure that used mongocryptd has expected version. (#855)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f85d18912b45d36a0772",
    "number": 854,
    "body": "Prevents BsonClassMapSerializer from throwing a NullReferenceException when BsonClassMap::CreateInstance() returns null. That may happen if one has configured a creator on the bson map and that creator fails silently returning nulls instead of object instances (think of DI containers).",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks @MatteoSp \r\nMerged [here](https://github.com/mongodb/mongo-csharp-driver/commit/c91a16661d4079bd75a94b0c9e63aa809a835dbb)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f85e18912b45d36a0773",
    "number": 853,
    "body": null,
    "head_branch": "csharp4271",
    "is_a_fork": true,
    "comments": [
      "Just to mention that there is a note that older TFs can have problems with performance on windows for snappier: https://github.com/brantburnett/Snappier#other-projects, probably no action required now, but to keep it in mind",
      "Note that we do have quite a few broken tests, but they are related to server changes (e.g. `latest`) or flaky tests. We need to fix these but they don't have to hold up integration of the compressor work IMHO.",
      "Squash-merged manually due to a minor merge conflict."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86018912b45d36a0774",
    "number": 852,
    "body": null,
    "head_branch": "csharp4252",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4252: Improve reliability of SDAM heartbeat error spec tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86118912b45d36a0775",
    "number": 851,
    "body": null,
    "head_branch": "csharp4159",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4159: Make ThreadStaticBuffer resilient to OutOfMemoryException"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86218912b45d36a0776",
    "number": 850,
    "body": "This PR adds a printer-specific section (`@media print`) to the CSS for the reference documentation to fix a number of things that were causing the pages to not look right when printed.  The appearance when viewing on screen is unaffected.  I've tested by running locally with\r\n\r\n```\r\nhugo server --baseUrl=http://localhost --buildDrafts --watch\r\n```\r\n\r\nThere is an issue where the CSS used in the browser reverts back to the original version when the page is refreshed or the user navigates to a different page.  I'm not sure exactly why.  Before merging, we would need to ensure that the issue does not occur when viewing the documentation for real or fix whatever is causing it.\r\n\r\nBefore:\r\n![C# Print Before](https://user-images.githubusercontent.com/5299/180519003-98c0a3bf-1c61-46c4-bb78-eb24371d6ad3.png)\r\n\r\nAfter:\r\n![C# Print After](https://user-images.githubusercontent.com/5299/180519021-db2fadf5-9e49-428a-b290-3d910bd41733.png)\r\n\r\n",
    "head_branch": "doc-print-css",
    "is_a_fork": true,
    "comments": [
      "Given that your changes are surrounded by `@media print`, I'm not sure how refreshing or browsing to another page could affect the layout. Sounds like a browser idiosyncrasy rather than a CSS problem on our end. I'll merge and we can tweak further if we notice additional problems."
    ],
    "commit_messages": [
      "CSHARP-4268: Tweak stylesheet for printing (#850)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86318912b45d36a0777",
    "number": 849,
    "body": "This PR updates the .editorconfig file to match the coding conventions used in the C# driver.  The changes eliminated something like 95% of the 10,000+ errors from running code analysis on this project.  Tweaks were made to the source code to address the remaining errors.  These changes consisted of fixing portions of the code that were inconsistent with the conventions used elsewhere and removing suppressions of warnings that didn't exist in the first place.  (Perhaps some of these were genuine warnings in earlier C# versions, but more recent compiler versions may be smart enough to recognize that these warnings were superfluous.)  With the entirety of this PR in place, code analysis passes on the project with no errors.\r\n\r\nI've set the severity for a number of the analysis rules to `refactoring`, which means that no error is produced for violating them, but IntelliSense offers you the option to change them in the code editor.  At least some of these might make sense to consider enabling in the future, given that they would represent code quality improvements and modernizations to take full advantage of some of the features added in more recent C# versions.  However, given that this PR is already not tiny and Skunkworks is of limited duration, I'm leaving them disabled for now.",
    "head_branch": "editorconfig-tweaks",
    "is_a_fork": true,
    "comments": [
      "Thanks @dgolub for this cleanup.\r\nWe are going to close this PR as won't do at this moment. The codebase had diverged significantly since this PR, and we'll be doing further significant refactoring for 3.0 release. We are planning to address this issue in [CSHARP-4408](https://jira.mongodb.org/browse/CSHARP-4408), we plan to unify editor configs across all our C# repos."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86418912b45d36a0778",
    "number": 848,
    "body": null,
    "head_branch": "csharp4253",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4253: Increase heartbeatInterval in ConnectionPool_cleared_on_failed_hello test to avoid race condition between RTT and monitoring threads. (#848)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86518912b45d36a0779",
    "number": 847,
    "body": "This includes the following:\r\n- Updated unified change stream tests.\r\n- Implemented parsing of new ChangeStreamOperationTypes, collectionUUID, and operationDescription.",
    "head_branch": "csharp4144",
    "is_a_fork": true,
    "comments": [
      "Squash-merged manually due to a minor merge conflict."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86618912b45d36a077a",
    "number": 846,
    "body": null,
    "head_branch": "csharp4245",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4245: Dispose CancellationTokenSource in tests (#846)\n\n* CSHARP-4245: Dispose CancellationTokenSource in tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86718912b45d36a077b",
    "number": 845,
    "body": "I'm not sure what we can suggest for these tickets:\r\n* https://jira.mongodb.org/browse/CSHARP-2489\r\n* https://jira.mongodb.org/browse/CSHARP-1677\r\n\r\nit looks like too easy and straightforward questions, thoughts?\r\n\r\nNOTE: to deploy changes locally, use this hugo command:\r\n\r\n      ..\\mongo-csharp-driver\\Docs\\reference>hugo.exe server",
    "head_branch": "csharp4021",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4021: Add section to troubleshooting FAQ per driver with top SEO results. (#845)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86818912b45d36a077c",
    "number": 844,
    "body": "I was going to ask Dima for a review to spread the reviews around, but wanted Boris' feedback as well since I'm mentioning the Analyzer. Thanks in advance for double-checking my correctness and grammar.",
    "head_branch": "csharp4206",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4206: Update LINQ3 docs to note that the LINQ3 provider is production-ready. (#844)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86a18912b45d36a077d",
    "number": 843,
    "body": "Comment for distinct was implemented previously. This commit simply adds unified tests for the functionality.",
    "head_branch": "csharp4184",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4184: Sync'd distinct-commnet tests from CRUD spec and updated unified runner. (#843)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86b18912b45d36a077e",
    "number": 842,
    "body": "This is draft PR, and does not contain unit tests for logging helpers",
    "head_branch": "csharp4209",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4209: Integrate with .NET Logging library (#842)\n\nCSHARP-4209: Integrate with .NET Logging library"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f86c18912b45d36a077f",
    "number": 841,
    "body": null,
    "head_branch": "csharp4049",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4049: Verify that issue is not present in LINQ3. (#841)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86d18912b45d36a0780",
    "number": 840,
    "body": null,
    "head_branch": "csharp1906",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-1906: Test that case insensitive searches work in LINQ. (#840)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86e18912b45d36a0781",
    "number": 839,
    "body": null,
    "head_branch": "csharp2003",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2003: $bitsAnySet etc should work with Enums. (#839)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f86f18912b45d36a0782",
    "number": 838,
    "body": null,
    "head_branch": "csharp1555",
    "is_a_fork": true,
    "comments": [
      "The original repro in the ticket registered these conventions:\r\n\r\n```\r\nvar conventionPack = new ConventionPack\r\n{\r\n    new IgnoreIfNullConvention(true),\r\n    new NoIdMemberConvention()\r\n};\r\nConventionRegistry.Register(\"GlobalConventions\", conventionPack, t => true);\r\n```\r\n\r\nBut we can't do that in our test suite because it would alter global state.\r\n\r\nInstead I used the `[BsonIgnoreIfNull]` attribute on each member of the `Person` class.\r\n\r\nI did NOT use the equivalent of `NoIdMemberConvention` because that convention is not appropriate for documents stored in a collection which MUST have an `_id`."
    ],
    "commit_messages": [
      "CSHARP-1555: Verify that issue is not present in LINQ3. (#838)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87018912b45d36a0783",
    "number": 837,
    "body": null,
    "head_branch": "csharp2108",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2108: Subtracting one date from another in LINQ. (#837)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87118912b45d36a0784",
    "number": 836,
    "body": null,
    "head_branch": "csharp4238",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4238: Convert unit tests for $dateXyz operators to integration tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f87218912b45d36a0785",
    "number": 835,
    "body": "No changes to push to master.\r\n\r\nJust verifying that the issue is no longer present in LINQ3.",
    "head_branch": "csharp4057",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4057: Verify that issue is not present in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87318912b45d36a0786",
    "number": 834,
    "body": "No changes to push to master.\r\n\r\nJust verify issue is no longer present.",
    "head_branch": "csharp3614",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3614: Verify that issue is not present in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87418912b45d36a0787",
    "number": 833,
    "body": "No changes to push to master.\r\n\r\nJust verifying that the issue is no longer present.",
    "head_branch": "csharp2107",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2107: Verify that issue is not present in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87518912b45d36a0788",
    "number": 832,
    "body": "Check the repro and see if you agree that this is now working.",
    "head_branch": "csharp1754",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87618912b45d36a0789",
    "number": 831,
    "body": null,
    "head_branch": "csharp4234",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4234: Add AppendStage extension method to IMongoQueryable."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f87718912b45d36a078a",
    "number": 830,
    "body": null,
    "head_branch": "csharp4204",
    "is_a_fork": true,
    "comments": [
      "already merged"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87818912b45d36a078b",
    "number": 829,
    "body": null,
    "head_branch": "csharp3529-skiptests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3529: Skip tests on older servers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f87918912b45d36a078c",
    "number": 828,
    "body": null,
    "head_branch": "csharp3958",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3958: Add an expression to sort an array."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f87b18912b45d36a078d",
    "number": 827,
    "body": "The mongocryptd's `hello` response:\r\n\r\n        MongoDB Enterprise > db.isMaster()\r\n        {\r\n                \"ismaster\" : true,\r\n                \"iscryptd\" : true,\r\n                \"maxBsonObjectSize\" : 16777216,\r\n                \"maxMessageSizeBytes\" : 48000000,\r\n                \"localTime\" : ISODate(\"2022-06-22T01:27:36.854Z\"),\r\n                \"maxWireVersion\" : 17,\r\n                \"minWireVersion\" : 0,\r\n                \"ok\" : 1\r\n        }",
    "head_branch": "csharp3191",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3191: driver tries to run getLastError on mongocryptd that does not exists. (#827)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f87c18912b45d36a078e",
    "number": 826,
    "body": null,
    "head_branch": "csharp4106",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4106: Add ClientEncryption entity and Key Management API operations to Unified Test Format. (#826)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f87d18912b45d36a078f",
    "number": 825,
    "body": null,
    "head_branch": "csharp4221",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4221: Fix packaging tests. (#825)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87e18912b45d36a0790",
    "number": 824,
    "body": null,
    "head_branch": "csharp4213",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4213: CryptClient.StartDecryptionContext pins buffer but never unpins. (#824)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f87f18912b45d36a0791",
    "number": 823,
    "body": "The following are represented using `MemberInitExpression`:\r\n\r\n```\r\nnew C { X = 1, Y = 2 }\r\nnew C(x: 1) { Y = 2 }\r\n```\r\n\r\nThe following are represented using `NewExpression`:\r\n\r\n```\r\nnew C(x: 1, y: 2)\r\nnew { X = 1, Y = 2 } // this one is a bit surprising because it \"looks\" like it should be a MemberInitExpression\r\n```\r\n\r\nThe implementation of `NewExpressionToAggregationExpressionTranslator` assumed that it was only being called for anonymous classes. \r\n\r\nThis PR modifies `NewExpressionToAggregationExpressionTranslator` to support constructor calls also.",
    "head_branch": "csharp3922",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88018912b45d36a0792",
    "number": 822,
    "body": "We found a problem in target build for msbuild that seems\r\nto break web project publishing in MsBuild. The modification\r\ndone at the target includes multiple times the same file\r\nmaking publishing from MsBuild commandline to fail.\r\n\r\nDetails are in jira https://jira.mongodb.org/browse/CSHARP-4214\r\n\r\nI'm not entirely sure of the fix, previous version of the file was really simpler, it includes explicitly the dll that should be included, this version uses overlapping wildcard that generates issue.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4214: Fixed Build target. (#822)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88118912b45d36a0793",
    "number": 821,
    "body": null,
    "head_branch": "csharp4172",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SHARP-4172: Enum constant not serialized using the correct serializer."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88218912b45d36a0794",
    "number": 820,
    "body": null,
    "head_branch": "csharp3529",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3529: Support $topN and similar accumulators in $group."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f88318912b45d36a0795",
    "number": 819,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Are the existing tests below for `IList<>` sufficient?\r\nhttps://github.com/mongodb/mongo-csharp-driver/blob/1674b075744c0cf55b814255ff4e0eeee24b9736/tests/MongoDB.Bson.Tests/Serialization/Serializers/GenericEnumerableSerializerTests.cs#L127\r\n\r\nOr do we need one set of tests for `List<>` as well?",
      "Yes, the tests in `GenericEnumerableSerializerTests.cs` are sufficient to validate current behaviour. Please add test cases based on your repro to demonstrate that the change fixes the reported issue. Thanks!",
      "Alright, I have added the tests for the scenario reported.",
      "Thank you for adding the requested tests. We are reviewing the PR and will get back to you in the next few days with feedback.",
      "Thank you for your contribution. I have added you to our contributors list in the [README.md](https://github.com/mongodb/mongo-csharp-driver/blob/master/README.md)."
    ],
    "commit_messages": [
      "CSHARP-4205: Fix serialization of generic enumerable not implementing List<T> (#819)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88418912b45d36a0796",
    "number": 818,
    "body": "MongoDB.Driver connections fail in .net core 3.1 Azure Functions (v3)",
    "head_branch": "csharp4200",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4200: DnsClient version update (#818)\n\nMongoDB.Driver connections fail in .net core 3.1 Azure Functions (v3)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88618912b45d36a0797",
    "number": 817,
    "body": "[Jira Link](https://jira.mongodb.org/browse/CSHARP-4203)",
    "head_branch": "CSHARP-4203",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4203: IFindFluentExtensions for Any and AnyAsync (#817)\n\nCo-authored-by: Matthew DeJonge <mdejonge@terryberry.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f88718912b45d36a0798",
    "number": 816,
    "body": null,
    "head_branch": "csharp4202",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4202: Specify correct max supported wire version. (#816)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88818912b45d36a0799",
    "number": 815,
    "body": null,
    "head_branch": "csharp4187",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4187: MongoDB .NET Driver Quick Tour - Query Example Consistency. (#815)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88b18912b45d36a079a",
    "number": 814,
    "body": "https://dmitrylukyanov.github.io/mongo-csharp-driver/ ",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add 2.16 docs. (#814)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f88c18912b45d36a079b",
    "number": 813,
    "body": null,
    "head_branch": "csharp4164",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4164: Provide FLE 2.0 API example for docs team. (#813)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88d18912b45d36a079c",
    "number": 812,
    "body": null,
    "head_branch": "updaterefdocsversionnumber-2.16.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update current version in refdocs."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88e18912b45d36a079d",
    "number": 811,
    "body": "EG: https://evergreen.mongodb.com/version/629a5a972fbabe4e00f4c976",
    "head_branch": "csharp4188",
    "is_a_fork": true,
    "comments": [
      "waiting EG and then will publish 1.5.2 bindings release"
    ],
    "commit_messages": [
      "CSHARP-4188: Update expected FLE 2 find payloads in tests. (#811)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f88f18912b45d36a079e",
    "number": 810,
    "body": null,
    "head_branch": "fixsandcastlewarnings-2.16.0",
    "is_a_fork": true,
    "comments": [
      "Most Sandcastle warnings fixed but still have these I haven't figure out yet:\r\n\r\n```\r\nBuildAssembler : warning : ResolveReferenceLinksComponent: [T:MongoDB.Bson.BsonArray] Member ID URL resolver service failed.  No further look ups will be performed for this build. [C:\\work\\rstam\\mongo-csharp-driver\\artifacts\\docs\\ApiDocs-2.15.0\\Working\\BuildTopics.proj]\r\nBuildAssembler : warning : Reason: The request was aborted: Could not create SSL/TLS secure channel. [C:\\work\\rstam\\mongo-csharp-driver\\artifacts\\docs\\ApiDocs-2.15.0\\Working\\BuildTopics.proj]\r\nBuildAssembler : warning : ResolveReferenceLinksComponent: [T:MongoDB.Bson.BsonArray] Member ID URL not found for target &#39;T:System.Object&#39;. [C:\\work\\rstam\\mongo-csharp-driver\\artifacts\\docs\\ApiDocs-2.15.0\\Working\\BuildTopics.proj]\r\nBuildAssembler : warning : ResolveReferenceLinksComponent: [T:MongoDB.Bson.BsonArray] Member ID URL resolver service failed.  No further look ups will be performed for this build. [C:\\work\\rstam\\mongo-csharp-driver\\artifacts\\docs\\ApiDocs-2.15.0\\Working\\BuildTopics.proj]\r\nBuildAssembler : warning : Reason: The request was aborted: Could not create SSL/TLS secure channel. [C:\\work\\rstam\\mongo-csharp-driver\\artifacts\\docs\\ApiDocs-2.15.0\\Working\\BuildTopics.proj]\r\n```"
    ],
    "commit_messages": [
      "Fix Sandcastle warnings."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f89018912b45d36a079f",
    "number": 809,
    "body": null,
    "head_branch": "csharp4194",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4194: Added public preview warning for Queryable Encryption."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89218912b45d36a07a0",
    "number": 808,
    "body": null,
    "head_branch": "csharp4193",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4193: Add [Beta] flags for public Queryable Encryption API. (#808)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f89318912b45d36a07a1",
    "number": 807,
    "body": null,
    "head_branch": "releasenotes-2.16.0",
    "is_a_fork": true,
    "comments": [
      "@rstam we probably need to mention this one: https://jira.mongodb.org/browse/CSHARP-4149?focusedCommentId=4546185&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-4546185",
      "> @rstam we probably need to mention this one: https://jira.mongodb.org/browse/CSHARP-4149?focusedCommentId=4546185&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-4546185\r\n\r\n@JamesKovacs do you want to mention anything about this one?",
      "> > @rstam we probably need to mention this one: https://jira.mongodb.org/browse/CSHARP-4149?focusedCommentId=4546185&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-4546185\r\n> \r\n> @JamesKovacs do you want to mention anything about this one?\r\n\r\nThat falls under the umbrella of Queryable Encryption IMHO.",
      "> > > @rstam we probably need to mention this one: https://jira.mongodb.org/browse/CSHARP-4149?focusedCommentId=4546185&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-4546185\r\n> > \r\n> > \r\n> > @JamesKovacs do you want to mention anything about this one?\r\n> \r\n> That falls under the umbrella of Queryable Encryption IMHO.\r\n\r\nit's specific for c# issue, but I will be ok with any decision here"
    ],
    "commit_messages": [
      "Release notes for 2.16.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89418912b45d36a07a2",
    "number": 806,
    "body": null,
    "head_branch": "csharp4191",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89518912b45d36a07a3",
    "number": 805,
    "body": "`modifyCollection-pre_and_post_images` skipped as we don't have the corresponding helpers.",
    "head_branch": "csharp4152",
    "is_a_fork": true,
    "comments": [
      "[Pushed](https://github.com/mongodb/mongo-csharp-driver/commit/826d8db16bc39278f0373ddab1e91b30e518f7b4)",
      "[Pushed](https://github.com/mongodb/mongo-csharp-driver/commit/826d8db16bc39278f0373ddab1e91b30e518f7b4)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89618912b45d36a07a4",
    "number": 804,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "FYI @DmitryLukyanov @rstam "
    ],
    "commit_messages": [
      "Improve documentation for IFindFluent.Limit to note behaviour when passing zero or null (#804)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f89718912b45d36a07a5",
    "number": 803,
    "body": null,
    "head_branch": "csharp4181",
    "is_a_fork": true,
    "comments": [
      "Probably not worth pushing to master unless we want evidence in master that it works in LINQ3.",
      "Closed without merging to master because the repro showed that it already works in LINQ3."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89818912b45d36a07a6",
    "number": 802,
    "body": null,
    "head_branch": "csharp4150",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4150: Always report 'wallTime' in the change stream event output. (#802)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f89918912b45d36a07a7",
    "number": 801,
    "body": null,
    "head_branch": "csharp4186",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89a18912b45d36a07a8",
    "number": 800,
    "body": null,
    "head_branch": "csharp4111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4111: Incorrect & outdated CSFLE statements in C# docs. (#800)\n\nCSHARP-4111: Incorrect & outdated CSFLE statements in C# docs."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89b18912b45d36a07a9",
    "number": 799,
    "body": "Waiting for EG before being ready for review",
    "head_branch": "csharp4065",
    "is_a_fork": true,
    "comments": [
      "not ready for review",
      "close this for now since current implementation gives some additional issues and it's unclear when we will have chance to look at it again"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89c18912b45d36a07aa",
    "number": 798,
    "body": null,
    "head_branch": "csharp4147",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4147: Unified change stream spec tests should forbid serverless environment. (#798)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89d18912b45d36a07ab",
    "number": 797,
    "body": "EG: https://evergreen.mongodb.com/version/6286ac582fbabe0be724d3b0",
    "head_branch": "csharp4171",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4171: Support for Deploying MongoDB behind a L4 Load Balancer 5.0 Backports. (#797)\n\nCSHARP-4171: Support for Deploying MongoDB behind a L4 Load Balancer 5.0 Backports."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f89f18912b45d36a07ac",
    "number": 796,
    "body": null,
    "head_branch": "csharp4173",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4173: Update FLE 2 collection management. (#796)\n\nCSHARP-4173: Update FLE 2 collection management."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8a018912b45d36a07ad",
    "number": 795,
    "body": null,
    "head_branch": "csharp3915skip",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/628524f42fbabe0be71c8c09"
    ],
    "commit_messages": [
      "CSHARP-3915: Use SkippableFact and SkippableTheory when using RequireServer."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8a118912b45d36a07ae",
    "number": 794,
    "body": "The API to create a clustered index is:\r\n\r\n```\r\nvar options = new CreateCollectionOptions<Product>\r\n{\r\n    ClusteredIndex = new ClusteredIndexOptions<Product>\r\n    {\r\n        Key = Builders<Product>.IndexKeys.Ascending(x => x.Id),\r\n        Unique = true,\r\n        Name = \"custom clustered index key name\"\r\n    }\r\n};\r\ndb.CreateCollection(\"products\", options);\r\n```\r\n\r\nThe `Key` must be `{ _id: 1 }` and `Unique` must be `true` at the moment, but the spec was written in such a way that the server can remove these requirements in the future and not require additional work by drivers. If you create a `new ClusteredIndexOptions<T>()`, these options will be defaulted automatically.\r\n\r\nIdeally I wanted to support non-generic `CreateCollectionsOptions.ClusteredIndex`, but `CreateCollectionOptions<TDocument>` derives from `CreateCollectionOptions`. I couldn't think of a way to define a `CreateIndexOptions.ClusteredIndex` property with type `ClusteredIndexOptions<BsonDocument>` but then change the type of the property on the derived type to `CreateCollectionOptions<TDocument>.ClusteredIndex` to `ClusteredIndexOptions<TDocument>`. I opted to only support the `ClusteredIndex` property on `CreateCollectionOptions<TDocument>`. If anyone has ideas, I'm all ears.",
    "head_branch": "csharp4141",
    "is_a_fork": true,
    "comments": [
      "I think adding `ClusteredIndexOptions<TDocument>` to `CreateCollectionOptions<TDocument>` is fine.\r\n\r\nThe non-generic `CreateCollectionOptions` only exists for backward compatibility. If we were starting from a clean slate the non-generic base class would not exist and we would only have `CreateCollectionOptions<TDocument>`."
    ],
    "commit_messages": [
      "CSHARP-4141: Clustered Indexes for all Collections. (#794)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8a218912b45d36a07af",
    "number": 793,
    "body": null,
    "head_branch": "csharp4153",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4153: Add FLE 2 API to AutoEncryptionOpts. (#793)\n\nCSHARP-4160: Add FLE 2 test for compactStructuredEncryptionData.\r\nCSHARP-4157: Add FLE 2 API to ClientEncryptionOpts.\r\nCSHARp-4175: Ban comparisons to encrypted fields in collection validator and partialFilterExpression.\r\nCo-authored-by: Boris <boris.dogadov@mongodb.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8a318912b45d36a07b0",
    "number": 792,
    "body": "CSHARP-4094 changes split from CSHARP-4095 (PR #789).",
    "head_branch": "csharp4094",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4094: Add 'comment' option to EstimatedDocumentCountOptions. (#792)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8a418912b45d36a07b1",
    "number": 791,
    "body": "NOTE: We will need updating EG env variables for release branches as well",
    "head_branch": "csharp3947",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3947: Update serverless testing for load balancer fronting single proxy. (#791)\n\nCSHARP-3947: Update serverless testing for load balancer fronting single proxy."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8a518912b45d36a07b2",
    "number": 790,
    "body": null,
    "head_branch": "csharp4149",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4149: Add FLE 2 behavior for CreateCollection() and Collection.Drop(). (#790)\n\nCSHARP-4149: Add FLE 2 behavior for CreateCollection() and Collection.Drop()."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8a618912b45d36a07b3",
    "number": 789,
    "body": "Mostly straightforward PR. Comments inline below.",
    "head_branch": "csharp4095",
    "is_a_fork": true,
    "comments": [
      "Found out why `CSHARP-4095` was failing on pre-5.0 servers. We have a new spec test (`crud.tests.unified.replaceOne-dots_and_dollars.json_Unacknowledged_write_using_dollar-prefixed_or_dotted_keys_may_be_silently_rejected_on_pre-5.0_server`) that only runs on pre-5.0 servers that executes an unacknowledged `replaceOne`. Our test code tries to convert the `ReplaceOneResult.Unacknowledged` object to an `OperationResult` but it fails when accessing the properties because it is unacknowledged. Looks like previous spec tests have only dealt with `ReplaceOneResult.Acknowledged` where accessing those properties is valid. The latest commit fixes this spec test conversion bug.\r\n\r\nAlso worth noting that this PR resolves `CSHARP-4094: Add 'comment' option to EstimatedDocumentCountOptions`. I noticed that these new spec tests were failing and didn't realize there was a separate ticket for this feature. We can discuss whether it is worth breaking this PR apart into two separate features.",
      "Split CSHARP-4094 changes into its own PR #792.",
      "I had to force push the latest changes since I rebased on CSHARP-4094, which was split from this PR."
    ],
    "commit_messages": [
      "CSHARP-4095: Use count command for estimatedDocumentCount. (#789)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8a818912b45d36a07b4",
    "number": 788,
    "body": "[New deployment](https://borisdog.github.io/mongo-csharp-driver/)",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated v2.15.1 docs. (#788)\n\n* Updated v2.15.1 docs."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8a918912b45d36a07b5",
    "number": 787,
    "body": null,
    "head_branch": "v2.15.x_release_notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added release notes for v2.15.1. (#787)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8aa18912b45d36a07b6",
    "number": 786,
    "body": null,
    "head_branch": "csharp3915",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ab18912b45d36a07b7",
    "number": 785,
    "body": "Similar to CSHARP-4155 except adding the quarterly rapid releases to our test matrix.",
    "head_branch": "csharp4156",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4156: Test against MongoDB quarterly rapid releases (#785)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ac18912b45d36a07b8",
    "number": 784,
    "body": null,
    "head_branch": "csharp4155",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4155: Test against MongoDB 6.0. (#784)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ae18912b45d36a07b9",
    "number": 783,
    "body": "Fixing URLs in our `gh-pages` branch. You can browse the live deployment on my fork here:\r\n\r\nhttps://jameskovacs.github.io/mongo-csharp-driver/",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4124: Updated docs.mongodb.com to www.mongodb.com/docs and similar redirect fixes. (#783)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8af18912b45d36a07ba",
    "number": 782,
    "body": "Updated docs.mongodb.com to www.mongodb.com/docs. Also ensured that we are using https consistently, fixed broken links, and replaced mongodb.org redirects with the correct URLs. I'll be putting up a separate PR for updating the live gh-pages documentation.",
    "head_branch": "csharp4124",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4124: Replaced docs.mongodb.com with www.mongodb.com/docs and similar URL redirect fixes. (#782)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8b018912b45d36a07bb",
    "number": 781,
    "body": "Sync'd new `aggregate-allowdiskuse.[json|yml]`. No production code changes necessary as we use `bool? AllowDiskUse` throughout the driver. If `AllowDiskUse` isn't set explicitly, we use the server's default, which is false on pre-6.0 and true on 6.0 or later.",
    "head_branch": "csharp4138",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4138: Added new allowDiskUse tests. (#781)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8b118912b45d36a07bc",
    "number": 780,
    "body": null,
    "head_branch": "csharp3955",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3955: Implement carry forward window function."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8b218912b45d36a07bd",
    "number": 779,
    "body": "How to configure AWS auth for atlas cluster:\r\n1. Get your AWS_* (aws_access_key_id, aws_secret_access_key, aws_session_token) credentials in Single Sign-on page:\r\n![image](https://user-images.githubusercontent.com/44870738/170119324-b9f00690-8e97-47cb-bd9d-a5d8eb40ca30.png)\r\n\r\nPay attention that values should be regenerated from time to time.\r\n2. Configure credentials folder here: `c:\\Users\\{user_name}\\.aws\\`\r\n3. Get your arn via `get-caller-identity`:\r\n   \r\n       $ ./aws sts get-caller-identity\r\n        {\r\n            \"UserId\": \"blablabla:[dmitry.lukyanov@mongodb.com](mailto:dmitry.lukyanov@mongodb.com)\",\r\n            \"Account\": \"%ID_VALUE%\",\r\n            \"Arn\": \"arn:aws:sts::%ID_VALUE%:assumed-role/%ROLE_NAME%/[dmitry.lukyanov@mongodb.com](mailto:dmitry.lukyanov@mongodb.com)\"\r\n         }\r\npay attention on %ROLE_NAME%\r\n4. list all roles via:\r\n\r\n         $ ./aws iam list-roles\r\n         {\r\n           \"Roles\": [\r\n           {\r\n                 \"Path\": \"..\",\r\n                 \"RoleName\": \"%ROLE_NAME%\",\r\n                 \"Arn\": \"arn:aws...:\r\n            ...\r\n\r\nin the provided roles, search for a record with a RoleName equal to %ROLE_NAME% and record his `arn`.\r\n5. In your atlas cluster, create a new user with AWS authentication and set AWS IAM Role ARN from #4.\r\n6. Then configure a mongoClient in the same way as it's done in this PR with `MONGODB-AWS` auth credentials\r\n",
    "head_branch": "csharp4127",
    "is_a_fork": true,
    "comments": [
      "it was decided to use `find` instead listdatabases."
    ],
    "commit_messages": [
      "CSHARP-4127: Language specific examples for AWS Lambda. (#779)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8b318912b45d36a07be",
    "number": 778,
    "body": null,
    "head_branch": "csharp3946",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8b418912b45d36a07bf",
    "number": 777,
    "body": "This prevents a rare case where the flag stays `true` when an exception occurs (for example OOM)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hi, @matthid,\r\n\r\nThank you for submitting this PR. Please file an issue at https://jira.mongodb.org/browse/CSHARP that describes the problem being fixed. It would also help to have unit tests to demonstrate that the fix behaves as intended.\r\n\r\nSincerely,\r\nJames",
      "hi @JamesKovacs, see https://jira.mongodb.org/browse/CSHARP-4159\r\nSadly this is quite hard to reproduce, you might be able to mock some part of the framework to do it (like make `Thread.CurrentThread.ManagedThreadId` throw an exception), I'm not sure you have the infrastructure in place to do it and I don't think it is worth building for this particular issue.\r\nThe good thing is that the problem and fix should be quite obvious from code inspection and there are other ways to fix it (like a try-finally) so you should feel free to fix it in a different way.",
      "I've faced the same problem when __isBufferRented never unset. Will the fix be merged?",
      "@matthid I started seeing this being thrown in our Prod system as well. During a spike in load on one of the two ChangeStream connections in our service. Was wondering your thoughts on how to properly handle this. Was thinking about disposing the whole connection and starting over but I don't see that as a `try-finally` solution. Was wondering your thoughts on that since you mentioned it above.",
      "@Schanckopotamus The only thing you can do to keep your app running is to dispose the whole thread this happens in, but this is not viable depending on which threads you use (like the main thread). The easiest is to restart the application when this happens (gracefully shutdown / failfast).\r\nThe easiest would be if the mongo guys would just fix it.",
      "@matthid Yeah that was my fear that I would have to kill the thread. I might be able to figure something out. I'm running a separate hosted service in an asp.net core Worker service for each ChangeStream created. I might be able to do something there, I'll have to research (haven't had an issue yet to make me dig into restarting a hosted service), until this is fixed in the Driver. \r\n\r\nMan it's gonna be a gross solution I bet, ugh.\r\n\r\nThank you for the insight.",
      "@matthid thank you for submitting a PR for this issue. Merged [here](https://github.com/mongodb/mongo-csharp-driver/commit/a87a6c5122bc0991abf493aa6d68e6f8a8fc1b7b)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8b518912b45d36a07c0",
    "number": 776,
    "body": "[EG ](https://spruce.mongodb.com/version/62619301306615555734fac2/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC)\r\nPlease note that this PR is based on [CSHARP-4034 PR](https://github.com/mongodb/mongo-csharp-driver/pull/771)., which should be finalized first.",
    "head_branch": "csharp3634",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3634: Convert change stream spec tests to unified test format (#776)\n\nCSHARP-3634: Convert change stream spec tests to unified test format"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8b618912b45d36a07c1",
    "number": 775,
    "body": null,
    "head_branch": "csharp3140",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3140: PartialEvaluator should not evaluate unnecessary clauses for AndAlso, Conditional and OrElse."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8b718912b45d36a07c2",
    "number": 774,
    "body": "Oops.",
    "head_branch": "csharp4140b",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4140: Skip $getField tests on older servers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8b818912b45d36a07c3",
    "number": 773,
    "body": null,
    "head_branch": "csharp1950",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-1950: Allow string or regular expressions in values for $in with string."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8b918912b45d36a07c4",
    "number": 772,
    "body": null,
    "head_branch": "csharp4140",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4140: Only use $getField when absolutely necessary."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ba18912b45d36a07c5",
    "number": 771,
    "body": "[EG](https://spruce.mongodb.com/version/625db17e7742ae58d2d83865)",
    "head_branch": "csharp4034",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4034: Change streams support for user-facing PIT pre- and post-images (#771)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8bc18912b45d36a07c6",
    "number": 770,
    "body": "As far as I understood, the auto CSFLE behavior with no schema can be different and sometimes libmongocrypt can throw exception. Kevin mentioned this case: `an aggregate with $lookup stage to another collection`. But for this particular test case, no schema means no encryption, even though some inner machinery still will be involved",
    "head_branch": "csharp4135",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4135: Add CSFLE spec test for auto encryption on a collection with no jsonSchema. (#770)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8bd18912b45d36a07c7",
    "number": 769,
    "body": null,
    "head_branch": "csharp4118",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4118: Limit propagation of known serializers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8be18912b45d36a07c8",
    "number": 768,
    "body": null,
    "head_branch": "csharp4126",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8bf18912b45d36a07c9",
    "number": 767,
    "body": "[EG](https://evergreen.mongodb.com/version/625713e10305b93ec0ffe5b2)",
    "head_branch": "csharp4136",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4136: CSFLE badQueries and types errorContains failing to match on mongocryptd 6.0.0-alpha (#767)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8c018912b45d36a07ca",
    "number": 766,
    "body": "Also\r\nCSHARP-4109: Test getMore with comment on all topologies",
    "head_branch": "csharp4108",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4108: Inherited comment causes OperationFailure on MongoDB <4.4.0 (#766)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8c118912b45d36a07cb",
    "number": 765,
    "body": null,
    "head_branch": "csharp4026",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4026: Preemptively cancel in progress operations when SDAM heartbeats timeout. (#765)\n\nCSHARP-4026: Preemptively cancel in progress operations when SDAM heartbeats timeout."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8c218912b45d36a07cc",
    "number": 764,
    "body": null,
    "head_branch": "csharp4097",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4097: Clarify intended bounding of implicit session allocation and rework flaky prose test (#764)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8c318912b45d36a07cd",
    "number": 763,
    "body": null,
    "head_branch": "csharp4129",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4129: CSFLE \"Custom Endpoint Test\" Case 5 fails match"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8c418912b45d36a07ce",
    "number": 762,
    "body": "CSHARP-4117: Change Stream event document missing \"to\" field for rename events\r\n\r\n[EG](https://evergreen.mongodb.com/version/625471743e8e86172730bd47)",
    "head_branch": "csharp4036",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3934: Do not error when parsing change stream event documents (#762)\n\nCSHARP-4117: Change Stream event document missing \"to\" field for rename events"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8c518912b45d36a07cf",
    "number": 761,
    "body": null,
    "head_branch": "csharp4100",
    "is_a_fork": true,
    "comments": [
      "CSharp4100ExpressionTests and CSharp4100FilterTests are complementary. They both have the same tests, but the asserts differ as the same expressions are often translated differently for expressions and filters.\r\n\r\nIt can be instructive to diff the two files against each other.",
      "@JamesKovacs, @DmitryLukyanov pointed out that some variants in Evergreen were failing.\r\n\r\nI looked into it and found that some String methods are defined in .NET Core 3.1 aren't defined in .NET Standard 2.0.\r\n\r\nI've managed to support them using reflection.\r\n\r\nThe new code to workaround this is wrapped in `#if NETSTANDARD2_0` to make it easy to remove in the future.\r\n\r\nI will re-request your review."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8c618912b45d36a07d0",
    "number": 760,
    "body": null,
    "head_branch": "csharp4062",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4062: Projection of constant with no known serializer is not supported."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8c718912b45d36a07d1",
    "number": 759,
    "body": null,
    "head_branch": "csharp4116",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4116: Optimize { $expr : true } to { }."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8c918912b45d36a07d2",
    "number": 758,
    "body": "The LINQ translator does not recognize calls to `String.Compare(a, b, StringComparison.OrdinalIgnoreCase)` in the LINQ translator.  This means that it's not possible to create a LINQ query that does a case insensitive string comparison; only case sensitive string equals works today.\r\n\r\nThe goal is to convert this:\r\n`String.Compare(a, \"value\", StringComparison.OrdinalIgnoreCase) >= 0`\r\n\r\nInto this:\r\n`{ $expr: { $gte: [ { $strcasecmp: [ \\\"$a\\\", \\\"value\\\" ] }, 0 ]} }`\r\n\r\nThis patch implements this feature in a similar method to the way String.Equals is implemented today.\r\n\r\nUnfortunately, as I'm a new contributor, I haven't yet figured out how to run the tests prior to submitting a PR.  It looks like there are environment variables and AWS keys that must be set up for the tests to function correctly - is it possible for me to run these tests standalone?\r\n\r\nPotential improvements:\r\n* Modify the \"CompareTo\" translator to also support CompareTo calls of type String; today it only recognizes generic $cmp\r\n* Add a function into FilterBuilder called `.StrCaseCmp` to allow casual users to make these calls via shorthand",
    "head_branch": "tspence/case-insensitive-search",
    "is_a_fork": true,
    "comments": [
      "Hi, @tspence, \r\n\r\nThank you for the PR. I see that @rstam already replied on [CSHARP-4115](https://jira.mongodb.org/browse/CSHARP-4115) explaining the challenges with `StringComparison.OrdinalIgnoreCase`. I've closed this PR for the reasons explained in that ticket. This is an area that we are actively trying to improve at the moment and appreciate your contribution.\r\n\r\nSincerely,\r\nJames"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ca18912b45d36a07d3",
    "number": 757,
    "body": null,
    "head_branch": "csharp4042",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4042: Rename \"Versioned API\" to \"Stable API\" in documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8cb18912b45d36a07d4",
    "number": 756,
    "body": null,
    "head_branch": "csharp4098",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4098: Include more detail when throwing PlatformNotSupportedException errors"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8cc18912b45d36a07d5",
    "number": 755,
    "body": null,
    "head_branch": "csharp4110",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8cd18912b45d36a07d6",
    "number": 754,
    "body": null,
    "head_branch": "csharp4047",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4047: Nested where clause in select only works with IEnumerable<T>."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ce18912b45d36a07d7",
    "number": 753,
    "body": null,
    "head_branch": "csharp4079",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4079: Implement positional update operators in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8cf18912b45d36a07d8",
    "number": 752,
    "body": null,
    "head_branch": "csharp4031",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4031: Update load balancer tests to support dedicated load balancer port. (#752)\n\nCSHARP-4031: Update load balancer tests to support dedicated load balancer port."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8d218912b45d36a07d9",
    "number": 751,
    "body": "https://dmitrylukyanov.github.io/mongo-csharp-driver/",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add 2.15 docs. (#751)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8d318912b45d36a07da",
    "number": 750,
    "body": "CSHARP-4090: Implement support for string.Contains(match, StringComparison).\r\nCSHARP-4092: Fix case-insensitive StartsWith/EndsWith to generate correct MQL.",
    "head_branch": "csharp4090",
    "is_a_fork": true,
    "comments": [
      "The way we use `StringComparison.CurrentCulture` in this PR is consistent with how it was already being used by the existing support for `StartsWith` and `EndsWith`, so that's good.\r\n\r\nWe might still need to review *other* uses of `StringComparison` to make sure we are consistent. In particular that \"current culture\" maps to \"pipeline culture\" and whether \"ordinal\" or \"invariant\" are supported at all.",
      "> We might still need to review _other_ uses of `StringComparison` to make sure we are consistent. In particular that \"current culture\" maps to \"pipeline culture\" and whether \"ordinal\" or \"invariant\" are supported at all.\r\n\r\n`EqualsMethodToAggregationExpressionTranslator` considers `CurrentCulture` and `Ordinal` to be equivalent. There may be other places. I'll create a separate ticket to review our usages of `CurrentCulture` and `Ordinal` across the driver. Created https://jira.mongodb.org/browse/CSHARP-4100 to capture this work."
    ],
    "commit_messages": [
      "CSHARP-4090 / CSHARP-4092 (#750)\n\nCSHARP-4090: Implement support for string.Contains(match, StringComparison).\r\nCSHARP-4092: Fix case-insensitive StartsWith/EndsWith to generate correct MQL."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8d418912b45d36a07db",
    "number": 749,
    "body": null,
    "head_branch": "csharp4087",
    "is_a_fork": true,
    "comments": [
      "Note that only CSHARP-4087 should be included in this PR. CSHARP-4089 (which this PR is built on top of) is part of https://github.com/mongodb/mongo-csharp-driver/pull/748.",
      "Merged manually."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8d518912b45d36a07dc",
    "number": 748,
    "body": null,
    "head_branch": "csharp4089",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4089: Move TranslationContextData to be internal. (#748)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8d618912b45d36a07dd",
    "number": 747,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Release notes and update documentation. (#747)\n\nAdd Release notes and update documentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8d718912b45d36a07de",
    "number": 746,
    "body": null,
    "head_branch": "csharp4041",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4041: Remove use of example.com in Client Side Encryption prose tests. (#746)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8d818912b45d36a07df",
    "number": 745,
    "body": null,
    "head_branch": "csharp4068",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4068: Enable preventing patch timeout infrastructure for all tests. (#745)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8d918912b45d36a07e0",
    "number": 744,
    "body": null,
    "head_branch": "csharp4071",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4071: Fix flaky Connection_timeout_should_throw_expected_exception test. (#744)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8da18912b45d36a07e1",
    "number": 743,
    "body": null,
    "head_branch": "csharp4070",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4070: Fix flaky Ensure_command_network_error_before_hadnshake_is_correctly_handled test. (#743)\n\nCSHARP-4070: Fix flaky Ensure_command_network_error_before_hadnshake_is_correctly_handled test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8db18912b45d36a07e2",
    "number": 742,
    "body": null,
    "head_branch": "csharp4069",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4069: Fix flaky Misbehaved_async_method_should_not_deadlock_server_selection test. (#742)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8dc18912b45d36a07e3",
    "number": 741,
    "body": "[EG](https://spruce.mongodb.com/version/62211c2bd6d80a1ce9d9be96/tasks)",
    "head_branch": "csharp3919",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3919: Drivers should retry operations if connection handshake fails"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8dd18912b45d36a07e4",
    "number": 740,
    "body": null,
    "head_branch": "csharp4048",
    "is_a_fork": true,
    "comments": [
      "`Take` might just be the tip of the iceberg.\r\n\r\nI'm going to verify that *all* `IEnumerable` methods work with `IGrouping`.",
      "The very first `IEnumerable` method I checked (`Aggregate`) has the same issue. So probably most others do also."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8de18912b45d36a07e5",
    "number": 739,
    "body": null,
    "head_branch": "csharp3906_v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3906: Switch ConnectionPool background task to a dedicated thread. (#739)\n\nCSHARP-3906: Switch ConnectionPool background task to a dedicated thread."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8df18912b45d36a07e6",
    "number": 738,
    "body": null,
    "head_branch": "csharp3225-skiptests",
    "is_a_fork": true,
    "comments": [
      "Do you want me to run a full Evergreen patch?",
      "Verifying that tests run on 5.0+ and don't run on pre-5.0 should be sufficient. There is nothing OS or topology specific in the tests. So a single variant of each should suffice."
    ],
    "commit_messages": [
      "CSHARP-3225: Skip SetWindowFields tests on older servers."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8e118912b45d36a07e7",
    "number": 737,
    "body": "Attempting to repro CSHARP-3614 (among others), the following output is displayed:\r\n\r\n```\r\nCannot find serializer for null.\r\n```\r\n\r\nWith this change, the full (and much more informative) stack trace is included:\r\n\r\n```\r\nSystem.InvalidOperationException: Cannot find serializer for null.\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Serializers.KnownSerializers.KnownSerializersRegistry.GetSerializer(Expression expression, IBsonSerializer defaultSerializer) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Serializers/KnownSerializers/KnownSerializersRegistry.cs:line 43\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.ConstantExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, ConstantExpression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/ConstantExpressionToAggregationExpressionTranslator.cs:line 50\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.ExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, Expression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/ExpressionToAggregationExpressionTranslator.cs:line 65\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.BinaryExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, BinaryExpression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/BinaryExpressionToAggregationExpressionTranslator.cs:line 50\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.ExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, Expression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/ExpressionToAggregationExpressionTranslator.cs:line 54\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.ConditionalExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, ConditionalExpression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/ConditionalExpressionToAggregationExpressionTranslator.cs:line 28\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.ExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, Expression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/ExpressionToAggregationExpressionTranslator.cs:line 63\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.MemberInitExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, MemberInitExpression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/MemberInitExpressionToAggregationExpressionTranslator.cs:line 56\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.ExpressionToAggregationExpressionTranslator.Translate(TranslationContext context, Expression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/ExpressionToAggregationExpressionTranslator.cs:line 69\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToAggregationExpressionTranslators.ExpressionToAggregationExpressionTranslator.TranslateLambdaBody(TranslationContext context, LambdaExpression lambdaExpression, IBsonSerializer parameterSerializer, Boolean asRoot) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToAggregationExpressionTranslators/ExpressionToAggregationExpressionTranslator.cs:line 115\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToPipelineTranslators.SelectMethodToPipelineTranslator.Translate(TranslationContext context, MethodCallExpression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToPipelineTranslators/SelectMethodToPipelineTranslator.cs:line 44\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToPipelineTranslators.ExpressionToPipelineTranslator.Translate(TranslationContext context, Expression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToPipelineTranslators/ExpressionToPipelineTranslator.cs:line 55\r\n   at MongoDB.Driver.Linq.Linq3Implementation.Translators.ExpressionToExecutableQueryTranslators.ExpressionToExecutableQueryTranslator.Translate[TDocument,TOutput](MongoQueryProvider`1 provider, Expression expression) in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/Translators/ExpressionToExecutableQueryTranslators/ExpressionToExecutableQueryTranslator.cs:line 34\r\n   at MongoDB.Driver.Linq.Linq3Implementation.MongoQuery`2.ToString() in /Users/james/Dropbox/code/mongodb/mongo-csharp-driver/src/MongoDB.Driver/Linq/Linq3Implementation/MongoQuery.cs:line 108\r\n```\r\n\r\nFor cases where we know that an expression is not supported, we still display the abbreviated error message.",
    "head_branch": "csharp4082",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4082: Include full stack trace when LINQ3 MongoQuery.ToString() encounters an unexpected exception. (#737)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8e218912b45d36a07e8",
    "number": 736,
    "body": null,
    "head_branch": "csharp4080",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/621d0467d6d80a612db16ec5",
      "Note that Evergreen patch build is failing for reasons unrelated to this PR."
    ],
    "commit_messages": [
      "CSHARP-4080: Skip tests for MongoClient constructors that take multiple credentials against servers newer than 6.0.0."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8e318912b45d36a07e9",
    "number": 735,
    "body": null,
    "head_branch": "csharp4063",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4063: Support Nullable HasValue and Value properties in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8e418912b45d36a07ea",
    "number": 734,
    "body": "[EG](https://evergreen.mongodb.com/version/6216bf967742ae3d1fb501f1)\r\nDone with [CSHARP-4078](https://jira.mongodb.org/browse/CSHARP-4078)",
    "head_branch": "csharp4046",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4046: getMore helper should explicitly send inherited comment"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8e518912b45d36a07eb",
    "number": 733,
    "body": null,
    "head_branch": "csharp4066",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4066: Only use regex filters against string properties that are serialized as strings."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8e618912b45d36a07ec",
    "number": 732,
    "body": null,
    "head_branch": "csharp4061",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4061: Use correct LinqProvider in AggregateFluent ToString."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8e718912b45d36a07ed",
    "number": 731,
    "body": null,
    "head_branch": "csharp3225",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8e818912b45d36a07ee",
    "number": 730,
    "body": "Fixing formatting in readme",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed json format in quick_tour.md (#730)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8e918912b45d36a07ef",
    "number": 729,
    "body": "Additional EG links:\r\n* https://evergreen.mongodb.com/patch/621427b732f4176b1fd74270\r\n* https://evergreen.mongodb.com/version/621427de5623435871e65ebe",
    "head_branch": "csharp3671_v3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3761: Fix issue with ObjectDisposedException. (#729)\n\nCSHARP-3761: Fix issue with ObjectDisposedException."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ea18912b45d36a07f0",
    "number": 728,
    "body": "[EG](https://spruce.mongodb.com/version/6213f18f5623435871e5c99)\r\n\r\nDone together with [CSHARP-4043](https://jira.mongodb.org/browse/CSHARP-4043)\r\nFollow up work in [CSHARP-4067](https://jira.mongodb.org/browse/CSHARP-4067)",
    "head_branch": "csharp1541",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-1541: Add support for $comment for profiling"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8eb18912b45d36a07f1",
    "number": 727,
    "body": "[EG](https://evergreen.mongodb.com/version/620544200305b97e469d3658)",
    "head_branch": "csharp3927",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3927: Drivers should check out an implicit session only after checking out a connection"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8ec18912b45d36a07f2",
    "number": 726,
    "body": "As per https://jira.mongodb.org/browse/CSHARP-4028",
    "head_branch": "CSHARP-4028",
    "is_a_fork": true,
    "comments": [
      "This change looks fine to me and is low-risk. @JamesKovacs I've added you as a reviewer so you can give your opinion also.",
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ed18912b45d36a07f3",
    "number": 725,
    "body": "Straightforward upgrade to DnsClient.NET. I was able to connect to MongoDB Atlas using `mongodb+srv://` in a test project. Open to suggestions of anything else I should verify before merging.",
    "head_branch": "csharp4001",
    "is_a_fork": true,
    "comments": [
      "Testing this in the driver itself is difficult because it requires configuring DNS to return duplicate packets for a single request. I ran our repro which uses a simple Python script to return duplicate responses. DnsClient.NET 1.4.0 exhibits the bad behaviour of confusing the duplicate TXT response with the expected SRV response. DnsClient.NET 1.6.0 successfully retries in the face of duplicate TXT records and returns the correct SRV response.\r\n\r\nNow why don't we incorporate this test into our test suite? Because this test is verifying that one of our dependencies (DnsClient.NET) behaves correctly in the face of DNS errors. And tests for handling these types of DNS errors were included in the DnsClient.NET PR that we submitted."
    ],
    "commit_messages": [
      "CSHARP-4001: Upgrade to DnsClient.NET 1.6.0, which includes the fix for duplicate DNS responses. (#725)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ee18912b45d36a07f4",
    "number": 724,
    "body": null,
    "head_branch": "csharp2440",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2440: Add DateTime representation to DateTimeOffsetSerializer."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8f018912b45d36a07f5",
    "number": 723,
    "body": null,
    "head_branch": "csharp3984",
    "is_a_fork": true,
    "comments": [
      "temporary close this PR since we found unexpected behavior and due to low priority of this ticket"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8f118912b45d36a07f6",
    "number": 722,
    "body": null,
    "head_branch": "csharp3761",
    "is_a_fork": true,
    "comments": [
      "ready for review",
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-3761: Reimplement SDAM to use a dedicated thread. (#722)\n\nCSHARP-3761: Reimplement SDAM to use a dedicated thread."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8f218912b45d36a07f7",
    "number": 721,
    "body": null,
    "head_branch": "csharp4011",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4011: Bump maxWireVersion for MongoDB 5.2. (#721)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8f318912b45d36a07f8",
    "number": 720,
    "body": null,
    "head_branch": "csharp3480",
    "is_a_fork": true,
    "comments": [
      "This is a large PR and it's hard to work through the comments so far. Here's a summary of the changes I'm requesting (a few might be new):\r\n\r\nreplace `description.ServerVersion` with `description.MaxWireVersion` (not `description.WireVersionRange`)\r\nUse `MaxWireVersion` everywhere instead of `WireVersionRange` (min of range is irrelevant)\r\n\r\nuse `int` for `MinWireVersion` and `MaxWireVersion` instead of `WireVersion` class\r\n\r\n`WireVersion` can be a static class with the following helper methods:\r\n\r\n    WireVersion.ToServerVersion(wireVersion) // approximate server version\r\n    WireVersion.ToWireVersion(serverVersion)\r\n \r\nRemove ALL uses of `ServerVersion` in the driver (OK to use `ServerVersion` in some form in tests, but see warning below)\r\n\r\nAdd `ConnectionDescription.MinWireVersion` and `ConnectionDescription.MaxWireVersion` instead of `ConnectionDescription.WireVersionRange` (ease of use and readability)\r\n\r\nRemove `ConnectionDescription.BuildInfoResult` property entirely\r\nreturning `null` or a gutted emulated value is already backward breaking\r\n\r\nImplement `ConnectionDescription.ServerVersion` to return an estimated server version based on MaxWireVersion\r\n\r\nBut now tests can't use `ConnectionDescription.ServerVersion` because it's no longer accurate\r\nTests need to run `buildInfo` explicitly: refactor `CoreTestConfiguration.ServerVersion` to lazily run `buildInfo` when first referenced\r\n\r\nAll `Feature` classes (including subclasses) should use wire version only and not server version\r\nRemove server version entirely from `Feature` classes\r\n\r\nNOTE: I'm assuming we're resolving the contradictory decisions about whether to call `buildInfo` or not by deciding NOT to call it anymore\r\n\r\n"
    ],
    "commit_messages": [
      "CSHARP-3480: Switch to using maxWireVersion rather than buildInfo to determine feature support. (#720)\n\nCSHARP-3480: Switch to using maxWireVersion rather than buildInfo to determine feature support."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8f418912b45d36a07f9",
    "number": 719,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you @chenzhe014 for your PR.\r\nCould you please create a [corresponding JIRA ticket,](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md) containing the bug description."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8f518912b45d36a07fa",
    "number": 718,
    "body": null,
    "head_branch": "csharp3928",
    "is_a_fork": true,
    "comments": [
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-3928: Support 'let' option for multiple CRUD commands. (#718)\n\nCSHARP-3928: Support 'let' option for multiple CRUD commands."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f8f618912b45d36a07fb",
    "number": 717,
    "body": "Summarized TLS cipher suite mismatch troubleshooting information from CSHARP-3564.",
    "head_branch": "csharp3564",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3564: Added TLS cipher suite mismatch troubleshooting to the docs. (#717)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8f718912b45d36a07fc",
    "number": 716,
    "body": null,
    "head_branch": "csharp3949",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3949: Github no longer supports \"git://\" for git clone. (#716)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8f818912b45d36a07fd",
    "number": 715,
    "body": "Waiting for EG",
    "head_branch": "csharp3918",
    "is_a_fork": true,
    "comments": [
      "I added myself as a reviewer because I want to review any further changes that might happen with respect to the `nameOnly` flag (I'm trying to decipher the Slack discussion on that).",
      "ready for review"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8f918912b45d36a07fe",
    "number": 714,
    "body": "This PR is against master and is so that the links in future releases will be live.\r\n\r\nUpdating the gh-pages branch is a separate task.",
    "head_branch": "csharp4009",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-4009: Use https instead of http in new links."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8fa18912b45d36a07ff",
    "number": 713,
    "body": null,
    "head_branch": "filtered-collection",
    "is_a_fork": true,
    "comments": [
      "This would be very nice to have :)",
      "While this PR is a good start, we require integration tests to be added to consider merging this into the driver. We have closed this PR, but are happy to reconsider a new PR if you or someone else adds the appropriate testing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8fb18912b45d36a0800",
    "number": 712,
    "body": "This is initial PR, there are some pending questions that might require some changes + adding more tests.\r\nSome notes/questions:\r\n\r\n0. This PR is placed on top of CSHARP-3858 which is not merged yet. I will rebase it as soon as the previous PR will be merged.\r\n1. I'm not sure about current public explain API, so it would be good to discuss it.\r\n2. do we want adding explain functionality for operations like?:\r\n* findAndModify (and other similar)\r\n* changeStream, probably there are more cases\r\n\r\n3. I think logic in `FindCommandOperation` and `FindOperation` should be merged. Will do it in the final version.\r\n4. Aggregate provides 2 ways to configure explain: \r\n* Explain command: https://docs.mongodb.com/manual/reference/command/explain/\r\n* Explain argument in aggregate command itself: https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields\r\nIn this PR I left only the second approach(the first one is used in Legacy) since it would be good to have the same code path for all explain \"workflow\"s. Also, only the second approach allows configuring verbosity, so this approach looks like the best. However I'm going to confirm that it doesn't give us some issues either performance or maybe missed functionality (probably only in January).\r\n5. I'm also going to confirm whether I understand the format of server response for explain correctly (in other words there is no edge cases and etc).\r\n6. In the scope of this PR, I also replaced serialization logic in AsyncCursor and Find in the same manner as it's done for aggregation. So, now aggregate and find and getmore use the same serializer. I'm not sure why it wasn't done in this way originally. So, we can discuss it.  ",
    "head_branch": "csharp3980",
    "is_a_fork": true,
    "comments": [
      "The last commit https://github.com/mongodb/mongo-csharp-driver/pull/712/commits/e8a5ebaf7206a97fe13131be6911df403195ea87 reverts changes in any user faced logic that had not been implemented before. This ticket https://jira.mongodb.org/browse/CSHARP-4008 tracks reverted changes",
      "ready for review",
      "Note; removing this comment as it was meant for a different PR. ",
      "ready for review",
      "ready for review",
      "merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8fd18912b45d36a0801",
    "number": 711,
    "body": null,
    "head_branch": "CSHARP-3154-fix-registration-object-discriminatorconvention",
    "is_a_fork": true,
    "comments": [
      "@tmm360 Thanks for your contribution, unfortunately will not be pursuing this work, find more details in the associated ticker for this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8fe18912b45d36a0802",
    "number": 710,
    "body": null,
    "head_branch": "csharp3976",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3976: Update estimatedDocumentCount test for Atlas Data Lake. (#710)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f8ff18912b45d36a0803",
    "number": 709,
    "body": "When the first instance of `MongoClient` is created, it initializes the connection to the server, which in turn starts a few background tasks (notably `RoundTripMonitor.RunAsync`). Because the execution context flow is not suppressed, this may result in unrelated objects being captured for an arbitrary amount of time.\r\n\r\nThis PR also removes usages of `.ConfigureAwait(false)` that are useless in this context (because the task is not awaited), and switches to `Task.Run` which has safer defaults than `Task.Factory.StartNew`.",
    "head_branch": "executionContext",
    "is_a_fork": true,
    "comments": [
      "This logic was rewritten in CSHARP-3761 and has been released in 2.15. Please check this behavior with 2.15 release"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90018912b45d36a0804",
    "number": 708,
    "body": "EG: https://evergreen.mongodb.com/version/61b7e7463627e00295e8b335",
    "head_branch": "csharp3996",
    "is_a_fork": true,
    "comments": [
      "EG: https://evergreen.mongodb.com/version/61b893fda4cf470453bbcda5",
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-3996: Fix cleanup-test-resources on Linux and Macos. (#708)\n\nCSHARP-3996: Fix cleanup-test-resources on Linux and Macos."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90118912b45d36a0805",
    "number": 707,
    "body": null,
    "head_branch": "FixLinkReleaseNotes2.14.0",
    "is_a_fork": true,
    "comments": [
      "Thank you for submitting this pull request!",
      "Happy to Robert! 😺 "
    ],
    "commit_messages": [
      "Fix broken link in v2.14.0 release notes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90218912b45d36a0806",
    "number": 706,
    "body": null,
    "head_branch": "csharp3990",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/61b280d3306615750a497fe5"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90318912b45d36a0807",
    "number": 705,
    "body": null,
    "head_branch": "csharp3845",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/61afe46f306615750a434767"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90418912b45d36a0808",
    "number": 704,
    "body": null,
    "head_branch": "CSHARP-3985-MongoCollectionSettings.SerializerRegistry-setter",
    "is_a_fork": true,
    "comments": [
      "Thank you for your contribution. However having multiple Serializer Registries is much wider problem, because historically we used direct call to static registry a lot. We are going to review the approach in scope of upcoming major release."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90518912b45d36a0809",
    "number": 703,
    "body": "Waiting EG: https://evergreen.mongodb.com/version/61aaa9c857e85a6de51bf00e?",
    "head_branch": "csharp3858",
    "is_a_fork": true,
    "comments": [
      "Some pending work has been moved into different tickets:\r\n1. CSHARP-3984 : Remove BinaryConnection.DropBox\r\n2. CSHARP-3980: Implement explain for OP_MSG which will allow fully remove OP_QUERY",
      "I've re-requested review since as it was discussed in the slack, we still need to send OP_QUERY for initial handshake. Also I've added some minor removing"
    ],
    "commit_messages": [
      "CSHARP-3858: Remove code that implements support for server version 3.4. (#703)\n\nCSHARP-3858: Remove code that implements support for server version 3.4."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f90618912b45d36a080a",
    "number": 702,
    "body": null,
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set current version to 2.14.1."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90718912b45d36a080b",
    "number": 701,
    "body": null,
    "head_branch": "v2.14.1-release-notes",
    "is_a_fork": true,
    "comments": [
      "[Merged](53e0f0f3711d662e5655697658b1aa1ad24060ad)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90818912b45d36a080c",
    "number": 700,
    "body": null,
    "head_branch": "csharp3979",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/61a8fa16e3c3317d5c94c41a"
    ],
    "commit_messages": [
      "CSHARP-3979: Support LinqExtensions.Inject in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90918912b45d36a080d",
    "number": 699,
    "body": "- Added disposing of linked `cancellationTokenSource` and `signalCancellationTokenSource` in `SemaphoreSlimSignalable`\r\n- Added disposing of `cancellationTokenSource` in `MaintenanceHelper`\r\n\r\n[EG](https://evergreen.mongodb.com/version/61a7d2d361837d77de087981)",
    "head_branch": "csharp3978",
    "is_a_fork": true,
    "comments": [
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/f4fd11d2c3efea1844ce0979b97381749173b73e)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90a18912b45d36a080e",
    "number": 698,
    "body": "Waiting for EG:  https://evergreen.mongodb.com/version/61a69931e3c3313df3da5172?",
    "head_branch": "csharp3857",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3857: Remove code that implements support for server version 3.2. (#698)\n\nCSHARP-3857: Remove code that implements support for server version 3.2."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f90c18912b45d36a080f",
    "number": 697,
    "body": null,
    "head_branch": "csharp3856",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3856: Remove code that implements support for server version 3.0. (#697)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f90d18912b45d36a0810",
    "number": 696,
    "body": "Some notes:\r\n\r\n1. I didn't touch legacy.\r\n2. Changes (mostly in auth tests) not related to 2.6 directly are caused by changes in some test helpers where I removed using server 2.6\r\n\r\nFull EG: https://evergreen.mongodb.com/version/61a15ca3d6d80a0f59f0c904",
    "head_branch": "csharp3855",
    "is_a_fork": true,
    "comments": [
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-3855: Remove code that implements support for server version 2.6. (#696)\n\nCSHARP-3855: Remove code that implements support for server version 2.6."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f90e18912b45d36a0811",
    "number": 695,
    "body": null,
    "head_branch": "csharp3950",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3950: Get all tests to pass against a cluster with a single mongos and default configurations. (#695)\n\nCSHARP-3950: Get all tests to pass against a cluster with a single mongos and default configurations."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f90f18912b45d36a0812",
    "number": 694,
    "body": "Some notes:\r\n1. Currently I temporally switched back to myget for tests reasons, probably we will know that it works with nuget only during next release.\r\n2. In the scope of this ticket I also fixed nuget package warnings from [here](https://jira.mongodb.org/browse/CSHARP-3802) and [here](https://jira.mongodb.org/browse/CSHARP-3047). Steps that I took more or less taken from [here](https://lurumad.github.io/using-source-link-in-net-projects-and-how-to-configure-visual-studio-to-use-it).\r\nAfter this PR, the nuget package manager should look like this:\r\n![image](https://user-images.githubusercontent.com/44870738/143359998-79a5be41-e55b-4284-9607-04cd334472d5.png)\r\n\r\nNOTE: it looks like myget doesn't work correctly with the above package validation, all nuget packages that I checked (including external) were red. Probably it's only myget issue. Will check it after release :) \r\n\r\n3. I needed to update cake to 1.3.0, to be able to configure `ContinuousIntegration` field that required to make package deterministic. Some article about it [here](https://blog.paranoidcoding.com/2016/04/05/deterministic-builds-in-roslyn.html).\r\n4. What should be checked after package creating:\r\n![image](https://user-images.githubusercontent.com/44870738/143364564-1dbecaf3-a943-4180-b9ac-e19f1823cc52.png)\r\nwhere `Url` means the git repository that will be used to download source file and `Commit` a particular commit (make sure that it's pushed).\r\n5. How it should be configured:\r\n5.1. While we use myget in testing, this source `https://www.myget.org/F/mongodb/api/v3/index.json` should be added to nuget package manager.\r\n5.2. Consume the test package in the consumer application\r\n5.3. Make sure that VS has the same configuration:\r\n![image](https://user-images.githubusercontent.com/44870738/143364964-807f4404-89ff-41f6-a176-d3263ec0be81.png)\r\n5.4. Make sure that myget symbol server `https://www.myget.org/F/mongodb/api/v2/symbolpackage` is added to VS here:\r\n![image](https://user-images.githubusercontent.com/44870738/143365111-0fc688af-f4f1-48eb-8498-49943fa1736c.png)\r\nNOTE: I think when we will use nuget.org symbol server, it should be enough just to enable default nuget symbol server\r\n",
    "head_branch": "csharp2088_4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2088: Publish PDBs and sources on symbolsource. (#694)\n\nCSHARP-2088: Publish PDBs and sources on symbolsource."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f91018912b45d36a0813",
    "number": 693,
    "body": "I'm open to a better name for the return type. I debated whether to make it a nested type inside `PipelineStageDefinitionBuilder` but decided against it. I'd be willing to reconsider that decision if you think it's a better choice.",
    "head_branch": "csharp3977",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3977: Refactor GroupForLinq3 to return an explicit type. (#693)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f91118912b45d36a0814",
    "number": 692,
    "body": null,
    "head_branch": "v2.14.0-release-notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added release notes for v2.14.0. (#692)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91218912b45d36a0815",
    "number": 691,
    "body": null,
    "head_branch": "csharp3962",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3962: Fix X509CertificateCollectionEqualityComparer comparing logic. (#691)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91318912b45d36a0816",
    "number": 690,
    "body": null,
    "head_branch": "csharp3869",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3869: Update SharpCompress to remedy vulnerability. (#690)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91418912b45d36a0817",
    "number": 689,
    "body": null,
    "head_branch": "csharp3975",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/61992fef57e85a217dced19c"
    ],
    "commit_messages": [
      "CSHARP-3975: Move the string extension methods in MongoDBLinqExtensions to StringExtensions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f91518912b45d36a0818",
    "number": 688,
    "body": null,
    "head_branch": "csharp3974",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3974: Remove WithOptions and WithSessions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91618912b45d36a0819",
    "number": 687,
    "body": null,
    "head_branch": "csharp3973",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/619886ca0305b902881c57ed"
    ],
    "commit_messages": [
      "CSHARP-3973: Remove AsQueryable3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91718912b45d36a081a",
    "number": 686,
    "body": "[EG](https://spruce.mongodb.com/version/61980964d6d80a7a2743552b)\r\nJira ticket: [CSHARP-3972](https://jira.mongodb.org/browse/CSHARP-3972) ",
    "head_branch": "csharp3972",
    "is_a_fork": true,
    "comments": [
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/fff5e6ae90950264dd82bf0146c584c7a18a63ff)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91918912b45d36a081b",
    "number": 685,
    "body": null,
    "head_branch": "csharp3936_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3936: Disable cert configuring where it's not required. (#685)\n\nCSHARP-3936: Disable cert configuring where it's not required."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91a18912b45d36a081c",
    "number": 684,
    "body": null,
    "head_branch": "csharp3904",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3904: Protect xunit/logging infrastructure by DebuggerStepThrough. (#684)\n\nCSHARP-3904: Protect xunit/logging infrastructure by DebuggerStepThrough."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91b18912b45d36a081d",
    "number": 683,
    "body": null,
    "head_branch": "csharp3971",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/6195a4cc2a60ed674990d553"
    ],
    "commit_messages": [
      "CSHARP-3971: Make ExpressionNotSupportedException public."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f91c18912b45d36a081e",
    "number": 682,
    "body": null,
    "head_branch": "csharp3397",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/619427c1d1fe072144f5349b",
      "This PR is sufficiently different from the previous PR that it seemed better to just open a new PR.\r\n\r\nThe comments below should help understand the changes.\r\n\r\nNoteworthy is that there are no longer any changes in High other than setting the new `ReadPreference` property of `AggregateToCollectionOperation`.\r\n\r\nA good place to start is `WritableServerSelector`. It now takes an optional `IMayUseSecondaryCriteria` that is used when selecting a server for write operations (like $out) that can sometimes be sent to a secondary. Since it is too hard to pass the effective read preference back through multiple layers of indirection the effective read preference determined at server selection time is stored in the `_effectiveReadPreference` field and can be consulted later.\r\n\r\n`AggregateToCollectionOperation` has minor changes to its `Execute` methods to handle the effective read preference.\r\n\r\n`AggregateToCollectionOperation` uses the new overload of the `GetWriteChannelSource` method that takes a `mayUseSecondary` argument. This method is new to the `IWriteBinding` interface and all implementations must implement it, but it is only in `WritableServerBinding` that the significant change is found (the other bindings just have to implement the method in a trivial way because the other bindings don't do server selection and the effective read preference is baked in).\r\n\r\nThe new `GetWriteChannelSource` returns a `ChannelSourceWithEffectiveReadPreference` that contains both a channel and the effective read preference. It was not possible to use an `out effectiveReadPreference` parameter because `async` methods don't support `out` parameters.\r\n\r\nNote: we *could* use a `Tuple` instead of the custom `ChannelSourceWithEffectiveReadPreference` class, but.... the `Tuple` form is *much* longer. Compare the following alternatives:\r\n\r\n    ChannelSourceWithEffectiveReadPreference \r\n    Tuple<IChannelSourceHandle ChannelSource, ReadPreference EffectiveReadPreference>\r\n\r\n\r\n\r\n\r\n\r\n",
      "I see some tests failing on Evergreen that didn't fail locally (I was testing on a sharded cluster with 2 mongoses). It's too hard to test against multiple configurations locally!\r\n\r\nIf reviewers want to wait until I resolve these failed tests that's fine.",
      "Looks like most of the replica set variants were failing because I calculated `{ w : 3 }` based on the number of members of the replica set instead of `{ w : 2 }` counting only the data-bearing nodes.\r\n\r\nNew Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/619493f1e3c33129bc196b64",
      "I had an epiphany in my dreams: just as the new `IMayUseSecondaryCriteria` object can be used to carry the criteria *down* to the server selector it can be used to carry the effective read preference back *up* to the operation where we need to know it.\r\n\r\nDoing this results in even less intrusive changes to the write bindings.\r\n\r\nMaking those changes now. You might want to wait for the next commit before reviewing.",
      "Done. Ready for review.\r\n\r\nNew Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/619533e50305b967993af705",
      "As far as I can see, the failed EG tests related to this PR. It looks like these tests are not flaky and I never saw them failed previously, so it should be investigated I guess",
      "> As far as I can see, the failed EG tests related to this PR. It looks like these tests are not flaky and I never saw them failed previously, so it should be investigated I guess\r\n\r\nmissed.",
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/61aa693c7742ae17f65eeb95\r\n\r\nNot all green, but looks to me like the failures are all race conditions unrelated to this PR.",
      "Note: github lost some comments we had written when I deleted some code.\r\n\r\nIn summary: I've removed the new `IClusterExtensions.IsPinnedToServer` helper method that was under discussion and added instead a more focused `WritableServerBinding.IsSessionPinnedToServer` instead.",
      "I was verifying that the JSON tests added in this PR were still current and I discovered that they had changed slightly since they were pulled into our project.\r\n\r\nI've gone ahead and updated them. The changes are minor and unrelated to the driver changes in the PR. No further changes were necessary.\r\n\r\nNew Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/61ba3cf81e2d177b944bb9b5"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91d18912b45d36a081f",
    "number": 681,
    "body": null,
    "head_branch": "csharp3948_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3948: Follow-up changes. (#681)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91e18912b45d36a0820",
    "number": 680,
    "body": null,
    "head_branch": "csharp3891",
    "is_a_fork": true,
    "comments": [
      "yml files were missed before, so it's just full possible sync for LB tests"
    ],
    "commit_messages": [
      "CSHARP-3891: Add a load balancer test case for SRV resolving to 0 hosts. (#680)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f91f18912b45d36a0821",
    "number": 679,
    "body": "Resolve CSHARP-1809 to make these types mockable",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "How do I get this pull request considered?",
      "Hi @brian-pickens, thank you for your PR.\r\n\r\nWe are looking into this pull request and CSHARP-1809 ticket.\r\nPlease follow CSHARP-1809 for any updates.",
      "Hi @brian-pickens ,\r\nThe suggested changes look good, and all tests pass.\r\n\r\nCould you please rebase to the latest master and squash commits into a single one?",
      "Hi, Brian,\r\n\r\nThank you for contributing to the MongoDB .NET/C# Driver. I have cherrypicked your changes onto `master` and they will be available in the next release.\r\n\r\nPlease note that we do not recommend or encourage mocking third-party dependencies such as the driver. Much has been written on the subject by TDD/BDD practitioners over the years and why it is considered an anti-pattern. If you feel the need to mock a third-party dependency, it is often better to wrap it in an adapter allowing you to mock the adapter (which you do own) and integration test the adapter with the actual dependency.\r\n\r\nJames"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92018912b45d36a0822",
    "number": 678,
    "body": null,
    "head_branch": "csharp3952",
    "is_a_fork": true,
    "comments": [
      "This PR is a good example to spend few seconds more on even something that you think really simple. Originally I missed that we should not only make maxconnecting option public, but we also should add these values to the all classes we have :( \r\n\r\n>I think this is sufficient for code-based configuration.\r\n\r\nI would say it's better to have all options in the uri spec added to the all user-faced classes we have like MongoClientSettings, MongoUrl and etc.\r\n\r\n>The URI spec has been updated (currently in PR) to include a maxConnecting URI option. Will you be adding maxConnecting URI parsing?\r\n\r\ndone"
    ],
    "commit_messages": [
      "CSHARP-3952: Make maxConnecting configurable. (#678)\n\nCSHARP-3952: Make maxConnecting configurable."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f92118912b45d36a0823",
    "number": 677,
    "body": null,
    "head_branch": "csharp3454",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/618c426e2a60ed2ef6a228cc",
      "@rstam There will be a 2.14 beta 2 version of the driver? I'm really looking forward to test the new LINQ3 provider (especially the `$$ROOT` support). Actually, there is a nuget feed for nightly builds?",
      "We're not planning a beta2 version of 2.14.0, but 2.14.0 will be released soon.\r\n\r\nWe don't have a nuget feed for nightly builds."
    ],
    "commit_messages": [
      "CSHARP-3454:Expressions for datetime truncation and binning."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f92218912b45d36a0824",
    "number": 676,
    "body": null,
    "head_branch": "csharp3963",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3963: MongoConnectionPoolPausedException should be resumable for change stream. (#676)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92318912b45d36a0825",
    "number": 675,
    "body": null,
    "head_branch": "csharp3936",
    "is_a_fork": true,
    "comments": [
      "Ready for review, the only pending question is related to failing tests with unexpected exception:\r\n>Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.\r\n\r\nlike [here]( https://evergreen.mongodb.com/task_log_raw/dot_net_driver_secure_tests__version~5.0_os~windows_64_topology~standalone_auth~auth_ssl~ssl_test_net472_patch_60ad0c84b164c0648eabe7dea72aa6d94f8289aa_618b3300c9ec4424bc57eb7d_21_11_10_02_49_12/0?type=T#L1661). It looks like it's related to mock server behavior, I asked Kevin maybe he faced with this, so will reach our him tommorow",
      "EG: https://evergreen.mongodb.com/version/6196db963627e004ec5ce600"
    ],
    "commit_messages": [
      "CSHARP-3936: Support KMIP in client side field level encryption. (#675)\n\nCSHARP-3936: Support KMIP in client side field level encryption."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f92418912b45d36a0826",
    "number": 674,
    "body": null,
    "head_branch": "csharp3343",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/6185b3ce2fbabe05c4fccb0e",
      "This PR has quite a bit of lines of code, but the gist is:\r\n\r\n1. The new AST classes: AstDateAddExpression, AstDateDiffExpression and AstDateSubtractExpression\r\n2. A bunch of new custom DateTime extension methods\r\n3. New translators for the existing DateTime methods and the new custom extension methods\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92518912b45d36a0827",
    "number": 673,
    "body": "When the `evergreen/prepare-ocsp.sh` script was extracted from `evergreen/evergreen.yml`, the working directory was not set to `mongo-csharp-driver`. Thus Evergreen was trying to run the script from the wrong directory and couldn't find it.",
    "head_branch": "csharp3434",
    "is_a_fork": true,
    "comments": [
      "Patch build of the OCSP tests run against 5.0 is all green.\r\n\r\nhttps://spruce.mongodb.com/version/61830d692a60ed74599eeddc/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC\r\n\r\nI'll wait for the PR checks to pass and then merge."
    ],
    "commit_messages": [
      "CSHARP-3434: Fixed OCSP tests in Evergreen. (#673)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92618912b45d36a0828",
    "number": 672,
    "body": null,
    "head_branch": "csharp3940",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/618211c73066156ffc831bd7"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92718912b45d36a0829",
    "number": 671,
    "body": null,
    "head_branch": "csharp3167",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/6180b2382fbabe09d02922f4"
    ],
    "commit_messages": [
      "CSHARP-3167: Fix Should_call_custom_server_selector when MONGODB_URI environment variable is set."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92818912b45d36a082a",
    "number": 670,
    "body": "Also mapped `PossiblePrimary` to `Unknown` in spec tests since .NET/C# driver does not consider `PossiblePrimary` as a replica set state.",
    "head_branch": "csharp3938",
    "is_a_fork": true,
    "comments": [
      "> Why are there 32 .json files changed, but only 4 .yml files? Are they in sync now? Were they out of sync before?\r\n\r\nYes, those files were out of sync previously. I updated my `master` branch for the `specifications` repo using `git pull`. I then copied all the max-staleness tests via `rsync -r --delete $SPECROOT/source/max-staleness/tests/ tests/MongoDB.Driver.Core.Tests/Specifications/max-staleness/tests/`.\r\n\r\nWhen I diff'd the files, I noticed that the element ordering of many of the .json tests had been updated but the test scenarios and data not changed. The `max-staleness` tests in our repo now matches what is in the `specifications` repository."
    ],
    "commit_messages": [
      "CSHARP-3938: Sync'd max-staleness tests with spec repo. Mapped PossiblePrimary to Unknown in spec tests since .NET/C# driver does not consider PossiblePrimary as a replica set state. (#670)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92918912b45d36a082b",
    "number": 669,
    "body": null,
    "head_branch": "csharp3948",
    "is_a_fork": true,
    "comments": [
      "I want to include a helper from this PR into KMIP, so it would be good to avoid merge changes later"
    ],
    "commit_messages": [
      "CSHARP-3948: Add support for FLE_MONGOCRYPTD_PORT environment variable. (#669)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92a18912b45d36a082c",
    "number": 668,
    "body": null,
    "head_branch": "csharp3942",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3942: Add [InternalsVisibleTo(\"MongoDB.Driver\")] to Core. (#668)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f92b18912b45d36a082d",
    "number": 667,
    "body": "Added a simple \"ToString()\" override for \"FilterDefinition\" and \"SortDefinition\"",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @bernd5, thank you for your contribution.\r\n\r\nCould you please open a related JIRA ticket and reference it in the PR?\r\nMore details are available in the[ contribution guide](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md).",
      "This fixes not a bug but provides a reasonable ToString implementation for these two classes similar to other Definition-classes (like Pipelinedefinition)",
      "@BorisDog: I created a [JIRA ](https://jira.mongodb.org/browse/CSHARP-3941)ticket...",
      "See comments in the JIRA ticket (including expanding the scope of this work to include all definition classes at the same time).",
      "With the addition of LINQ3, this PR requires more work. We have closed this PR and we will track the work in [CSHARP-3941](https://jira.mongodb.org/browse/CSHARP-3941)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92d18912b45d36a082e",
    "number": 666,
    "body": "The changes should be self-explanatory for the most part. I'll point out some notables in the code...",
    "head_branch": "csharp3754",
    "is_a_fork": true,
    "comments": [
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92e18912b45d36a082f",
    "number": 665,
    "body": "This is a proof of concept only... it's not a completely finished solution.\r\n\r\nThe main idea here is that $out is not special in and of it itself. What we need is the more general concept that some write operations can be executed on a secondary IF the server version is new enough.\r\n\r\nTo that end we can use a new `IMayUseSecondaryWriteOperation` interface to mark write operations that may (under the right conditions) be executed on a secondary. Operations that can execute on secondaries implement this interface.\r\n\r\nSo `AggregateToCollectionOperation` now implements `IMayUseSecondaryWriteOperation` and has a new `ReadPreference` property.\r\n\r\nTo accommodate the general notion that some operations may (under the right conditions) be executed on a secondary the following classes have been changed also:\r\n\r\n**ChannelPinningHelper**: the `CreateReadWriteBinding` has a new `operation` parameter. If the `operation` parameter implements `IMayUseSecondaryWriteOperation` then the `ReadPreference` and `MinServerVersionToUseSecondary` values are copied from the operation to the binding being created.\r\n\r\n**WritableServerBinding**: has new `ReadPreference` and `MinServerVersionToUseSecondary` properties, but these will only be set when the binding has been created for an operation that implements `IMayUseSecondaryOperation`, and these values are copied from such an operation.\r\n\r\n**WritableServerSelector**; has new `ReadPreference` and `MinServerVersionToUseSecondary` properties, but these will only be set when selecting a server for a write operation that may (under the right conditions) be executed on a secondary. This is where the bulk of the remaining work is: the `SelectServers` method needs to be enhanced to look for these new properties and use them when selecting suitable servers (if they are not null).",
    "head_branch": "csharp3397-rstam",
    "is_a_fork": true,
    "comments": [
      "Jeff was concerned about the conditional where we call one constructor or the other of `WritableServerBinding`.\r\n\r\nThis can be addressed by only having one constructor and passing in a mandatory operation.\r\n\r\nThis change can be described as moving from \"this is a writable server binding\" to \"this is a writable server binding for *this* operation\".\r\n\r\nThis change caused very few ripple effects in the driver itself but lots of irritating changes in the tests.\r\n\r\nOne consequence of this is that now the operation *must* be created before the binding. This was already always true in the driver, but was not always true in the tests, so some of the changes in the tests are due to this.\r\n",
      "Beside the pending implementation work in the `WritableServerSelector` to use the `ReadPreference` for write operations that may use a secondary, Jeff pointed out that this POC also does not set the `$readPreference` on the command correctly (yet).",
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/617b76f15623436f4bae0554",
      "New Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/617de5b561837d6e4ce6b786",
      "Yet another Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/617f1e0761837d6e4ce79494",
      "New Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/6181681e0305b96ff1f3f57e",
      "Closing and opening a new (considerably different) PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f92f18912b45d36a0830",
    "number": 664,
    "body": null,
    "head_branch": "csharp3741",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3741: Deprecate mapReduce command. (#664)\n\nCSHARP-3741: Deprecate mapReduce command."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f93018912b45d36a0831",
    "number": 663,
    "body": "[Here](https://github.com/mongodb/mongo-csharp-driver/pull/663/files#diff-0537777d32b586e768ac1e74c10677b06f8933c41fba72c3f11a6f74862925e7R981), you can see the description of how the result of this ticket can be validated. ",
    "head_branch": "csharp3467",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3467: Test that KMS TLS connections verify peer certificates. (#663)\n\nCSHARP-3467: Test that KMS TLS connections verify peer certificates."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f93118912b45d36a0832",
    "number": 662,
    "body": null,
    "head_branch": "csharp3933",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch:\r\n\r\nhttps://evergreen.mongodb.com/version/6171e58fe3c3316c92b7e266"
    ],
    "commit_messages": [
      "CSHARP-1486: Verify that GroupBy works with $$ROOT in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93218912b45d36a0833",
    "number": 661,
    "body": "I found there were some existing tests related to CSHARP-3630, but they needed refactoring.\r\n\r\nThe JIRA ticket itself doesn't say much about what wasn't working, but the tests included in the pull/515 give a hint of what should be tested.\r\n\r\nI've refactored those tests further as follows.\r\n\r\nConsider that there are 4 overloads of the GroupBy methd:\r\n\r\n```\r\nGroupBy(s => key)\r\nGroupBy(s => key, s => element)\r\nGroupBy(s => key, (k, es) => result) // es = enumerable s\r\nGroupBy(s => key, s => element, (k, ee) => result) // ee = enumerable e\r\n```\r\n\r\nThe overloads that don't include a resultSelector would be followed by a Select statement in the test. That means there are 4 tests needed:\r\n\r\n```\r\nGroupBy(c => c.A).Select(g => new { Result = g.First() })\r\nGroupBy(c => c.A, c => c).Select(g => new { Result = g.First() })\r\nGroupBy(c => c.A, (k, g) => new { Result = g.First() })\r\nGroupBy(c => c.A, c => c, (k, g) => new { Result = g.First() })\r\n```\r\n\r\nIn the PR both First and Last are tested, but it is sufficient to test using First.\r\n\r\nThe PR also includes tests with an embedded identity projection. We should test with and without the (unnecessary) identity projection:\r\n\r\n```\r\ng.First()\r\ng.Select(c => c).First()\r\n```\r\n\r\nThe end result is 4 x 2 = 8 tests.",
    "head_branch": "csharp3630",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3630: Refactor exactly what needs to be tested."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93318912b45d36a0834",
    "number": 660,
    "body": null,
    "head_branch": "csharp2422",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2422: Verify that dynamic predicates with null parameterNames work in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93418912b45d36a0835",
    "number": 659,
    "body": "CSHARP-3425",
    "head_branch": "csharp3425",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93518912b45d36a0836",
    "number": 658,
    "body": null,
    "head_branch": "csharp1771",
    "is_a_fork": true,
    "comments": [
      "Besides reviewing the tests, please review the JIRA ticket and verify that the new tests actually correspond to what is in the ticket. The ticket has a lot of comments, but I think the issue boils down to these two new tests."
    ],
    "commit_messages": [
      "CSHARP-1771: Verify that the ternary operator works as expected in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93618912b45d36a0837",
    "number": 657,
    "body": null,
    "head_branch": "csharp2071",
    "is_a_fork": true,
    "comments": [
      "In this case I would push the tests to master just as proof that the things that failed in LINQ2 are actually working in LINQ3.",
      "Note: an earlier version of these repros was already in master. This PR adds a new repro and makes minor changes to the tgwo existing one."
    ],
    "commit_messages": [
      "CSHARP-2071: Verify that the queries reported in this ticket work in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93718912b45d36a0838",
    "number": 656,
    "body": "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/616db14857e85a24c4febd31",
    "head_branch": "csharp3910",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3910: LINQ3: Missing calls to PartialEvaluator."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93818912b45d36a0839",
    "number": 655,
    "body": null,
    "head_branch": "csharp3908",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3908: Remove netstandard1.5 from LINQ3. (#655)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93918912b45d36a083a",
    "number": 654,
    "body": null,
    "head_branch": "csharp3877",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3877: Rephrase xml comment without netstandard15 in some ctors. (#654)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f93a18912b45d36a083b",
    "number": 653,
    "body": null,
    "head_branch": "csharp3730",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3730: Update documentation for Time Series. (#653)\n\nCSHARP-3730: Update documentation for Time Series."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f93b18912b45d36a083c",
    "number": 652,
    "body": "Please make sure any major feature/improvement that you worked on is listed in the release notes. If it is missing, make sure it has the correct `fixVersion = 2.14.0` in JIRA. If it does and I simply missed it, I apologize in advance (but I think I got everything noteworthy to end users).",
    "head_branch": "v2.14.0-beta1-release-notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Release Notes for v2.14.0-beta1 and updated What's new? (#652)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93c18912b45d36a083d",
    "number": 651,
    "body": null,
    "head_branch": "csharp3748",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3748: Versioned API Strict Migration Example for Docs. (#651)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93e18912b45d36a083e",
    "number": 650,
    "body": null,
    "head_branch": "csharp3797",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3797: Test Serverless behind a load balancer to prevent test breakage. (#650)\n\nCSHARP-3797: Test Serverless behind a load balancer to prevent test breakage."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f93f18912b45d36a083f",
    "number": 649,
    "body": null,
    "head_branch": "csharp3903",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/6167487c7742ae1a6b179367",
      "Note that the diffs were kept to a minimum by simply changing `LinqProvider` from a class to an enum.\r\n\r\nAlmost everywhere `LinqProvider` was used  continues to use `LinqProvider`, just that it's now an enum instead of a class."
    ],
    "commit_messages": [
      "CSHARP-3903: Code review changes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94018912b45d36a0840",
    "number": 648,
    "body": null,
    "head_branch": "csharp3397",
    "is_a_fork": true,
    "comments": [
      "Please consider the more streamlined (and more general) approach prototyped here:\r\n\r\nhttps://github.com/mongodb/mongo-csharp-driver/pull/665",
      "wrong PR :) "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94118912b45d36a0841",
    "number": 647,
    "body": null,
    "head_branch": "csharp3887",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94218912b45d36a0842",
    "number": 646,
    "body": null,
    "head_branch": "csharp3713",
    "is_a_fork": true,
    "comments": [
      "One other note: this PR is about `DefaultIfEmpty` inside an aggregation expression, NOT at the pipeline level.\r\n\r\nIn other words, the following is not supported:\r\n\r\n    var queryable = collection.AsQueryable().SomeLinqQuery().DefaultIfEmpty();\r\n\r\nthe reason being that if the pipeline ahead of `DefaultIfEmpty` returns zero documents that's the end of the pipeline. There is no way  (that I can think of) to write a stage to detect an empty incoming pipeline and replace it with a single default document.\r\n\r\n"
    ],
    "commit_messages": [
      "CSHARP-3713: SelectMany doesn't support DefaultIfEmpty()."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94318912b45d36a0843",
    "number": 645,
    "body": "Added upgrade warning for 2.11.0+ as `BsonSerializer.Serialize` no longer allows arrays at the root of a BSON document.",
    "head_branch": "csharp3889",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2877 / CSHARP-3889: Added upgrade warning for 2.11.0+ as BsonSerializer.Serialize no longer allows arrays at the root of a BSON document. (#645)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94418912b45d36a0844",
    "number": 644,
    "body": null,
    "head_branch": "csharp2708",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2708: Verify that string.IsNullOrEmpty with or without null coalescing argument works in LINQ3."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94518912b45d36a0845",
    "number": 643,
    "body": null,
    "head_branch": "csharp3898",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3898: Translate string.IsNullOrEmpty using $in instead of $or/$eq"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94618912b45d36a0846",
    "number": 642,
    "body": "Evergreen patch:\r\n\r\nhttps://evergreen.mongodb.com/version/615f4289850e614461710a27",
    "head_branch": "csharp3314b",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3314: Add a Create factory method to TranslationContext."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94718912b45d36a0847",
    "number": 641,
    "body": null,
    "head_branch": "csharp3894",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3894: Add Linq3Client property and Linq3TestHelpers class."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f94818912b45d36a0848",
    "number": 640,
    "body": "Preview: https://dmitrylukyanov.github.io/mongo-csharp-driver/",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set current version to 2.13.2. (#640)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94918912b45d36a0849",
    "number": 639,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update refdocs to reflect 2.13.2 is the current version. (#639)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94a18912b45d36a084a",
    "number": 638,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for v2.13.2. (#638)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94b18912b45d36a084b",
    "number": 637,
    "body": "Just test related changes. The main part is already implemented before",
    "head_branch": "csharp3744",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3744: Add server connectionId to command monitoring events. (#637)\n\nCSHARP-3744: Add server connectionId to command monitoring events."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94c18912b45d36a084c",
    "number": 636,
    "body": null,
    "head_branch": "csharp3853",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3853: Reduce number of tasks that run on macos. (#636)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94e18912b45d36a084d",
    "number": 635,
    "body": null,
    "head_branch": "csharp3790",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3790: Remove modifiers option from command monitoring spec test. (#635)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f94f18912b45d36a084e",
    "number": 634,
    "body": null,
    "head_branch": "csharp3726",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3726: Fix GroupJoin_syntax_with_select_many_and_DefaultIfEmpty failure on latest. (#634)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95018912b45d36a084f",
    "number": 633,
    "body": "[EG](https://spruce.mongodb.com/version/6154a8810305b929712ef07d/tasks)",
    "head_branch": "csharp3884",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3884: Driver calls SemaphoreSlim.WaitAsync with negative timeout values"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95118912b45d36a0850",
    "number": 632,
    "body": null,
    "head_branch": "csharp3764",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3764: Temporary increase failpoint blockTimeMS in hello-timeout: Network timeout on Monitor check"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95218912b45d36a0851",
    "number": 631,
    "body": null,
    "head_branch": "csharp3756",
    "is_a_fork": true,
    "comments": [
      "> \r\n> \r\n> You're going to need to also disable the Evergreen tests of 2.6-3.4.\r\n\r\ndone"
    ],
    "commit_messages": [
      "CSHARP-3756: Set minWireVersion to 6 (MongoDB 3.6)/CSHARP-3867: Bump maxWireVersion to 14 for MongoDB 5.1. (#631)\n\nCSHARP-3756: Set minWireVersion to 6 (MongoDB 3.6)/CSHARP-3867: Bump maxWireVersion to 14 for MongoDB 5.1."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f95318912b45d36a0852",
    "number": 630,
    "body": "LINQ2 approach",
    "head_branch": "csharp3225",
    "is_a_fork": true,
    "comments": [
      "ready for review",
      "ready for review",
      "I don't think we should adopt this work as-is. In these comments I'm going to focus mainly on the user level API.\r\n\r\nThe correct API to match the stage definition should be:\r\n\r\n    SetWindowFields(\r\n        AggregateExpressionDefinition partitionBy,\r\n        SortDefinition sortBy,\r\n        ProjectionDefinition output)\r\n\r\nWith possible convenience overloads:\r\n\r\n    SetWindowFields(partitionBy, output) => SetWindowFields(partitionBy, sortBy: null, output)\r\n    SetWindowFields(output) => SetWindowFields(partitionBy: null, sortBy: null, output)\r\n\r\nSince partitionBy and sortBy are sometimes optional.\r\n\r\nThe problem with the above is that it doesn't provide any way to provide the window options for each output field.\r\n\r\nYou have worked around this by using an optional table of windowOptions:\r\n\r\n    SetWindowFields(\r\n        AggregateExpressionDefinition partitionBy,\r\n        SortDefinition sortBy,\r\n        ProjectionDefinition output,\r\n        params AggregateOutputWindowOptionsBase[] windowOptions)\r\n\r\nBut that's a pretty awkward way of specifying window options, where each window option is matched by name with some field in the output projection.\r\n\r\nWhile that's an interesting workaround, I don't think it's the API we want to provide.\r\n\r\nWe have discussed that in LINQ3 we could provide the window options using custom extension methods for the window operators. I say we want and do that.",
      ">You have worked around this by using an optional table of windowOptions:\r\n>\r\n>SetWindowFields(\r\n>    AggregateExpressionDefinition partitionBy,\r\n>    SortDefinition sortBy,\r\n>    ProjectionDefinition output,\r\n>    params AggregateOutputWindowOptionsBase[] windowOptions)\r\n\r\n>But that's a pretty awkward way of specifying window options, where each window option is matched by name with some field in >the output projection.\r\n\r\nwe've already discussed this in the slack, there is no other way in LINQ2, I don't think that it's a bad approach (even though the suggested LINQ3 approach is definitely better), since we just provide a way to add additional configuration via only possible approach. I think it's up to @jyemin whether we want to add this in LINQ2 or no.",
      "Closing this PR as we decided to pursue a different public API for this feature."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95418912b45d36a0853",
    "number": 629,
    "body": null,
    "head_branch": "csharp3878",
    "is_a_fork": true,
    "comments": [
      "Evergreen: https://evergreen.mongodb.com/version/614d113ec9ec441cedfcda73",
      "Pay attention that PR and commit have wrong jira ticket number :) ",
      "> LGTM, I assume there are no EG issues\r\n\r\nThere are lots of Evergreen timeouts and some failures but they all seem unrelated to this PR so I am ignoring them.",
      "> Pay attention that PR and commit have wrong jira ticket number :)\r\n\r\nGood catch.\r\n\r\nFixed and force pushed."
    ],
    "commit_messages": [
      "CSHARP-3878: Make sure DisposableMongoClient has a unique underlying Cluster."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95518912b45d36a0854",
    "number": 628,
    "body": null,
    "head_branch": "csharp3876",
    "is_a_fork": true,
    "comments": [
      "Do we need to update the JIRA ticket? \r\n\r\nThis doesn't actually seem to have anything to do with Regex.",
      "yeah, the regex is just a place where the user noticed this issue. I don't mind to mention actual details in the ticket description. Will do it a bit later."
    ],
    "commit_messages": [
      "CSHARP-3876: Builders<T>.Filter.Regex(s => s.Name, keyword) doesn't work. (#628)\n\nCSHARP-3876: Builders<T>.Filter.Regex(s => s.Name, keyword) Doesn't Work."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95618912b45d36a0855",
    "number": 627,
    "body": "Running the full suite overnight to verify that updating from `netcoreapp3.0` to `netcoreapp3.1` to run tests doesn't break anything. It shouldn't because the build servers didn't have `netcoreapp3.0` installed and have been running tests on `netcoreapp3.1` for awhile now.",
    "head_branch": "csharp3875",
    "is_a_fork": true,
    "comments": [
      "I ran a full patch (minus OCSP tests) overnight and it is about as green as `master`. We have no more timeouts or failures than a typical build. (Yes, we have to fix these stability and timeout issues, but not in the context of this PR IMHO.) Ready for review."
    ],
    "commit_messages": [
      "CSHARP-3875: Update netstandard2.1 to run on netcoreapp3.1 to remove netcoreapp3.0 out of support warnings. (#627)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95718912b45d36a0856",
    "number": 626,
    "body": "These files are a direct copy from https://github.com/cake-build/cake.",
    "head_branch": "csharp3874",
    "is_a_fork": true,
    "comments": [
      "I LGTM'ed but let's try to launch tests on all available platforms, at least I don't see windows with not net472",
      "Fair enough point. Everything is looking good on the patch build. I added variants 5.0 standalone for both Linux and MacOS. I'll fire off a complete suite to run overnight to make sure we don't break unexpectedly on some platform combination.",
      "The full patch build overnight is as green as `master` typically has been. Variants that timed out or erred out before are still doing so. Variants that were green before are still green. I'm going to merge based on the LGTMs and the fact that no new failures or timeouts were introduced by the changes."
    ],
    "commit_messages": [
      "CSHARP-3874: Upgrade to Cake 1.2.0 including latest build.sh and build.ps1 files. (#626)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95818912b45d36a0857",
    "number": 625,
    "body": null,
    "head_branch": "csharp3789",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/613fb659d6d80a4301a76908"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95918912b45d36a0858",
    "number": 624,
    "body": "- Custom XUnit timeout attributes introduced: `TimeoutableFact `and `TimeoutableTheory`\r\n- Basic logging infrastructure for tests + runners logs instrumentation\r\n- Logs flushing on error\r\n- Stacktraces dump on error (works on Windows only at this point)\r\n- Side by side console + JUnit logging\r\n\r\n[EG](https://evergreen.mongodb.com/version/613a490a0305b921fcf9605a)",
    "head_branch": "csharp3807",
    "is_a_fork": true,
    "comments": [
      "Thanks @jyemin \r\n1. Good point, limited stack trace logging only to Timeouts.\r\n2. Looks like logs are flushed twice on EG, with and without [xUnit.net xxxxxx] prefix. Note that there are few other tests in between. I see that on master SKIP test also appear twice with and without  [xUnit.net xxxxxx] prefix. We can look into that.\r\n3. [Here is an example](https://evergreen.mongodb.com/task_log_raw/dot_net_driver_unsecure_tests__version~3.6_os~windows_64_topology~replicaset_auth~noauth_ssl~nossl_test_netstandard20_patch_ed579ea75fcb6b70f2ded79fad4a4bdd883416cf_61292ad4d6d80a56a5e87058_21_08_27_18_12_35/0?type=T#L14598) for timed out test. Note the stack trace there.",
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/44ef5df2ae1c2e684df2f0c0ef3cf2c3d53b8d25)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95a18912b45d36a0859",
    "number": 623,
    "body": "[EG](https://evergreen.mongodb.com/version/61367b0761837d78715b3693)\r\n",
    "head_branch": "csharp3810",
    "is_a_fork": true,
    "comments": [
      "Merged [here](https://github.com/mongodb/mongo-csharp-driver/commit/e0bc6fedda9dd5296e84a013af2b77e393dd4acd)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95b18912b45d36a085a",
    "number": 622,
    "body": "The main root causes are fixed in CSHARP-3814, CSHARP-3815, CSHARP-3816.\r\n\r\n[EG](https://evergreen.mongodb.com/version/61365c973e8e862904a19c92)",
    "head_branch": "csharp3800",
    "is_a_fork": true,
    "comments": [
      "Merged [here](https://github.com/mongodb/mongo-csharp-driver/commit/f2349adb8f8a02548229a0ccdb52c902a9722d9e)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95d18912b45d36a085b",
    "number": 621,
    "body": null,
    "head_branch": "csharp3774",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3774: Parsing Enums as Strings is case-insensitive. (#621)\n\nCSHARP-3774: Parsing Enums as Strings is case-insensitive."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95e18912b45d36a085c",
    "number": 620,
    "body": null,
    "head_branch": "csharp3793",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3793: .\\build.ps1 -target test was recently broken. (#620)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f95f18912b45d36a085d",
    "number": 619,
    "body": null,
    "head_branch": "csharp3821",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3821: Sync LB test sdam-error-handling.json with the latest spec. (#619)\n\nCSHARP-3821: Sync LB test sdam-error-handling.json with the latest spec."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96018912b45d36a085e",
    "number": 618,
    "body": null,
    "head_branch": "csharp3715",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3715: Test redaction of replies to security-sensitive commands. (#618)\n\nCSHARP-3715: Test redaction of replies to security-sensitive commands/CSHARP-3769: Integration tests for observeSensitiveCommands."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96118912b45d36a085f",
    "number": 617,
    "body": "Simply tests sync.",
    "head_branch": "csharp3786",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3786: Tests for client-side errors with snapshot reads use incorrect syntax for test.expectEvents. (#617)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96218912b45d36a0860",
    "number": 616,
    "body": null,
    "head_branch": "csharp3290",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3290: LocalThreshold no longer accepts infinite timespan. (#616)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96318912b45d36a0861",
    "number": 615,
    "body": "Some notes:\r\n1. Added calculation batchSize based on limit for getMore command (previously it was done only for getMore wire protocol). This also was requested in the scope of CSHARP-3205 (data-lake), so I fixed json tests there.\r\n2. Updated FindTests command monitoring step, this was required to make related tests pass, but it's also the scope of CSHARP-3790\r\nSo I will close affected tickets when the current one will be pushed.\r\n",
    "head_branch": "csharp3710",
    "is_a_fork": true,
    "comments": [
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/9ad4d4c6b7c83a3b9e2277279e23938073104dbb)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96418912b45d36a0862",
    "number": 614,
    "body": null,
    "head_branch": "remove_netstandard15_from_evg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove netstandard15 config. (#614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96518912b45d36a0863",
    "number": 613,
    "body": null,
    "head_branch": "csharp3809",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3809: Tests timeouts: Investigate timeouts due to hanging mongocryptd. (#613)\n\n* CSHARP-3809: Tests timeouts: Investigate timeouts due to hanging mongocryptd.\r\nCo-authored-by: Boris <boris.dogadov@mongodb.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96618912b45d36a0864",
    "number": 612,
    "body": "[EG](https://evergreen.mongodb.com/version/6126a79b3627e05eb3a5a0fa)",
    "head_branch": "csharp3816",
    "is_a_fork": true,
    "comments": [
      "[Merged](4f51e81318483e097afccd4c7d86e5962202b1c2)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96718912b45d36a0865",
    "number": 611,
    "body": null,
    "head_branch": "csharp3803",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3803: Split unified runner valid-fail tests with malformed operations into separate files. (#611)\n\nCSHARP-3803: Split unified runner valid-fail tests with malformed operations into separate files."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96818912b45d36a0866",
    "number": 610,
    "body": "[EG](https://evergreen.mongodb.com/version/61267b51d6d80a4812670e78)",
    "head_branch": "csharp3815",
    "is_a_fork": true,
    "comments": [
      "Discussed avoiding `Task.Yield()` due to possible problems with yielding on UI or ASP thread. The new technique instead of `Task.Yield()` seems kosher to me.\r\n\r\nLGTM.",
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/b961b81cb7dc1ffe7262c55a227afad0aab5a994)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96918912b45d36a0867",
    "number": 609,
    "body": "[EG](https://evergreen.mongodb.com/version/6125720c3627e055c685efe1)",
    "head_branch": "csharp3814",
    "is_a_fork": true,
    "comments": [
      "forget to mention that I added a minor note about adding comment on the server level, see what you think about it",
      "Merged [here](https://github.com/mongodb/mongo-csharp-driver/commit/ed579ea75fcb6b70f2ded79fad4a4bdd883416cf)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96b18912b45d36a0868",
    "number": 608,
    "body": "1. To build snappy on linux I used this PR https://github.com/google/snappy/pull/128 with the solution how to fix a build error:\r\n\r\n          ubuntu@ip-10-122-2-90:~/snappy3/snappy/build$ cmake --build . --target snappy\r\n        Scanning dependencies of target snappy\r\n        [ 20%] Building CXX object CMakeFiles/snappy.dir/snappy-c.cc.o\r\n        [ 40%] Building CXX object CMakeFiles/snappy.dir/snappy-sinksource.cc.o\r\n        [ 60%] Building CXX object CMakeFiles/snappy.dir/snappy-stubs-internal.cc.o\r\n        [ 80%] Building CXX object CMakeFiles/snappy.dir/snappy.cc.o\r\n        /home/ubuntu/snappy3/snappy/snappy.cc:1028:8: warning: always_inline function might not be inlinable [-Wattributes]\r\n         size_t AdvanceToNextTagX86Optimized(const uint8_t** ip_p, size_t* tag) {\r\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        /home/ubuntu/snappy3/snappy/snappy.cc:1009:8: warning: always_inline function might not be inlinable [-Wattributes]\r\n         size_t AdvanceToNextTagARMOptimized(const uint8_t** ip_p, size_t* tag) {\r\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        /home/ubuntu/snappy3/snappy/snappy.cc: In function 'std::pair<const unsigned char*, long int> snappy::DecompressBranchless(const uint8_t*, const uint8_t*, ptrdiff_t, T, ptrdiff_t) [with T = char*]':\r\n        /home/ubuntu/snappy3/snappy/snappy.cc:1028:8: error: inlining failed in call to always_inline 'size_t snappy::AdvanceToNextTagX86Optimized(const uint8_t**, size_t*)': function body can be overwritten at link time\r\n         size_t AdvanceToNextTagX86Optimized(const uint8_t** ip_p, size_t* tag) {\r\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n        /home/ubuntu/snappy3/snappy/snappy.cc:1137:16: note: called from here\r\n                 size_t tag_type = AdvanceToNextTagX86Optimized(&ip, &tag);\r\n                        ^~~~~~~~\r\n        CMakeFiles/snappy.dir/build.make:134: recipe for target 'CMakeFiles/snappy.dir/snappy.cc.o' failed\r\n        make[3]: *** [CMakeFiles/snappy.dir/snappy.cc.o] Error 1\r\n        CMakeFiles/Makefile2:104: recipe for target 'CMakeFiles/snappy.dir/all' failed\r\n        make[2]: *** [CMakeFiles/snappy.dir/all] Error 2\r\n        CMakeFiles/Makefile2:116: recipe for target 'CMakeFiles/snappy.dir/rule' failed\r\n        make[1]: *** [CMakeFiles/snappy.dir/rule] Error 2\r\n        Makefile:188: recipe for target 'snappy' failed\r\n        make: *** [snappy] Error 2\r\n\r\n2. To build snappy on MacOS we need to downgrade the version to 1.1.8 since the latest has a build bug:\r\n\r\n        macos-1014-63:build dmitry.lukyanov$ cmake --build . --target snappy\r\n        Consolidate compiler generated dependencies of target snappy\r\n        [ 20%] Building CXX object CMakeFiles/snappy.dir/snappy-c.cc.o\r\n        [ 40%] Building CXX object CMakeFiles/snappy.dir/snappy-sinksource.cc.o\r\n        [ 60%] Building CXX object CMakeFiles/snappy.dir/snappy-stubs-internal.cc.o\r\n        [ 80%] Building CXX object CMakeFiles/snappy.dir/snappy.cc.o\r\n        /Users/dmitry.lukyanov/snappy/snappy/snappy.cc:1044:36: error: invalid output constraint '=@ccz' in asm\r\n              : [tag_type] \"+r\"(tag_type), \"=@ccz\"(is_literal));\r\n                                           ^\r\n        1 error generated.\r\n        make[3]: *** [CMakeFiles/snappy.dir/snappy.cc.o] Error 1\r\n        make[2]: *** [CMakeFiles/snappy.dir/all] Error 2\r\n        make[1]: *** [CMakeFiles/snappy.dir/rule] Error 2\r\n        make: *** [snappy] Error 2\r\n\r\nto build the library I used these steps:\r\n\r\n    $ git submodule update --init\r\n    $ mkdir build\r\n    $ cd build && cmake ../ && make\r\n    $ cd build\r\n    $ cmake -DBUILD_SHARED_LIBS=ON ..\r\n    $ cmake --build . --target snappy\r\n\r\nI asked the repo author when the above build error could be fixed, but didn't get the answer yet",
    "head_branch": "csharp2813",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2813: Support Snappy for macOS and Linux. (#608)\n\nCSHARP-2813: Support Snappy for macOS and Linux."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f96c18912b45d36a0869",
    "number": 607,
    "body": "Sync'd SDAM tests from Specifications repo, which updated `maxWireVersion` from 4 to 6. Avoided updating integration tests that required increased timeouts. There are some formatting changes in some files to remove extraneous EOL spaces, but that's a straight up sync from the Specifications repo.",
    "head_branch": "csharp3772",
    "is_a_fork": true,
    "comments": [
      "Only unit tests were updated and those passed locally."
    ],
    "commit_messages": [
      "CSHARP-3772: Bump maxWireVersion in SDAM monitoring tests. (#607)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96d18912b45d36a086a",
    "number": 606,
    "body": "I recently ran into an issue caused by the `ServerMonitor` capturing the ambient execution context. This meant it captured a reference to an `AsyncLocal` variable, resulting in a memory leak. I don't believe it's necessary to capture the context here, so (where possible) I believe flow should be suppressed.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@andrewlock thank you for reporting this.\r\nCould you please create a Jira ticket for tracking this issue?",
      "Hi @BorisDog - I can't create a Jira unfortunately, as [the signup page](https://jira.mongodb.org/secure/Signup!default.jspa) says it's private: \r\n![image](https://user-images.githubusercontent.com/18755388/130587667-ffb911ca-eec9-498f-8995-9de130c2ef8a.png)\r\n\r\nIs there another way for me to log it? Thanks\r\n",
      "Hi @andrewlock, we have created a ticket for this here [CSHARP-3813](https://jira.mongodb.org/browse/CSHARP-3813).",
      "Thanks @BorisDog! 🙂 ",
      "Hey, please be informed that we've added a status update in CSHARP-3813",
      "This logic was rewritten in CSHARP-3761 and has been released in 2.15. Please check this behavior with 2.15 release",
      "Hi @DmitryLukyanov I have bumped Nuget package `MongoDB.Driver` from `2.12.3` to `2.15.0` and I still see massive memory consumption that may be some flavor of [this issue](https://jira.mongodb.org/browse/CSHARP-3813). *I understand that the rewrite of this area of code in `2.15.0` might make it so that is not possible*\r\n![image](https://user-images.githubusercontent.com/53242/164019338-f25ec7cb-c307-4429-9b35-6109e446ca34.png). \r\n\r\nIt is unclear if perhaps I should [expect to see my .NET Core services using at least 512mb per service](https://stackoverflow.com/questions/62209648/bsonchunkpool-and-memory-leak) or that I have a separate memory leak issue entirely.\r\n\r\n*I also just recently bumped from .NET Core 5 to .NET Core 6 but I do not think that is related in anyway, I saw the memory leak with .NET Core 5 and continue to see with .NET Core 6*",
      "Hi, @Sweetog,\r\n\r\nThank you for reaching out about this issue. Reviewing the memory stats provided, the majority is strings and Datadog-related `MongoDbTags` objects. I don't see objects directly related to the MongoDB .NET/C# Driver (e.g. Objects of types in the `MongoDB.Driver.*` namespaces).\r\n\r\nPlease open a CSHARP ticket at https://jira.mongodb.org/browse/CSHARP with a minimal repro of the issue and a link to [CSHARP-3813](https://jira.mongodb.org/browse/CSHARP-3813). We will be happy to investigate further.\r\n\r\nSincerely,\r\nJames"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96e18912b45d36a086b",
    "number": 605,
    "body": null,
    "head_branch": "csharp3809",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f96f18912b45d36a086c",
    "number": 604,
    "body": null,
    "head_branch": "csharp3642",
    "is_a_fork": true,
    "comments": [
      "I like `IsRunning()` much better. Cleaner and you're not rooting around inside the SUT's internal state. 👍 ",
      "Merged [here](https://github.com/mongodb/mongo-csharp-driver/commit/7614e31f7200938de7d974adca2fee144d94ed9e)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97018912b45d36a086d",
    "number": 603,
    "body": "AcquireConnection_should_iterate_over_all_dormant_connections timings tuning",
    "head_branch": "csharp3799",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3799: AcquireConnection_should_iterate_over_all_dormant_connections timings tuning"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97118912b45d36a086e",
    "number": 602,
    "body": null,
    "head_branch": "csharp3785",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3785: Enable WriteError_details_should_expose_writeErrors_errInfo test on latest sharded. (#602)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97218912b45d36a086f",
    "number": 601,
    "body": "Enable tests that were temporary disabled due a server bug",
    "head_branch": "csharp3704",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3704: Temporarily disable tests failing due to SERVER-57300. (#601)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97318912b45d36a0870",
    "number": 600,
    "body": "Steps to generate zstd libraries:\r\n1. clone the git repo: https://github.com/facebook/zstd\r\n2. `git submodule update --init` (not sure that this is required)\r\n3. call `make` from the root folder\r\n4. Check this path: `root_folder/lib/libzstd.so|.dylib`",
    "head_branch": "csharp2914",
    "is_a_fork": true,
    "comments": [
      "The pending question, how to configure whether it should be generated x32 or x64 library, will try to check the facebook guide/repo to find this info"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97418912b45d36a0871",
    "number": 599,
    "body": null,
    "head_branch": "csharp2714",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2714: Update minimum .NET & .NET Standard version. (#599)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f97518912b45d36a0872",
    "number": 598,
    "body": null,
    "head_branch": "csharp3784",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3784: Create a test to validate url options provided by EG. (#598)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97918912b45d36a0873",
    "number": 597,
    "body": "[gh-pages preview](https://borisdog.github.io/mongo-csharp-driver/)",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated v2.13.1 docs."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97a18912b45d36a0874",
    "number": 596,
    "body": null,
    "head_branch": "csharp3781",
    "is_a_fork": true,
    "comments": [
      "ok, I will move the rest of the code into a different ticket",
      "Test EG: https://evergreen.mongodb.com/version/610b0362a4cf4727698858bd that will show NotImplemented errors, because I temporary changed the ZstandardCompressor to fail in Decompress. This will prove that this step was actually called"
    ],
    "commit_messages": [
      "CSHARP-3781: Zstandard EG variant should set \"zstd\" as compression setup. (#596)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97b18912b45d36a0875",
    "number": 595,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update refdocs to reflect 2.13.1 is the current version."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97c18912b45d36a0876",
    "number": 594,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.13.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97d18912b45d36a0877",
    "number": 593,
    "body": "",
    "head_branch": "v2.13.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP3725: Fix TestThatItRunsConventionsInTheProperOrder test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97e18912b45d36a0878",
    "number": 592,
    "body": "",
    "head_branch": "v2.13.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "- Updated evergreen/evergreen.yml to not test v2.13.x against latest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f97f18912b45d36a0879",
    "number": 591,
    "body": "",
    "head_branch": "csharp3777",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3777: Temporary disable WriteError_details_should_expose_writeErrors_errInfo due to the server bug. (#591)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98018912b45d36a087a",
    "number": 590,
    "body": "",
    "head_branch": "csharp3716",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3716: Enable retryable writes tests on sharded cluster. (#590)\n\nCSHARP-3716: Enable retryable writes tests on sharded cluster."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98118912b45d36a087b",
    "number": 589,
    "body": "I didn't make any changes for LB since when I make the same change for stopping LB, the whole scripts fails with this error https://evergreen.mongodb.com/task_log_raw/dot_net_driver_load_balancer_tests_secure__version~latest_os~ubuntu_1804_topology~sharded_cluster_auth~auth_ssl~ssl_test_load_balancer_netstandard21_patch_a563175b58fffa0f0ca754c735caa4e32234aaad_6105f384d1fe071f0cb0c6d9_21_08_01_01_06_30/0?type=T#L1614. It looks like stopping logic should be done in the same scope as the main steps. Yes, if something will fail, the stopping logic won't be called. I asked @durran how we can make deal with this, since in the node he applied the same change",
    "head_branch": "csharp3765",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3765: Clean-up a stop step for LB and Serverless tests. (#589)\n\nCSHARP-3765: Clean-up a stop step for LB and Serverless tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98218912b45d36a087c",
    "number": 588,
    "body": "",
    "head_branch": "csharp3767",
    "is_a_fork": true,
    "comments": [
      "> \r\n> How did you identify which tests to disable? Was it simply based on build failures? If there are tests that are using legacy wire protocol for their setup (e.g. OP_INSERT), but are testing something else, we should modify the setup to use OP_MSG for setup. We should only be disabling tests on 5.1+ that are _testing_ legacy wire protocol, not tests that happen to be using legacy wire protocol as a side effect.\r\n\r\nI will recheck it, I disabled all tests that failed on latest."
    ],
    "commit_messages": [
      "CSHARP-3767: Skip tests that depend on the legacy wire protocol. (#588)\n\nCSHARP-3767: Skip tests that depend on the legacy wire protocol."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f98318912b45d36a087d",
    "number": 587,
    "body": "This change looks correct in any case. But it makes test code a bit more complicated than it was all the time before. Another option, can be just disabling LB for local test. But I think we will need to do the same change in future anyway, so probably it's better to add this now",
    "head_branch": "csharp3733",
    "is_a_fork": true,
    "comments": [
      "discussed offline, for now we didn't find good enough and at the same time a simple enough solution, so moving this PR to hold and related ticket to Open",
      "Closing this PR based on previous comments."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98518912b45d36a087e",
    "number": 586,
    "body": "This wraps up the oppressive language removal work. The biggest parts are:\r\n\r\n- Renaming `IsMasterResult` to `HelloResult` and creating a new deprecated `IsMasterResult` deriving from `HelloResult`.\r\n- Adding `CustomizeInitialHelloCommand` to `IAuthenticator` and deprecating `CustomizeInitialIsMasterCommand`, which breaks interface compatibility, but I couldn't think of another way to do it. (C# is considering adding [default interface methods](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-8.0/default-interface-methods) - which would have solved this problem nicely - but it is not part of C# yet.)\r\n- Renaming (with deprecations) two features that contained \"master\" in the name. `Feature` is public and therefore part of the public API, but not intended for external use. We may want to consider simply renaming without going through the deprecation dance.\r\n\r\nThe remaining changes are textual replacements in xmldocs to use modern language and moving \"oppressive language\" error messages into `OppressiveLanguageConstants`.\r\n\r\nPatch build is predominantly green except for our usual spate of timeouts:\r\n\r\nhttps://spruce.mongodb.com/version/60fb46990ae6064592564aea/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC",
    "head_branch": "csharp3660",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3660: Remove oppressive language from the source code. (#586)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f98618912b45d36a087f",
    "number": 585,
    "body": "The only remaining occurrences of oppressive language in our docs are in the following places:\r\n\r\n- the API docs (which will be handled in CSHARP-3660)\r\n- third-party dependencies (jquery.js, underscore.js, etc.)\r\n- explanation that `slaveOk=true` must be replaced with `readPreference` in What's New?",
    "head_branch": "csharp3661",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3661: Remove oppressive language from the documentation. (#585)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98718912b45d36a0880",
    "number": 584,
    "body": "We look at the previous hello/legacy hello response to determine whether hello or legacy hello should be used for the next heartbeat or RTT command. The only slight complexity is that we re-use the previous command/protocol if we are streaming heartbeats from the server.",
    "head_branch": "csharp3659",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3659: Use hello command for monitoring (including RTT) if supported. (#584)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f98818912b45d36a0881",
    "number": 583,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3387\r\nEG (serverless only): https://evergreen.mongodb.com/version/610156453e8e8611432d8f5d\r\nEG (full run): https://evergreen.mongodb.com/version/6101567a5623432f0eaea2cf",
    "head_branch": "csharp3387",
    "is_a_fork": true,
    "comments": [
      "Some evergreen tasks failed with \"system failure\". That's because I've used all the available test instances, meaning nothing wrong with the tests or the code.",
      "Dmitry's suggestion didn't work, the patch build fails:\r\nhttps://evergreen.mongodb.com/version/60fb1548d6d80a4987269c18\r\nI had to revert the passed environment variables change.",
      "> \r\n> \r\n> Dmitry's suggestion didn't work, the patch build fails:\r\n> https://evergreen.mongodb.com/version/60fb1548d6d80a4987269c18\r\n> I had to revert the passed environment variables change.\r\n\r\nas I wrote, I wasn't sure in original implementation, since you said that it doesn't work, I needed to apply a small fix "
    ],
    "commit_messages": [
      "CSHARP-3387: Serverless testing (#583)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f98918912b45d36a0882",
    "number": 582,
    "body": "CSHARP-2661\r\n\r\nSupersedes https://github.com/durran/mongo-csharp-driver/pull/7",
    "head_branch": "csharp2661",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2661: Show Test Results in Evergreen (#582)\n\nCo-authored-by: Durran Jordan <durran@gmail.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98a18912b45d36a0883",
    "number": 581,
    "body": "",
    "head_branch": "csharp3726-skip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98b18912b45d36a0884",
    "number": 580,
    "body": "[EG](https://evergreen.mongodb.com/version/60ef764357e85a201911bb00)",
    "head_branch": "csharp3725",
    "is_a_fork": true,
    "comments": [
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/b1831c2d0b0ad4807daf9fdeaabd077b73ed3f79)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98c18912b45d36a0885",
    "number": 579,
    "body": "",
    "head_branch": "csharp3671",
    "is_a_fork": true,
    "comments": [
      "The latest 2 commits contains simplifying of the logic in this PR:\r\n\r\n1. (`Simplifying`.: the second from the end): https://github.com/mongodb/mongo-csharp-driver/pull/579/commits/de9ab507c0c2f5ed9b5db58c34eac10692e1ff19\r\nEG: https://evergreen.mongodb.com/version/60f843552fbabe15604d13da\r\nRevert most of the changes in this PR, but didn't change the pinning logic itself. So, I changed only how we set a reason.\r\n2.  (`Simplifying (v2)` : the last commit): https://github.com/mongodb/mongo-csharp-driver/pull/579/commits/ee358f67719026d0c01d873a07140db6cca6024d. This PR continues simplifying started in the first commit. With this change we don't need to replace channel/channelSource in the retry logic anymore. This change assumes that any operation won't require acquiring connection more than initial once. So, for the case when we only create a cursor, the actual channel pinning will happen only before creating cursor itself (previously I pinned connection right after creating)\r\nEG: https://evergreen.mongodb.com/version/60f84c70c9ec444dca52e795"
    ],
    "commit_messages": [
      "CSHARP-3671: Better wait queue timeout errors for load balanced clusters. (#579)\n\nCSHARP-3671: Better wait queue timeout errors for load balanced clusters."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98d18912b45d36a0886",
    "number": 578,
    "body": "This PR does **not** affect the current release.",
    "head_branch": "csharp3698",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3698: Calling cursor.next() and cursor.close() concurrently in Load Balanced mode uses the same connection simultaneously. (#578)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98e18912b45d36a0887",
    "number": 577,
    "body": "",
    "head_branch": "fix_unified_tests",
    "is_a_fork": true,
    "comments": [
      "Please change the PR name and commit name to something more specific, like `Add missing await to unified list test operations`"
    ],
    "commit_messages": [
      "Add missing await to unified list test operations. (#577)\n\nAdd missing await to unified list test operations."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f98f18912b45d36a0888",
    "number": 576,
    "body": "",
    "head_branch": "releasenotes2.13.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.13.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99018912b45d36a0889",
    "number": 575,
    "body": "",
    "head_branch": "whatsnew-2.13.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated What's New? for 2.13.0 release. (#575)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99118912b45d36a088a",
    "number": 574,
    "body": "",
    "head_branch": "referencedocscurrentversion2.13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99218912b45d36a088b",
    "number": 573,
    "body": "",
    "head_branch": "referencedocscurrentversion2.14",
    "is_a_fork": true,
    "comments": [
      "Wrong version number. Starting over."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99318912b45d36a088c",
    "number": 572,
    "body": "Due to current minimal socket timeout of 500ms, server blocking failpoint duration in  is increased to 2000ms to eliminate `hello-timeout` test failures.\r\n",
    "head_branch": "hello_timeout_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99418912b45d36a088d",
    "number": 571,
    "body": "",
    "head_branch": "fixsandcastlewarningsfor2.13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Sandcastle warnings."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f99618912b45d36a088e",
    "number": 570,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3700\r\nEG: https://evergreen.mongodb.com/version/60ed9f9b562343354c74fc64\r\n\r\nNote: Public API `Feature` class was changed, which could be considered as a breaking change. The reason for the change is that existing `AggregateLet` feature was referring only to the `$lookup` stage of the aggregate pipeline, while the new feature applies to the whole `aggregate` operation.",
    "head_branch": "csharp3700",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3700: Support 'let' option for aggregate command (#570)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f99718912b45d36a088f",
    "number": 569,
    "body": "",
    "head_branch": "csharp3721",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3721: Disable writes on snapshot sessions"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99818912b45d36a0890",
    "number": 568,
    "body": "We can't remove these validators completely as we still need to validate that updates contain a `$OP` at the root and that replacements do not contain `$FIELD` at the root. MongoDB 5.0 allows inserts of `$FIELD` at the root but not replacements.\r\n\r\nAs well we have logic in `UpdateMessageBinaryEncoder.cs` line 145 where we use the validator type to check for a valid message:\r\n\r\n```\r\n                if (updateValidator is UpdateElementNameValidator && binaryWriter.BaseStream.Position == position + 5)\r\n                {\r\n                    throw new BsonSerializationException(\"Update documents cannot be empty.\");\r\n                }\r\n```\r\n\r\nThis is existing code and I didn't want to rewrite the logic at this point.\r\n\r\nThe spec test refreshes are required because the old tests were depending on inserting documents of the form `{ \".\": 1 }` to throw a client-side BSON serialization error, which they no longer do.\r\n\r\nThere are still EG test failures that I'm working through. So far they all appear to be due to test problems like the spec test refreshes mentioned above. I'll push additional commits to this PR as I fix them.",
    "head_branch": "csharp3399",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3399: Mitigate pain of using field names with dots and dollars. (#568)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f99918912b45d36a0891",
    "number": 567,
    "body": "",
    "head_branch": "csharp3722",
    "is_a_fork": true,
    "comments": [
      "Merged [here](https://github.com/BorisDog/mongo-csharp-driver/commit/b947f6e27139b55e58f71cfcf45c2a7b04edeac0)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99a18912b45d36a0892",
    "number": 566,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3396\r\nEG: https://evergreen.mongodb.com/version/60e8a2a20305b9034bab85a2\r\nSpecification prose test: https://github.com/mongodb/specifications/blob/master/source/crud/tests/README.rst#2-writeerrordetails-exposes-writeerrorserrinfo\r\n\r\nNote: the first prose test was in unexpected location and namespace, so I moved it without making any changes there.",
    "head_branch": "csharp3396",
    "is_a_fork": true,
    "comments": [
      "Ready for review"
    ],
    "commit_messages": [
      "CSHARP-3396: Expose the Reason an Operation Fails Document Validation (#566)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f99b18912b45d36a0893",
    "number": 565,
    "body": "Edit: I had an initial suggested update, but then realized that it would not actually fix things. Updated question(s) below:\r\n\r\n---\r\n\r\nThe problem we are experiencing is that we have C# classes such as the following (PascalCase):\r\n```cs\r\npublic class InstanceData {\r\n    public string? InstanceName { get; set; }\r\n}\r\n\r\npublic class Model {\r\n    public int Version { get; set; }\r\n    public InstanceData? Data { get; set; }\r\n}\r\n```\r\n```cs\r\n// Startup.cs\r\npublic void ConfigureServices(IServiceCollection services)\r\n{\r\n    \\\\ ...\r\n\r\n    ConventionRegistry.Register(\"MyConvention\",\r\n        new ConventionPack { new CamelCaseElementNameConvention() },\r\n        t => \\* Some Condition *\\);\r\n\r\n    \\\\ ...\r\n}\r\n```\r\nand data in MongoDb as such (camelCase):\r\n\r\n```\r\n_id: ObjectId(\"...\")\r\nversion: 1\r\ndata: Object\r\n    instanceName: \"TestInstance123\"\r\n```\r\n\r\nThe problem is, when Model gets mapped, it creates a member map for Version just fine, but for Data, an expression is created. This expression, when further evaluated within the Freeze() method, creates a trie where all children of the root node are lowercase. It then tries to look up \"InstanceName\" from a trie which has children [ \"i\" ], and throws an exception since the capitalization differs. It looks like it's creating a NEW ClassMap/Trie for Model (where both ElementName and MemberName are pascal case ), but using the cached map for InstanceData. The cached one has all MemberName's in pascal case, but all ElementName's in camel case. It looks like we have a total of 3 Trie's when really we need 4? Or perhaps only 2?\r\n\r\nExample Exception:\r\n```\r\nAn error occurred while deserializing the Data property of class MyNamespace.Model: \r\nElement 'InstanceName' does not match any field or property of class MyNamespace.Data.\r\n```\r\n\r\nThis appears to be a bug with the cached serializer (or classMap?) for the InstanceData class.\r\n\r\nExample code:\r\n```cs\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        ConventionRegistry.Register(\"MyConvention\", new ConventionPack { new CamelCaseElementNameConvention() }, t => true);\r\n\r\n        var client = new MongoClient(/* Connection String */);\r\n        var database = client.GetDatabase(/* Database */);\r\n\r\n        var documents = database.GetCollection<Model>(/* Collection */).AsQueryable().AsQueryable()\r\n            // .Select(m => m) // This one works just fine.\r\n            // .Select(m => new Model { Version = m.Version, Data = m.Data }) // This one works just fine as well.\r\n            .Select(m => new Model { Version = m.Version, Data = m.Data != null ? new InstanceData { InstanceName = m.Data.InstanceName } : default }) // This one does not work. Can't find \"InstanceName\" in class \"Data\".\r\n            .Take(1000)\r\n            .ToArray();\r\n    }\r\n}\r\n```\r\n\r\nA few debug values/expressions from above query:\r\n```\r\nMongoQueryableImpl.GetEnumerator:\r\n{aggregate([]).Select(m => new Model() {Version = m.Version, Data = IIF((m.Data != null), new InstanceData() {InstanceName = m.Data.InstanceName}, null)}).Take(1000)}\r\n\r\nPipelineBinderBase.BindMethodCall:\r\n{[MyDb.MyCollection].Select(new Model() {Version = {document}{version}, Data = IIF(({document}{Data} != null), new InstanceData() {InstanceName = {document}{Data}{instanceName}}, null)}).Take(1000)}\r\n\r\nMongoQueryProviderImpl.Prepare:\r\n{[MyDb.MyCollection].Select(new Model() {Version = {document}{version}, Data = IIF(({document}{Data} != null), new InstanceData() {InstanceName = {document}{Data}{instanceName}}, null)}).Take(1000)}\r\n\r\nMongoQueryProviderImpl.Execute:\r\n{() => Convert(value(MongoDB.Driver.Linq.MongoQueryProviderImpl`1[MyNamespace.Model]).ExecuteModel(aggregate([{ \"$project\" : { \"Version\" : \"$version\", \"Data\" : { \"$cond\" : [{ \"$ne\" : [\"$Data\", null] }, { \"InstanceName\" : \"$Data.instanceName\" }, null] }, \"_id\" : 0 } }, { \"$limit\" : 1000 }])), IAsyncCursor`1).ToEnumerable(value(System.Threading.CancellationToken))}\r\n\r\nMongoQueryProviderImpl.ExecuteModel:\r\n{aggregate([{ \"$project\" : { \"Version\" : \"$version\", \"Data\" : { \"$cond\" : [{ \"$ne\" : [\"$Data\", null] }, { \"InstanceName\" : \"$Data.instanceName\" }, null] }, \"_id\" : 0 } }, { \"$limit\" : 1000 }])}\r\n```",
    "head_branch": "bug/bug-member-name-capitalization",
    "is_a_fork": true,
    "comments": [
      "Hi, John,\r\n\r\nThis appears to be more a bug report than a pull request. Please open a CSHARP issue in [our JIRA issue tracker](https://jira.mongodb.org/) so that we can triage and diagnose the issue properly.\r\n\r\nSince all code changes have been reverted in this PR, I will close it out and we can continue this discussion and investigation in JIRA.\r\n\r\nSincerely,\r\nJames",
      "Created here: https://jira.mongodb.org/browse/CSHARP-3731"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99c18912b45d36a0894",
    "number": 564,
    "body": "",
    "head_branch": "csharp3673_v2",
    "is_a_fork": true,
    "comments": [
      "Squashed/rebased/merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99d18912b45d36a0895",
    "number": 563,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3714\r\nEG: https://evergreen.mongodb.com/version/60e63dec2a60ed546b45f97e",
    "head_branch": "csharp3714",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3714: Implement missing test from Versioned API specification (#563)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f99f18912b45d36a0896",
    "number": 562,
    "body": "EG:  https://evergreen.mongodb.com/version/60de54362fbabe3344a05f95\r\n\r\nSteps to work with LB (nginx) on windows:\r\n\r\n1. Download nginx: http://nginx.org/en/download.html\r\n2. Update `nginx-1.21.0\\conf\\nginx.conf` on:\r\n\r\n\t\t\t#user  nobody;\r\n\t\t\tworker_processes  1;\r\n\t\t\t#error_log  logs/error.log;\r\n\t\t\t#error_log  logs/error.log  notice;\r\n\t\t\t#error_log  logs/error.log  info;\r\n\t\t\t# pid        nginx/logs/nginx.pid;\r\n\t\t\tevents {\r\n\t\t\t\tworker_connections  1024;\r\n\t\t\t}\r\n\t\t\tstream {\r\n\t\t\t\tserver {\r\n\t\t\t\t   listen 17017;\r\n\t\t\t\t   proxy_pass single_server_backend;\r\n\t\t\t\t}\r\n\t\t\t\tserver {\r\n\t\t\t\t   listen 17018;\r\n\t\t\t\t   proxy_pass multi_server_backend;\r\n\t\t\t\t}\r\n\t\t\t\tupstream multi_server_backend {\r\n\t\t\t\t\tserver localhost:27017;\r\n\t\t\t\t\tserver localhost:27018;\r\n\t\t\t\t}\r\n\t\t\t\tupstream single_server_backend {\r\n\t\t\t\t\tserver localhost:27017;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\npay attention on ports 17017 and 17018 that represents single mongos and two mongos accordingly.\r\nSo, to use them a driver should consume the following connection strings: mongodb://localhost17017?loadBalanced=true or mongodb://localhost17018?loadBalanced=true\r\n3.\r\ncd c:\\\r\nunzip nginx-1.21.0.zip\r\ncd nginx-1.21.0\r\nstart nginx\r\n4. Verify that nginx has been successfully launched:\r\n\r\n\t\tC:\\nginx-1.21.0>tasklist /fi \"imagename eq nginx.exe\"\r\n\t\tImage Name                     PID Session Name        Session#    Mem Usage\r\n\t\t========================= ======== ================ =========== ============\r\n\t\tnginx.exe                     1680 Console                    1     14,188 K\r\n\t\tnginx.exe                    14920 Console                    1     14,356 K\r\n\r\n5. Run server with 2 mongos:\r\nmlaunch init --sharded 1 --replicaset --mongos 2 --setParameter enableTestCommands=1\r\nwhere mongos will be launched on 27017 and 27018 ports.",
    "head_branch": "csharp3676_v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3676: SRV support for load balancer mode + SDAM. (#562)\n\nCSHARP-3676: SRV support for load balancer mode + SDAM."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9a018912b45d36a0897",
    "number": 561,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3699\r\nEG: https://evergreen.mongodb.com/version/60e644df3627e06703f955c2",
    "head_branch": "csharp3699",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3699: Bump maxWireVersion for MongoDB 5.0 (#561)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9a118912b45d36a0898",
    "number": 560,
    "body": "",
    "head_branch": "csharp3672",
    "is_a_fork": true,
    "comments": [
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-3672: LB support integration testing. (#560)\n\nCSHARP-3672: LB support integration testing."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9a218912b45d36a0899",
    "number": 559,
    "body": "",
    "head_branch": "csharp3400",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3400: Implemented support for creating time-series collections. (#559)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9a318912b45d36a089a",
    "number": 558,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3682\r\nEG: https://evergreen.mongodb.com/version/60db4fe60ae606784226a96b",
    "head_branch": "csharp3682",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3682: Test against 5.0 servers (#558)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9a418912b45d36a089b",
    "number": 557,
    "body": "",
    "head_branch": "csharp3669_v2",
    "is_a_fork": true,
    "comments": [
      "Added @MikalaiMazurenka , because he was reviewer for the original PR"
    ],
    "commit_messages": [
      "CSHARP-3669: Support loadBalanced URI option (v2). (#557)\n\nCSHARP-3669: Support loadBalanced URI option."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9a518912b45d36a089c",
    "number": 556,
    "body": "",
    "head_branch": "csharp3688",
    "is_a_fork": true,
    "comments": [
      "[Merged here](https://github.com/mongodb/mongo-csharp-driver/commit/2bd8c40429f6af03cd2f8e6e2b045ce134adb7ce)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9a618912b45d36a089d",
    "number": 555,
    "body": "Refreshed SDAM spec tests from the spec repo. Omitted integration tests (e.g. connectTimeoutMS.json and load-balancer.json) that have not been implemented yet. Only code changes are in the test runner to permit `helloOk` in spec tests.",
    "head_branch": "csharp3659",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3659: Refreshed SDAM spec tests. (#555)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9a718912b45d36a089e",
    "number": 554,
    "body": "Also, this PR contains:\r\nCSHARP-3675: Sessions should not be expired in LB mode.\r\nCSHARP-3672: LB support integration testing.",
    "head_branch": "csharp3673_v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9a818912b45d36a089f",
    "number": 553,
    "body": "When using DefaultIfEmpty() in a SelectMany expression, add the \"preserveNullAndEmptyArrays\" property to the unwind statement.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for submitting this PR and our apologies that it took so long to look at it.\r\n\r\nI am closing this PR as support for DefaultIfEmpty is already part of the LINQ3 provider."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9aa18912b45d36a08a0",
    "number": 552,
    "body": "This resolves DOCS-14572 by porting the example of $elemMatch\r\n(Any with predicate) from a previous version of the documentation\r\nto the current version of the documentation.",
    "head_branch": "DOCS-14572",
    "is_a_fork": true,
    "comments": [
      "The .NET/C# Driver reference docs have been migrated to mongodb.com/docs. Closing this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ab18912b45d36a08a1",
    "number": 551,
    "body": "Slightly different from the issue, I added an API to get an instance of `ToAsyncEnumerable`, instead of directly extending any existing interfaces.\r\n\r\nDirectly extending `IAsyncCursor` or `IAsyncCursorSource` may cause conflict when users use it with [System.Linq.Async](https://www.nuget.org/packages/System.Linq.Async). See https://github.com/dotnet/efcore/issues/24041 and https://github.com/dotnet/efcore/pull/24145.\r\n\r\nThis PR only affects when users explicitly invoking `ToAsyncEnumerable`, so it does not cause any conflict.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your pull request. It looks very promising. We are too close to the next release to want to merge it right now, but we hope to schedule it for a future release.",
      "Hi, there have been many updates since I submitted this pull request. Feel free to let me know if there is anything else I can do (e.g., rebasing, solving conflicts). I am glad to help!",
      "Credit to\r\nhttps://blog.i3arnon.com/2015/12/16/async-linq-to-objects-over-mongodb/\r\n\r\n??",
      "I've published a library that adds `ToAsyncEnumerable` externally:\r\nhttps://github.com/i3arnon/MongoAsyncEnumerableAdapter\r\nhttps://www.nuget.org/packages/MongoAsyncEnumerableAdapter\r\n\r\n@b11p It has `ToAsyncEnumerable` for `IAsyncCursor` as well.. since `IAsyncCursor` currently has `ToEnumerable`. ",
      "We have closed this PR and will track this work in [CSHARP-3458](https://jira.mongodb.org/browse/CSHARP-3458) for addition to the upcoming .NET/C# Driver 3.0."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ac18912b45d36a08a2",
    "number": 550,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3592\r\nEG: https://evergreen.mongodb.com/version/60c8b9563e8e86082268b6c3",
    "head_branch": "csharp3592",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3592: Convert CRUD v2 spec tests to unified test format (#550)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ad18912b45d36a08a3",
    "number": 549,
    "body": "Patch example: https://evergreen.mongodb.com/task_log_raw/dot_net_driver_tests_zstandard_compression__version~4.4_os~windows_64_topology~standalone_auth~noauth_ssl~nossl_compressor~zstandard_test_net452_patch_ad0ad177e25debcef9e6f1875f24d4f2c733662a_60c387852fbabe2d4ec892fb_21_06_11_15_56_07/0?type=T#L901",
    "head_branch": "csharp3707",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3707: Force EG variant running all tests projects even some of them were failed. (#549)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ae18912b45d36a08a4",
    "number": 548,
    "body": "Running patch on latest to verify the fix:\r\nhttps://spruce.mongodb.com/version/60c27902d1fe0735af1ee280/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC",
    "head_branch": "csharp3705",
    "is_a_fork": true,
    "comments": [
      "The initial patch revealed additional failures. All fixes are in the test runner code, not production code. These fixes ran cleanly on a 5.0-rc0 replset with and without auth locally. Running full patch on latest in Evergreen:\r\n\r\nhttps://spruce.mongodb.com/version/60c3c19c7742ae54c1a12358/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC\r\n\r\nThat should tell us if I caught everything this time.",
      "Evergreen found failures on 5.0 sharded clusters because the query team changed the explain plan format for sharded clusters. Some of our tests were looking for explain plan output in the wrong place and failing with a null reference on 5.0 sharded clusters only. Let's see if this patch reports green...\r\n\r\nhttps://spruce.mongodb.com/version/60c3ef88d1fe0769f894b6f0/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC",
      "> Should we make anything with isMasterResult also? like wrap it to HelloResult and use a new class in the code instead. Will we be able just to remove isMasterResult in 3.0 without depricating this class now?\r\n\r\nRefactoring `isMasterResult` is being done as part of CSHARP-3660. It's coming, but not done quite yet."
    ],
    "commit_messages": [
      "CSHARP-3705: Updated spec testing code to handle hello, ignore tests related to not-yet-implemented load balancer support, and update sharded cluster tests to reflect new explain plan output from 5.0 sharded clusters. (#548)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9af18912b45d36a08a5",
    "number": 547,
    "body": "This is continuation for this PR: https://github.com/mongodb/mongo-csharp-driver/pull/537",
    "head_branch": "csharp3676",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b018912b45d36a08a6",
    "number": 546,
    "body": "",
    "head_branch": "refdocs-v2.12.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update refdocs to reflect 2.12.4 is the current version."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b118912b45d36a08a7",
    "number": 545,
    "body": "While having an `Id` property without a getter is an uncommon design choice, we actually throw a `NullReferenceException` in `NamedIdMemberConvention` rather than simply not returning the getter-less `Id` member. This prevents the use of other attributes or conventions to identify another property as the `_id`. For example the following classes will throw when attempting to serialize them:\r\n\r\n```\r\n[BsonNoId]\r\nclass Class1 {\r\n    public int Id { set {} }\r\n}\r\n\r\nclass Class2 {\r\n    [BsonIgnore]\r\n    public int Id { set {} }\r\n}\r\n\r\nclass Class2 {\r\n    [BsonIgnore]\r\n    public int Id { set {} }\r\n\r\n    [BsonId]\r\n    public int AnotherId { get; set; }\r\n}\r\n```\r\n\r\nThe added null check in `NamedIdMemberConvention` allows all of the above classes to be mapped.",
    "head_branch": "csharp3703",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3703: Fix NullReferenceException when Id property has no getter. (#545)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b218912b45d36a08a8",
    "number": 544,
    "body": "",
    "head_branch": "csharp3704b",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3704: Temporarily disable tests failing due to SERVER-57300."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b318912b45d36a08a9",
    "number": 543,
    "body": "",
    "head_branch": "csharp3704",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3704: Temporarily disable tests failing due to SERVER-57300"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b418912b45d36a08aa",
    "number": 542,
    "body": "",
    "head_branch": "csharp1485",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-1485: Fix ExpandoObject serialization to permit nulls. (#542)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9b518912b45d36a08ab",
    "number": 541,
    "body": "Evergreen: https://evergreen.mongodb.com/version/60b6a2611e2d173aca1bb5ae",
    "head_branch": "csharp3427_fix",
    "is_a_fork": true,
    "comments": [
      "> \r\n> \r\n> I'd recommend to change the name of the commit to be more specific.\r\n> My take is \"Relax assertion of native library loader test\"\r\n\r\ndone"
    ],
    "commit_messages": [
      "CSHARP-3427: Fix test. (#541)\n\nCSHARP-3427: Relax assertion of native library loader test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b618912b45d36a08ac",
    "number": 540,
    "body": "This PR contains 2 tickets:\r\n1. https://jira.mongodb.org/browse/CSHARP-3533\r\n2. https://jira.mongodb.org/browse/CSHARP-3619 (abort transaction)\r\n",
    "head_branch": "csharp3533",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3533/CSHARP-3619: Test that session is unpinned when executing a non-transaction operation. / Unpin sessions after all abortTransaction attempts. (#540)\n\nCSHARP-3533/CSHARP-3619: Test that session is unpinned when executing a non-transaction operation. / Unpin sessions after all abortTransaction attempts."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b818912b45d36a08ad",
    "number": 539,
    "body": "",
    "head_branch": "linq3",
    "is_a_fork": true,
    "comments": [
      "Done with review"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9b918912b45d36a08ae",
    "number": 538,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3694\r\nEG:\r\n\r\n1. https://evergreen.mongodb.com/version/60b159ac3e8e860bb9483486\r\n2. https://evergreen.mongodb.com/version/60b15f2b850e61283ccb1f42\r\n3. https://evergreen.mongodb.com/version/60b15f360305b9589f2969c4\r\n4. https://evergreen.mongodb.com/version/60b15f4256234370cdbbfb99",
    "head_branch": "csharp3694",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3694: Sporadic tests failures: ReceiveMessage_should_not_produce_unobserved_task_exceptions_on_fail (#538)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ba18912b45d36a08af",
    "number": 537,
    "body": "",
    "head_branch": "csharp3669_part1",
    "is_a_fork": true,
    "comments": [
      "closed due to a new one with the master changes: https://github.com/mongodb/mongo-csharp-driver/pull/557. The provided comments are fixed in a new PR"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9bb18912b45d36a08b0",
    "number": 536,
    "body": "This implements using `hello` instead of `isMaster` when server API version is declared for both the initial handshake and monitoring.\r\n\r\nNOTE: This PR does not add support for `helloOk:true` and using `hello` for monitoring on supporting servers, which will be implemented separately in CSHARP-3659.",
    "head_branch": "csharp3516",
    "is_a_fork": true,
    "comments": [
      "The full test suite passes locally (on OSX), but there are some failures on EG. I'm going to investigate Wednesday morning to understand what's broken and why.",
      "We have some existing failures on latest but tests now pass otherwise. Ready for PR.",
      "Incorporated @rstam's feedback."
    ],
    "commit_messages": [
      "CSHARP-3516: Use hello command when API Version is declared. (#536)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9bc18912b45d36a08b1",
    "number": 535,
    "body": "",
    "head_branch": "csharp3683",
    "is_a_fork": true,
    "comments": [
      "what's the goal of this change? Just to ensure that non auth variants work well?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9bd18912b45d36a08b2",
    "number": 534,
    "body": "This PR encompasses the straightforward renames that don't affect the public API. The intent is that this PR should be relatively straightforward to review as there should be no externally visible changes.\r\n\r\nThere are still many instances of deprecated terminology in the source code, but those will require implementing new public methods/classes and deprecating existing ones. This more complex work will be done in a separate PR.",
    "head_branch": "csharp3660",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3660: Updated server error codes and internal/private variables/fields/methods to use modern terminology. (#534)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9be18912b45d36a08b3",
    "number": 533,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3658",
    "head_branch": "csharp3658",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3658: Versioned API Connection Examples for Docs (#533)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9bf18912b45d36a08b4",
    "number": 532,
    "body": "",
    "head_branch": "csharp3664",
    "is_a_fork": true,
    "comments": [
      "One way to find loose ends is to search for *all* of the following variations of the relevant property names:\r\n\r\n`MaxPoolSize`\r\n`MaxConnections`\r\n`MaxConnectionPoolSize`\r\n\r\nNot sure how we ended up with three different names for the same thing. Historical reasons I guess.",
      ">(Do we need to do anything about MongoServerSettings?).\r\n\r\nI would not touch legacy, we almost never change it in new ticket, however I don't mind if you and @JamesKovacs  want it :) \r\n\r\n>ClusterBuilderExtensions \r\n\r\nin this class we set values to `ConnectionPoolSettings` that has this validation, so I would not worry about this.\r\n\r\n>MongoDefaults.MaxConnectionPoolSize\r\n\r\nwe usually don't validate values there, but I don't mind if you and @JamesKovacs  think differently\r\n\r\n>MongoUrl \r\n\r\nI would not touch this class (and builder) and postpone this logic until clientSettings",
      "> in this class we set values to `ConnectionPoolSettings` that has this validation, so I would not worry about this.\r\n\r\nactually I misunderstood you, yes, we need this logic there",
      "I disagree about the second approach, the points that I mentioned in the slack:\r\n* in the pool we will need to keep in mind that if we need a maxconnections we should not look at ConnectionPoolSettings and instead we need to look at some workaround which is a separate variable in your case\r\n* also, we will need to make some changes in calculating _waitQueueSize to handle 0  that now will be possible\r\n\r\nand all the above without any real profit that we use, instead of fixing of one line.\r\n\r\nThe first one already discussed a lot, I also disagree with this, but I can approve this if @JamesKovacs also agreed with this",
      "I guess the first step to resolving pending comments in this PR is to decide which of the following approaches we are going to take.\r\n\r\n1. Allow 0 only in the two classes that represent a connection string: MongoUrl and ConnectionString\r\n2. Allow 0 everywhere\r\n\r\nThen we can work on resolving the pending code review comments.\r\n\r\n@JamesKovacs can you provide your opinion on which of the two approaches would be better?",
      "I don't have a strong opinion on which of Robert's approaches to take. I'd be happy with either. Both handle the waitQueueSize calculation properly.\r\n\r\nThis PR currently does not handle waitQueueSize correctly and throws an exception when you try to execute `var client = new MonogClient(\"mongodb://localhost:27017?maxPoolSize=0\");`. The reason is that the result of this calculation is `int.MinSize`:\r\n```\r\nvar maxPoolSize = int.MaxValue;\r\nvar waitQueueMultiple = 5.0d;\r\nvar waitQueueSize = (int)(waitQueueMultiple * maxPoolSize);\r\nConsole.WriteLine(waitQueueSize);  // -2147483648 aka int.MinSize\r\n```"
    ],
    "commit_messages": [
      "CSHARP-3664: Clarify whether maxPoolSize allows 0 option or no. (#532)\n\nCSHARP-3664: Clarify whether maxPoolSize allows 0 option or no."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9c018912b45d36a08b5",
    "number": 531,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3635\r\nEG: https://evergreen.mongodb.com/version/60abec5d7742ae543a22b94b\r\nSpecification changes: https://github.com/mongodb/specifications/commit/5b892c4061026550f9b0754686a1e0f9783ff354#diff-d81feb8a94e1a811734074bde8dff007c7872dde8117e6ccdc06c6eedcce268d",
    "head_branch": "csharp3635",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3635: Require passing Versioned API options to getMore and transaction-continuing commands (#531)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9c118912b45d36a08b6",
    "number": 530,
    "body": "pay to use free bloat",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9c318912b45d36a08b7",
    "number": 529,
    "body": "EG: https://evergreen.mongodb.com/version/609d8e0e61837d3a55f5a870",
    "head_branch": "csharp3427",
    "is_a_fork": true,
    "comments": [
      "@MikalaiMazurenka found a new issue in this logic that is related to handling `#` sign. Uri has a special handling of this where it places all content after `#` (including `#`) into a special field called `Fragment`, so the solution can be just:\r\n>return Uri.UnescapeDataString(uri.AbsolutePath + uri.Fragment)\r\n\r\nwhere Fragment is a string empty if there is no `#`: https://docs.microsoft.com/en-us/dotnet/api/system.uri.fragment?view=net-5.0#remarks \r\nThe good part of the original solution was that there were no changes in logic itself other than fixing in escaping logic, but if we want to fix the new issue also, we don't have a choice.\r\n\r\nRegarding the suggestion with just manual `Replace` everything we don't need to, I would avoid it because:\r\n* We have \"strange\" but at the same time built-in logic for Uri handling so I would prefer it.\r\n* The manual changes here look like a platform-dependent or at least can be platform-dependent in future.\r\n\r\nSo, @MikalaiMazurenka , @JamesKovacs please take a look at this comment. \r\nIf we decide to fix a new issue now, I created a temp branch with suggested solution [here](https://github.com/DmitryLukyanov/mongo-csharp-driver/tree/csharp3427_suggestion), also related [EG](https://evergreen.mongodb.com/version/60b11741d1fe0727fb1f79ef). \r\n\r\n\r\n\r\n",
      "note: the mentioned exception https://docs.microsoft.com/en-us/dotnet/api/system.uri.fragment?view=net-5.0#exceptions is the same as here https://docs.microsoft.com/en-us/dotnet/api/system.uri.absolutepath?view=net-5.0#exceptions (also checked it in the source)",
      "It feels like we are plugging holes rather than solving the actual problem. What we need to know is the location where we are loading files from irregardless of shadow copying. Since shadow copying is controlled by the AppDomain, what does `AppDomain.CurrentDomain.BaseDirectory` point to when shadow copying? Is it the original assembly location prior to shadow copying? And if that’s the case, does it work on all our supported TFMs?",
      "Discussed offline, the current next step is creating a new ticket that will consider additional (not space related) issues and possible refactoring of this logic",
      "follow-up ticket: https://jira.mongodb.org/browse/CSHARP-3693"
    ],
    "commit_messages": [
      "CSHARP-3427: Can't make use of compression when application path contain space. (#529)\n\nCSHARP-3427: Can't make use of compression when application path contain space."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9c418912b45d36a08b8",
    "number": 528,
    "body": "  ChangeStreamOperationType support  ‘Create’  ",
    "head_branch": "v2.12.x",
    "is_a_fork": true,
    "comments": [
      "Hey @reeshuai , changeStreamOperationType options match to the `operationType`s that are supported by [server](https://docs.mongodb.com/manual/reference/change-events/#change-events-1). So, it's impossible to apply this change."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9c518912b45d36a08b9",
    "number": 527,
    "body": "The slaveOk URI option has been deprecated in favour of readPreference=secondaryPreferred since at least MongoDB 2.2. Many drivers (such as pymongo) have already removed it while others never implemented it because it predated the URI options spec.",
    "head_branch": "csharp3655",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3655: Removed deprecated URI option slaveOk=true. (#527)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9c618912b45d36a08ba",
    "number": 526,
    "body": "NOTE: I launched tests only locally, let me know if I need to make it possible to launch all tests on EG before a new libmongocrypt will be pushed",
    "head_branch": "csharp3527",
    "is_a_fork": true,
    "comments": [
      "the failures I observed yesterday are gone away (The latest [EG](https://evergreen.mongodb.com/version/60f6150d3e8e86392bd473e0)). It looks like it's related to the scope of this ticket https://jira.mongodb.org/browse/DRIVERS-1541. So closing this PR.",
      "@DmitryLukyanov  this is probably not the best place for this but I believe that when this PR was merged and then MongoDb.libmongocrypt nuget package published that it created a binary incompatibility with the MongoDb.Driver nuget package. I was wondering when an update MongoDb.Driver package might be released which would fix the incompatibility.\r\n\r\nThe specific error I get is (please forgive the formatting)\r\n`Error loading assemblies: Error loading MongoDB.Driver, Version=2.13.0.0, Culture=neutral, PublicKeyToken=null: System.TypeLoadException: Could not load type MongoDB.Libmongocrypt.EncryptionAlgorithm from assembly MongoDB.Libmongocrypt, Version=1.2.2.0, Culture=neutral, PublicKeyToken=null`\r\n\r\nreverting to MongoDb.Libmongocrypt 1.2.1 resolves the issue but I'd rather not lock to that version if a new driver is coming soon.",
      "Hello @damon-mcgraw-rack thanks for your message, I don't see this error with any currently released driver versions. Can you please provide more details about your use case?",
      "@DmitryLukyanov Thanks for the quick response!\r\nWe have an IIS hosted web API targeting .Net Framework 4.7, the API loads various plugins through reflection depending on it's configuration and some of those plugins use the C# mongo driver. I'm seeing the error in our CI server, as well as our test environment when the plugin is loaded. \r\nWe're using MongoDb.Driver 2.13 and MongoDb.LibMongoCrypt 1.2.2 when I see the error. With MongoDb.LibMongocrypt 1.2.1 the error goes away.\r\n\r\nI suspected the namespace changed when the enum was moved and saw that this also updated the mongocrypt version used by the driver.\r\nI'll try to provide a more specific example.",
      "yeah, more specific example will be helpful, `MongoDb.Driver 2.13` should look at `MongoDb.LibMongocrypt 1.2.1`, so I'm still no**t** sure what exactly leads to your issue",
      "I think that's exactly it, I was using MongoDb.Driver 2.13 with MongoDb.LibMongoCrypt 1.2.2 as there isn't a newer release of MongoDb.Driver.",
      "by default, the `2.13 mongo driver` should work only with `MongoDb.LibMongocrypt 1.2.1`, so the question here is how the `2.13 driver` in your case sees `1.2.2 MongoDb.LibMongocrypt` ?",
      "We update the packages frequently and just pull the latest available, so once the 1.2.2 MongoDb.LibMongoCrypt was available it was automatically pulled in. I can lock the MongoDb.LibMongoCrypt version to 1.2.1 until a new driver is released if there are no current plans to release a new MongoDb.Driver package.",
      ">We update the packages frequently \r\n\r\nso you changed this [reference](https://github.com/mongodb/mongo-csharp-driver/blob/v2.13.0/src/MongoDB.Driver.Core/MongoDB.Driver.Core.csproj#L129) manually/via reflection somehow?",
      "The nuget package is a packages.config file and our process just goes through and updates anything in that file.\r\nIt's similar to just doing `Get-Project -All | update-package` from the package manager console in VS. \r\nSo yes once the package is include from the initial addition of MongoDb.Driver, it is updated independently. \r\n\r\nFor clarity we did not change that reference at all :) We just changed which DLLs were installed when MongoDb.Driver is loaded.",
      "Hello @damon-mcgraw-rack , the driver 2.13.1 has been released. This release works with the latest libmongocrypt version, so it should solve your issue.",
      "@DmitryLukyanov I've confirmed that with the new packages my issue is resolved. Thank you for the quick response!"
    ],
    "commit_messages": [
      "CSHARP-3527: Consider accepting EncryptionAlgorithm enum in EncryptOptions. (#526)\n\nCSHARP-3527: Consider accepting EncryptionAlgorithm enum in EncryptOptions."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9c718912b45d36a08bb",
    "number": 525,
    "body": "EG: https://evergreen.mongodb.com/version/609bf7c05623435d54272bf4",
    "head_branch": "csharp3510",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3510: Update serverSelectionTimeoutMS of MongoClient to mongocryptd. (#525)\n\nCSHARP-3510: Update serverSelectionTimeoutMS of MongoClient to mongocryptd."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9c818912b45d36a08bc",
    "number": 524,
    "body": "EG: https://evergreen.mongodb.com/version/609be9099ccd4e52639e23fb",
    "head_branch": "csharp3628",
    "is_a_fork": true,
    "comments": [
      "i wasn't able to reduce a number of cake tools only to:\r\n>#module nuget:?package=Cake.DotNetTool.Module&version=0.4.0\r\n>#tool dotnet:?package=GitVersion.Tool&version=5.6.9\r\n\r\nor \r\n\r\n>#tool dotnet:?package=GitVersion.Tool&version=5.6.9\r\n\r\nsince the error with GitVersion:https://evergreen.mongodb.com/task_log_raw/dot_net_driver_secure_tests__version~2.6_os~windows_64_topology~replicaset_auth~auth_ssl~ssl_test_net452_patch_48b9d2036417d05537a1776bf3bbc78592302b6b_60a05e7456234366c2e509c3_21_05_15_23_51_16/0?type=T#L813\r\nSo probably we can leave it as is for now"
    ],
    "commit_messages": [
      "CSHARP-3268: Update to Cake v1.1.0. (#524)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9c918912b45d36a08bd",
    "number": 523,
    "body": "Spec: https://github.com/mongodb/specifications/commit/1b4ce24071065b9c00263939dbb7e9524147c068#diff-f718c246f51e05b3731a7b03b176a0d4b0c381a9261810742d2677823f963f98R2638",
    "head_branch": "csharp3534",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3534: Workarounds for killAllSessions in unified test runner. (#523)\n\nCSHARP-3534: Workarounds for killAllSessions in unified test runner."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9ca18912b45d36a08be",
    "number": 522,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3656\r\nEG: https://evergreen.mongodb.com/version/60993fc09ccd4e190cbb7f5f",
    "head_branch": "csharp3656",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3656: Check uses of socket.BeginConnect in LibMongoCryptControllerBase (#522)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9cb18912b45d36a08bf",
    "number": 521,
    "body": "",
    "head_branch": "linq3",
    "is_a_fork": true,
    "comments": [
      "In this code review let's limit ourselves to the AST directory.\r\n\r\nA number of subsequent PRs will review other directories. The goal is to break the code review into more manageable chunks.",
      "Notes:\r\n\r\nBecause these classes are so closely tied to the server we prioritize names that mirror exactly what the server uses even if those names conflict with naming standards we would otherwise use in the driver.\r\n\r\nVery few classes are intended to be instantiated directly. Instead all instances are intended to be created using static factory methods (as in the `AstExpression`, `AstFilter`, `AstProject` and `AstStage` classes). Not only are factory methods convenient, but they provide a place to centralize processing like constant folding and `$and`/`$or` flattening. Note that C# `Expression` classes are also created using factory methods so this is a familiar pattern.\r\n\r\nAll AST classes are intended to be immutable. If you see any cases of mutability be sure to note them.\r\n\r\nNote that the `AstElemMatchFilterOperation` uses the magic field name `$elem` to represent the element being matched. This magic field name is removed when `Render` is called, but it allows us to use all existing `AstFilter` classes with `AstElemMatchFilterOperation`. We can discuss further via Zoom if there are questions.\r\n\r\nAn open question is when to `Render` single arguments with or without `[]` surrounding the arguments. The server documentation is a little inconsistent on this. Currently the AST code tries to mimic the server documentation. Alternatives might be to *always* use `[]` even for single arguments, or to *only* use `[]` for single arguments *iff* the value is an array (in which case `[]` is needed to disambiguate).",
      "Closed as we are done looking at this directory."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9cc18912b45d36a08c0",
    "number": 520,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2954\r\nEG: https://evergreen.mongodb.com/version/6095596dd6d80a79b13ef3ab\r\n\r\nCSHARP-2954",
    "head_branch": "csharp2954",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2954: Check LibraryLoader methods when targetting netstandard2.0 (#520)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ce18912b45d36a08c1",
    "number": 519,
    "body": "",
    "head_branch": "csharp3306_temp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3306: Implement and Test Connection Pool Paused State"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9cf18912b45d36a08c2",
    "number": 518,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2951\r\nEG: https://evergreen.mongodb.com/version/6091b9c23066152f70cd8d31",
    "head_branch": "csharp2951",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2951: Check ClientDocumentHelper CreateOSDocument method when targetting netstandard2.0 (#518)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d018912b45d36a08c3",
    "number": 517,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2946\r\nEG: https://evergreen.mongodb.com/version/60917b575623430b33b5630f\r\n\r\nNote: this PR just adds a sync version of `Dns.GetHostAddresses`, because it is available since netstandard 2.0. The swap in target paths (`#if NET452`) is made to avoid negative conditions (just as a general rule, nothing specific).",
    "head_branch": "csharp2946",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2946: Check uses of DNS methods when targetting netstandard2.0 (#517)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d118912b45d36a08c4",
    "number": 516,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2948\r\nEG: https://evergreen.mongodb.com/version/60915e4c2fbabe7f9e1adb09",
    "head_branch": "csharp2948",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2948: Check uses of string.Normalize in SaslPrepHelper when targetting netstandard2.0 (#516)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9d218912b45d36a08c5",
    "number": 515,
    "body": "MongoDB allows aggregations to project at the document level using the \"$$CURRENT\" directive but the driver does not allow it now.\r\nThe following example works on MongoDB but not using the driver:\r\n\r\n`db.MyCollection.aggregate([{\r\n\t$group: {\r\n\t\t_id: \"$myColumn\",\r\n\t\tlastDocument: { $last: \"$$CURRENT\" }\r\n\t}\r\n}])`",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi!\r\n\r\nWould @craiggwilson, @DmitryLukyanov, @MikalaiMazurenka or @rstam kindly review the PR, please?\r\n\r\nThanks :)",
      "Thanks @geasi for raising this issue and for your contribution!\r\nWe are currently working on a new LINQ (v3) implementation, and verified that this case is supported on new implementation.\r\nTherefore we are going to close this PR, as this feature is covered by the new LINQ provider.",
      "No problem @BorisDog,\r\n\r\nThanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d318912b45d36a08c6",
    "number": 514,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3626\r\nEG: https://evergreen.mongodb.com/version/608ae7623627e066eccb6a71\r\n\r\nNote: maybe it makes sense to rename the commit to something like \"Pin NuGet client version\" so that later it could be gracefully reverted with commit \"Unpin NuGet client version\" once the build ticket is done?",
    "head_branch": "csharp3626",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3626: Pin NuGet client version in the build script (#514)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d418912b45d36a08c7",
    "number": 513,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2945\r\nEG: https://evergreen.mongodb.com/version/6089b241c9ec443023b2395c\r\n\r\nNote: [Marshal.SizeOf\\<T\\>()](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.marshal.sizeof?view=netframework-4.5.2#System_Runtime_InteropServices_Marshal_SizeOf__1) and [Marshal.PtrToStructure\\<T\\>()](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.marshal.ptrtostructure?view=netframework-4.5.2#System_Runtime_InteropServices_Marshal_PtrToStructure__1_System_IntPtr_) are available for .NET 4.5.2.\r\nThe reason why these directives were still present is likely because they were not updated when target changed from .NET 4.5 to .NET 4.5.2 along with introducing multitargeting (and these overloads are not available for .NET 4.5).",
    "head_branch": "csharp2945",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2945: Check uses of Marshal when targetting netstandard2.0 (#513)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d518912b45d36a08c8",
    "number": 512,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3623\r\nEG: https://evergreen.mongodb.com/version/608984a732f417577d8f9a3f\r\n\r\nNote: the first version of netstandard to allow specifying hash algorithm in `Rfc2898DeriveBytes` is 2.1: [netstandard 2.1 -> Rfc2898DeriveBytes](https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.rfc2898derivebytes.-ctor?view=netstandard-2.1#System_Security_Cryptography_Rfc2898DeriveBytes__ctor_System_String_System_Byte___System_Int32_System_Security_Cryptography_HashAlgorithmName_)",
    "head_branch": "csharp3623",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3623: Check uses of Rfc2898DeriveBytes when targeting netstandard2.0 (#512)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d618912b45d36a08c9",
    "number": 511,
    "body": "EG: https://evergreen.mongodb.com/version/608889753e8e8678e0e2d8a7",
    "head_branch": "csharp3523",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3523: Split the unified test runner into 2 classes. (#511)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d718912b45d36a08ca",
    "number": 510,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2949\r\nEG: https://evergreen.mongodb.com/version/608873a5c9ec4430ccbe600c\r\n\r\nNote: I am not sure if the occurrence here: [Vendored/Rfc2898DeriveBytes.cs:290](https://github.com/mongodb/mongo-csharp-driver/blob/7579652682b8440440bbe0bb380de275342c4757/src/MongoDB.Driver.Core/Core/Authentication/Vendored/Rfc2898DeriveBytes.cs#L290) should be updated. The current .NET Framework implementation uses `HMAC.Create(string algName)` which is not accessible in netstandard 1.5: [Rfc2898DeriveBytes.cs:102](https://referencesource.microsoft.com/#mscorlib/system/security/cryptography/rfc2898derivebytes.cs,102), .NET 5 uses `new HMACSHA1`: [Rfc2898DeriveBytes.cs:248](https://github.com/dotnet/runtime/blob/9a905533d739564c14306ba3349fd7f7d3ebb834/src/libraries/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/Rfc2898DeriveBytes.cs#L248) which we currently use. And the Rfc2898DeriveBytes class itself accepts an algorithm name only starting from netstandard 2.1: [netstandard 2.1 -> Rfc2898DeriveBytes](https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.rfc2898derivebytes.-ctor?view=netstandard-2.1#System_Security_Cryptography_Rfc2898DeriveBytes__ctor_System_String_System_Byte___System_Int32_System_Security_Cryptography_HashAlgorithmName_).",
    "head_branch": "csharp2949",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2949: Check uses of new HMACSHA1 when targetting netstandard2.0 (#510)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d818912b45d36a08cb",
    "number": 509,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2956\r\nEG: https://evergreen.mongodb.com/version/608817ef3627e06f01825208",
    "head_branch": "csharp2956",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2956: Check IncrementalMDNet45 vs IncrementalMDNetStandard16 when targetting netstandard2.0 (#509)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9d918912b45d36a08cc",
    "number": 508,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2955\r\nEG: https://evergreen.mongodb.com/version/608728e63066157f0b79adb5",
    "head_branch": "csharp2955",
    "is_a_fork": true,
    "comments": [
      "Closing, because the tests are not necessary, considering they will go away with the new LINQ implementation."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9da18912b45d36a08cd",
    "number": 507,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2950\r\nEG: https://evergreen.mongodb.com/version/6086d7e53e8e864ec7ec05f2",
    "head_branch": "csharp2950",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2950: Check BinaryConnection WrapExceptions for exceptions wrapped when targetting netstandard2.0 (#507)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9db18912b45d36a08ce",
    "number": 506,
    "body": "Addressing `MongoClientJsonDrivenTestRunnerBase` based tests runners for now, as related observed test failures so far are in that area.\r\n\r\n[EG](https://evergreen.mongodb.com/version/6082f47c9ccd4e32120032fb) (Internal link)",
    "head_branch": "csharp3613",
    "is_a_fork": true,
    "comments": [
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/2f51eccebc54a7fefb22b4168a59c7ea09a16ef0)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9dc18912b45d36a08cf",
    "number": 505,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2943\r\nEG: https://evergreen.mongodb.com/version/608051033627e05a49938919",
    "head_branch": "csharp2943",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2943: Check uses of SecureString when targetting netstandard2.0 (#505)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9de18912b45d36a08d0",
    "number": 504,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2942\r\nEG: https://evergreen.mongodb.com/version/607f283530661503dcfb078f",
    "head_branch": "csharp2942",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2942: Check uses of GetCustomAttributes when targetting netstandard2.0 (#504)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9df18912b45d36a08d1",
    "number": 503,
    "body": "CSHARP-3380: Iterate over all connections on connection checkout in ConnectionPool\r\n\r\n[EG](https://evergreen.mongodb.com/version/607dc1f2a4cf47318e9e3122) (internal link)",
    "head_branch": "csharp3380_v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP3380: Iterate over all connections on connection checkout in ConnectionPool"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9e018912b45d36a08d2",
    "number": 502,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2941\r\nEG: https://evergreen.mongodb.com/version/607dbad91e2d175c283b7219",
    "head_branch": "csharp2941",
    "is_a_fork": true,
    "comments": [
      "There were no tests for `DBNull`. Should I add one?",
      "> There were no tests for DBNull. Should I add one?\r\n\r\nProbably not worth it. Your call."
    ],
    "commit_messages": [
      "CSHARP-2941: Check uses of TypeCode.DBNull when targeting netstandard2.0 (#502)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9e118912b45d36a08d3",
    "number": 501,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2940\r\nEG: https://evergreen.mongodb.com/version/607d8e9c57e85a62cdb149ed",
    "head_branch": "csharp2940",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2940: Check uses of FormatterServices when targetting netstandard2.0 (#501)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9e218912b45d36a08d4",
    "number": 500,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2938\r\nEG: https://evergreen.mongodb.com/version/6079a9c5562343543bf6c0cf\r\n\r\nNote: I wasn't adding new overrides, just adjusting existing.",
    "head_branch": "csharp2938",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2938: Refactor Stream subclasses when targeting netstandard2.0 (#500)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9e318912b45d36a08d5",
    "number": 499,
    "body": "This PR for mac also :) \r\nEG: https://evergreen.mongodb.com/version/607727e81e2d176bc70b43a9",
    "head_branch": "csharp3299",
    "is_a_fork": true,
    "comments": [
      "EG: after rebasing: https://evergreen.mongodb.com/version/60772fd5d1fe0724ae34ee10"
    ],
    "commit_messages": [
      "CSHARP-3299: Enable Secure Tests on Linux. (#499)\n\nCSHARP-3299: Enable Secure Tests on Linux."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9e418912b45d36a08d6",
    "number": 498,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3567\r\nEG: https://evergreen.mongodb.com/version/6076220a1e2d176bc70a1024",
    "head_branch": "csharp3567",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3567: Replace usages of 'acceptAPIVersion2' with 'acceptApiVersion2' (#498)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9e518912b45d36a08d7",
    "number": 497,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-2936\r\nEG: https://evergreen.mongodb.com/version/6074d8d23627e056aee4fc20\r\n\r\nNote: there were several `[Serializable]` occurrences in Legacy, but I omitted them.",
    "head_branch": "csharp2936",
    "is_a_fork": true,
    "comments": [
      "@jyemin is it OK to ignore Legacy in this PR?",
      "Sure as long as we're tracking it somewhere"
    ],
    "commit_messages": [
      "CSHARP-2936: Support [Serializable] when targeting netstandard2.0 (#497)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9e818912b45d36a08d8",
    "number": 496,
    "body": "This link should work https://dmitrylukyanov.github.io/mongo-csharp-driver after a while",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated docs with v2.12.2 changes. (#496)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9e918912b45d36a08d9",
    "number": 495,
    "body": "",
    "head_branch": "csharp3535",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch:\r\n\r\nhttps://evergreen.mongodb.com/version/606df637d6d80a48b7237b6b",
      "Squashed, rebased and pushed to master and backported to v2.12.x"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ea18912b45d36a08da",
    "number": 494,
    "body": "See comment in  https://jira.mongodb.org/browse/CSHARP-3515 for an explanation of why these changes will probably fix this sporadic test failure.",
    "head_branch": "csharp3515",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch:\r\n\r\nhttps://evergreen.mongodb.com/version/606de2e5c9ec446a1c4b9cbf\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9eb18912b45d36a08db",
    "number": 493,
    "body": "",
    "head_branch": "v2.12.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update versions.json. (#493)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ec18912b45d36a08dc",
    "number": 492,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3462\r\nEG: https://evergreen.mongodb.com/version/608081e657e85a60d6a8b5f8\r\n\r\nNote: This is leftover from [CSHARP-3102: Memory leak related to heartbeat when connecting to Atlas clusters](https://github.com/mongodb/mongo-csharp-driver/commit/a2303983c22639a114727ec3696cb667e7817b8b).\r\nAnd the sync path (`BinaryConnection.ReceiveMessage`) did not produce an unhandled exception (or it is not raised in the event for some reason), but I included both paths in the unit test.",
    "head_branch": "csharp3462",
    "is_a_fork": true,
    "comments": [
      "@DmitryLukyanov suggested another approach with explicit observation of message task. I've checked it and looks way better than the previous one. Instead of adding the exception to `taskCompletionSource.Task` and then additionally throwing the exception on line [BinaryConnection:374](https://github.com/mongodb/mongo-csharp-driver/blob/master/src/MongoDB.Driver.Core/Core/Connections/BinaryConnection.cs#L374), now we only add the exception to `taskCompletionSource.Task` and then observe it's result on line [BinaryConnection:379](https://github.com/mongodb/mongo-csharp-driver/blob/master/src/MongoDB.Driver.Core/Core/Connections/BinaryConnection.cs#L379).\r\n\r\nNote: I've force pushed the branch to include the fix for latest test fails from master to see the tests results clearly."
    ],
    "commit_messages": [
      "CSHARP-3462: Unobserved task exception on connection failure raises its head again (#492)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ed18912b45d36a08dd",
    "number": 491,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added release notes for 2.12.2. (#491)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ee18912b45d36a08de",
    "number": 490,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update releases.toml. (#490)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ef18912b45d36a08df",
    "number": 489,
    "body": "Doing it explicitly to ensure that nothing missed in my first releasing",
    "head_branch": "v2.12.x",
    "is_a_fork": true,
    "comments": [
      "I would recommend doing the PR on `master` and then cherrypicking to `v2.12.x`.",
      "moved this code into different PR for the master"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9f118912b45d36a08e0",
    "number": 488,
    "body": "",
    "head_branch": "csharp3521",
    "is_a_fork": true,
    "comments": [
      "Squashed, rebased and merge to master and backported to v12.2.x."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9f318912b45d36a08e1",
    "number": 487,
    "body": "",
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated docs with v2.13.0-beta1 changes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9f418912b45d36a08e2",
    "number": 486,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "- Reference docs for 2.13.0-beta1 release updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9f518912b45d36a08e3",
    "number": 485,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added release notes for 2.13.0-beta1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9f718912b45d36a08e4",
    "number": 484,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3384\r\nEG: https://evergreen.mongodb.com/version/6063856b3e8e861ac9faf89c\r\nSpecification: https://github.com/mongodb/specifications/commit/849adad42df1f7b0a4f56a53bb07a431c859ce26\r\n\r\nNote: I reused the same test runner change from https://github.com/mongodb/mongo-csharp-driver/pull/483 PR, which assumes that `ExceptionMapper.MapNotPrimaryOrNodeIsRecovering` is able to return no exception.",
    "head_branch": "csharp3384",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3384: Define error handling behavior of writeErrors and writeConcernError on Mongos (#484)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9f818912b45d36a08e5",
    "number": 483,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3386\r\nEG: https://evergreen.mongodb.com/version/606284d92a60ed5c62e7451f\r\nSpec changes which should explain everything: https://github.com/mongodb/specifications/commit/6b885961d53afc1551eec3fa89ccaf5e9118081c",
    "head_branch": "csharp3386",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3386: Drivers should not inspect error messages for 'not master' or 'node is recovering' (#483)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620f9f918912b45d36a08e6",
    "number": 482,
    "body": "CSHARP-2450: Improved deserialization performance by switching from `HashSet<T>` protected by a `ReaderWriterLockSlim` to a `ConcurrentDictionary<K,V>` outside the `ReaderWriterLockSlim`.\r\n\r\nThe following PR is based heavily on work done by @dnickless in PR#433. I analyzed his changes to determine the origin of the observed 5-10% performance improvement and realized that it was not due to a change in data structure for the registration check but due to reduced locking in the hot deserialization path, notably `StandardDiscriminatorConvention.GetActualType`, which calls `BsonSerializer.EnsureKnownTypesAreRegistered`. By changing `__typesWithRegisteredKnownTypes` to a `ConcurrentDictionary<Type, Type>` (instead of a `HashSet<Type>`), I was able to move the registration check outside the `ReaderWriterLockSlim` `__config`. The following deserialization test shows a 46% performance improvement in this test case. The class being deserialized simply contains an `Id` field to magnify the impact of the class registration lookup by minimizing the time spent actually deserializing the data. More complex classes still show a significant improvement though not as dramatic. (e.g. ~36% for a class with an Id and 3 string fields.)\r\n\r\nTo reproduce the results, replace `tests/MongoDB.Driver.TestConsoleApplication/Program.cs` with the following code:\r\n\r\n```\r\nusing System;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing MongoDB.Bson;\r\nusing MongoDB.Bson.Serialization;\r\n\r\nvar threadsCount = Environment.ProcessorCount / 2;  // Use actual number of cores rather than hyperthreads\r\n\r\nConsole.WriteLine($\"Deserializing with {threadsCount} threads\");\r\n\r\nvar obj = new Simple();\r\nvar bson = obj.ToBson();\r\n\r\nTask RunTest(int index) => Task.Run(() =>\r\n{\r\n    var iterNum = 1_000_000;\r\n\r\n    for (int i = 0; i < iterNum; i++)\r\n    {\r\n        var rehydrated = BsonSerializer.Deserialize<Simple>(bson);\r\n    }\r\n});\r\n\r\nvar start = Environment.TickCount;\r\n\r\nvar tasks = Enumerable.Range(0, threadsCount)\r\n                      .Select(RunTest)\r\n                      .ToArray();\r\n\r\nawait Task.WhenAll(tasks);\r\n\r\nvar end = Environment.TickCount;\r\n\r\nConsole.WriteLine($\"Elapsed time: {end - start} ms\");\r\n\r\npublic class Simple\r\n{\r\n    public ObjectId Id { get; set; } = ObjectId.GenerateNewId();\r\n}\r\n```\r\n\r\nYou can then run the test code via the following bash script using both `master` and `csharp2450` branches to observe the performance improvement:\r\n\r\n```\r\ndotnet build --configuration=Release\r\nfor i in {1..10}; do dotnet run --project tests/MongoDB.Driver.TestConsoleApplication --configuration Release; sleep 5; done\r\n```\r\n\r\nI'm cautiously optimistic that I haven't missed any multi-threaded subtlety that precludes this optimization in our serialization code. I look forward to your feedback and thoughts on this improvement. Big props to @dnickless on drawing our attention to the potential improvement and prototyping these changes. ",
    "head_branch": "csharp2450",
    "is_a_fork": true,
    "comments": [
      "Thanks for looking into this and thanks for the kudos. I'm super excited to see the final effect of this once it's been released. Two small remarks:\r\n1. The more cores you have the stronger the effect, of course. And we've got clients with 12-20 cores...\r\n2. The reason why I had chosen to go with a `Hashtable` in #347 and #433 instead of `ConcurrentDictionary` was that the write scenarios are so rare that having to lock explicitly and also incurring the costs of boxing appeared to be an acceptable trade-off considering the entirely lock-free reads we'd get with this approach. `ConcurrentDictionary` still has some overhead for managing thread-safety - Hashtable is a bit more \"basic\" so reading concurrently should be even faster than with `ConcurrentDictionary`.",
      "> 1. The more cores you have the stronger the effect, of course. And we've got clients with 12-20 cores...\r\n\r\nAbsolutely agreed. The effect is stronger with more cores and more contention on these locks. I ran with between 4 and 64 threads, but settled on 8 to maximize the concurrency while minimizing the CPU context switching. (My test machine has 16 hyper-threaded cores, which translates into 8 physical cores.)\r\n\r\nI should also note that this test was intentionally written as a worst-case scenario maximizing contention on these data structures. I did this by keeping the serialized class as small as possible to minimize time deserializing values from BSON into C# properties by only having an `Id` property. Also everything is in memory and we are deserializing in a tight loop. In more real-world scenarios, time on the wire to retrieve the data from the server would likely dominate the performance numbers. That's not to say that we shouldn't improve deserialization performance if we can, but only that the effects of these changes are likely to be less pronounced in real-world scenarios.\r\n\r\n> 2. The reason why I had chosen to go with a `Hashtable` in #347 and #433 instead of `ConcurrentDictionary` was that the write scenarios are so rare that having to lock explicitly and also incurring the costs of boxing appeared to be an acceptable trade-off considering the entirely lock-free reads we'd get with this approach. `ConcurrentDictionary` still has some overhead for managing thread-safety - Hashtable is a bit more \"basic\" so reading concurrently should be even faster than with `ConcurrentDictionary`.\r\n\r\nI tried a variety of data structures including `HashSet<T>`, `ConcurrentDictionary<K,V>`, and `Hashtable`. (Note that `HashSet<T>` would have required additional locking for correctness but I tested it without for sake of comparison.) All data structures showed the same performance improvements and no marked difference from each other. I chose `ConcurrentDictionary<K,V>` for the type safety. The biggest difference is due to `StandardDiscriminatorConvention.GetActualType` no longer requiring acquisition of the `__config` read lock but relies on multiple reader concurrency of `ConcurrentDictionary<K,V>`. At steady state once all types are registered, this should be a very fast check to verify that the desired `nominalType` is registered.",
      "Full Evergreen run across all variants and tasks started to increase our confidence that we are not breaking anything with these changes. Note that the Evergreen results are only visible internally.\r\n\r\nhttps://spruce.mongodb.com/version/605cf2f130661542696bde44/tasks?sorts=STATUS%3AASC%3BBASE_STATUS%3ADESC\r\n\r\nThanks for reminding me, @BorisDog.",
      "> Also everything is in memory and we are deserializing in a tight loop. In more real-world scenarios, time on the wire to retrieve the data from the server would likely dominate the performance numbers. That's not to say that we shouldn't improve deserialization performance if we can, but only that the effects of these changes are likely to be less pronounced in real-world scenarios.\r\n\r\nYou'd be surprised to see our \"real-world\" scenario. ;) We're using the driver to do a ton of in-memory de-/serialization stuff, e.g. when we send things across the wire to our fat client and receive it on the other end or to parallelize serialization upfront before writing in a single thread to MongoDB. So there's by far not always an I/O-limited database and network sitting at the other end. You might argue that this is not the primary objective of the driver and that's certainly correct. But I am pretty certain that we'll be taking the achieved performance gains home with a smile - more or less the way you measured them!"
    ],
    "commit_messages": [
      "CSHARP-2450: Improved deserialization performance by switching from HashSet<T> protected by a ReaderWriterLockSlim to a ConcurrentDictionary<K,V> outside the ReaderWriterLockSlim. (#482)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9fa18912b45d36a08e7",
    "number": 481,
    "body": "Only docs changes.\r\nI restored changes from CSHARP-3300: https://github.com/mongodb/mongo-csharp-driver/pull/450/files#diff-525914cfce0449efb9693ca2513ce901aa04b611f50f800f2e42748fb922ecdfL24 with changed wording.",
    "head_branch": "csharp3448",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3448: Update FLE documentation to mention that we currently don't support arm architecture. (#481)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9fb18912b45d36a08e8",
    "number": 480,
    "body": "EG: https://evergreen.mongodb.com/version/605a6221d6d80a3b8215e707\r\n\r\nOnly Json tests changes",
    "head_branch": "csharp3450",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3450: Versioned API database aggregation test only works on 4.9+ servers. (#480)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9fc18912b45d36a08e9",
    "number": 479,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3331\r\nEPIC: https://jira.mongodb.org/browse/CSHARP-3328\r\nEvergreen: https://evergreen.mongodb.com/version/6059145d2fbabe7ca00d2909",
    "head_branch": "v2.9.x-continuous-matrix-testing",
    "is_a_fork": true,
    "comments": [
      "Ready for review!"
    ],
    "commit_messages": [
      "CSHARP-3331: Matrix Testing - MongoDB 4.2-era Driver Support (#479)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9fd18912b45d36a08ea",
    "number": 478,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3330\r\nEPIC: https://jira.mongodb.org/browse/CSHARP-3328\r\nEvergreen: https://evergreen.mongodb.com/version/6059145d2fbabe7ca00d2909",
    "head_branch": "v2.11.x-continuous-matrix-testing",
    "is_a_fork": true,
    "comments": [
      "Ready for review!"
    ],
    "commit_messages": [
      "CSHARP-3330: Matrix Testing - MongoDB 4.4-era Driver Support (#478)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9fe18912b45d36a08eb",
    "number": 477,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3332\r\nEPIC: https://jira.mongodb.org/browse/CSHARP-3328\r\nEvergreen: https://evergreen.mongodb.com/version/6059145d2fbabe7ca00d2909",
    "head_branch": "v2.7.x-continuous-matrix-testing",
    "is_a_fork": true,
    "comments": [
      "Ready for review!"
    ],
    "commit_messages": [
      "CSHARP-3332: Matrix Testing - MongoDB 4.0-era Driver Support (#477)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620f9ff18912b45d36a08ec",
    "number": 476,
    "body": "EG: https://evergreen.mongodb.com/version/6058ec1e2a60ed2200ec9e0a",
    "head_branch": "csharp3341",
    "is_a_fork": true,
    "comments": [
      "> \r\n> \r\n> I can LGTM again as is depending on what you think of the new suggestion for AdditionalArgs.\r\n\r\nthe suggested solution works to me, will implement this if no other objections ",
      "done, I also previously forgot to push this change: https://github.com/mongodb/mongo-csharp-driver/pull/476/files#diff-23510efdc9896e501d76cd50f97a93c1e09c1c36cfa18704708300220c6aae9fR131. Originally I didn't know that we make a difference between asserting and failure errors in the unified test runner, so now we consider this condition also. This is a full copy of what java does : https://github.com/mongodb/mongo-java-driver/blob/master/driver-sync/src/test/functional/com/mongodb/client/unified/UnifiedTest.java#L319-L336",
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-3341: Update Astrolabe to use the unified test runner. (#476)\n\nCSHARP-3341: Update Astrolabe to use the unified test runner."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa0018912b45d36a08ed",
    "number": 475,
    "body": "EG: https://evergreen.mongodb.com/version/605284d6d1fe0731e8aa4eda",
    "head_branch": "csharp3489",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3489: Update libmongocrypt nuget reference on 1.2.1 version. (#475)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0118912b45d36a08ee",
    "number": 474,
    "body": "[EG](https://evergreen.mongodb.com/version/60664f99e3c33117576b4303) (internal link)",
    "head_branch": "csharp3304",
    "is_a_fork": true,
    "comments": [
      "> \r\n> \r\n> Is this prose test [mongodb/specifications@07790d1#diff-8b993a775e4afe3d3151060c3903f9a1abb803ab0a3e314a2dcd79bf3e6cb272R279](https://github.com/mongodb/specifications/commit/07790d1978ebe6b8ff7f574c9ac5e1365dd16e26#diff-8b993a775e4afe3d3151060c3903f9a1abb803ab0a3e314a2dcd79bf3e6cb272R279) implemented?\r\n\r\n@BorisDog  have you had a chance to look at this?"
    ],
    "commit_messages": [
      "CSHARP-3304: Consider server load during server selection"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa0318912b45d36a08ef",
    "number": 473,
    "body": "[EG](https://evergreen.mongodb.com/version/604695a17742ae2178054e82) (internal link)\r\n\r\nThis PR is rebased on [CSHARP-3305 PR](https://github.com/mongodb/mongo-csharp-driver/pull/453).\r\nThe relevant changes are at `ListConnectionHolder.Prune`, `ListConnectionHolder.Acquire` and `AcquireConnection_should_iterate_over_all_dormant_connections` `PrunePoolAsync_should_remove_all_expired_connections` tests.",
    "head_branch": "csharp3380",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0418912b45d36a08f0",
    "number": 472,
    "body": "EG: https://evergreen.mongodb.com/version/603fd47b61837d06dcc60d4d",
    "head_branch": "csharp3391",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3391: Implement change stream oplog parsing code for delta oplog entries. (#472)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0518912b45d36a08f1",
    "number": 471,
    "body": "",
    "head_branch": "v2.12.0-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated documentation to v2.12.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0618912b45d36a08f2",
    "number": 470,
    "body": "",
    "head_branch": "v2.12.0-release-notes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added release notes for v2.12.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0718912b45d36a08f3",
    "number": 469,
    "body": "EG: https://evergreen.mongodb.com/version/603d9a267742ae71684b20ab",
    "head_branch": "csharp3422",
    "is_a_fork": true,
    "comments": [
      "NOTE: I didn't include version api changes in this PR since related changes are not in the master, but I checked them in the different commit(see below).\r\n\r\n* The current PR's EG:\r\n-  https://evergreen.mongodb.com/version/603e893b0305b971a2fcd648\r\n* Merged with VersionApi changes: \r\n- EG: https://evergreen.mongodb.com/version/603e88c1306615468048fb35\r\n- Commit: https://github.com/DmitryLukyanov/mongo-csharp-driver/commits/csharp3422_merged",
      "In the next commit I will apply the suggestions and will make rebasing on the current master"
    ],
    "commit_messages": [
      "CSHARP-3422: Change estimatedDocumentCount() to use the $collStats Agg Stage Instead of Count Command. (#469)\n\n* CSHARP-3422: Change estimatedDocumentCount() to use the $collStats Agg Stage Instead of Count Command."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa0818912b45d36a08f4",
    "number": 468,
    "body": "Set the failpoint on the selected server.\r\n[EG](https://evergreen.mongodb.com/version/603d420661837d0c24802a32) (internal link)",
    "head_branch": "csharp3303_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0918912b45d36a08f5",
    "number": 467,
    "body": "Select single server in Monitor_sleep_at_least_minHeartbeatFreqencyMS_between_checks test (test fails on connections strings containing multiple servers)\r\n\r\n[EG](https://evergreen.mongodb.com/version/6039742061837d59d55e0d7a) (Internal link)",
    "head_branch": "csharp3303_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3303: Monitor_sleep_at_least_minHeartbeatFreqencyMS_between_checks pickup pick up single server from connection string"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0a18912b45d36a08f6",
    "number": 466,
    "body": "[EG](https://evergreen.mongodb.com/version/6039578a3627e02361c18e30) (private link)",
    "head_branch": "csharp3429",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3429: Setting DNS thread as background"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0b18912b45d36a08f7",
    "number": 465,
    "body": "[CSHARP-3436](https://jira.mongodb.org/browse/CSHARP-3436)",
    "head_branch": "v2.11.x",
    "is_a_fork": true,
    "comments": [
      "Thanks @onyxmaster , we've already fixed this in CSHARP-3188, it will be available in the next release",
      "Excellent news, thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0c18912b45d36a08f8",
    "number": 464,
    "body": "",
    "head_branch": "csharp3303",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0d18912b45d36a08f9",
    "number": 463,
    "body": "This requires testing during our next release. If it doesn't work as expected, we may have to revert this change until we can investigate further.",
    "head_branch": "csharp3231",
    "is_a_fork": true,
    "comments": [
      "this line probably should be changed too: `If you'd like to work with the bleeding edge, you can use our custom feed. Some packages on this feed are pre-release and, while they've passed all our tests, are not yet ready for production.`: https://github.com/mongodb/mongo-csharp-driver/blob/master/README.md",
      "> this line probably should be changed too: `If you'd like to work with the bleeding edge, you can use our custom feed. Some packages on this feed are pre-release and, while they've passed all our tests, are not yet ready for production.`: https://github.com/mongodb/mongo-csharp-driver/blob/master/README.md\r\n\r\nGood catch. I never even noticed that we had a link to our MyGet feed in our documentation.",
      "LGTM"
    ],
    "commit_messages": [
      "CSHARP-3231: Push directly to nuget.org (#463)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0e18912b45d36a08fa",
    "number": 462,
    "body": "Changed java docs to XML docs.",
    "head_branch": "csharp3244",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3244: Corrected wording to refer to XML docs. (#462)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa0f18912b45d36a08fb",
    "number": 461,
    "body": "Updated authors list to MongoDB Inc.\r\nCorrected the spelling on Mikalai's last name.\r\nUpdated maintainers list in README.md.\r\nUpdated project URL to point to new landing page.",
    "head_branch": "csharp3256",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3256: Updated authors list to MongoDB Inc. rather than constantly adding/removing individual contributors. Updated maintainers list in README.md. Updated project URL to point to new landing page. (#461)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1018912b45d36a08fc",
    "number": 460,
    "body": "Pulling in fix for DnsClient.NET issue #79. See CSHARP-3430 for details. \r\n\r\nNote that DnsClient.NET 1.4.0 depends on System.Buffers 4.5.1 forcing us to upgrade that as well.",
    "head_branch": "csharp3430",
    "is_a_fork": true,
    "comments": [
      "Ran a full patch (except OCSP) and everything looks good:\r\nhttps://spruce.mongodb.com/version/602eb10a7742ae5768516d30/"
    ],
    "commit_messages": [
      "CSHARP-3430: Updated System.Buffers from 4.4.0 to 4.5.1 as required by DnsClient.NET 1.4.0."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1118912b45d36a08fd",
    "number": 459,
    "body": "Hello,\r\n\r\nWe are having issues running the Mongodb.net client in our Azure AKS Kubernetes cluster. This issue is fixed in the newest version of DnsClient.NET 1.4.0:\r\n\r\nhttps://github.com/MichaCo/DnsClient.NET/commit/c313562c001875c05c8d9a23b5408781005ac834\r\n\r\nI don't have a Jira ticket for this. \r\n",
    "head_branch": "feature/upgrade-dnsclient.net-to-1.4.0",
    "is_a_fork": true,
    "comments": [
      "Thank you for reporting this issue. We have opened https://jira.mongodb.org/browse/CSHARP-3430 to track the problem. It would be helpful if you could provide any stack traces or other details on that ticket so that we can verify the fix.",
      "Upgrading to DnsClient.NET 1.4.0 also requires upgrading System.Buffers from 4.4.0 to 4.5.1. Closing this PR and opening a new one with the required changes.",
      "Hello @JamesKovacs \r\n\r\nThis is the exception we're getting:\r\n```An unhandled exception has occurred while executing the request. <Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware>\r\nSystem.TimeoutException: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 } }. Client view of cluster state is { ClusterId : \"1\", ConnectionMode : \"ReplicaSet\", Type : \"ReplicaSet\", State : \"Disconnected\", Servers : [], DnsMonitorException : \"DnsClient.DnsResponseException: Header id mismatch.\r\n   at DnsClient.DnsUdpMessageHandler.Query(IPEndPoint server, DnsRequestMessage request, TimeSpan timeout)\r\n   at DnsClient.LookupClient.ResolveQuery(IReadOnlyList`1 servers, DnsQuerySettings settings, DnsMessageHandler handler, DnsRequestMessage request, LookupClientAudit audit)\r\n   at DnsClient.LookupClient.QueryInternal(DnsQuestion question, DnsQuerySettings queryOptions, IReadOnlyCollection`1 servers)\r\n   at MongoDB.Driver.Core.Misc.DnsClientWrapper.ResolveSrvRecords(String service, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Clusters.DnsMonitor.Monitor()\" }.\r\n   at MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)\r\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)\r\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterSeverSelctionAsync(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAsync(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoClient.StartImplicitSessionAsync(CancellationToken cancellationToken)\r\n   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)\r\n   at MongoDB.Driver.IAsyncCursorSourceExtensions.SingleOrDefaultAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)\r\n ```\r\n\r\nThis is caused by AKS sending 2 DNS packets for a query. This is the support ticket we sent to AKS, and they confirmed the issue:\r\n\r\n```\r\n1. Install a custom configmap for coredns using `log.override: log` so that we can see all traffic hitting the coredns pods\r\n2. Run a debian pod and install dnsutils and tcpdump packages\r\n3. Start tcpdump and issue a dig, e.g. `dig microsoft.com`\r\n4. Check that the UDP packet is sent correctly and once to kube-dns service, take note of the DNS request ID:\r\n`21:38:02.987751 IP dotnet-playground-debian.47859 - kube-dns.kube-system.svc.cluster.local.53: 53739+ [1au] A? microsoft.com. (54)`\r\n4. You should expect in the logs of one coredns pod to receive this packet once, but most of the times it is received twice (within the same coredns pod and with the same request ID):\r\n`[INFO] 10.244.0.232:42274 - 53739 'A IN microsoft.com. udp 54 false 4096' NOERROR qr,aa,rd,ra 176 0.000154298s`\r\n`[INFO] 10.244.0.232:42274 - 53739 'A IN microsoft.com. udp 54 false 4096' NOERROR qr,aa,rd,ra 176 0.000225796s`\r\n5. Those two responses are sent back to our debian pod as a response to the dig command:\r\n`21:38:02.989997 IP kube-dns.kube-system.svc.cluster.local.53 - dotnet-playground-debian.47859: 53739 5/0/1 A 13.77.161.179, A 40.76.4.15, A 40.113.200.201, A 40.112.72.205, A 104.215.148.63 (187)`\r\n`21:38:03.102732 IP kube-dns.kube-system.svc.cluster.local.53 - dotnet-playground-debian.47859: 53739 5/0/1 A 40.112.72.205, A 40.113.200.201, A 13.77.161.179, A 40.76.4.15, A 104.215.148.63 (187)`\r\n6. It looks like 75% percent of the DNS requests behaves likes this. We tried some tweaks to the pods' dnsConfig like `single-request-reopen` or changing dnsPolicy, to no avail.\r\n\r\n```\r\n\r\n\r\n \r\n ",
      "Thank you for the additional information. I have included it in CSHARP-3430."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1218912b45d36a08fe",
    "number": 458,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3370\r\nConnecting page: https://mikalaimazurenka.github.io/mongo-csharp-driver/2.12/reference/driver/connecting/\r\nVersioned API page: https://mikalaimazurenka.github.io/mongo-csharp-driver/2.12/reference/driver/versioned_api/",
    "head_branch": "csharp3370",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3370: Document Versioned API Usage in Drivers (#458)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1418912b45d36a08ff",
    "number": 457,
    "body": "Because of the use or Uri class (don't know why ...), application path containing spaces (e.g. ClickOnce deployed app running on a user account with spaces) produce the following exception when trying to connect to DB with compression enabled:\r\n\r\n> System.IO.FileNotFoundException: Could not find library snappy64.dll. Checked C:\\Users\\User%20Name\\source\\repos\\...\\bin\\Release\\net5.0-windows\\snappy64.dll;C:\\Users\\User%20Name\\source\\repos\\...\\bin\\Release\\net5.0-windows\\..\\..\\runtimes\\win\\native\\snappy64.dll;C:\\Users\\User%20Name\\source\\repos\\...\\bin\\Release\\net5.0-windows\\runtimes\\win\\native\\snappy64.dll.\r\n\r\nThis pull request fix it. For now I have to disable compression on the connection string (to keep using official nuget packages)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey @jeremy-waguet, can you please also create a Jira ticket for this PR?\r\n\r\nAlso, just to confirm, that you see exactly the above exception with folders like: `net5.0-windows....` and `repos...`? And the real folder names look the same but without `dots`: `net5.0-windows` and `repos`?",
      "Here is the link the the Jira issue : https://jira.mongodb.org/browse/CSHARP-3427\r\n\r\nThe issue is reproducible when a space is present in the path. It can be with an intermediate directory or the last directory component. For example. Renaming ‘net5.0-windows’ to ‘net5.0-windows 123’ produces the same issue",
      "Hey @jeremy-waguet , thanks for your PR. The way you used in this PR doesn't cover all cases that we consider in this logic, for example it doesn't correctly work if we configure shadow-copying. We chose a bit different solution and it will be available in a next release. Thanks"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1518912b45d36a0900",
    "number": 456,
    "body": "Documentation updates for GSSAPI support on Linux.",
    "head_branch": "csharp2481-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-2474/CSHARP-2481 Added documentation for Kerberos/GSSAPI on Linux."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1618912b45d36a0901",
    "number": 455,
    "body": "EG: https://evergreen.mongodb.com/version/602694b5c9ec443827786043",
    "head_branch": "csharp3423",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3423: Fix CSharp269Tests.TestUploadAndDownload GridFs test on sharded cluster."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1718912b45d36a0902",
    "number": 454,
    "body": "EG:  https://evergreen.mongodb.com/version/60267f001e2d17709ece1633",
    "head_branch": "csharp3371",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3371: Support AWS authentication with temporary credentials in CSFLE."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1818912b45d36a0903",
    "number": 453,
    "body": "- Connections establishment moved to ExclusiveConnectionPool\r\n- maxConnecting functionality introduced\r\n\r\n[EG](https://evergreen.mongodb.com/version/607a4fc42a60ed5689edcf6f)",
    "head_branch": "connectionpool_refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3305: Rate limit new connection creations (maxConnecting)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa1918912b45d36a0904",
    "number": 452,
    "body": "EG: https://evergreen.mongodb.com/version/601d956b3e8e86586c978855",
    "head_branch": "csharp3355",
    "is_a_fork": true,
    "comments": [
      "EG: https://evergreen.mongodb.com/version/601d9af00305b9115d9a8acd",
      "Removed James since Robert picked it up."
    ],
    "commit_messages": [
      "CSHARP-3355: Add more spec tests for invalid relaxed UUIDs."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1a18912b45d36a0905",
    "number": 451,
    "body": "EG: https://evergreen.mongodb.com/version/601ae5615623432d4fa67c52",
    "head_branch": "update_libmongocrypt_nuget",
    "is_a_fork": true,
    "comments": [
      "LGTM"
    ],
    "commit_messages": [
      "Update version of libmongocrypt."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1b18912b45d36a0906",
    "number": 450,
    "body": "![image](https://user-images.githubusercontent.com/44870738/106607007-da1e5f00-6573-11eb-9279-f9aa498c3183.png)\r\n",
    "head_branch": "csharp3300",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3300: Update FLE documentation to mention that it's currently supported on Linux and Mac."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1c18912b45d36a0907",
    "number": 449,
    "body": "This PR implements CSHARP-2474 and CSHARP-2481.",
    "head_branch": "csharp2481-squashed",
    "is_a_fork": true,
    "comments": [
      "Evergreen GSSAPI tests are passing on Windows and Linux on all supported frameworks: \r\nhttps://spruce.mongodb.com/version/6019c9e7c9ec445f87c92457/tasks",
      "Implemented various code fixes and improvements suggested by reviewers. I believe that I've responded to everyone's comments and addressed their concerns. If I missed something, please let me know. Re-requesting reviews. Thanks in advance.",
      "@craiggwilson: Thank you for catching that. I have corrected the other places in `GssapiAuthenticator.cs` to catch either `Win32Exception` or `LibgssapiException` rather than the more generic `Exception`.",
      "NOTE: I assume that we took `DllImport` as the approach here only for historical reasons ",
      "LGTM",
      "> NOTE: I assume that we took `DllImport` as the approach here only for historical reasons\r\n\r\nI chose the `DllImport` approach for a few reasons...\r\n1. It mirrors the existing SSPI impl.\r\n2. I was familiar with it from previous projects.\r\n3. While the delegate approach offers more flexibility, that flexibility wasn't required for integrating with libgssapi.\r\n",
      "> \r\n> \r\n> > NOTE: I assume that we took `DllImport` as the approach here only for historical reasons\r\n> \r\n> I chose the `DllImport` approach for a few reasons...\r\n> \r\n>     1. It mirrors the existing SSPI impl.\r\n> \r\n>     2. I was familiar with it from previous projects.\r\n> \r\n>     3. While the delegate approach offers more flexibility, that flexibility wasn't required for integrating with libgssapi.\r\n\r\ngot it, my point was that it would be good to be consistent in our approaches(at least latest) at least if we can and there are no disadvantages in it",
      "Squashed and merged with `master`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1d18912b45d36a0908",
    "number": 448,
    "body": "",
    "head_branch": "csharp3369",
    "is_a_fork": true,
    "comments": [
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1e18912b45d36a0909",
    "number": 447,
    "body": "",
    "head_branch": "csharp3361",
    "is_a_fork": true,
    "comments": [
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa1f18912b45d36a090a",
    "number": 446,
    "body": "EG: https://evergreen.mongodb.com/version/60148e575623433e9c236559",
    "head_branch": "csharp3321",
    "is_a_fork": true,
    "comments": [
      "While I have no concerns in principle about `MongoClient` creating and owning the internal client, I do appreciate your concerns about the `IMongoClientInternal` interface approach. It's a limitation of the C# language that we can't add internal methods to an interface, so there is no less awkward way to add internal methods to `IMongoClient`.\r\n\r\nI would be OK I guess with your suggestion that `AutoEncryptionLibMongoCryptController` be the one to create and own the internal client. Since `MongoClient` has at most one instance of an `AutoEncryptionLibMongoCryptController`, letting the controller create and own the internal client is the same as letting `MongoClient` create and own the internal client just with one level of indirection.\r\n\r\nI refactored my first `MongoClient` based proposal to move the creation and owning of the internal client to `AutoEncryptionLibMongoCryptController` and came up with:\r\n\r\nhttps://github.com/rstam/mongo-csharp-driver/tree/csharp3321-controllerapproach\r\n\r\nTake a look and see what you think. With these changes it's much closer to what you have proposed, but with some differences that I do consider important:\r\n\r\n* no changes to the `AutoEncryptionLibMongoCryptController` constructor parameters\r\n* delay creation of the internal client until it is first needed\r\n* don't pass in an internal client from tests , let the driver create the internal client as it normally would\r\n* so therefore no changes to `AutoEncryptionOptions` (no `InternalClient` property)\r\n* let `DisposableMongoClient` clean up the internal client also \r\n\r\nI haven't made any changes to the tests. I assume they would need to be refactored also.",
      "> delay creation of the internal client until it is first needed\r\n\r\nI'm not sure I agree that this is important.  If an application is configuring client-side encryption, they are almost certainly going to need the internal client, so is there benefit in delaying creation?",
      "NOTE: I almost finished refactoring my previous version with taking Robert's suggestions into account, I need just to check the prose tests",
      ">> delay creation of the internal client until it is first needed\r\n\r\n> I'm not sure I agree that this is important. If an application is configuring client-side encryption, they are almost certainly going to need the internal client, so is there benefit in delaying creation?\r\n\r\nYou have a good point. The subtle issue is that the `AutoEncryptionLibMongoCryptController` is created from the `MongoClient` constructor. That means that the `client` passed in to the `AutoEncryptionLibMongoCryptController` is NOT yet fully constructed and initialized and cannot yet be used.\r\n\r\nHowever, to create the internal client we only need to access the `Settings` of the `MongoClient`, and that should be safe as long as the `_settings` field of `MongoClient` is initialized before the `AutoEncryptionLibMongoCryptController` constructor is called.\r\n\r\nSo while delaying creating the internal client is 100% safe, creating it up front should also be safe if we are careful.",
      "The latest commit of my branch:\r\n\r\nhttps://github.com/rstam/mongo-csharp-driver/tree/csharp3321-controllerapproach\r\n\r\nshows what it would look like if we don't delay creating the internal client.",
      "> \r\n> \r\n> While I have no concerns in principle about `MongoClient` creating and owning the internal client, I do appreciate your concerns about the `IMongoClientInternal` interface approach. It's a limitation of the C# language that we can't add internal methods to an interface, so there is no less awkward way to add internal methods to `IMongoClient`.\r\n> \r\n> I would be OK I guess with your suggestion that `AutoEncryptionLibMongoCryptController` be the one to create and own the internal client. Since `MongoClient` has at most one instance of an `AutoEncryptionLibMongoCryptController`, letting the controller create and own the internal client is the same as letting `MongoClient` create and own the internal client just with one level of indirection.\r\n> \r\n> I refactored my first `MongoClient` based proposal to move the creation and owning of the internal client to `AutoEncryptionLibMongoCryptController` and came up with:\r\n> \r\n> https://github.com/rstam/mongo-csharp-driver/tree/csharp3321-controllerapproach\r\n> \r\n> Take a look and see what you think. With these changes it's much closer to what you have proposed, but with some differences that I do consider important:\r\n> \r\n>     * no changes to the `AutoEncryptionLibMongoCryptController` constructor parameters\r\n> \r\n>     * delay creation of the internal client until it is first needed\r\n> \r\n>     * don't pass in an internal client from tests , let the driver create the internal client as it normally would\r\n> \r\n>     * so therefore no changes to `AutoEncryptionOptions` (no `InternalClient` property)\r\n> \r\n>     * let `DisposableMongoClient` clean up the internal client also\r\n> \r\n> \r\n> I haven't made any changes to the tests. I assume they would need to be refactored also.\r\n\r\n> * no changes to the `AutoEncryptionLibMongoCryptController` constructor parameters\r\n\r\nwhy? I think I can rewrite code without this, but it will take time and I don't see any benefits with this yet.\r\n\r\n> delay creation of the internal client until it is first needed\r\n\r\nthis was always done in this way with the exception of tests, but in the current version it's true for all case\r\n\r\n>* don't pass in an internal client from tests , let the driver create the internal client as it normally would\r\n\r\ndone\r\n\r\n>* so therefore no changes to `AutoEncryptionOptions` (no `InternalClient` property)\r\n\r\ndone\r\n\r\n> * let `DisposableMongoClient` clean up the internal client also\r\n\r\nIt could be done as you suggested, but I would not do it. With your suggestion, we move the FLE specific details into the Dispose level which is just a wrapper for a client. The problem here is related to the fact that we have a \"gap\" in the disposing approaches, in particular, I mean that MongoClient and, in turns, FLE auto controller don't implement IDisposable interface, so we actually have no control over this. So since we cannot fix it, I would not create any specific workaround and instead fix it on the particular test level (where it matters)\r\n\r\n>delay creation of the internal client until it is first needed\r\n\r\nthis is how it's defined in the spec: https://github.com/mongodb/specifications/commit/947be4cf82a8e44f1589d5ac19413d06ebc11e9d#diff-de01d398114f63480af23798e09ffca599aa758efd04f15a9beec89b4566041bR311",
      "@rstam , please check the latest commit",
      ">> no changes to the AutoEncryptionLibMongoCryptController constructor parameters\r\n> why? I think I can rewrite code without this, but it will take time and I don't see any benefits with this yet.\r\n\r\nWhy? Because the changes you made to how an `AutoEncryptionLibMongoCryptController` is created are unnecessarily complicated (all the static methods).\r\n\r\nAs for rewriting, did you look at my branch? It already has the proposed simpler changes.",
      "ready for review: https://evergreen.mongodb.com/version/601ab85d0305b905dce46f48",
      "Note: I have not yet started reviewing the tests because we were still working through the implementation itself.",
      "@MikalaiMazurenka I've reviewed the driver changes but not the tests. The driver changes currently look OK to me.\r\n\r\nYou can be first reviewer on the tests. I'll do a second review of the tests once you are done.",
      "EG: https://evergreen.mongodb.com/version/60257e130305b9597258fe4f",
      "ready for review"
    ],
    "commit_messages": [
      "CSHARP-3321: Sharing a MongoClient for metadata lookup can lead to deadlock in drivers using automatic encryption."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa2018912b45d36a090b",
    "number": 445,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3287",
    "head_branch": "csharp3287",
    "is_a_fork": true,
    "comments": [
      "LGTM",
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2218912b45d36a090c",
    "number": 444,
    "body": "JIRA: https://jira.mongodb.org/browse/CSHARP-3281\r\nEvergreen: https://evergreen.mongodb.com/version/603e5d1d2a60ed639b8e56b8\r\nSpecification: https://github.com/mongodb/specifications/blob/master/source/versioned-api/versioned-api.rst",
    "head_branch": "csharp3281",
    "is_a_fork": true,
    "comments": [
      "Added Dmitry as first reviewer, Robert as second.",
      "@DmitryLukyanov I did not review the tests. I'm assuming you did."
    ],
    "commit_messages": [
      "CSHARP-3281: Versioned MongoDB API for Drivers"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa2318912b45d36a090d",
    "number": 443,
    "body": "`build.sh`/`build.ps1` from the Cake repo use `tools` as the name for the tools directory. Our `build.cake` file uses the name `Tools`. On NTFS (Windows) and APFS (OSX), `Tools` is created first and then references to `tools` simply use `Tools` because the file systems are case-aware but not case-sensitive. `ext4` and other Linux file systems are case-sensitive and this leads to both `tools` and `Tools` directories on Linux. Because only `/Tools` is in the `.gitignore` file, Linux shows a dirty working copy after a build because the build script has downloaded files into `/tools`.\r\n\r\nThis PR addresses the issue by standardizing on `tools`, which is the casing used by Cake itself.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-3246: Remove build files from our older, unused Fake-based build."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa2418912b45d36a090e",
    "number": 442,
    "body": "Few differences from the original PR :\r\n\r\n1. Original PR maintains the update object on FilteredMongoCollectionBase.cs level, while I think it is very specific to \r\nOfTypeMongoCollection and should be handled on that level.\r\n2. No need to create the update object if upsert is never called.\r\n3. SetOnInsert is only called on upsert, and not for every update. Also seems that adding SetOnInsert only on \"upsert\" logic naturally belongs to OfTypeMongoCollection.",
    "head_branch": "csharp2009",
    "is_a_fork": true,
    "comments": [
      "Added @rstam as second reviewer",
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2518912b45d36a090f",
    "number": 441,
    "body": "CSHARP-2750:\r\n- Upgrade to C# 9\r\n\r\nLegacy projects where not updated.",
    "head_branch": "csharp_v8_solution_filters",
    "is_a_fork": true,
    "comments": [
      "[EG](https://evergreen.mongodb.com/version/6010593a1e2d173581aa2c01) (internal link)",
      "@rstam \r\n\r\n1. Yes, as stated [here ](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/configure-language-version) we can change that value if we want to. The only side effect is that we will have only partial C# 9 features support.\r\n2. Yes, missed 2 projects. Legacy projects where left out intentionally. As no active work is expected there we don't have any good reason to upgrade.",
      "> 1. Yes, as stated [here ](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/configure-language-version) we can change that value if we want to. The only side effect is that we will have only partial C# 9 features support.\r\n\r\n> 2. Yes, missed 2 projects. Legacy projects where left out intentionally. As no active work is expected there we don't have any good reason to upgrade.\r\n\r\n1. Thanks for the link to the C# Language Versioning page. It does state \"Choosing a language version newer than the default can cause hard to diagnose compile-time and runtime errors.\" so we have to stay on our toes.\r\n\r\n2. OK. I wasn't sure whether you had chosen to not upgrade the language version from some projects or just missed them.",
      "Merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2618912b45d36a0910",
    "number": 440,
    "body": "Hello,\r\n\r\n**AS-IS :**\r\nWhen i'm trying to execute the following LINQ request `x => x.ToLower().Equals(\"firstname\")`, the following exception is thrown: `toLower is not supported`, i'm using the version '2.11.6'.\r\nI need this feature to perform \"case insensitive\" search.\r\n\r\n**TO-BE:**\r\nI made some modifications in the pull request to support this feature.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hello, news on that?",
      "Any reason why you are not using one of the Equals overloads that accept a `StringComparison` enum value?  https://docs.microsoft.com/en-us/dotnet/csharp/how-to/compare-strings#case-insensitive-ordinal-comparisons\r\n\r\nI need the same thing but was going to make the index case insensitive.\r\n",
      "@simpleidserver thanks for your PR. Please also open a Jira ticket with the description of this PR. Thanks!",
      "I create a new JIRA ticket here : https://jira.mongodb.org/projects/CSHARP/issues/CSHARP-3425?filter=allissues",
      "> Any reason why you are not using one of the Equals overloads that accept a `StringComparison` enum value? https://docs.microsoft.com/en-us/dotnet/csharp/how-to/compare-strings#case-insensitive-ordinal-comparisons\r\n> \r\n> I need the same thing but was going to make the index case insensitive.\r\n\r\nCase insensitivity is implemented through collations in MongoDB, which are specified for the entire operation, not individual string comparisons. We are still investigating how best to map {{StringComparison}} values to MongoDB server-side functionality. It can become especially problematic if we have incompatible {{StringComparison}} values in different portions of the overall operation.",
      "> Case insensitivity is implemented through collations in MongoDB\r\n\r\n@JamesKovacs - Any idea what the mongodb equivalent of MSSQL's default collation is (SQL_Latin1_General_CP1_CI_AS)?",
      "> @JamesKovacs - Any idea what the mongodb equivalent of MSSQL's default collation is (SQL_Latin1_General_CP1_CI_AS)?\r\n\r\nThe default collation is a binary comparison of UTF-8 strings. This corresponds to a locale of `simple`. See [Collation](https://docs.mongodb.com/manual/reference/collation/) in our documentation for more information.\r\n\r\nIf you mean which collation corresponds to `SQL_Latin1_General_CP1_CI_AS`, there is no direct equivalent that I am aware of, but you can achieve similar results using a strength 3 comparison (ignoring case, diacritics, and letter variants) with an appropriate locale such as English, French, German, or other Latin-based language. You should test the appropriate collation to ensure that it is treating case, diacritics, and letter variants correctly for your use case.",
      "@simpleidserver: Reviewing your PR, we can see that you have modified the `PredicateTranslator` to always call `TranslateStringQuery` rather than `TranslateEquals`. While this may work for string-based predicates, it will not work correctly for predicates of other types. For example `person => person.Age.Equals(42)` no longer works after your changes.\r\n\r\nWe are currently working on a new LINQ implementation, which will resolve many of the deficiencies of our current implementation. We will consider CSHARP-3425 for inclusion in our test cases for this new implementation.\r\n\r\nThanks again for contributing to the MongoDB .NET/C# Driver. If you wish to amend your PR to resolve this issue in our current LINQ implementation, please be sure to provide tests that cover your changes. Given that a new LINQ implementation is currently being worked on, it is probably advisable to wait rather than invest more time in your current PR. We will close this PR for now, but feel free to reopen it if you decide to continue working on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2718912b45d36a0911",
    "number": 439,
    "body": "",
    "head_branch": "v2.11.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.11.6."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2818912b45d36a0912",
    "number": 438,
    "body": "",
    "head_branch": "release_notes_v2_11_6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.11.6."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2918912b45d36a0913",
    "number": 437,
    "body": "Backporting CSHARP-3302",
    "head_branch": "v2.11.x",
    "is_a_fork": true,
    "comments": [
      "[EG](https://evergreen.mongodb.com/version/60078e30d1fe075e744852f9) (internal link)"
    ],
    "commit_messages": [
      "CSHARP-3302: Backporting compilation fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2a18912b45d36a0914",
    "number": 436,
    "body": "",
    "head_branch": "eg_timeout_increase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2b18912b45d36a0915",
    "number": 435,
    "body": "CSHARP3302 Addressing two issues:\r\n1. Deadlock during heartbeat:  lock eliminated at ServerMonitor.RequestHeartbeat.\r\n2. Eliminated concurrent Cluster.RapidHeartbeatTimerCallback invocations.\r\n\r\n[EG](https://evergreen.mongodb.com/version/5fff23a1d1fe070b37068d4f)\r\n\r\nDetailed deadlock flow described in [Jira ticket](https://jira.mongodb.org/browse/CSHARP-3302)\r\nThis change allows invalidating (Server.Invalidate) servers in MultiServerCluster.ProcessReplicaSetChange without acquiring ServerMonitor.Lock which might be already held by other thread.",
    "head_branch": "csharp3302",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2c18912b45d36a0916",
    "number": 434,
    "body": "`TypeNameDiscriminator` is a static helper class that kicks in during serialization and deserialization when using type names as discriminators. There currently is quite some reflection and string-fiddling inside two crucial methods: \r\n\r\n`public static Type GetActualType(string typeName)`\r\n\r\nand\r\n\r\n`public static string GetDiscriminator(Type type)`.\r\n\r\nThis simple PR introduces two basic caches that allow for concurrent lock-free reads which appears to be a healthy choice given the low change frequency of either of the caches.",
    "head_branch": "reduced_reflection_in_TypeNameDiscriminator",
    "is_a_fork": true,
    "comments": [
      "I've forked this work to a new JIRA ticket, https://jira.mongodb.org/browse/CSHARP-3513.",
      "Hi @dnickless, thanks for this PR. It has been a while since we got any feedback from you regarding the possible performance improvements in this PR so we'll close the PR and you are free to open a new PR if you choose to renew this work. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2e18912b45d36a0917",
    "number": 433,
    "body": "Fixes https://jira.mongodb.org/browse/CSHARP-2450.\r\n\r\nKindly review my individual check-ins as all 3 check-ins affect the same file and will be confusing in a single comparison.\r\n\r\nThe most recent check-in contains the most important change: This is where I trade a tiny little bit of increasing complexity (cloning a small HashSet) on the way less likely write-scenario for a substantially better performing read-scenario.",
    "head_branch": "CSHARP-2450",
    "is_a_fork": true,
    "comments": [
      "Any chance someone could look at this? We're eagerly waiting to see this or the other other PR #347 in a next version of the driver. Thanks!",
      "Hi, @dnickless,\r\n\r\nWe have investigated the performance improvements observed in this PR. Specifically we examined each individual code change to understand why it improved performance with the intention of applying the smallest possible change with the biggest net impact. We are proposing more minimal change that actually has a greater performance impact in https://github.com/mongodb/mongo-csharp-driver/pull/482. We appreciate you drawing our attention to this potential improvement. Thank you for the continued collaboration!\r\n\r\nSincerely,\r\nJames",
      "This PR has been superseded by PR #482."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa2f18912b45d36a0918",
    "number": 432,
    "body": "",
    "head_branch": "csharp1849-rebased",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3018912b45d36a0919",
    "number": 431,
    "body": "",
    "head_branch": "csharp1849-rebased",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3118912b45d36a091a",
    "number": 430,
    "body": "",
    "head_branch": "bugfix/CSHARP-3297",
    "is_a_fork": true,
    "comments": [
      "Link to MongoDB Jira issue: https://jira.mongodb.org/projects/CSHARP/issues/CSHARP-3297",
      "@rstam Is there anything else you need from me? If so, let me know.",
      "LGTM\r\nthanks!",
      "Squashed, rebased and merged to master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3218912b45d36a091b",
    "number": 429,
    "body": "",
    "head_branch": "csharp1478",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3318912b45d36a091c",
    "number": 428,
    "body": "CSHARP-2693/CSHARP-2692: Encoding.GetBytes buffer caching optimization",
    "head_branch": "csharp2692",
    "is_a_fork": true,
    "comments": [
      "[EG Patch](https://evergreen.mongodb.com/version/5fea4cdf3e8e862d05ffc5dd)  [InternalLink] ",
      "@JamesKovacs \r\nSome thoughts about your comment:\r\n\r\nI think that both caching techniques have their value. Caching buffers on an instance level would be more suitable in long-lived object, with buffers used across multiple methods/threads. Caching buffers on thread level is more efficient for very limited usages of the buffer in short-lived objects.\r\nBsonStreamAdapter is created in every BsonSerializer.Deserialize call. It should be very light and short lived object. I think we can assume that the most common deserialization pattern is that deserialization/serialization happens on some threadpool, which makes caching on thread level more effective in this case.\r\n\r\n",
      "One other concern about using `ThreadStaticBuffer` has just come to mind.\r\n\r\nIt could  totally fall apart if a reference to the `ThreadStaticBuffer` is ever used in an async `Task` because execution of the `Task` *might* jump to a different thread later on.",
      "@rstam Interesting point re. switching threads in Tasks.\r\nYes, it's unsafe to use ThreadStatic when execution of a method is not guaranteed to occur on single thread. In context of Tasks, that would happen when a Task consists of multiple sub-tasks, in which case ThreadStatic should not be used. In case of a Task with no sub-tasks it's safe. Added a warning in ThreadStaticBuffer.",
      "> @rstam Interesting point re. switching threads in Tasks.\r\n> Yes, it's unsafe to use ThreadStatic when execution of a method is not guaranteed to occur on single thread. In context of Tasks, that would happen when a Task consists of multiple sub-tasks, in which case ThreadStatic should not be used. In case of a Task with no sub-tasks it's safe. Added a warning in ThreadStaticBuffer.\r\n\r\nThe subtasks might not even be visible to the caller. Consider:\r\n\r\n    var buffer = EncodingHelper.GetBytesUsingThreadStaticBuffer(...);\r\n    await stream.WriteAsync(buffer);\r\n\r\nIf the buffer is big enough `WriteAsync` might have to write it in several passes, and subsequent passes might execute on a different thread.\r\n\r\nSo even though the two line snippet \"looks\" safe it is not.\r\n\r\nWe just have to be super careful how we use the `ThreadStaticBuffer`. It's a dangerous tool.",
      "@rstam Yes, if we have code like \r\n```\r\nasync Task F() {\r\n  1. synchronous code...\r\n  2. await T\r\n}\r\n```\r\n`await T` is clearly a subtask.\r\nI agree that we should always carefully examine our async code.",
      "Thanks @JamesKovacs, it's important to be extra careful with multithreaded programming .\r\nLike with most other programming tools like Threads, TPL or synchronization primitives, we can not really use them until we understand them in full. I find that `ThreadStatic` feature technique is one of the simplest tools in multithreading tools arsenal, so we just need to get used to it. While we can always find scenarios where this tool is not applicable this should not prevent us from valid usages.\r\n\r\n1. Yes, we should not call twice `ThreadStaticBuffer.GetBuffer()` in same thread in nested methods. Exactly like we should not use local cached buffer in same thread in nested methods.\r\n2. Yes, as mentioned before, in some/most cases `ThreadStatic` is not suitable to use in tasks that spin off other tasks.",
      "> @JamesKovacs said: Are there ways to enforce these constraints in the code itself?\r\n\r\nWe could adopt a checkout/checkin protocol for the ThreadStaticBuffer\r\n\r\n1. Attempting to check out the buffer twice would throw an exception\r\n2. Attempting to check in a buffer from the wrong thread would throw an exception",
      "I like @rstam's suggested approach of throwing an exception if we violate our constraints. Let's implement that.",
      "I'm not sure I full know the reasons why, but we avoid force pushing to PRs.\r\n\r\nWas the force push necessary? \r\n\r\nAre we wrong to be avoiding force pushes?",
      "@rstam I had to rebase (to use  newer C#) and could only force push to feature branch.\r\nMaybe there is a more graceful way?",
      "@JamesKovacs when you review this again can you review the tests carefully also? I focused on the driver changes.",
      "Squashed and merged"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3418912b45d36a091d",
    "number": 427,
    "body": "",
    "head_branch": "csharp2504",
    "is_a_fork": true,
    "comments": [
      "[EG](https://evergreen.mongodb.com/version/5ff62daaa4cf473235241e66) [Internal Link]"
    ],
    "commit_messages": [
      "CSHARP-2504: BsonWriter: _childElementNameValidatorFactory removal"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fa3518912b45d36a091e",
    "number": 426,
    "body": "CSHARP-2127: EnumSerializer should support all underlying types.\r\nFollow up for [310](https://github.com/mongodb/mongo-csharp-driver/pull/310)",
    "head_branch": "csharp2127",
    "is_a_fork": true,
    "comments": [
      "[EG](https://evergreen.mongodb.com/version/5ff4f43dd1fe076258828688) [Internal Link]",
      "[Squashed&Merged](https://github.com/mongodb/mongo-csharp-driver/commit/3592cf28b7de3c007cb74370ea764d0e2a5c3f6d)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3618912b45d36a091f",
    "number": 425,
    "body": "- Various docs cleanups\r\n- Minor styling change\r\n- Addressed [209](https://github.com/mongodb/mongo-csharp-driver/pull/290) and [301](https://github.com/mongodb/mongo-csharp-driver/pull/301) PRs\r\n\r\nUpdated docs can be viewed here: https://borisdog.github.io/mongo-csharp-driver/2.12/reference/",
    "head_branch": "CSHARP-3271",
    "is_a_fork": true,
    "comments": [
      "I think we should abort this PR and start over with several smaller ones. There is too much unrelated stuff in this single PR.\r\n\r\nAlso, when making changes that start with a community submitted PR, we should always start by at least rebase the (usually old) PR on master. There might be merge conflicts to resove, and they should be resolved *before* we begin reviewing. There might be further changes required, and they also should be done after rebasing on master.",
      "Abandoning, addressing in few separate PRs"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3818912b45d36a0920",
    "number": 424,
    "body": "",
    "head_branch": "release_notes_v2_11_5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release notes for 2.11.5."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3918912b45d36a0921",
    "number": 423,
    "body": "",
    "head_branch": "disable_latest_on_v2_11_x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated evergreen/evergreen.yml to not test v2.11.x against `latest`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3a18912b45d36a0922",
    "number": 422,
    "body": "",
    "head_branch": "v2.11.x",
    "is_a_fork": true,
    "comments": [
      "Creating a PR from my v2.11.x branch to upstream's caused confusion. Starting a fresh PR from different source branches."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3b18912b45d36a0923",
    "number": 421,
    "body": "Reported in https://jira.mongodb.org/browse/CSHARP-3266",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for taking the time to create a PR for this issue.\r\n\r\nReviewing the PR, it is not always correct to translate `InvariantCultureIgnoreCase` and `OrdinalIgnoreCase` to `/^<<STRING>>$/i`. This is due to the classic Turkish `i` problem. In certain non-English languages such as Turkish, casing rules are different. For example in Turkish, \"I\" is not the capital form of \"i\", \"İ\" is. Similarly the lowercase of \"I\" is \"ı\" (i without a dot). To correctly handle ordinal versus invariant cultures, you must use a supporting index with a collation.\r\n\r\nWe are currently working on a new implementation of our LINQ translator and will consider better `StringComparison` support in the context of that work.\r\n",
      "> We are currently working on a new implementation of our LINQ translator and will consider better StringComparison support in the context of that work.\r\n\r\n@JamesKovacs I don't understand where I can see this implementation progress? Can you clarify what it means?",
      "@exileDev - We are actively working on the implementation of the new LINQ translator. While we can execute many LINQ operations already with the new provider, it is not yet complete enough to be practically useful. It is currently in a private fork and not ready for public consumption. Once it is complete enough to replace for our current LINQ provider, we will push the code to our public repo. Thank you for your patience.",
      "@JamesKovacs @rstam Do you have any estimate on when it could be ready?\r\nI'd also like to share information that we're planning to use it in our open-source solution that currently powers more than 60.000+ websites. So MongoDB also could get a lot of new users",
      "@exileDev We plan to include the new LINQ provider in a future minor release of the driver, but we do not have a release date for it yet."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3c18912b45d36a0924",
    "number": 420,
    "body": "",
    "head_branch": "csharp1849",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3d18912b45d36a0925",
    "number": 419,
    "body": "https://spruce.mongodb.com/version/5fb3ffca56234329aaa96fc1/tasks",
    "head_branch": "csharp2661",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3e18912b45d36a0926",
    "number": 418,
    "body": "`authMechanismProperties` in the connection string have to be URL escaped, but we did not unescape them when parsing the connection string. Notably this led to `AWS_SESSION_TOKEN` containing `%2F` rather than `/` as expected.",
    "head_branch": "csharp3239",
    "is_a_fork": true,
    "comments": [
      "Squashed and merged with `master`.",
      "Re-opening to fix PR merge."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa3f18912b45d36a0927",
    "number": 417,
    "body": "https://spruce.mongodb.com/version/5fb2da810305b934962e3a79/tasks",
    "head_branch": "csharp3249",
    "is_a_fork": true,
    "comments": [
      "NOTE, we usually don't make PRs directly into the upstream"
    ],
    "commit_messages": [
      "CSHARP-3249: Use only SkippableFact"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4018912b45d36a0928",
    "number": 416,
    "body": "Updating the README to point to Latest and Official MongoDB.Driver",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md\n\nUpdating the README to point to Latest and Official MongoDB.Driver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4118912b45d36a0929",
    "number": 415,
    "body": "For simpler BsonArray initialization by taking advantage of C# collection initializer.\r\nSo we can simplify BsonArray initializing from this :\r\n```\r\nnew BsonArray\r\n{\r\n    new BsonDocument(\"a\", 1),\r\n    new BsonDocument(\"b\", 2),\r\n};\r\n```\r\nTo this :\r\n```\r\nnew BsonArray\r\n{\r\n    { \"a\", 1 },\r\n    { \"b\", 2 },\r\n};\r\n```",
    "head_branch": "CSHARP-3229",
    "is_a_fork": true,
    "comments": [
      "There's one thing I'm not sure I should do is that I made a reference to `BsonDocument`. I'm not sure that it will cause any problem or does it violates any rules/guideline or not. Please clarify if I do.\r\n\r\nI was also thinking of creating an extension method. But I'm not sure where should I put the class. And I don't think this should be in another NuGet package."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4218912b45d36a092a",
    "number": 414,
    "body": "- fixs the grammar of the word \"occurred\"",
    "head_branch": "fix/grammatical-errors",
    "is_a_fork": true,
    "comments": [
      "Thanks @rodrigoreis for your participation, I've merged this fix."
    ],
    "commit_messages": [
      "fix grammatical errors"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4318912b45d36a092b",
    "number": 413,
    "body": "On AOT compiled targets (such as Xamarin.iOS/Xamarin.Mac), the linker will remove all members that are not statically linked by the application. This obviously becomes an issue when members are invoked via reflection or objects are dynamically instantiated. The MongoDB.Bson assembly deals with de/serialization, so it has quite a lot of that. Ultimately, it would be great if we selectively applied `[Preserve]` only to members that absolutely have to be preserved and allowed the linker to strip parts of the assembly that are not needed. Since that is a massive undertaking, a stopgap measure is to preserve the entire assembly.\r\n\r\nMore info here: https://docs.microsoft.com/en-us/xamarin/ios/deploy-test/linker.",
    "head_branch": "linker-preserve",
    "is_a_fork": true,
    "comments": [
      "This change has been merged and will be available in the next patch release",
      "Does this same approach will work with native aot? I've been testing native aot support and it crashes right before collection instantiantion due to serializer registry using reflection based construction of those objects.\r\nTried to not use automap and it crashes in another point.\r\nDunno that's correct way to make driver compatible with native aot.\r\nIs mongodb team looking to support native AOT at some time?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4418912b45d36a092c",
    "number": 412,
    "body": "Still draft, but also includes:\r\n\r\nCSHARP-1849: Run plain auth tests on windows.\r\nCSHARP-1850: Run GSSAPI tests on windows.\r\n\r\nhttps://spruce.mongodb.com/version/5f648f9757e85a79404d8f5c/tasks",
    "head_branch": "CSHARP-1847-rebased",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4518912b45d36a092d",
    "number": 411,
    "body": "issues:  \r\nhttps://jira.mongodb.org/projects/CSHARP/issues/CSHARP-3175?filter=allopenissues\r\n\r\ncomments:\r\nNo matching creator found\r\nvar deleteNameDefinition = Builders<CorpInfo>.Update.Unset(x => x.Name);\r\nvar update = collection.UpdateMany(x => x.Id > 0, deleteNameDefinition); \r\n//there:  No matching creator found  ,  \r\nvar ls = collection.AsQueryable().Select(x => new { x.Name }).ToList();\r\n\r\n[#fix:]\r\nwhen Project build classmap , \r\nthe classmap need AutoMap(), \r\nthen new ConventionRunner(_conventionPack).Apply(this)\r\nthe anonymous class need ConventionRunner(_conventionPack).Apply\r\n\r\n\r\nMongoDB.Driver.Linq.Processors.SerializerBuilder.BuildClassMap(Type type, ProjectionMapping mapping)\r\nline:171  \r\nadd :   classMap.AutoMap();\r\n\r\n\r\n\r\nhttps://user-images.githubusercontent.com/6622313/93550623-5e45c080-f99e-11ea-886a-e5afe2c2862a.png\r\n\r\nAnd I'm so sorry that I can't push my code to github , I can't login in github on my pc,\r\nand I can't sign up with   jira.mongodb.org , \r\nas you know, in China, we cannot normally access websites of other countries\r\n",
    "head_branch": "v2.11.x",
    "is_a_fork": false,
    "comments": [
      "Closing this PR because there is no actual branch with suggested changes."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4618912b45d36a092e",
    "number": 410,
    "body": "These feels like a hack on a hack but it does fix the problem.",
    "head_branch": "invalid_nonce_fix",
    "is_a_fork": true,
    "comments": [
      "Thanks, @blushingpenguin. We've implemented a bit different solution which will be available in the next 2.11.2 patch release."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4718912b45d36a092f",
    "number": 409,
    "body": "",
    "head_branch": "csharp3193",
    "is_a_fork": true,
    "comments": [
      "Created by mistake."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4818912b45d36a0930",
    "number": 408,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #408 from DmitryLukyanov/master\n\nUpdate Contributors list."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4a18912b45d36a0931",
    "number": 407,
    "body": "I'm trying to connect OData provider to MongoDB using this driver. And I faced several problems with it. For example, OData nullability handling forces it to generate queries like `foo == null ? null : foo.bar` that cannot be handled by current driver. The other problem is `Expression.Parameter` allows to make parameter anonymous, while mongo driver expects it to always have a name, thus it fails to generate a query that otherwise is fine to execute. There are also several smaller fixes.\r\n\r\nAlthough I did it to make my OData query work they are general improvements that allow to use IQueryable interface better.\r\n\r\nI'm forced into using fork until this gets somehow adopted in upstream so I hope this will eventually go into master.\r\n\r\nRelated to https://jira.mongodb.org/browse/CSHARP-1771 , https://jira.mongodb.org/browse/CSHARP-1467",
    "head_branch": "odata-features-pr",
    "is_a_fork": true,
    "comments": [
      "Ping?",
      "Anyone?",
      "Thank you for submitting this pull request. We are working on a new implementation of our LINQ translator and will make sure IIF works properly in the new implementation."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4b18912b45d36a0932",
    "number": 406,
    "body": "When you have a class in a hierarchy of classes that has no suitable constructor to be desrialized (look also at [CSHARP-3186](https://jira.mongodb.org/browse/CSHARP-3186)), I got a simple error \r\n\r\n```\r\nAn error occurred while deserializing the Nodes property of class xxx.xxxx.ReportDocumentConfigurationValueObject: No matching creator found\r\n```\r\n\r\nThe problem is that nodes property of that class can have like 10 concrete classes, and the error is on one specific class. With this patch the error contains the exact class that miss the constructor. This will surely speed up the diagnose of errors.",
    "head_branch": "betterErrorMessage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CSHARP-5007: Better error when no matching constructor found (#406)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4c18912b45d36a0933",
    "number": 405,
    "body": "This PR is related to https://jira.mongodb.org/browse/CSHARP-3183?filter=-2\r\n\r\nActually when I run tests in project https://github.com/ProximoSrl/NStore XUnit runner creates an high number of threads and the connection deadlock.\r\n\r\nI've found debugging the code that a Thread enter in MonitorServerAsync, wait for Task.Yield() but never exit from the wait, because an high number of thread are waiting in line 368 of Cluster.cs\r\n\r\n![image](https://user-images.githubusercontent.com/358545/90153356-29d05a80-dd89-11ea-9ab2-3458d82f5e93.png)\r\n\r\nThat particular wait is waiting for three tasks, a cancellation a timeout and a **task that is completed when the cluster changes description**. When too many thread at the same time enter that wait, probably all thread pool threads are in waiting, and for some reason MonitorServerAsync never exit awaiting from the Task.Yeld and everything is freezed.\r\n\r\n![image](https://user-images.githubusercontent.com/358545/90153809-b67b1880-dd89-11ea-91aa-f5ef4a2d77e0.png)\r\n\r\nRemoving the await Task.Yield() solves the problem. That yield was recently added in commit e0568c0f894e2eaafcb894287f33c0b14aa7624b \r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey @alkampfergit , thanks for your PR, We've already noticed this issue. The patch release will be created asap",
      "Perfect, thanks.",
      "Thanks @alkampfergit , the solution for this problem has been released in 2.11.1. Let me know if you have any questions.",
      "Perfetct, thanks."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4d18912b45d36a0934",
    "number": 404,
    "body": "While answering this [Stack Overflow Question](https://stackoverflow.com/questions/63346252/mongodb-how-to-return-random-elements-without-linq-mongodb-c) I came across that $sample was not supported in the fluent aggregation syntax and also noticed it's been raised on [Jira (CSHARP-2659)](https://jira.mongodb.org/browse/CSHARP-2659) too.\r\n\r\nSo decided to have a stab at implementing it.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your contribution. We plan to rebase this work and include in a future release. Please follow [CSHARP-2659](https://jira.mongodb.org/browse/CSHARP-2659) for further updates.",
      "I rebased your work, added some tests, and changed `Sample(int)` to `Sample(long)` to match the server impl. You have co-author credit on the [resulting squashed commit](https://github.com/mongodb/mongo-csharp-driver/commit/dd47c25307b52cf63af4c7f877dffd223062f880) and I verified that you're in the contributors section of our `README.md` file. Thank you again for your contribution!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4e18912b45d36a0935",
    "number": 403,
    "body": "",
    "head_branch": "CSHARP-1847",
    "is_a_fork": false,
    "comments": [
      "https://spruce.mongodb.com/version/5f218728850e61275ac89251/tasks"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa4f18912b45d36a0936",
    "number": 402,
    "body": "`TStartWith`, `TConnectFrom`, and `TConnectTo` must be the same or a type that implements `IEnumerable<>` of another; not just `IEnumerable<TConnectTo>` for `TStartWIth` and `TConnectFrom`, but also vice versa.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "The commit from this PR has been merged on the command line, so closing this out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5018912b45d36a0937",
    "number": 401,
    "body": "You can make any comparsion by an equal operator if you compare to BsonDocument for example:\r\n```C#\r\nIMongoCollection<BsonDocument> collection;\r\nvar value = new BsonDocument { { \"$gt\", 3 } };\r\nvar query = collection.Find(x => x[\"field\"] == value);\r\n\r\n//it will execute:\r\n//find({ \"field\" : { \"$gt\" : 3 } })\r\n```\r\n\r\nI think it can cause security vulnerability for unaware developer, who trust, that equal operator always will test for equality:\r\n\r\n```C#\r\npublic List<BsonDocument> GetObjectByUser(IMongoCollection<BsonDocument> collection, BsonValue data)\r\n{\r\n\treturn collection.Find(x => x[\"userId\"] == data[\"userId\"]).ToList();\r\n}\r\npublic void Attack(IMongoCollection<BsonDocument> collection)\r\n{\r\n\tvar data = GetObjectByUser(collection, new BsonDocument { { \"userId\", new BsonDocument { { \"$ne\", ObjectId.Empty } } } });\r\n}\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your PR! I've created https://jira.mongodb.org/browse/CSHARP-3080 to track this",
      "Hello @matrix0123456789, \r\n\r\nOnce again, thank you for your PR! The MongoDB .NET Driver team and the MongoDB Security team has discussed this vulnerability in depth.  At a high-level, the vulnerability is a result of the fact that the Mongo Query Language (MQL) uses an implicit `$eq` operator. This is simply a property of our query language, and it makes it much simpler for hundreds of applications out there to write simple `eq` queries.\r\n\r\nE.g. `{ x: 1 }` and `{ x: {$eq: 1} }` are the same because MQL implicitly uses the `$eq` operator.\r\n\r\nWe understand that you believe that an attacker can construct a specific JSON file which will take advantage of this fact to construct a NoSQL injection (or at least a different query that was originally intended).\r\n\r\nWe believe this does NOT warrant a CVE or a change to the driver due to the following:\r\n\r\n1. This is essentially an application layer problem. An application should anticipate that the implicit equality operator is always used. For example, let us imagine there is a malicious JSON file with this injection. The driver does not parse this file - this is done by the application. Therefore, it is the responsibility of the application to handle these types of issues e.g. by sanitizing the input prior to passing it to the driver.\r\n\r\n2. Thus, the .NET driver is doing what is supposed to do (i.e. using the implicit `$eq` parameter, which is a property of MQL).\r\n\r\nAs a point of comparison, broadly speaking, SQL injection does not really have a CVE because it is a property of the language and if the application is not sanitising user input properly, then it is unfortunately the fault of the application, not the query language. This NoSQL injection described by your PR is quite similar in that respect.\r\n\r\nUnfortunately, there is no way this could be fixed by us, apart from changing the behaviour of query language, which would make hundreds of apps stop working\r\n\r\nNevertheless, we will definitely improve our documentation so that developers are made more aware of these potential issues. The implicit `$eq` parameter is mentioned in our documentation, but perhaps not as clearly as it should.\r\n\r\nPlease feel free to reach out with any additional questions or concerns that you might have!\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5118912b45d36a0938",
    "number": 400,
    "body": "",
    "head_branch": "community-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated community link to be more specific"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5218912b45d36a0939",
    "number": 399,
    "body": "",
    "head_branch": "CSHARP-3069",
    "is_a_fork": false,
    "comments": [
      "Hey Rachelle :) \r\nTwo very minor comments:\r\n - Feel free to add yourself to the contributors page here! https://github.com/mongodb/mongo-csharp-driver/blob/master/README.md :) \r\n - We typically format our commits like so: \r\n`CSHARP-XXXX Lorem Ipsum`\r\n\r\nI can also make these changes for you if you prefer!\r\n",
      "Merged as part of https://github.com/mongodb/mongo-csharp-driver/commit/8fb8c57fce05122aef2cde3b5b8f96a24d8d81a7! Thanks @techbelle 😸 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5318912b45d36a093a",
    "number": 398,
    "body": "",
    "head_branch": "csharp2596",
    "is_a_fork": true,
    "comments": [
      "Evergreen patch build:\r\n\r\nhttps://evergreen.mongodb.com/version/5e9e5706850e6113494ce0f7\r\n\r\n12 failed tasks\r\n7 timeouts\r\n2 drop collection in admin database\r\n2 reIndex not supported\r\n1 change stream _id\r\n",
      "Wrong repo."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5418912b45d36a093b",
    "number": 397,
    "body": "",
    "head_branch": "CSHARP-2766",
    "is_a_fork": true,
    "comments": [
      "Tweaked and merged! https://github.com/mongodb/mongo-csharp-driver/commit/990b9787048f6a67835a94bffdb4b91456788334\r\nThank you @kevbite for your PR! 😸 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5518912b45d36a093c",
    "number": 396,
    "body": "EG: https://evergreen.mongodb.com/version/5e7a24b532f4173837e0a7e3",
    "head_branch": "csharp3017",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5618912b45d36a093d",
    "number": 395,
    "body": "Currently, if a struct/ValueType has its own converter registered it can be deserialized from null. However if the same struct/ValueType is property (or field) of a class, deserialization fails. Given that there is no test failing if I change that behaviour, I assume that it is a bug. Nevertheless, given example below, I think it makes sense to support it anyway.\r\n\r\n``` C#\r\npublic readonly struct HouseNumber\r\n{\r\n    private readonly int val;\r\n    public HouseNumber(int val) => this.val = val;\r\n    public override string ToString() => val < 1 ? \"\" : val.ToString();\r\n    public object ToJson() => val < 1 ? null : (object)val;\r\n}\r\n\r\ninternal class Address\r\n{\r\n    public HouseNumber Number { get; set; }\r\n}\r\n\r\npublic class HouseNumberSerializer : SerializerBase<HouseNumber>\r\n{\r\n    public override HouseNumber Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)\r\n    {\r\n        var bsonType = context.Reader.GetCurrentBsonType();\r\n\r\n        return bsonType == BsonType.Int32\r\n            ? new HouseNumber(context.Reader.ReadInt32())\r\n            : default;\r\n    }\r\n\r\n    public override void Serialize(BsonSerializationContext context, BsonSerializationArgs args, HouseNumber value)\r\n    {\r\n        var val = value.ToJson();\r\n        if(val is int num)\r\n        {\r\n            context.Writer.WriteInt32(num);\r\n        }\r\n        else\r\n        {\r\n            context.Writer.WriteNull();\r\n        }\r\n    }\r\n}\r\n```",
    "head_branch": "custom-converters-for-null-struct-properties",
    "is_a_fork": true,
    "comments": [
      "Created https://jira.mongodb.org/browse/CSHARP-3023 to track this 😸 ",
      "@vincentkam What is the SLA on this kind of bug-reports/features requests?!",
      "See the explanation in the JIRA ticket for why no driver changes are needed for this to work. The JIRA ticket shows two small changes needed for the new tests in this pull request to pass.\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-3023",
      "@rstam Thanx for this suggestion. Do you think a different error, could help explaining what goes wrong?!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5718912b45d36a093e",
    "number": 394,
    "body": "Fixing calls to Ensure.IsNotNull so that it throws the parameter name in exception.",
    "head_branch": "nulloperatorname",
    "is_a_fork": true,
    "comments": [
      "Created https://jira.mongodb.org/browse/CSHARP-3022 to track this 😸 ",
      "Thanks @vincentkam 👍",
      "Thank you for your PR Kevin! 😸 I have added you to the contributors list and merged your changes here: https://github.com/mongodb/mongo-csharp-driver/commit/fea0c162bc5cf55c07aa180b31b182651b9fc55e"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5918912b45d36a093f",
    "number": 393,
    "body": "…B Community Forums\r\n\r\nJIRA: https://jira.mongodb.org/browse/DOCSP-9461",
    "head_branch": "DOCSP-9461-remove-google-groups",
    "is_a_fork": true,
    "comments": [
      "Rebased, added Chris to the contributors list and pushed:  https://github.com/mongodb/mongo-csharp-driver/commit/e6e36bb8605ad13c655311368b3fb6bc6cfa96f8\r\n\r\nThanks @ccho-mongodb 😄 !"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5a18912b45d36a0940",
    "number": 392,
    "body": "Fixing expectation message whereby the wrong type is contained within the exception making it confusing to the end-user.\r\n\r\nTake for example the following test:\r\n\r\n```csharp\r\n[Fact]\r\npublic void Test1()\r\n{\r\n    PipelineDefinition<BsonDocument, MyType>.Create(new IPipelineStageDefinition[]\r\n    {\r\n        new JsonPipelineStageDefinition<BsonDocument, BsonDocument>(\r\n            @\"{ project: { } } \"),\r\n    });\r\n}\r\n\r\npublic class MyType { }\r\n```\r\n\r\nThis throws the following exception\r\n```\r\n\r\nSystem.ArgumentException : The output type to the last stage was expected to be MongoDB.Bson.BsonDocument, but was MongoDB.Bson.BsonDocument. (Parameter 'stages')\r\n```\r\ninstead of\r\n```\r\n\r\nSystem.ArgumentException : The output type to the last stage was expected to be SomeExample.MyType, but was MongoDB.Bson.BsonDocument. (Parameter 'stages')\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Created https://jira.mongodb.org/browse/CSHARP-3037 to track this 😺 ",
      "Thank for your PR @kevbite! I've merged your change with some small tweaks here: https://github.com/mongodb/mongo-csharp-driver/commit/cddc1367a5f6c02dc32e39e04b9797ac6aebc8ad 😸 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5b18912b45d36a0941",
    "number": 391,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5c18912b45d36a0942",
    "number": 390,
    "body": "- clarification about how the `username` provided to `CreateX509Credential` must exactly match the certificate's DN\r\n- clarification about the behaviour of `CreateX509Credential` when `username` is null\r\n- updated deprecated function calls (useSsl, etc.) in examples\r\n- included a reference to the manual's x.509 page detailing how to extract a username from a certificate in the exact format that a MongoDB server expects\r\n- notes about AllowInsecureTls for testing, since many developers will try out x.509 locally using self-signed certificates before attempting it across machines/in any kind of real environment\r\n\r\nPlease let me know if there's anything else this needs/any changes needed -- it's my first PR to this repo so I very well could have missed something. \r\n\r\nThanks!\r\n\r\n@vincentkam ",
    "head_branch": "CSHARP-1927",
    "is_a_fork": true,
    "comments": [
      "If you'd like to see a preview, I screenshotted my changes here:\r\nhttps://github.com/nathan-contino-mongo/share/blob/master/x509csharp1.png\r\nhttps://github.com/nathan-contino-mongo/share/blob/master/x509csharp2.png",
      "For convenience's sake, here's the example that Nate created that outlines the current issues with our documented process for using client certificates: https://github.com/nathan-contino-mongo/x509-csharp",
      "Feel free to merge this when ready -- I lack merge privileges. \r\n@vincentkam ",
      "@rstam Addressed your tabbing concerns (and also switched some tabs -> spaces further down the page, it seems). Only two points I didn't deal with:\r\n\r\n1) username in the connection string example. I decided to omit this since it's inferred from the X509 cert anyway, but if you have strong feelings about this we can discuss it.\r\n2) indented first word of a paragraph: necessary because it's nested under a numbered list number. Just looks wonky on here; when it's rendered, it's not indented or anything.\r\n\r\nBuilt and viewed on my end and everything looks the same as before, but with smaller indents. Let me know if you need anything else.",
      "Github won't let me respond to your last comment, so I'm responding here in a new comment:\r\n\r\n1. omitting username is fine, I was just confirming it was intentional\r\n2. if the first word in the paragraph must be indented that's fine",
      "@rstam Apologies, for some reason I thought you were using 2 space tab equivalents. Changed to 4 space.",
      "Rebased, squashed, tweaked the commit's date, added @nathan-contino-mongo to the contributors' list and pushed! 😸 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5d18912b45d36a0943",
    "number": 389,
    "body": "This introduces additional checks to make sure `StartTransaction` throws when connecting to Standalone or Unknow servers.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This PR has been merged on the command line.  ",
      "@jyemin thanks for merging. Will it go to the master?",
      "@tmasternak yes it merged to master and released in 2.11.0, actually. See CSHARP-2822 for details. \r\n\r\nThank you for the contribution!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5e18912b45d36a0944",
    "number": 388,
    "body": "Added a method to JsonReader that allows a consumer to clear the memory use of the reader when reading very large JSON documents.\r\n\r\nCame across this problem myself, found it in JIRA and thought I'd contribute!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Based on our investigation of this issue, the `JsonBuffer` will grow to fit the largest JSON document, but the buffer contents will be reset after each top-level document is read. Please re-open [CSHARP-1525](https://jira.mongodb.org/browse/CSHARP-1525) with a repro of the issue demonstrating the issue if this is still a problem with the latest version."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa5f18912b45d36a0945",
    "number": 387,
    "body": "Hello, I'm new in Mongo DB and I'm looking for a continuous integration (CI) tool that is customized for Mongo DB.\r\nThis tool has the ability to create all collections and its data and also the customized function at the same time.\r\nThere is a similar tool for creating SQL Server and its table, stored procedure, function etc by using visual studio tool.\r\nIs there a tool that is the customized for CI in relation to Mongo DB?\r\nThank you!",
    "head_branch": "v2.9.x",
    "is_a_fork": false,
    "comments": [
      "Hello @jt4000,\r\n\r\nThanks for your interest in the MongoDB .NET Driver! Apologies if I'm mistaken, but your pull request appears to more of a question as opposed to a contribution submission regarding a bug or feature. A good place to ask questions would be our [mailing list](https://groups.google.com/forum/?pli=1#!forum/mongodb-user) or Stack Overflow. \r\n\r\nKind regards,\r\nVincent \r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6018912b45d36a0946",
    "number": 386,
    "body": "Evergreen:  https://evergreen.mongodb.com/version/5d91ef0d30661556236e04e8",
    "head_branch": "csharp2705",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6118912b45d36a0947",
    "number": 385,
    "body": "This adds the System.Memory package to the driver.\r\n\r\nI hope that we could use this to further boost the performance of the driver with the new concept of Span<T> and Memory<T> introduced in .Net Core 2.1.\r\n\r\nI'll add Span support to ObjectId for now, note that it may be possible to also add such support (and many other concepts introduced in System.Memory) towards BsonStream making it more performant in the future.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "As per: https://jira.mongodb.org/browse/CSHARP-2758",
      "Thanks for submitting this ticket  @jasonkuo41 \r\n\r\nWe are going to introduce support for Span<T> in our serialization in [CSHARP-5125](https://jira.mongodb.org/browse/CSHARP-5125).\r\nIt's scheduled after 3.0 release where we plan to introduce some architectural changes.\r\nClosing this ticket as won't as do, as this will be part of [CSHARP-5125](https://jira.mongodb.org/browse/CSHARP-5125)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6218912b45d36a0948",
    "number": 384,
    "body": "See https://jira.mongodb.org/browse/CSHARP-2757 for details.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey @JakeStaTeresa , thanks for your PR, we've already added a bit more complex solution for this feature. I will add you to the contributors list"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6418912b45d36a0949",
    "number": 383,
    "body": "See https://jira.mongodb.org/browse/CSHARP-2739 for details.",
    "head_branch": "improve-hierarchical-fields",
    "is_a_fork": true,
    "comments": [
      "Thanks for your help. Your PR has been merged into master.",
      "Merged as 384d10d58d9dc308bd29e4eb0f1c8804ee954f39."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6518912b45d36a094a",
    "number": 382,
    "body": "As per: https://jira.mongodb.org/browse/CSHARP-2736",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @wojciechcibor, we have decided to close this PR since the recommended change provides very small improvements which are not worth the effort to merge this. The ticket for this has also been closed and  we apologize for the long wait on receiving feedback for this. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6618912b45d36a094b",
    "number": 381,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hi @Bouke,\r\nThank you for your pull request! I've tweaked it slightly, updating the commit message and adding you to the contributor's list, and [merged it](https://github.com/mongodb/mongo-csharp-driver/commit/44f586b9ecaaec501077c11890dee366794e6cff)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6718912b45d36a094c",
    "number": 380,
    "body": "This corrects a small typo about default chunk size in gridfs",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks Nathan for your PR! We've [merged ](https://github.com/mongodb/mongo-csharp-driver/pull/380/commits/b7e42898a58e675a73a9a85804737ef01039ee28)your fix in and added you to the contributor's list 😸 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6818912b45d36a094d",
    "number": 379,
    "body": "As per https://jira.mongodb.org/browse/CSHARP-2693.",
    "head_branch": "CSHARP-2693",
    "is_a_fork": true,
    "comments": [
      "Thanks @dnickless, this issue was addressed [here](https://github.com/mongodb/mongo-csharp-driver/commit/f0bece570fdd3c8ede73981adaa89a225caa978c)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6918912b45d36a094e",
    "number": 378,
    "body": "Less byte buffer allocations during deserialization as per https://jira.mongodb.org/browse/CSHARP-2692.",
    "head_branch": "CSHARP-2692",
    "is_a_fork": true,
    "comments": [
      "Thanks @dnickless, this issue was addressed [here](https://github.com/mongodb/mongo-csharp-driver/commit/f0bece570fdd3c8ede73981adaa89a225caa978c)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6a18912b45d36a094f",
    "number": 377,
    "body": "This also removes the `System.Reflection.Emit.Lightweight` dependency in favor of expression tree compilation.\r\n\r\nI left the test projects alone since they target `netcoreapp2.1`. In order to test against `netstandard1.5` you'd have to add `netcoreapp1.x` target....which is deprecated.",
    "head_branch": "netstandard20",
    "is_a_fork": true,
    "comments": [
      "This looks good! Thanks James!",
      "Thoughts? Comments? Concerns?",
      "Thanks for your PR! The .NET Driver team is considering adding support for .NET Standard 2.0 soon",
      "> Thanks for your PR! The .NET Driver team is considering adding support for .NET Standard 2.0 soon\r\n\r\nIs there an time line for that? Currently when publishing a .net core 3.0 app with MongoDB driver, error NU1605 will block the process. It can be ignored but that requires modifing every project file that uses the driver, which is quite tedious for large solutions.",
      "Any chance to move on to the better netstandard?",
      "@adamhathcock I'd fix the merge conflicts but I don't know if this PR is still under review for merge 🤷‍♂ ",
      "Looking forward to it. But as it shows, a conflict in `src/MongoDB.Driver.Core/Core/Compression/SnappyCompressor.cs` still exists.\r\nWhen will it be solved and merged?",
      "@AlseinX same comment, don't know if this PR is under review. I didn't get any feedback so I don't want to go through the work of fixing merge conflicts if there's no point",
      "This PR is really helpful and the removal of  `Emit`ting brings much more compatibility to some runtime implementations.\r\nIt sounds disappointing that the maintainers of an open source project ignore a helpful PR for months.\r\nCommonly a PR is reviewed in several days when it is ready for review, either merged, rejected, requested changes, or given a reason why it is being on hold, as long as the project is still active, otherwise the readme file would contain \"This repo is developed by the official team only and contribution is not welcomed\".",
      "I'm sorry we haven't gotten to this yet. We are definitely planning to target .NET Standard 2.0 as soon as possible. The main issues that have stopped us from doing it sooner are:\r\n\r\n1. Uncertainty regarding whether it's OK to drop support for .NET Standard 1.5 and just replace it with .NET Standard 2.0\r\n2. If we keep support for .NET Standard 1.5 how do we test both the netstandard15 and netstandard20 artifacts\r\n\r\nWe are researching whether any of our users would be impacted by removing support for .NET Standard 1.5.\r\n\r\nNote that once we target .NET Standard 2.0 we also need to review the #if's in the entire code base to see what features can now be re-enabled once we target .NET Standard 2.0 (and are no longer constrained by the more limited APIs available in .NET Standard 1.5). We plan to do that as a separate effort.\r\n\r\nCan someone elaborate on why removing use of Emit is helpful? Where is Emit not supported?\r\n\r\nThanks!",
      "Hey @rstam  I can confirm that Emit is not supported on Xamarin iOS Devices or Devices that do not allow dynamic generation of code.  Microsoft has released a hotfix for this by enabling an interpreter to run on iOS. But this affects performance and causes other issues. \r\n\r\nhttps://github.com/mongodb/mongo-csharp-driver/pull/377\r\nhttps://devblogs.microsoft.com/xamarin/introducing-xamarin-ios-interpreter/",
      "@Digi59404 thanks for that information. That's helpful.",
      "As for the issues:\r\n\r\n1. Actually the .NET Implementations that do not support netstandard2.0 but support netstandard1.5 are out of support and deprecated, and the projects that are built against netstandard1.5 only (ASP.NET Core 1.x/2.x targets netstandard rather than netcoreapp) are also compatible to netstandard2.0 by design. The ancient projects that never intend to upgrade the target platform are basically inactive, no longer maintained and more unlikely to update the mongodb driver.\r\n\r\n2. Even if it is really necessary to keep support for netstandard1.5, and test for both targets separately are needed. Assuming that there is an exception to make the test pass on netstandard1.5 and fail on netstandard2.0 (by design, this is impossible unless there is conditional compilation to behave specifically, or mongodb driver is designed to work with a bug that only occurs on netstandard1.5 implementations), the projects that run on a netstandard2.0 implementation would not work as well even if the mongodb packages pass the test on a .netstandard1.5 implementation. Currently the mongodb csharp driver is tested on netstandard1.5 implementations but actually used on netstandard2.0+ implementations. If the assumption is a truth, it is broken already. So the assumption is not true, therefore the current version that passes the test on .netstandard1.5 implementation does not need a test on a netstandard2.0 implementation.",
      "I've fixed merge conflicts here.",
      "It looks like just adding `netstandard2.0` support breaks some tests around `ISupportInitialize`:\r\n\r\n![image](https://user-images.githubusercontent.com/104498/72537236-5e0a8980-3841-11ea-9deb-4ebc70660fc3.png)\r\n\r\nEven if I go back to using the `Reflection.Emit` approach, these tests break. This will need some investigation into why `netstandard2.0` breaks but `netstandard1.5` works",
      "@rstam @vincentkam I've fixed the test failures by adding the `NETSTANDARD2_0` in the places where it conditionally compiles `NET452`. Build is green now.",
      "I rebased and squashed this PR because it had a bunch of useless old commits",
      "Somehow, there’s already conflicts.  Sorry @jbogard \r\n\r\nI still think out of support versions of net standard should be dropped.",
      "Merged from upstream, which incorporated CSHARP-2394",
      "@adamhathcock not anymore ;)",
      "Thanks @jbogard for your participation, the changes are already in master. They will be available to consume in the next release"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6b18912b45d36a0950",
    "number": 376,
    "body": "This PR fixes https://jira.mongodb.org/browse/CSHARP-2687",
    "head_branch": "CSHARP-2687",
    "is_a_fork": true,
    "comments": [
      "Thanks, @dnickless!",
      "[EG](https://evergreen.mongodb.com/version/5feb9db9562343703448c517) [Internal Link]\r\n",
      "[Merged](https://github.com/mongodb/mongo-csharp-driver/commit/4e2a5df68146c5cdf5ee85758ddaac688b63e794)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6c18912b45d36a0951",
    "number": 375,
    "body": "This small PR addresses https://jira.mongodb.org/browse/CSHARP-2683. It avoids recreating literally millions of almost identical instances inside a loop which proved to waste endless memory in my profiling session (see JIRA: ~28 million instances created adding up to ~900MB of heap space).",
    "head_branch": "CSHARP-2683",
    "is_a_fork": true,
    "comments": [
      "Thanks @dnickless . I think we can also mention this logic in tests here https://github.com/mongodb/mongo-csharp-driver/blob/master/tests/MongoDB.Bson.Tests/IO/TrieNameDecoderTests.cs#L23 . Then it will be LGTM",
      "[Squashed and merged](https://github.com/mongodb/mongo-csharp-driver/commit/0f3bff509e48af146989fd256c52c5bccf6637d9)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6d18912b45d36a0952",
    "number": 374,
    "body": "",
    "head_branch": "csharp2119",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6e18912b45d36a0953",
    "number": 373,
    "body": "There is no current convention allowing for a string id member on a class represented as an ObjectId with an ObjectId generator. You can achive this with attributes, but this requires the class to reference external libraries which is not always desirable. The issue is further described here: https://jira.mongodb.org/browse/CSHARP-2644 \r\n\r\nThis PR introduces a convention-only based solution. Using this convention there is no need for any attribute decoration or explicit BsonClassMap configuration.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "The commit from this PR has been merged on the command line some time ago, so closing this out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa6f18912b45d36a0954",
    "number": 372,
    "body": "I have faced with problem after upgrade to .NET Core 3.0 preview 4 in my project, this line starts throwing an exception: https://github.com/mongodb/mongo-csharp-driver/blob/660658d4253f06506c1d60aae7ef68745ab609b2/src/MongoDB.Bson/Serialization/BsonClassMap.cs#L40\r\n\r\nThis change cover .NET Framework and .NET Core ways to get System.Runtime.Serialization.FormatterServices type instance.\r\n\r\nI'm don't sure how to write a proper test for that case but test it manually on .NET Framework 4.5.2, .NET Core 2.1, 2.2 and 3.0.\r\n\r\nThis PR is related to already created jira task with a proposal, which was implemented - https://jira.mongodb.org/browse/CSHARP-2595.",
    "head_branch": "CSHARP-2595",
    "is_a_fork": true,
    "comments": [
      "Will someone accept this PR? It seems that it fixes the problem.",
      " @KonH  thanks for this fix , When it will be rolled out via nugget on 2.8.x branch ?",
      "> @KonH thanks for this fix , When it will be rolled out via nugget on 2.8.x branch ?\r\n\r\nI wait until somebody accept it. Or I need another PR for it?",
      "Hello @KonH , thank you for your PR! Another PR isn't necessary at this point. Given the imminent release of .NET Core 3.0 in the second half of 2019, we will be re-triaging and taking another look at this issue extremely soon.",
      "@vincentkam  thank you for the clarification. We will await then the update.",
      "We're working on this change, with some additional changes to retain compatibility with older versions of .NET Core.\r\n\r\nIf interested, see:\r\n\r\nhttps://github.com/rstam/mongo-csharp-driver/pull/110",
      "What will done to my project i trust this 3.0 and i have upgraded my framework. Now what i will do..\r\nAyşegülün suçu ne? \r\n\r\nEverything worked grate after downgrading **core 3.0 to 2.2**",
      "Thanks @KonH , your patch worked. I tried the latest master version too, since they mentioned that it passed code review and was being merged in, but that one was still throwing exceptions so I tried yours.",
      "Hi @KonH, I have to port to preview 5 and this issue is causing a break in my tests.  Is there a way that I can get a signed version with the fix in it to continue my upgrade?",
      "@jacodv, unfortunately, I don't know how it can be done (if possible). I think you need to wait for the merge (and according to conversion, #110 can be merged instead of this one). Comments from more involved people can be helpful.",
      "Thanks @KonH , I will branch off and continue with other porting until 2.8.1 is out",
      "Squashed, rebased and merged.",
      "@rstam Any idea when 2.8.1 will be released with this change? \r\nMany thanks",
      "2.8.1 was released today, May 15, 2019."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7018912b45d36a0955",
    "number": 371,
    "body": "This changes allows to create a `IMongoQueryable<TDocument>` usable to query data modified within a transaction.\r\n\r\nIt adds a new overload of the extension method `IMongoCollectionExtensions.AsQueryable<TDocument>` with an `IClientSessionHandle session` parameter.\r\nThe `MongoQueryProviderImpl`, `QueryableExecutionModel` and `AggregateQueryableExecutionModel` classes were changed to allow passing the session handle at execution.\r\n\r\nI've checked all existing Linq tests.\r\nI also rewrote all those linq tests to check it works during a transaction in `MongoQueryableSessionTests`.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This is very important. Please merge 👍 :-)",
      "We are really missing this feature. Please merge:)",
      "+1",
      "Merged with some modifications. See https://jira.mongodb.org/browse/CSHARP-2596."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7118912b45d36a0956",
    "number": 370,
    "body": "This change makes the BsonSerializerRegistry accept registrations of serializers for types that have been cached before. Manual (explicit) registrations will now override the previously created default serializer.\r\n\r\nAbout the implementation: I did not use a HashSet for storing which types have been registered explicitly because of concurrency issues as described here:\r\nhttps://stackoverflow.com/questions/18922985/concurrent-hashsett-in-net-framework/18923091\r\n\r\nThis is my first pull request, so I would not mind if my changes are reviewed especially closely.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Per discussion in the corresponding ticket, this was a flawed approach."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7218912b45d36a0957",
    "number": 369,
    "body": "",
    "head_branch": "releasenotes290beta1",
    "is_a_fork": true,
    "comments": [
      "Created in the wrong repo."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7418912b45d36a0958",
    "number": 368,
    "body": "The examples of RunCommand usage don't work correctly. I added the missing generic BsonDocument parameter.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks @rkaszczuk, we'll merge this and include it in the next release."
    ],
    "commit_messages": [
      "Fixed example of RunCommand to working version\n\nThe examples of RunCommand usage don't work correctly - the generic BsonDocument parameter is missing."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7518912b45d36a0959",
    "number": 367,
    "body": "https://jira.mongodb.org/browse/CSHARP-2342\r\nhttps://evergreen.mongodb.com/version/5c6f1b3a57e85a29be052dab",
    "head_branch": "cs2342",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7618912b45d36a095a",
    "number": 366,
    "body": "This change reduces the memory footprint during the serialization process by eliminating four implicit lambda closure allocations inside `BsonWriter`.\r\n\r\nMore info on the topic can be found in the JIRA ticket [CSHARP-2504](https://jira.mongodb.org/browse/CSHARP-2504) and also here: https://blogs.msdn.microsoft.com/pfxteam/2012/02/03/know-thine-implicit-allocations/\r\n\r\nCode **before**:\r\n`_childElementNameValidatorFactory = () => _elementNameValidator.GetValidatorForChildContent(name);`\r\n\r\nIL **before**:\r\n```\r\n    IL_00a1: ldarg.0      // this\r\n    IL_00a2: ldloc.0      // 'CS$<>8__locals0'\r\n    IL_00a3: ldftn        instance class MongoDB.Bson.IO.IElementNameValidator MongoDB.Bson.IO.BsonWriter/'<>c__DisplayClass44_0'::'<WriteName>b__0'()\r\n    IL_00a9: newobj       instance void class [mscorlib]System.Func`1<class MongoDB.Bson.IO.IElementNameValidator>::.ctor(object, native int)\r\n    IL_00ae: stfld        class [mscorlib]System.Func`1<class MongoDB.Bson.IO.IElementNameValidator> MongoDB.Bson.IO.BsonWriter::_childElementNameValidatorFactory\r\n```\r\nand the corresponding closure type:\r\n```\r\n  .class nested private sealed auto ansi beforefieldinit \r\n    '<>c__DisplayClass44_0'\r\n      extends [mscorlib]System.Object\r\n  {\r\n    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() \r\n      = (01 00 00 00 )\r\n\r\n    .field public class MongoDB.Bson.IO.BsonWriter '<>4__this'\r\n\r\n    .field public string name\r\n\r\n    .method public hidebysig specialname rtspecialname instance void \r\n      .ctor() cil managed \r\n    {\r\n      .maxstack 8\r\n\r\n      IL_0000: ldarg.0      // this\r\n      IL_0001: call         instance void [mscorlib]System.Object::.ctor()\r\n      IL_0006: ret          \r\n\r\n    } // end of method '<>c__DisplayClass44_0'::.ctor\r\n\r\n    .method assembly hidebysig instance class MongoDB.Bson.IO.IElementNameValidator \r\n      '<WriteName>b__0'() cil managed \r\n    {\r\n      .maxstack 8\r\n\r\n      // [279 55 - 279 110]\r\n      IL_0000: ldarg.0      // this\r\n      IL_0001: ldfld        class MongoDB.Bson.IO.BsonWriter MongoDB.Bson.IO.BsonWriter/'<>c__DisplayClass44_0'::'<>4__this'\r\n      IL_0006: ldfld        class MongoDB.Bson.IO.IElementNameValidator MongoDB.Bson.IO.BsonWriter::_elementNameValidator\r\n      IL_000b: ldarg.0      // this\r\n      IL_000c: ldfld        string MongoDB.Bson.IO.BsonWriter/'<>c__DisplayClass44_0'::name\r\n      IL_0011: callvirt     instance class MongoDB.Bson.IO.IElementNameValidator MongoDB.Bson.IO.IElementNameValidator::GetValidatorForChildContent(string)\r\n      IL_0016: ret          \r\n\r\n    } // end of method '<>c__DisplayClass44_0'::'<WriteName>b__0'\r\n  } // end of class '<>c__DisplayClass44_0'\r\n\r\n```\r\n\r\nCode **after**:\r\n`_childElementNameValidatorFactory = b => b._elementNameValidator.GetValidatorForChildContent(b._name);`\r\n\r\nIL **after**:\r\n```\r\n    IL_0079: ldarg.0      // this\r\n    IL_007a: ldsfld       class [mscorlib]System.Func`2<class MongoDB.Bson.IO.BsonWriter, class MongoDB.Bson.IO.IElementNameValidator> MongoDB.Bson.IO.BsonWriter/'<>c'::'<>9__44_0'\r\n    IL_007f: dup          \r\n    IL_0080: brtrue.s     IL_0099 // re-use of cached instance after initial allocation\r\n    IL_0082: pop          \r\n    IL_0083: ldsfld       class MongoDB.Bson.IO.BsonWriter/'<>c' MongoDB.Bson.IO.BsonWriter/'<>c'::'<>9'\r\n    IL_0088: ldftn        instance class MongoDB.Bson.IO.IElementNameValidator MongoDB.Bson.IO.BsonWriter/'<>c'::'<WriteName>b__44_0'(class MongoDB.Bson.IO.BsonWriter)\r\n    IL_008e: newobj       instance void class [mscorlib]System.Func`2<class MongoDB.Bson.IO.BsonWriter, class MongoDB.Bson.IO.IElementNameValidator>::.ctor(object, native int)\r\n    IL_0093: dup          \r\n    IL_0094: stsfld       class [mscorlib]System.Func`2<class MongoDB.Bson.IO.BsonWriter, class MongoDB.Bson.IO.IElementNameValidator> MongoDB.Bson.IO.BsonWriter/'<>c'::'<>9__44_0'\r\n    IL_0099: stfld        class [mscorlib]System.Func`2<class MongoDB.Bson.IO.BsonWriter, class MongoDB.Bson.IO.IElementNameValidator> MongoDB.Bson.IO.BsonWriter::_childElementNameValidatorFactory\r\n```\r\nand the corresponding static cache field:\r\n```\r\n    .field public static class [mscorlib]System.Func`2<class MongoDB.Bson.IO.BsonWriter, class MongoDB.Bson.IO.IElementNameValidator> '<>9__44_0'\r\n```",
    "head_branch": "CSHARP-2504",
    "is_a_fork": true,
    "comments": [
      "https://github.com/mongodb/mongo-csharp-driver/pull/273\r\nhttps://jira.mongodb.org/browse/CSHARP-1942\r\n =)",
      "I wonder if you considered PR #273 which appears to fix this issue in a different way (also it fixes a similar allocation issue in BsonSerializerRegistry).",
      "Upon a closer look, I would also strongly suggest you go with #273 (assuming it is semantically correct which I didn't validate completely) instead of my suggestion here. #273 eliminates the Func allocations completely which is certainly the best thing we can do here.",
      "@dnickless thanks for taking a look at the mentioned PR.\r\nI did some testing to ensure that the logic is preserved and all the tests that were present at that time were passing, but I agree that it needs at least another pair of eyes to check if everything is fine.\r\nBasically, I replaced the factory delegate that depends on the `name` variable with a member (`_childElementName`) that contains the same value. Since the delegate itself is not passed anywhere but merely called in one place, I replaced the call to the delegate with a method, which uses `_childElementName` to determine if the new validator is to be created.",
      "Thanks @onyxmaster and @dnickless for finding and submitting PRs for this issue.\r\nFixed [here](https://github.com/mongodb/mongo-csharp-driver/commit/7c3c5caf53366c16df1bf0108e20b674c0b5647f) with an equivalent approach."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7718912b45d36a095b",
    "number": 365,
    "body": "Small change that removes a memory issue as described here: https://jira.mongodb.org/browse/CSHARP-2506",
    "head_branch": "CSHARP-2506",
    "is_a_fork": true,
    "comments": [
      "[Pushed](https://github.com/mongodb/mongo-csharp-driver/commit/84ff74d8d62be06ead9e0e1580a549e66beec8dc)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7818912b45d36a095c",
    "number": 364,
    "body": "Ticket [2478](https://jira.mongodb.org/browse/CSHARP-2478) \r\nUpdate on dependency `System.Net.Security` to avoid [vulnerability](https://snyk.io/vuln/SNYK-DOTNET-SYSTEMNETSECURITY-60072) (and warning from snyk utility)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your PR @flaksirus! I have tweaked it very slightly by adding you to the contributors list and merged your changes into master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7918912b45d36a095d",
    "number": 363,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in UpdateMany section (#363)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7a18912b45d36a095e",
    "number": 362,
    "body": "Having an issue with turning a mongourl to as string then re-parsing it. There is validation on parsing that the port cant be defined with '+srv' but the ToString() outputs the port",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hey @Gekctek thanks a lot for opening this PR!  As per [the contributing guidelines](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md), a few requests before we can put this in the queue to review:\r\n\r\n1) Please open a ticket in the CSHARP project at https://jira.mongodb.org.\r\n2) Please add a unit test to your PR.\r\n3) Please make sure at least one of your commits references the CSHARP ticket in JIRA to increase the visibility of it for us.\r\n\r\nOnce again, thanks!",
      "https://jira.mongodb.org/browse/CSHARP-2459"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7b18912b45d36a095f",
    "number": 361,
    "body": "Locks changed to lock-free containers in order to get rid of lock contention in \"threads heavy\" environments. [JIRA issue](https://jira.mongodb.org/browse/CSHARP-2423)\r\nThe main problem in existing code that all releases (Dispose) of connections inside pools was made inside lock. It is possible to rewrite existing code and move Dispose outside of the lock, but lock-free containers are far more effective that current solution",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@valentin-abalmasov did you found a solution for you lock contention issue, We have the same issue with MongoDb.Driver 2.18.0 ? \r\nI see that related jira ticket is closed",
      "> @valentin-abalmasov did you found a solution for you lock contention issue, We have the same issue with MongoDb.Driver 2.18.0 ? I see that related jira ticket is closed\r\n\r\n@medboz Unfortunately our fix was not accepted as merge request, but, we do apply the changes from merge request to our own fork of driver, because we still experience \"lock contention\" issue in our software",
      "Thanks for your PR @valentin-abalmasov.\r\nConnectionPool synchronization behavior and event order is largely dictated by our [specs](https://github.com/mongodb/specifications/blob/master/source/connection-monitoring-and-pooling/connection-monitoring-and-pooling.md), and this can be a breaking change in some scenarios.\r\ngRPC will replace our existing connection pooling logic. How we integrate this with our current networking code is uncertain at the moment as we will have to maintain both the mongorpc and gRPC stacks in our drivers for many years. That said, I don't think we will get around to reworking the connection pool locking code before the gRPC work and we can close this as \"won't do\".\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7c18912b45d36a0960",
    "number": 360,
    "body": "This StringBuilder object is being created because the string named \"value\" needs escaping. It is unknown at this point exactly how many characters need escaping, but AT MINIMUM there is one. This means the new escaped string length will be larger than original string length by at least one character, and the StringBuilder constructor capacity parameter should reflect this logic. Without this change, the StringBuilder object is GUARANTEED to allocate and chain together a new StringBuilder object under the hood as it increases it's capacity to handle the larger escaped string.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @Achilles1515 as per our [contributing guide](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md), please open an issue at jira.mongodb.org in the CSHARP project and link it to the pull request.\r\n\r\nThanks,\r\nJeff",
      "> Hi @Achilles1515 as per our [contributing guide](https://github.com/mongodb/mongo-csharp-driver/blob/master/CONTRIBUTING.md), please open an issue at jira.mongodb.org in the CSHARP project and link it to the pull request.\r\n> \r\n> Thanks,\r\n> Jeff\r\n\r\nDone. Sorry about that.",
      "This PR was included as part of PR https://github.com/mongodb/mongo-csharp-driver/pull/1290\r\n\r\nThank you for submitting it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7d18912b45d36a0961",
    "number": 351,
    "body": "This is based on the PR put forward by @pieceofsummer: https://github.com/mongodb/mongo-csharp-driver/pull/253.\r\n\r\nIt is on the current master, with all tests passing. There has been a minor code cleanup and a few fixes for tests.",
    "head_branch": "better-linq",
    "is_a_fork": true,
    "comments": [
      "Thank you for submitting this PR and our apologies that it took so long to look at it.\r\n\r\nI am closing this PR as support for DateTime methods like AddDays etc... is already part of the LINQ3 provider."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7e18912b45d36a0962",
    "number": 350,
    "body": "Upate to fix problem with static members in F# not allowing serialisation\r\nhttps://jira.mongodb.org/browse/CSHARP-2405\r\n\r\nThe above limits the GetProperties to just instance public properties - ignoring static properties.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "https://jira.mongodb.org/browse/CSHARP-2405 ",
      "Already merged into master. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa7f18912b45d36a0963",
    "number": 349,
    "body": "Anonymous function has to capture 'this' as well as parameter since it calls object instance method.\r\n\r\nEach invocation ended allocating 32 bytes, sample print:\r\n\r\n```\r\n0000028151aca4c0 (MongoDB.Bson.IO.BsonWriter+<>c__DisplayClass44_0)\r\n    <>4__this:0000028151ac8fd0 (MongoDB.Bson.IO.JsonWriter)\r\n    name:000002824ee886b0 (System.String) Length=11, String=\"_odata_type\"\r\n```\r\nFunction is called super-often, memory snapshots indicate ~1M instances are leaving in the heap.",
    "head_branch": "feature/avoid-scope-capturing-jsonWritter-escape-check",
    "is_a_fork": true,
    "comments": [
      "@craiggwilson, @rstam  \r\n\r\nHi folks, please take a look at a small performance pill.\r\n\r\nThanks.",
      "@rstam, @craiggwilson  its been a month since PR creation time =/\r\n\r\nCould you please review this tiny change?",
      "@vincentkam - seem you've participated in the last completed PR in the repo, could you please take a look at this one as well?\r\n\r\nThanks.",
      "Hi @mitikov, thanks for opening this pull request, and my apologies for the delay in response here.  The MongoDB .NET team relies primarily on [our JIRA project](http://jira.mongodb.org/browse/CSHARP) to track and prioritize our work.\r\n\r\nIn order to continue the conversation, can you please open a ticket at the above link so we can discuss your proposal there?",
      "@IanWhalen created [2456 PBI: Use less memory without scope capturing](https://jira.mongodb.org/browse/CSHARP-2456).\r\n\r\nThank you.",
      "Hi @mitikov, thanks for this pull request and our apologies for the very late feedback here. We implemented this change as part of another PR: https://github.com/mongodb/mongo-csharp-driver/pull/1265 that was changing the same code area and did see any actual performance improvements worth the changes. So we will close this PR and associated ticket. ",
      "This PR was actually included as part of PR https://github.com/mongodb/mongo-csharp-driver/pull/1290\r\n\r\nThank you for submitting it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8018912b45d36a0964",
    "number": 348,
    "body": "Use Enum.TryParse<TEnum> ( ) instead of Enum.Parse ( )",
    "head_branch": "CSHARP-2414-Enum-Deserializer-Issue-with-BsonType.String",
    "is_a_fork": true,
    "comments": [
      "Thank you for submitting a pull request. However, I am closing the pull request without merging it. See comments in:\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-2414\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8118912b45d36a0965",
    "number": 347,
    "body": "BsonSerializer.LookupActualType is on the hot path during deserialization and has proven to be a nasty bottleneck in my setup:\r\n\r\n![image](https://user-images.githubusercontent.com/985774/46535139-be72f300-c8aa-11e8-9563-e63404959c50.png)\r\n\r\nI managed to remove the need for the ReaderWriterLockSlim by switching to a (unfortunately not generic) Hashtable type instead of a HashSet<T>. Hashtable is safe for concurrent reads (as per https://docs.microsoft.com/en-us/dotnet/api/system.collections.hashtable?redirectedfrom=MSDN&view=netframework-4.7.2#thread-safety) and the amount of casting introduced is very small.\r\n\r\nThe HashSet<T> instances that are tracked inside the Hashtable get replaced instead of updated upon a write which allows consumers to safely iterate over them.",
    "head_branch": "BsonSerializer_ReduceLockContention",
    "is_a_fork": true,
    "comments": [
      "Hi @dnickless, thanks for opening this pull request, and my apologies for the delay in response here.  The MongoDB .NET team relies primarily on [our JIRA project](http://jira.mongodb.org/browse/CSHARP) to track and prioritize our work.\r\n\r\nIn order to continue the conversation, can you please open a ticket at the above link so we can discuss your proposal there?",
      "Hi @IanWhalen, kindly see the updated JIRA ticket. This change appears to indicate some massive (!) improvement.",
      "Cool, thanks!  We're still working through a lot of effort to get the driver ready for release concurrent to 4.2 and all of the new features that will be available there, but this is still on our radar when we get to handling PRs and other subsequent work.",
      "Kindly have a look at my second attempt which isn't really better than this one here in my opinion but certainly less drastic and still effective: #433"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8218912b45d36a0966",
    "number": 346,
    "body": "",
    "head_branch": "reference_typo",
    "is_a_fork": true,
    "comments": [
      "Thank you for pull request Wan! 😸 I've tweaked the commit message and merged your changes :) "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8318912b45d36a0967",
    "number": 345,
    "body": "Please see my comment in the Jira ticket. I wasn't able to edit the description, so I put all the info in a comment:\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-2066",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This request would seem to require also changing the documentation to discuss the positional operator. I do not see where the operator is documented. I believe the change will need extensive testing prior to merging. This change is effectively being offered without any significant unit testing.  ",
      "Hi again @BobCochran \r\n\r\nIt for sure needs the appropriate quality checking. I only tested the scenario we discussed in the Google group:\r\n\r\n```\r\nawait collection.UpdateOneAsync(\r\n\tfilter: x => x.Id == \"5ba573631f138fe8f4c9a3dd\" && x.Species.Relatives.Any(r => r.Name == \"Lion\"),\r\n\tupdate: Builders<Animal>.Update.Inc(y => y.Species.Relatives[-1].Population, 5)\r\n);\r\n```\r\n\r\nI would gladly cover this with some unit tests, if I'm allowed to do some refactoring to enable testability?",
      "I factored out the string formatting to a new class, and added some unit tests that verifies the behaviour of it.\r\n\r\nHowever, reverting `FieldExpressionFlattener.cs` will not make the tests fail, unless you run it in .NET Core on Linux. The string comparison of \"-1\" and \"-1\" never failed on Windows, so these tests are kind of unrelated to the root issue that I solved in this PR.",
      "@rstam @craiggwilson it would be great if this got merged pretty soon, as it's currently a blocker for us. Is there something I can do to expedite this? Do you want me to provide you with a test solution that you can run to reproduce the issue?",
      "I've created a project that let's you reproduce the bug. Just follow the instructions in the readme: https://github.com/johnknoop/mongodb2066",
      "Thank you for the pull request! I've merged the changes based on your PR into the master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8518912b45d36a0968",
    "number": 344,
    "body": "",
    "head_branch": "CSHARP-2392",
    "is_a_fork": true,
    "comments": [
      "I don't think this is correct.  Cluster time really is represented as a BsonDocument:\r\n\r\n```\r\n$clusterTime\" : {\r\n\t\t\"clusterTime\" : Timestamp(0, 0),\r\n\t\t\"signature\" : {\r\n\t\t\t\"hash\" : BinData(0,\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\"),\r\n\t\t\t\"keyId\" : NumberLong(0)\r\n\t\t}\r\n\t}\r\n```\r\n\r\nThough it contains a timestamp, it also include a signature field.  Together it's a BsonDocument.\r\n\r\nI'm going to close this out, but let me know if you have any further questions."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8618912b45d36a0969",
    "number": 343,
    "body": "https://evergreen.mongodb.com/version/5b9ac3d32a60ed2d10b0c2f2\r\n\r\nUpdate tests in CreateIndexesUsingInsertOperationTests to check to ensure that the server supports creating indexes using the insert operations.\r\n\r\nCurrently causing Evergreen to go red when testing against latest.",
    "head_branch": "CSHARP-2386",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8718912b45d36a096a",
    "number": 342,
    "body": "…allow buffer reuse.\r\n\r\nI've created overloads for reading and writing buffers that are larger than the data they hold. With this new api one can limit the size of the used buffer with a parameter. Now it is possible the reuse one large enough buffer and reduce fragmentation of memory.\r\n\r\nThe overloads in JsonWriter will clone buffers that are too large and reduce them to the given size.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @XiCode, thanks for your contribution. We have plans on updating our codebase to using Span in the near future and that will involve/void such work as this. Thus I'll be closing this PR. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8818912b45d36a096b",
    "number": 341,
    "body": "This PR changes it so that the initial GSSAPI scram conversation starts with a non-empty client payload.\r\n\r\nIn 3.6 and before, MongoDB would return \r\n```\r\n{ \"conversationId\" : 1, \"done\" : false, \"payload\" : new BinData(0, \"\"), \"ok\" : 1.0 }\r\n```\r\nfor an empty `saslStart` payload.\r\n\r\nIn 4.0, MongoDB passes the empty client payload per [SASL spec](https://tools.ietf.org/html/rfc4752#section-3.2) to Kerberos which starts [negotiation](https://github.com/krb5/krb5/blob/09c9b7d6f64767429e90ad11a529e6ffa9538043/src/lib/gssapi/spnego/spnego_mech.c#L1269-L1275).\r\n\r\nThe C# driver should not pass an empty payload unless it wants to start SPNEGO.\r\n\r\nIf the C# driver does start calling `saslStart` with a non-empty payload, this is compatible with all versions of MongoDB.",
    "head_branch": "gssapi",
    "is_a_fork": true,
    "comments": [
      "Thanks Mark! Tweaked, rebased, merged, and pushed! 😸 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8918912b45d36a096c",
    "number": 340,
    "body": "In order to debug the issue in [CSHARP-2371](https://jira.mongodb.org/browse/CSHARP-2379), I needed to increase the verbosity of Cake to Diagnostic. This should be the default since it will aid in debugging similar problems in the future, and does not have a significant impact on the verbosity of the build.",
    "head_branch": "evergreen_verbose",
    "is_a_fork": true,
    "comments": [
      "Thanks Mark! Rebased, merged, and pushed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8a18912b45d36a096d",
    "number": 339,
    "body": "In https://github.com/cake-contrib/Cake_Git/commit/ce283fd073a5360e10505666f2f9956aa2880b7e, Cake.Git updated to .NET Standard 2.0 which is causing the build to fail.",
    "head_branch": "pin_cake_git",
    "is_a_fork": true,
    "comments": [
      "Thank you for the pull request 😸\r\nMerged to master, made some minor tweaks (tweaked the commit message and added you to the contributors section), and pushed!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8b18912b45d36a096e",
    "number": 338,
    "body": "MongoDB.Bson/ObjectModel/BsonDocument.cs:\r\n* Made DeepClone work with documents that have duplicate element names\r\n* Added constructors that take documents and work if they have duplicate names\r\n\r\nMongoDB.Bson/ObjectModel/LazyBsonDocument.cs:\r\nMongoDB.Bson/ObjectModel/RawBsonDocument.cs:\r\n* Set AllowDuplicateNames to true since raw BSON always might have duplicate names",
    "head_branch": "duplicate-name-fixes",
    "is_a_fork": true,
    "comments": [
      "Hi @admilazz, thanks for opening this pull request, and my apologies for the delay in response here.  The MongoDB .NET team relies primarily on [our JIRA project](http://jira.mongodb.org/browse/CSHARP) to track and prioritize our work.\r\n\r\nIn order to continue the conversation, can you please open a new ticket (or point to an existing one) at the above link so we can discuss your proposal there?",
      "I believe these are the ones:\r\nhttps://jira.mongodb.org/browse/CSHARP-2353\r\nhttps://jira.mongodb.org/browse/CSHARP-2354\r\n",
      "Great, thanks @admilazz!  I'm not quite certain the order in which we'll be working through all of the open PRs so I can't give any timeline, but we'll definitely be reaching out as soon as we can.",
      "Thank you @admilazz for this PR.\r\nYour commit was merged [here](https://github.com/mongodb/mongo-csharp-driver/pull/1283/commits/5b7e6b36ae6b48a6c27d14ec7f0555f123253d55)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8c18912b45d36a096f",
    "number": 337,
    "body": "Design doc link in JIRA.\r\nRelevant spec: https://github.com/mongodb/specifications/blob/07fd7bf9c40036f5bdee39b5754ddc57b9d58628/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#using-setversion-and-electionid-to-detect-stale-primaries",
    "head_branch": "CSHARP-2147",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8d18912b45d36a0970",
    "number": 336,
    "body": "hi. in Projection section, below the Projection Definition Builder there's a link to _tests_ github page. i cannot understand the md used syntax but in documentation page, it works as a relative link instead of an absolute link and i guess this change will work.\r\nit worth mentioning that all other similar links have the same problem, at least in this page.\r\n\r\nthanks.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "The link at https://mongodb.github.io/mongo-csharp-driver/2.11/reference/driver/definitions/#projection-definition-builder works for me.  If you still see issues, we can re-open this, but for now I'm going to close this out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8e18912b45d36a0971",
    "number": 335,
    "body": "This change fixes the problem identified in https://jira.mongodb.org/browse/CSHARP-2264\r\n\r\nIt adds MinKey and MaxKey properties to the FindOptions and adds Min and Max to the FindFluent interface, allowing queries like db.c.find().min(x).max(y) to be executed using the driver.\r\n\r\nI'm not sure if they should also be added to MapReduceOptions, etc.",
    "head_branch": "add-min-max",
    "is_a_fork": true,
    "comments": [
      "As CSHARP-2264 has been closed, as well as CSHARP-1896, I'm going to close out this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa8f18912b45d36a0972",
    "number": 334,
    "body": "This change fixes the problem described in https://jira.mongodb.org/browse/CSHARP-2349\r\n\r\nThe problem is that MongoDB supports empty field names but the driver doesn't.",
    "head_branch": "support-empty-fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9018912b45d36a0973",
    "number": 333,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Closing as per the discussion in https://jira.mongodb.org/browse/CSHARP-2345."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9118912b45d36a0974",
    "number": 332,
    "body": "Also disable event aggregation for the serverMonitoringFactory",
    "head_branch": "CSHARP-2231",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9318912b45d36a0975",
    "number": 331,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your pull request!\r\nWe've fixed the misleading example code through another pull request (https://github.com/mongodb/mongo-csharp-driver/pull/330) came in slightly earlier."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9418912b45d36a0976",
    "number": 330,
    "body": "",
    "head_branch": "CSHARP-2277",
    "is_a_fork": true,
    "comments": [
      "Thank you for the pull request 😸 \r\nMerged to master, made some minor tweaks (unrelated typo fixes and adding you to the contributors section), and pushed! "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9518912b45d36a0977",
    "number": 329,
    "body": "…Definition<TDocument> field)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "[Pushed](https://github.com/mongodb/mongo-csharp-driver/commit/1d9b3dc2d9f974b0c8115d5a87ec33c945b2fa1e)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9618912b45d36a0978",
    "number": 328,
    "body": "This is the implementation to https://jira.mongodb.org/browse/CSHARP-1991. I tried to follow the existing code in style as closely as possible and took some inspiration from the mongo-java-driver.\r\n\r\nPlease provide feedback on the changes. I've successfully tested it both through the unit and integration tests against a local MongoDB instance as well as our proprietary application that uses an Atlas MongoDB cluster.\r\n\r\nUnfortunately, .net does not provide an implementation of zlib with suitable headers. Only Deflate. So I had to include a 3rd party package to achieve the compression. Please provide feedback on this as well, as I'm not at all knowledgeable in licensing stuff.\r\n\r\nAlso please ignore double commits. They are the result from wrongly updating fork.\r\n\r\nThanks!",
    "head_branch": "AddCompression",
    "is_a_fork": true,
    "comments": [
      "Can you confirm two things;\r\n* this driver support snappy compression?\r\n* this driver support compression while Query/ Reading from Mongo?",
      "@sachin5284 \r\n1. No, I've not been able to find a nuget package of snappy compression, that worked well and also supported net-standard. Plus, quite frankly, we (the company I work for) didn't need that and I had a deadline.\r\n2. Yes, absolutely, it's actually both ways. Messages to and from a mongo server will be compressed if enabled. Also, we (the company I work for) have been using this version of Mongo in production code for 4 months now. I've yet to see one issue.\r\n\r\nFeel free to expand on this, maybe adding snappy. Unfortunately, I won't be able to develop this any further. I'm also waiting to have this either approved or a different implementation is pushed into master. But seeing that in the corresponding JIRA ticket the version and date gets pushed back constantly, I highly doubt this will be happening this year. That's why we decided to help develop at least the zlib compression part.",
      "@AlexEndris \r\nSure, I will try to dig deep into code and maybe can add snappy compression support in it. \r\nI have just gone through few test cases and found NotSupportedException in CompressedMessageBinaryEncoder.cs file for ReadMessage() method, which leads me to ask about reading/Query part but it seems like I have to go through code first.\r\n Thanks for the quick reply.",
      "Oh, don't worry about that part. This is a little quirk.\r\n\r\nBasically, the \"ReadMessage()\" method is only used when actually reading the contents of a message that comes from the network stream. But due to reasons I can't remember, this isn't possible with the compressed message. The compressed message is only created at the out skirts of the network stuff.. Was a bit complicated. Feel also free to improve on that!\r\n\r\nIf you've got any questions just ask. I'd be happy to help you along a little. At least for as much as I can remember. It took me a while to understand the code of the mongo driver, but in the end I found it quite comprehensive and tried to maintain this trait as much as possible.\r\n\r\nAlso, which might also help you a bit, I've taken the java-driver into account as well and transferred a lot of how it's done there to here. So be sure to take a look there as well.",
      "Mistakenly closed",
      "Congrats! Happy that this is merged. Do you know which version will have this fix?",
      "> Congrats! Happy that this is merged. Do you know which version will have this fix?\r\n\r\nTake this with a grain of salt, as I'm not at all in the loop of release cycles. But it could be part of version 2.9. Timewise, I have no idea.\r\n",
      "The fix is currently slated for [2.9.0](https://jira.mongodb.org/browse/CSHARP-1991)! :) "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9718912b45d36a0979",
    "number": 327,
    "body": "Patch build is green: https://evergreen.mongodb.com/version/5b1951a6e3c33120750e352e",
    "head_branch": "csharp2290",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9818912b45d36a097a",
    "number": 326,
    "body": "This turned out to be easy!",
    "head_branch": "csharp2273",
    "is_a_fork": true,
    "comments": [
      "Wrong repo."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9918912b45d36a097b",
    "number": 325,
    "body": "Either I'm doing something wrong in my custom serializer or this is an appropriate change.\r\n\r\nContext: https://jira.mongodb.org/browse/CSHARP-2275",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @bliz937, I commented on the linked Jira issue.",
      "Closing since the linked ticket has been closed without followup from the reporter."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9a18912b45d36a097c",
    "number": 324,
    "body": "",
    "head_branch": "csharp2259",
    "is_a_fork": true,
    "comments": [
      "Withdrawing because the pull request was created in the wrong repo."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9b18912b45d36a097d",
    "number": 323,
    "body": "Or Connection and ConnectionType as it was in my case\r\nIn case projection looks like \r\n(item => new Result { Connection =  item.Connection, ConnectionType = item.ConnectionType} )\r\nthe method in question returns only one field - Connection\r\nIt results in FindProjectionTranslator.VisitField not finding ConnectionType  in fields list and it mistakenly sets _fullDocument = true, wich results in using ProjectingDeserializer that deserializes whole (very large) document and slows our system like x10 times.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Jira is down - can't open issue"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9c18912b45d36a097e",
    "number": 322,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9d18912b45d36a097f",
    "number": 321,
    "body": "Removed typo in MapProperty method xmldoc.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[Pushed](https://github.com/mongodb/mongo-csharp-driver/commit/d6ca22e872d3d826f489ac81f9e63cc2039324a5)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fa9e18912b45d36a0980",
    "number": 320,
    "body": "Add disableMD5 flag and associated tests while deprecating the checksum field",
    "head_branch": "CSHARP-2162",
    "is_a_fork": true,
    "comments": [
      "Withdrawn."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa018912b45d36a0981",
    "number": 319,
    "body": "Hello,\r\n\r\nHere's a first, naive, change to translate `{document}` to `$$ROOT` for `$push` in a `$group` aggregation stage.\r\nI say \"naive\" because I'm not sure it doesn't break existing functionality, being new to this part of the code base. I have run all tests in `AggregateGroupTranslatorTests` and they are green.\r\n\r\nThis is by no means a complete solution. I'd be happy to add tests and extend any dependent functionality if you think this is a the step in the right direction.\r\n\r\nCheers,\r\nMarko\r\n\r\nCSHARP-2071",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I don't know if this solution will work, but this issue has been open for years and no one is paying attention, the community's lack of care to basic serialization and translation issues is appalling. It makes it hard to use the type system without falling back to `BsonDocument` and json all over. Why is no one paying attention to issues like this?",
      "Hi @shiya-kohn,\r\n\r\nI understand your frustration, the impact of the community here does seem to be significantly less than advertised. My team has seen it on other (larger) PRs from 2017, and that's why I decided to go for a small one here. Essentially testing the water before investing any more effort.\r\n\r\nThat said, there's not much we can do about it, and the best advice I can offer (if you're working on an enterprise product) would be to \"bury\" the usages of types coming from this library under an abstraction, i.e. use the repository and specification patterns instead of using it directly.\r\n\r\nGood luck!",
      "It is not a feature but a bug. It was rediculous to keep this bug for many years. I don't know why they still don't care about it.",
      "This feature would allow wider use of Automapper instead of mapping hardcoded in a query. ",
      "Seriously hoping this PR gets some traction soon.",
      "Hi everyone, we've scheduled time for someone to look into this.  I apologize for letting it sit so long unattended.\r\n",
      "Thanks @mbinic for your PR! \r\nUnfortunately, the suggested changes lead to generating unsupported queries in some of the cases. \r\nSince this logic is already covered in a new LINQ (v3) implementation which currently is `in-progress`, we reject this PR. We will check the root cause of this PR when the new LINQ implementation will be ready."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa118912b45d36a0982",
    "number": 318,
    "body": "Currently, to filter documents that have a property of type array that matches a specific value, one has to write a query as follows:\r\n\r\n```c#\r\n// Assuming .M is an array of ints\r\nvar result = collection.AsQueryable().FirstOrDefault(x => x.M == new List<int> { 1, 2, 3 });\r\n```\r\n\r\nThis is not optimal because it breaks the symmetry of LinQ with the corresponding operation on `Collection` (namely, that `==` applied on lists does not do an element-wise match).\r\n\r\nIn less philosophical terms, this is a problem because it breaks tests as the mocked result of `.AsQueryable()` (a List) behaves differently, like in this example:\r\n\r\n```c#\r\n// using Moq\r\nvar myDoc = new Doc { M = new List<int> { 1, 2, 3 }}\r\nmock.Setup(x => x.AsQueryable()).Returns(new List<Doc> { myDoc }).AsQueryable());\r\n\r\n// ...in the method that is being tested\r\nvar result = collection.AsQueryable().FirstOrDefault(x => x.M == new List<int> { 1, 2, 3 });\r\nAssert.IsNotNull(result) // throws \r\n```\r\n\r\nTo make it worse, since `.FirstOrDefault()` is an extension method, it can't be mocked using Moq.\r\n\r\nMy proposed fix would be to support `.SequenceEqual()` as an alias to `$eq` to restore the symmetry. \r\nI added a failing test reflecting this.\r\n\r\nI'm new to C# so I don't really know if that is the best choice or if it is possible at all.\r\n\r\nI'm hoping for a few pointers on how to move this PR forward.\r\n\r\nCheers,\r\nLoris.\r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @kristoff-it \r\n\r\nFirst of all, I'm sorry for letting this PR sit so long unattended.\r\n\r\nIf you're still interested in pursuing this, the next stop would be to open a Jira issue at https://jira.mongodb.org/projects/CSHARP to start a discussion about whether this would be a good change to introduce in the driver.\r\n\r\n",
      "Sorry @jyemin, I've stopped using both C# and MongoDB years ago. Feel free to use the failing test if you intend to fix this problem.\r\n\r\nGood luck!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa218912b45d36a0983",
    "number": 317,
    "body": "Hello,\r\n\r\nat the moment I'm working on a project that makes use of a MongoDB that might span multiple MongoDB nodes (depending on the customer's needs). The database will store many small documents, so there may come the day where the number of documents exceeds an 32 bit integer value. This is a limitation the C# MongoDB driver introduces.\r\n\r\nI've adapted the code to support querys to skipping 64 bit distances and fetching up to 2^63-1 documents. The size of a batch is still an 32 bit integer (due to the limitation of .NET collections). The driver provides an option to fetch all data in a single batch. That option works as before for document counts up to 2^31-1. If there are more documents to fetch, multiple batches á max. 2^31-1 documents are returned, so there should not be a problem with existing installations.\r\n\r\nI would appreciate to see the change in your codebase.\r\n\r\nPS: I'd like to have the unit tests run, but VS 2017 seems to have a problem with the referenced version of xunit. Updating to the most recent version of xunit threw a few thousand errors due to severe syntactic changes, so I hope everything is fine anyway ;-)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Could the development team please make a brief statement as to whether the change is of interest or whether the limitation is by design? I'd love to work with big result sets. This is probably a borderline case, but I'd like to cover it.",
      "Thank you for your pull request.\r\n\r\nI have a couple concerns about these changes.\r\n\r\nThe first is that this would be a breaking change since some data types are changing.\r\n\r\nThe second is that large skip values are inherently inefficient and should not be encouraged. The server still has to do all (or most) of the work to read the documents and count them to skip over the initial documents before starting to return the rest of the documents. Therefore skip values should be relatively small.\r\n\r\nLarge limits would seem to be a bit more reasonable, but an easy work around is for an application to simply stop reading when it has received as many documents as it wishes to receive. Usually when a limit is used it is set to a relatively low value. It is particularly useful when the limit is very small, as it prevents the server from returning more documents than necessary in the first batch.\r\n",
      "Thank you very much for the detailed explanation. The reason for this decision is very understandable. I will adapt our repository implementation accordingly. I didn't realize that long skip distances meant so much effort for the database engine."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa318912b45d36a0984",
    "number": 316,
    "body": "This fix solves the problem of MongoWaitQueueFullException on requests from many threads.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for submitting this pull request.\r\n\r\nServer selection limits the number of threads/tasks that can be waiting for server selection to complete as a protective measure to prevent an unbounded number of threads/tasks from queueing up. This change attempts to circumvent that by putting an unbounded queue in front of server selection (indirectly, since it's actually gating access to StartImplicitSession).\r\n\r\nInstead, you can configure a larger value for MaxServerSelectionWaitQueueSize if the default value of 500 is too small for your load."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa418912b45d36a0985",
    "number": 315,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa518912b45d36a0986",
    "number": 314,
    "body": "`BulkWrite` currently enumerates its `requests` param 3 times:\r\n- to check whether it is empty\r\n- to build the bulkwrite operation\r\n- to copy `requests` into the result object\r\n\r\nThat behaviour can be very costly if `requests` represents e.g. a remote db table.\r\n\r\nThis pull requests contains 2 commits:\r\n\r\n- **CSHARP-1378 enumerate bulkwrite request list once**: Simply copies the enumerable to a list once and uses that list everywhere the enumerable was used. Includes a unit test that fails for the case where `BulkWrite`/`BulkWriteAsync` enumerates the enumerable multiple times. \r\n\r\n- **CSHARP-1378 remove extra list copy**: With the above commit `BulkWrite` does one more list copy than in the baseline case. This second commit optimizes that extra copy away because I don't want to worsen performance for cases where `requests` is cheap to enumerate. I put it in a separate commit because you might find avoiding the extra list copy not worth the hassle because \"computers are fast now\".\r\n\r\nSome tests fail in my ad-hoc environment, but then they also fail there without these changes, so that should be ok.",
    "head_branch": "frank-CSHARP-1378",
    "is_a_fork": true,
    "comments": [
      "Thank you for your contribution. This PR was very helpful and excellent starting point for me to fix the original issue in another PR #1298."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa618912b45d36a0987",
    "number": 313,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "We can't make this change because .NET's Decimal type and BSON's Decimal128 type are not the same.\r\n\r\nSee https://jira.mongodb.org/browse/CSHARP-2155 for a fuller explanation."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa718912b45d36a0988",
    "number": 312,
    "body": "### Scenario\r\n\r\nCalling `IMongoDatabase.RunCommandAsync<object>` fails when response contains values with BSON type *Timestamp*. This happens at every request when using replica sets.\r\n\r\nA `FormatException` is thrown saying: *ObjectSerializer does not support BSON type Timestamp*.  \r\nSpecialized serializers (like `BsonTimestampSerializer`) can't be used here, because the anonymous response type doesn't allow class mapping.\r\n\r\n### Solution\r\n\r\nAdd an entry to `ObjectSerializer` type recognition code, in order to support *Timestamp* deserialization.\r\n\r\nThat's already done for other BSON types (binary, int, decimal, array, string, objectId, etc.)\r\n\r\n### Notes\r\n\r\n[CSHARP-1162](https://jira.mongodb.org/browse/CSHARP-1162) says that Timestamp class is for internal use only, this may be the reason why it's not supported. This PR does not aim to change that.\r\n\r\nNevertheless, `RunCommandAsync` (and possibly other methods) just fail with collections that contain a Timestamp value. This is often out of programmers control, and the proposed change may be a painless solution.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "We are also experiencing the exact same bug - our clients cannot run our application against a replica set. Please merge this PR!",
      "I created a JIRA ticket: [CSHARP-2668](https://jira.mongodb.org/browse/CSHARP-2668)",
      "@udda \r\n\r\nWhat command are you attempting to execute?",
      "@jyemin I don't really remember since it happened over a year ago, but I think that *every* command (not queries) caused the error. There was a field named like `t` or `_ts`, of type `Timestamp`, containing the operation time. Not sure whether it's still there in MongoDB 4.",
      "@udda yes, you're right.  The field is indeed `operationTime` (as well as `$clusterTime.clusterTime`)",
      "I'm experiencing the same issue, wondering what's stopping this from being merged?",
      "Hello @idanbd, \r\nUnfortunately this PR won't fix the failing `IMongoDatabase.RunCommandAsync<object>`, as` BsonType.Binary` is not supported by `ObjectSerializer` as well. The reason for this is that `ObjectSerializer` initially was not designed to support types which don't have direct mapping to .NET types.\r\nUsing `IMongoDatabase.RunCommandAsync<BsonDodocument>` instead should resolve this issue.",
      "As noted above, simply adding `BsonTimestamp` support (which is intended as an internal type) does not fully address this issue. The recommended approach is to use `IMongoDatabase.RunCommandAsync<BsonDocument>`. Please comment on [CSHARP-2668](https://jira.mongodb.org/browse/CSHARP-2668) if you have additional input. Thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa818912b45d36a0989",
    "number": 311,
    "body": "",
    "head_branch": "issue-CSHARP-2132",
    "is_a_fork": true,
    "comments": [
      "Thanks for the pull request, but it turns out that this change is not needed. \r\n\r\nSee the comments in:\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-2132"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faa918912b45d36a098a",
    "number": 310,
    "body": "Details are here:\r\nJIRA: https://jira.mongodb.org/browse/CSHARP-2127\r\nStackOverflow: https://stackoverflow.com/questions/47781059/c-sharp-mongodb-tries-to-convert-enumuint32-to-int32-and-crashes\r\n\r\nThis change enables the use of the `AllowOverflow` property of the `BsonRepresentation` attribute on Enum properties.\r\n\r\nAnd, yes, having UInt32s as the underlying type of an Enum certainly seems like an unusual case to start with. The fix is pretty little invasive, though, so I thought I'd create this PR for it.",
    "head_branch": "UIntEnums",
    "is_a_fork": true,
    "comments": [
      "Thanks @dnickless! Fixed [here](https://github.com/mongodb/mongo-csharp-driver/commit/3592cf28b7de3c007cb74370ea764d0e2a5c3f6d)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faaa18912b45d36a098b",
    "number": 309,
    "body": "As part of https://jira.mongodb.org/browse/DRIVERS-407, support for server versions below 2.6 was removed in https://github.com/mongodb/mongo-csharp-driver/commit/c1f4e87edb410862f87976231bb0aac58de09856. \r\n\r\nI thought it might be helpful to also add this to the release notes, as it seems to be a breaking change.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing support for MongoDB 2.6 in v2.5 release notes\n\nAs part of https://jira.mongodb.org/browse/DRIVERS-407, support for server versions below 2.6 was removed in https://github.com/mongodb/mongo-csharp-driver/commit/c1f4e87edb410862f87976231bb0aac58de09856"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faab18912b45d36a098c",
    "number": 308,
    "body": "Issue: https://jira.mongodb.org/browse/CSHARP-2123",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for the pull request.\r\n\r\nMerged and then modified slightly, primarily to round up instead of down and to add more testing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faad18912b45d36a098d",
    "number": 307,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faae18912b45d36a098e",
    "number": 306,
    "body": "Issue: https://jira.mongodb.org/browse/CSHARP-2114.\r\n\r\n[Indexes_List_should_execute_a_ListIndexesOperation](https://github.com/mongodb/mongo-csharp-driver/blob/1c20602fb9e95e393c452e91109caa467c541c84/tests/MongoDB.Driver.Tests/MongoCollectionImplTests.cs#L1721) (test that checks \"list indexes\" operation) works after my changes.",
    "head_branch": "CSHARP-2114-list-of-indexes-not-only-from-primary",
    "is_a_fork": true,
    "comments": [
      "As the linked Jira issue CSHARP-2114 has been closed works-as-designed, we don't plan to pursue this change.  "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faaf18912b45d36a098f",
    "number": 305,
    "body": "The entire issue is documented here:\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-2096\r\n\r\n With this fix, the EnumRepresentationConvention should now work as expected.",
    "head_branch": "EnumRepresentationConvention_ForCollections",
    "is_a_fork": true,
    "comments": [
      "Any progress on getting this merged?  ",
      "Hi @narciero, \r\nThank you for your interest in this ticket and PR! We are currently focusing on 4.2 features and will get back to investigating this ticket and PR as soon as 4.2 work slows down. ",
      "@vincentkam, any updates on that? it was created in 2017!",
      "Just ran into this problem as well. You are at 4.4, any news on this issue?\r\n\r\nPlease think about prioritising this. The fact that enums in a collection do not get serialized as strings, despite the `EnumRepresentationConvention(BsonType.String)` being set, is extremely counterintuitive. This pull request shouldn't be considered a feature - or \"improvement\" as [CSHARP-2096](https://jira.mongodb.org/browse/CSHARP-2096) calls it - it should be considered a bugfix. Alternatively, this should be closed and the `EnumRepresentationConvention(BsonType.String)` should be removed from the codebase, so the users know that this driver can't serialize enums as strings.\r\n\r\n",
      "We acknowledge that this PR has been sitting idle for a considerable amount of time and appreciate everyone's continued interest in these improvements to the MongoDB .NET Driver. We are investing in improvements to make serialization behaviour in the driver more intuitive and less error prone. This is an example where the driver does not behave as expected necessarily.\r\n\r\nIf you enable the `EnumRepresentationConvention` or annotate an enum property/field with `[BsonRepresentation(BsonType.String)]`, the enum is serialized as its string representation rather than its integer representation as expected. This PR is meant to address the case where you are serializing a collection of enums and wish each one serialized as a string. Unfortunately the PR only works for `List<T>` and `Dictionary<K,V>`. It does not work for arrays of enums (`T[]`), other collection types (queues, stacks, linked lists, etc.), nor collection interfaces (`IList<T>`, `IDictionary<K,V>`, `IEnumerable<T>`, `IQueryable<T>`, `ICollection<T>`, etc.). Even if we supported all these collection types and interfaces, it would not work for custom collection types.\r\n\r\nRather than focusing on enums, let's consider the more general case of serialization conventions on collection types. The .NET Driver does not currently support the following either:\r\n\r\n```\r\n[BsonRepresentation(BsonType.String)]\r\npublic IEnumerable<ObjectId> ObjectIdCollection { get; set; }\r\n```\r\n\r\nWhat is the expected result? Should each item in the collection be serialized as a string or should the entire collection be serialized as a single comma-separated string?\r\n\r\nAnother case to consider is that of `Dictionary<K,V>`:\r\n\r\n```\r\n[BsonRepresentation(BsonType.String)]\r\npublic Dictionary<ObjectId, int> SomeDictionary { get; set; }\r\n```\r\n\r\nShould both keys and values be serialized as strings? Should we add a `Target` parameter to specify what it applies to? Do we allow applying two `BsonRepresentationAttributes`, one for `Key` and another for `Value`?\r\n\r\nThe original problem of serializing collections of enums as their string representation can be solved either with a custom serializer on the containing type or for the enum itself. The other two mentioned cases can be solved similarly.\r\n\r\nWe realize that this is not an ideal solution and we would like to provide better serialization semantics in the driver. We are reviewing serialization feature requests and bugs in an attempt to implement a more consistent and holistic approach to address problems such as this. We appreciate your patience and continued feedback on [CSHARP-2096](https://jira.mongodb.org/browse/CSHARP-2096).",
      "I just ran in this problem today...  2024"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab018912b45d36a0990",
    "number": 304,
    "body": "There was some reflection code in the `Deserialize` method which would get called repeatedly. But since the ClassMap is frozen (gets checked in the constructor) it should be sufficient to execute this code once upon construction of the `BsonClassMapSerializer` and then use the cached value.",
    "head_branch": "BsonClassMapSerializer_Reduce_Reflection",
    "is_a_fork": true,
    "comments": [
      "Thanks @dnickless for your contribution. This file has changed a few times since this PR, and this fix is not relevant anymore."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab118912b45d36a0991",
    "number": 303,
    "body": "This PR implements https://jira.mongodb.org/browse/CSHARP-1999.\r\n\r\n´BsonMemberMap´ now supports a `SetUseExistingInstance(bool useExistingInstance)` method (there's also a convention and an attribute) which can be used in order to tell the driver to deserialize a document directly into an existing instance (either straight from the root level or individually for a configured property).\r\n\r\nThis allows for some greater level of flexibility around entity design:\r\n\r\n- Readonly auto-initialized properties can now be populated by the driver which wasn't possible before:\r\n  - `public List<int> Foo { get; } = new List<int>();`\r\n  - `public SomeType Bar { get; } = new SomeType();`)\r\n- Also, in cases of heavy constructors where the instantiation of an entity type `A` through the driver would immediately trigger the creation of some contained nested instances `B` (and `C` and so on...) as part of a top-level constructor call, superfluous constructor calls can be avoided by reusing the already created instances.\r\n- As a side-product of the implementation, existing instances can now be partially/incrementally populated by the driver (e.g. through `BsonSerializer.Deserialize(bsonReader, existingInstance: existingInstance);`) which may be an interesting feature in some slightly more arcane scenarios:\r\n  - e.g. for entities that need to hold data from multiple source (read: collections/queries)\r\n  - or when a user should be able to populate an entity partially which, however, then needs to be enriched with some fields that are stored in the database.",
    "head_branch": "CSHARP-1999",
    "is_a_fork": true,
    "comments": [
      "I'm waiting for this change to be applied in release. Why it is not marged for such a long time?",
      "Thank you for the PR. Unfortunately the PR changes the internal serialization semantics and could introduce subtle bugs. Additionally there are supported ways of using readonly properties and fields via the use of overloaded constructors. Please see [our analysis and recommendations](https://jira.mongodb.org/browse/CSHARP-1999?focusedCommentId=3464070&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-3464070) in the associated JIRA ticket."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab218912b45d36a0992",
    "number": 302,
    "body": "$lookup MSDN reference for GroupJoin points to OrderBy instead of GroupJoin LINQ methods",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[Pushed](https://github.com/mongodb/mongo-csharp-driver/commit/fc6f3ee247e43224e9513a1fc0a4bf26c748550f)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab318912b45d36a0993",
    "number": 301,
    "body": "This pull request fills in most of the missing examples in the C# driver documentation and also fixes a batch of typos that I spotted.\r\n\r\n@shannonbradshaw",
    "head_branch": "SKUNK-DOCS-DG-2017",
    "is_a_fork": true,
    "comments": [
      "[Pushed](https://github.com/BorisDog/mongo-csharp-driver/commit/9e538e2cd6e2ea5f1e1ecf1358ebfe7e963d596a)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab418912b45d36a0994",
    "number": 300,
    "body": "MongoDB.Driver.Core has a dependency on System.Runtime.InteropServices.RuntimeInformation. Updating the Nuget package for the dependency makes it so that MongoDB.Driver.Core will work with Azure Functions.\r\n\r\nThis fixes this issue: https://jira.mongodb.org/projects/CSHARP/issues/CSHARP-2033?filter=allopenissues",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Good evening,\r\nI have issued this pull request to fix the noted issues in the title. Simply updating the dependency will fix the issue for Azure Functions.",
      "Please note: the build failure is not related to this change.",
      "It appears as though this issue is still unresolved. I'm still receiving an exception on both .NET 4.7.1 and .NET 4.7.2 with the MongoDB packages (v2.7.0)\r\n\r\n```csharp\r\nSystem.IO.FileNotFoundException\r\n  HResult=0x80070002\r\n  Message=Could not load file or assembly 'System.Runtime.InteropServices.RuntimeInformation, Version=4.0.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n  Source=MongoDB.Driver.Core\r\n\r\nInner Exception 1:\r\nFileNotFoundException: Could not load file or assembly 'System.Runtime.InteropServices.RuntimeInformation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n```",
      "Do you have these assembles specified in your app.config file as an\nassembly binding? If so, remove that binding.\n\nOn Wed, Oct 3, 2018 at 8:38 PM Atilla Lonny <notifications@github.com>\nwrote:\n\n> It appears as though this issue is still unresolved. I'm still receiving\n> an exception on both .NET 4.7.1 and .NET 4.7.2 with the MongoDB packages\n> (v2.7.0)\n>\n> System.IO.FileNotFoundException\n>   HResult=0x80070002\n>   Message=Could not load file or assembly 'System.Runtime.InteropServices.RuntimeInformation, Version=4.0.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\n>   Source=MongoDB.Driver.Core\n> Inner Exception 1:FileNotFoundException: Could not load file or assembly 'System.Runtime.InteropServices.RuntimeInformation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mongodb/mongo-csharp-driver/pull/300#issuecomment-426866450>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABu24ViSi8LnjYjWw6d8pWtM9n7oHCbQks5uhXTBgaJpZM4QNtCL>\n> .\n>\n",
      "@chrisdrobison I don't. \r\n\r\nhttps://i.imgur.com/r6Ba27z.png\r\nhttps://i.imgur.com/GM9btWr.png\r\n\r\nI tried removing the reference to that as well, and it still results in the exception.",
      "So I have only ever run into that specific exception when I either have an incorrect assembly binding or one is missing.",
      "The linked Jira issues have been closed and released, so I'm going to close out this pull request as well."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab518912b45d36a0995",
    "number": 299,
    "body": "",
    "head_branch": "CSHARP-2077",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab618912b45d36a0996",
    "number": 298,
    "body": "This PR should fix an issue where the following code this trigger a MongoException \"MongoServer.Create has already created XXX servers which is the maximum number of servers allowed.\"\r\nThe Equals method of MongoClientSettings/MongoServerSettings does return false even if the settings are the same accross several calls.\r\n\r\n```cs\r\nclass Test\r\n{\r\n    static void ConfigureCluster(ClusterBuilder builder)\r\n    {\r\n        // Do something cool\r\n    }\r\n\r\n    void Test()\r\n    {\r\n        for (int i = 0; i < 200; i++)\r\n        {\r\n            var settings = MongoClientSettings.FromUrl(MongoUrl.Create(\"XXX\"));\r\n            settings.ClusterConfigurator = ConfigureCluster;\r\n\r\n            var client = new MongoClient(settings);\r\n            var server = client.GetServer();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## ClusterConfigurator delegate comparison\r\n\r\nClusterConfigurator is a delegate. According to C# spec 7.10.8, the == operator performs some additional checks than ReferenceEquals.\r\nIf we use the same static method as callback, Equals should return true.\r\nThe sample above illustates this very case.\r\n\r\n## WriteConcern comparison\r\n\r\nWriteConcern is a class that does not implement == operator.\r\nWe should use object.Equals method in order to compare them, just like ReadConcern.\r\n\r\n## Testing consideration\r\n\r\nThe test is faulty here. It does use the Clone function to perform various Equality tests. This Clone method does copy all fields references instead of a deep copy.\r\nSince Clone is part of the public interface, we can't modify it to deep copy as it would change the current behavior.\r\nI added a few lines to deep clone the MongoClientSettings/MongoServerSettings in order to make the first test fail without my PR.",
    "head_branch": "client-settings-equality",
    "is_a_fork": true,
    "comments": [
      "AppVeyor CI seems to fail itself, not related to this PR:\r\n\r\n![image](https://user-images.githubusercontent.com/13765215/31777348-d573e57c-b4bb-11e7-9ec0-89a57fa21b35.png)\r\n\r\nAlso, please note that this PR would need to be backported to all maintenance branches.\r\nI use 2.2.4 driver as NuGet package.",
      "First of all, I apologize for leaving this PR sitting unattended for so long.  Unfortunately, it's no longer mergeable due to conflicts.\r\n\r\nIf anyone is still interested in pursuing this change, please open a Jira issue at https://jira.mongodb.org/projects/CSHARP to start a discussion on whether we would want to consider this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab718912b45d36a0997",
    "number": 297,
    "body": "Added correct async call when connecting socket asynchronously.\r\n\r\nActually I have a project where with parallel unit testing (xunit) the code has timeout connection. The original code is not so good because it will use a Task.Run to execute the connection, when there is the connectAsync() socket method. Moreover without using the ConfigureAwait(false) there is the possibilty of a deadlock.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I noticed that ALL pull requests are failing builds, you should check and fix the build I suppose.",
      "I experience same issue after migrating project to .net core 2.1. Any idea when this PR can be accepted?",
      "Hello Gian Maria,\r\nThank you so much for your pull request! \r\n\r\nHello Andrii Litvinov and Gian Maria,\r\nWe currently have a fix for this as part of another PR (https://github.com/vincentkam/mongo-csharp-driver/pull/18) that will hopefully be merged no later than the end of the month.",
      "Perfect\n\nIl lun 17 set 2018, 23:53 vincentkam <notifications@github.com> ha scritto:\n\n> Hello Gian Maria,\n> Thank you so much for your pull request!\n>\n> Hello Andrii Litvinov and Gian Maria,\n> We currently have a fix for this as part of another PR (vincentkam#18\n> <https://github.com/vincentkam/mongo-csharp-driver/pull/18>) that will\n> hopefully be merged no later than the end of the month.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/mongodb/mongo-csharp-driver/pull/297#issuecomment-422184259>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAV4kWV1k_zKpPO5Nba4ppIieJx8QUb8ks5ucBnMgaJpZM4P8Uoa>\n> .\n>\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab818912b45d36a0998",
    "number": 296,
    "body": "The default readprefence is primary so that I list collections and indexs on slave database and collection will be fail.\r\nI think collection and index list operation could be just read operation that can be special setting. please consider it, thank you so much.",
    "head_branch": "v2.4.x",
    "is_a_fork": true,
    "comments": [
      "While this is a reasonable idea, the behavior has been specified this way for all of our drivers, and we're unlikely to change it now.  It could also be consider backwards breaking.\r\n\r\nMy apologies for letting this sit so long unattended."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fab918912b45d36a0999",
    "number": 295,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hi @riker09, thanks for the pull request, and also apologies for the long delay.  I've merged it via command line, so I'm going to close this out.\r\n\r\nRegards,\r\nJeff"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faba18912b45d36a099a",
    "number": 294,
    "body": "CSHARP-2043: Added AssumeIndexesExist option to improve robustness of sharded GridFS",
    "head_branch": "NetSpeed45",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fabb18912b45d36a099b",
    "number": 293,
    "body": "",
    "head_branch": "DOCS-8522",
    "is_a_fork": true,
    "comments": [
      "[Pushed to master](https://github.com/mongodb/mongo-csharp-driver/commit/1f2901e01d0264352c51b9079ec56bc632187fb2)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fabc18912b45d36a099c",
    "number": 292,
    "body": "CSHARP-2043: Added SuppressEnsureIndexes option to GridFSBucketOptions.  By default is false and has no impact on any part of the system.  HOWEVER, IT CAN BE A USEFUL OPTION TO HAVE AVAILABLE IN A CLUSTER WHERE GRIDFS COLLECTIONS ARE BEING SHARDED.  \r\n\r\nIf set to true, then suppresses the call to EnsureIndexes which occurs during every GridFS upload call.  Benefit of this suppression is that: 1) EnsureIndexes [effectively] does a count against the fs.files collection, which will a) add latency in a cluster with global shards, b) requires find permission which may not be deisrable in a write-only repository and most importantly c) cause entire cluster to become unavailable if any single shard is unavailable, even if data being saved is not housed in the unavailable shard.  2) Less importantly, EnsureIndexes includes a list index command which implies a higher privilege than is really needed.  If developer is a) confident that GridFS subsystem is properly set up and b) wants to robustify sharded GridFS against one shard being down c) wants keep client permissions to a minimum",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "See comments in JIRA ticket:\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-2043"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fabd18912b45d36a099d",
    "number": 291,
    "body": "update from source",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Closing pull request that looks like it was opened by mistake."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fabf18912b45d36a099e",
    "number": 290,
    "body": "Fixing the summary of both \"GetSerializer\" methods to be coherent with what they actually do. \r\nThey not only gets a registered serializer, but they also ADDs it when it wasn't registered before (behavior I disagree BTW). And it took me a while to find out this was the problem I was facing.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[Pushed](https://github.com/mongodb/mongo-csharp-driver/commit/7945ed58c4ddae5f26ef7fb3b6ebff7f69d1490c)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac018912b45d36a099f",
    "number": 289,
    "body": "NU1605 issue could happen when you test a project that use mongoDB.Driver.Core library",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Can you please merge this pull request to fix NU1605 issue? I can't publish my app which was use net core 2 with MongoDB.Driver 2.4.4",
      "Can you please explain how this change resolves the problem?\r\n\r\nThe existing dependency on System.Runtime.InteropServices.RuntimeInformation is on version >= 4.0.0. Why does that not already work?",
      "@rstam I created [a sample project](https://github.com/BigFishVN/mongo-netcore2-error) to show the errors when used _dotnet --publish -r (Windows RID)_. The NU1605 happens after I referenced [Microsoft.AspNetCore.Authentication](https://github.com/aspnet/Security) **(2.0.0)**. Hope this sample may help to solve the problem.",
      "I found the problem. With Visual Studio 2017, project.json is [no longer available](https://docs.microsoft.com/en-us/dotnet/core/tools/cli-msbuild-architecture). The project properties treat warnings as errors contain NU1605 as default, which you can see in the image below:\r\n![capture](https://user-images.githubusercontent.com/11958787/30842109-31d59596-a2aa-11e7-9847-8d65ba823b92.PNG)\r\nI can bypass this error by select \"None\" and can publish the app. Hope the next version of MongoDB.Driver will remove this warning as default.",
      "Hi @kimiko88 I think we've fixed this in a subsequent release, but if not please open a Jira issue to discuss it further."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac118912b45d36a09a0",
    "number": 288,
    "body": "In this PR I fixed [[CSHARP-2030] Add allowDuplicateElementNames to BsonDocument.Parse](https://jira.mongodb.org/browse/CSHARP-2030).",
    "head_branch": "CSHARP-2030-add-allowDuplicateElementNames",
    "is_a_fork": true,
    "comments": [
      "See the JIRA ticket for the reasoning behind why we don't think this feature should be added.\r\n\r\nThanks for your suggestion."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac218912b45d36a09a1",
    "number": 287,
    "body": "fix by https://jira.mongodb.org/browse/CSHARP-2029",
    "head_branch": "bugfix/CSHARP-2029",
    "is_a_fork": true,
    "comments": [
      "I've been reviewing open PRs, and realize that this duplicates a fix that has since been made in driver.  See https://jira.mongodb.org/browse/CSHARP-2029 for details.",
      "This is not a duplicate.\r\nThere MinConnectionPoolSize was set to 1 to indicate that the maintenance interval is not being used\r\nwith other MinConnectionPoolSize values the effect is preserved, but in this case more parallel connections are required to demonstrate."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac318912b45d36a09a2",
    "number": 286,
    "body": "Replace my email with GitHub profile URL\r\n",
    "head_branch": "my-privacy",
    "is_a_fork": true,
    "comments": [
      "Basically, just got an email from weird guy who decided it's clever thing to just fetch all email addresses from this project's readme and do mass mailing with questions. With this change I hope to minimize such occurrences in future."
    ],
    "commit_messages": [
      "Update README.md\nReplace my email with GitHub profile URL"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac418912b45d36a09a3",
    "number": 285,
    "body": "May I suggest another performance optimization around the hex string to byte array (and back) conversion methods in `BsonUtils`.\r\n\r\nThis change introduces some precalculated jump tables that cost a tiny little bit of memory but give an dramatic boost in performance.\r\n\r\nI have put together a demo solution using Benchmark.NET that proves the correctness and shows the performance improvement here: https://github.com/dnickless/BsonUtilsHexConversionPerformance",
    "head_branch": "ToHexStringPer",
    "is_a_fork": true,
    "comments": [
      "While I was originally putting together that code it had not been optimized yet. So after comparing the optimized version that does exist right now to my suggestion here, the increase in performance is not quite as \"dramatic\" anymore as I wrote in the original comment. However, it's probably still big enough to justify a PR.\r\n\r\nHere are the CLR results:\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.1, OS=Windows 7 SP1 (6.1.7601.0)\r\nIntel Core i7-6700 CPU 3.40GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\nFrequency=3328369 Hz, Resolution=300.4475 ns, Timer=TSC\r\n  [Host]     : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3133.0\r\n  Job-QANSFC : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit LegacyJIT/clrjit-v4.7.3133.0;compatjit-v4.7.3133.0\r\n  Job-EEIESK : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 32bit LegacyJIT-v4.7.3133.0\r\n  Job-DZQHCN : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3133.0\r\n\r\nRuntime=Clr  \r\n\r\n```\r\n| Method |       Jit | Platform |       Mean |     Error |     StdDev |     Median | Rank |\r\n|------- |---------- |--------- |-----------:|----------:|-----------:|-----------:|-----:|\r\n|    New | LegacyJit |      X64 |   916.9 ns | 18.339 ns |  41.393 ns |   906.2 ns |    1 |\r\n|    Old | LegacyJit |      X64 | 1,456.7 ns | 58.015 ns | 171.060 ns | 1,401.5 ns |    4 |\r\n|    New | LegacyJit |      X86 | 1,419.3 ns | 43.761 ns | 122.710 ns | 1,390.9 ns |    4 |\r\n|    Old | LegacyJit |      X86 | 1,729.0 ns | 30.519 ns |  27.055 ns | 1,716.3 ns |    5 |\r\n|    New |    RyuJit |      X64 | 1,037.5 ns |  5.153 ns |   4.820 ns | 1,036.8 ns |    2 |\r\n|    Old |    RyuJit |      X64 | 1,291.5 ns |  4.688 ns |   4.156 ns | 1,291.1 ns |    3 |\r\n\r\nAnd this is on .NET Core 2.1\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.1, OS=Windows 7 SP1 (6.1.7601.0)\r\nIntel Core i7-6700 CPU 3.40GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\nFrequency=3328369 Hz, Resolution=300.4475 ns, Timer=TSC\r\n.NET Core SDK=2.1.402\r\n  [Host]     : .NET Core 2.1.4 (CoreCLR 4.6.26814.03, CoreFX 4.6.26814.02), 64bit RyuJIT\r\n  Job-BYAUMP : .NET Core 2.1.4 (CoreCLR 4.6.26814.03, CoreFX 4.6.26814.02), 64bit RyuJIT\r\n\r\nRuntime=Core  Toolchain=.NET Core 2.1  \r\n\r\n```\r\n| Method |     Mean |     Error |    StdDev |   Median | Rank |\r\n|------- |---------:|----------:|----------:|---------:|-----:|\r\n|    New | 1.157 us | 0.0230 us | 0.0384 us | 1.136 us |    1 |\r\n|    Old | 1.318 us | 0.0110 us | 0.0103 us | 1.316 us |    2 |\r\n",
      "Thanks for the PR and sorry it was not looked at in a timely manner.\r\n\r\nWe will be moving to .NET 5 in an upcoming release and will use the Convert.ToHex methods that offer further performance gains."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac518912b45d36a09a4",
    "number": 284,
    "body": "Render correct discriminator when using OfType<>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This is an attempt to address the bug reported here: [CSHARP-2009](https://jira.mongodb.org/browse/CSHARP-2009)\r\n\r\nPlease pay attention to the two added unit tests that exposes the problem.",
      "@craiggwilson This addresses the \"corner-case\" where an upsert leads to an insert and the full discriminator convention is in use. I tried to explain this in the bug report I filed ([CSHARP-2009](https://jira.mongodb.org/browse/CSHARP-2009)). But it was files prior to my attempt of actually trying to fix it.",
      "Just hit this bug and honestly and I am having a hard time rewriting our collection code not to use `OfType<>`. We use upserts everywhere and read back the modified document, so type safety is quite useful in this case.\r\n\r\nAny chance of this PR making it into the product any time soon?",
      "@MarLoe thanks for bringing this issue to our attention!\r\nWe've fixed this issue [here](https://github.com/mongodb/mongo-csharp-driver/commit/2de35a4c9e6f5bcb76ec1bc63a242c4333c4d276)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac618912b45d36a09a5",
    "number": 283,
    "body": "Again just some algorithmic optimization to make things faster. Mind you, this will have a really tiny effect only... I just avoided some checks that weren't required in the LookupActualType method and cached one reflection call.",
    "head_branch": "BsonSerializer_Pointless_Microoptimization",
    "is_a_fork": true,
    "comments": [
      "Thanks @dnickless, \r\nIn addition @DmitryLukyanov comment, same change can be applied to lines [401](https://github.com/mongodb/mongo-csharp-driver/blob/5672935b662a10d85cc4eb24e7b7a3e34803bc98/src/MongoDB.Bson/Serialization/BsonSerializer.cs#L401) -[363](https://github.com/mongodb/mongo-csharp-driver/blob/5672935b662a10d85cc4eb24e7b7a3e34803bc98/src/MongoDB.Bson/Serialization/BsonSerializer.cs#L363)",
      "Jira ticket: CSHARP-3324",
      "Thanks @dnickless! Merged [here](https://github.com/mongodb/mongo-csharp-driver/commit/d74848d44e045e95b4f46e48bd05ef13b49b3001)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac718912b45d36a09a6",
    "number": 282,
    "body": "The `BsonClassMapSerializer.DeserializeClass(BsonDeserializationContext context)` method contained code to handle two basic cases depending on the value of `_classMap.HasCreatorMaps`: The deserialization using a `Dictionary<string, object>` and the \"standard\" deserialization. By introducing a strategy pattern I could reduce branching (minor performance gain in theory but potentially wiped out due to additional method calls, I get varying results...) and refactor the code into a more OO kind of layout.",
    "head_branch": "BsonClassMapSerializer_Refactor_to_OO",
    "is_a_fork": true,
    "comments": [
      "I just rebased and optimized the suggested refactoring. Also, there now is some performance-relevant change (less repeated usage of reflection) included which - should you wish not to merge the refactoring part - could be applied to the current code base separately.",
      "Hi @dnickless, thank you for this architectural improvement suggestion.\r\nWe are going to make some major refactoring in this area in scope of improving serialization epic [CSHARP-3230](https://jira.mongodb.org/browse/CSHARP-3230), and unfortunately the proposed changes don't align with the current roadmap.\r\nTherefore we are closing this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac818912b45d36a09a7",
    "number": 281,
    "body": "This change is too trivial to even write about it. ;)\r\n\r\nThere was some reflection code in the `Deserialize` method which would get called repeatedly. But since the ClassMap is frozen (gets checked in the constructor) it should be sufficient to execute this code once upon construction of the Serializer and then use the cached value.",
    "head_branch": "BsonClassMapSerializer_Reduce_Reflection",
    "is_a_fork": true,
    "comments": [
      "Git confuses the hell out of me. Will try again getting this request right..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fac918912b45d36a09a8",
    "number": 280,
    "body": "Hi there\r\n\r\nThis pull request doesn't change an awful lot in a sense that the executing code is still almost identical to before. Except, with this change, there is less branching going on in the `GetChild(byte keyByte)` method in the `BsonTrie` type. This results in a small performance improvement during deserialization. Also, the longer the field names are that someone deals with the more this improvement will be noticeable.\r\n\r\nSo what has been changed? The old `BsonTrie` node implementation had a bunch of `if` checks in `GetChild(byte keyByte)` and `AddChild(BsonTrieNode<TValue> child)` which would always differentiate between three cases:\r\n1) a node that does not have any child (a leaf node)\r\n2) a node that has exactly one child (introduced as a performance improvement)\r\n3) a node with more than one child.\r\n\r\nWhile the `AddChild(BsonTrieNode<TValue> child)` method is not relevant in terms of performance since it doesn't get called anymore once the class maps are frozen, the `GetChild(byte keyByte)` method is absolutely crucial during deserialization as it gets called once per every field found in the input stream.\r\n\r\nIn order to get rid of those `if` statements, I have now extracted the existing code into an OO layout where we now have\r\n1) a `BsonTrieLeafNode` type (representing case 1),\r\n2) a `BsonTrieSingleChildNode` type (representing case 2) and\r\n3) a `BsonTrieMultipleChildrenNode` (representing case 3).\r\n\r\nWithin the new equivalent of each particular `GetChild` method inside each of these three types (now called `TryGetChild(byte keyByte, out BsonTrieNodeBase<TValue> child)`, another performance improvement introduced in the second check-in) there is next to no branching happening anymore which is why we are faster during deserialization.\r\n\r\nAs a little gift on top, the memory footprint of the BsonTrie gets smaller in total, too, since each of the three new types only has the fields that it really needs.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Riiiight, wait a second. Something still seems to be wrong. I'll fix that and see if the performance still looks so much better.",
      "Damn, I just fixed the issue in the code and there goes my and utterly naive hope of improving performance majorly... Still, performance and also memory usage are a little bit better than before plus we have OO code now instead of if/else if/else Spaghetti - but probably a bit harder to understand, too."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faca18912b45d36a09a9",
    "number": 279,
    "body": "",
    "head_branch": "bugfix/gridFsSeek",
    "is_a_fork": true,
    "comments": [
      "Merged manually.  Thanks for the pull request.",
      "Always happy to help! ;)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620facb18912b45d36a09aa",
    "number": 278,
    "body": "Hello there,\r\n\r\nI've changed invocation of method Take by method Count. This will prevent from unnecessary document deserialization.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Any updates?",
      "Thank you for submitting the request. It seems like this change requires counting all the documents that match which not be efficient. Therefore we are closing the pull request but keeping the ticket open."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620facd18912b45d36a09ab",
    "number": 277,
    "body": "probably a typo",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620face18912b45d36a09ac",
    "number": 276,
    "body": "Getting only the public properties of an instance, declared on current hierarchy level.\r\nOtherwise, properties of base class will be selected and mapped, which leads to exception when call AutoMap on inherited classes",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hi @sad-whale \r\n\r\nFirst of all, I apologize for letting this set unattended for so long.  \r\n\r\nIf you're still interested in pursuing this change, please open a Jira issue at https://jira.mongodb.org/projects/CSHARP to discuss, referencing this PR.  Until then, I'm going to close this out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620facf18912b45d36a09ad",
    "number": 275,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you for submitting this pull request. \r\n\r\nThe file you have edited is a generated file. The fix needs to be made in the source file:\r\n\r\nmongo-csharp-driver\\Docs\\reference\\content\\reference\\driver\\crud\\linq.md \r\n\r\non the master branch.\r\n\r\nLet me know if you wish to submit a new pull request. If not I could just make the one line fix myself."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad018912b45d36a09ae",
    "number": 274,
    "body": "https://jira.mongodb.org/browse/CSHARP-1943",
    "head_branch": "culture-tests",
    "is_a_fork": true,
    "comments": [
      "Any chances this is going to be merged? It's a trivial fix that makes tests pass on machines with non-\"en-US\" locale.",
      "Hey @onyxmaster - apologies that we haven't gotten to this yet.  Understood that it's a very tiny patch, but right now the team is extremely small and trying to focus every moment it has on getting the C# driver up to parity with the upcoming 4.2 server release.  Once that's complete we'll have the breathing room to step back and start working on our PR queue.\r\n\r\nI know it's probably not the answer you want to hear, so we appreciate your understanding about our capacity at the moment.  And at the very least we're trying to do better at engaging and giving answers as soon as possible.",
      "Rebased and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad118912b45d36a09af",
    "number": 273,
    "body": "https://jira.mongodb.org/browse/CSHARP-1942",
    "head_branch": "reduce-allocations",
    "is_a_fork": true,
    "comments": [
      "Thanks @onyxmaster for this contribution.\r\nThe similar optimization in BsonWriter.cs is applied [here](https://github.com/BorisDog/mongo-csharp-driver/commit/7c3c5caf53366c16df1bf0108e20b674c0b5647f).\r\n\r\nThe optimization in BsonSerializerRegistry.cs looks good. Could you please rebase and leave the BsonSerializerRegistry.cs changes?",
      "Messed up the rebase at first, but I think I got it right the second time.",
      "[EG](https://evergreen.mongodb.com/version/5fff419fa4cf4737acf6aeee) (Internal link)",
      "Thanks @onyxmaster! Merged [here](https://github.com/mongodb/mongo-csharp-driver/commit/3c647cef34cbde016aa91b41499e041d68ef93df)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad218912b45d36a09b0",
    "number": 272,
    "body": "update from source",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad318912b45d36a09b1",
    "number": 271,
    "body": "Remove cloning of the certificates, as this was problematic as the private key is not included in the RawData of a cert and a cert cannot always be cloned in a deep manner (if it is non exportable)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I've tested this on both a net462 client running on Windows and a netstandard1.6 client running on Linux. Both worked fine against a mongodb with certificates."
    ],
    "commit_messages": [
      "CSHARP-1914 Remove cloning of the certificates, as this was problematic as the private key is not included in the RawData of a cert and a cert cannot always be cloned in a deep manner (if it is non exportable)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fad418912b45d36a09b2",
    "number": 270,
    "body": "correct the misspelled word",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad518912b45d36a09b3",
    "number": 269,
    "body": "https://jira.mongodb.org/browse/CSHARP-1909",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@craiggwilson Hey is there any chance that this can get reviewed and merged. It has been over a year with no updates.",
      "Thanks for the PR. I'm not active on this project anymore. @rstam can help you out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad618912b45d36a09b4",
    "number": 268,
    "body": "https://jira.mongodb.org/browse/CSHARP-1906\r\n\r\nThis pull request adds the support of case insensitive search using $in clause in Linq expressions like it works for general equal clause. For example it might be done in this way:\r\n\r\nvar goodValues = new string[] { ... }\r\nvar query = collection.AsQueryable<T>()\r\n    .Where(i => goodValues.Contains(i.SomeField.ToLower()));\r\n\r\nRight now it's only possible to specify general values in the array and is not possible to specify regex values for case insensitive search. General equal clause suports it via ToLower() etc methods, but the driver throw an exception if there is a call of .ToLower() method inside the array.Contains() method in .Where() expression.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Does anybody in MongoDB community check incoming pull requests? It's been half a year: no comments, no review, nothing. ",
      "@craiggwilson @rstam could you please look at the pull request?",
      "Bueler....... Bueler.....\r\n\r\nThis would be nice to have merged in.",
      "Hello, \r\nare there some news about that request?",
      "hi there do you have any solution for this problem? unbelievable I try it with 8 ways and didn't work",
      "In 2021 this is still a problem, what is need to be done to get this merged? A lot of people in forums is asking about this feature. I would be glad to help fixing any code or conflict.",
      "Please see [this JIRA comment](https://jira.mongodb.org/browse/CSHARP-1906?focusedCommentId=4043830&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-4043830) for an update on the current status.\r\n\r\nTL;DR - A new LINQ provider is nearing completion which fixes this problem and many others."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad718912b45d36a09b5",
    "number": 267,
    "body": "In current project we store additional properties of entity in Dictionary<string, object> \r\nwhen try to search through collection with expression for instance: x => (int) x.W[\"one\"] == 1\r\nit's being converted to query: \"{'one': 1}\"\r\nbut should be: \"{'W.one': 1}\"\r\nThe root cause is type casting.\r\n\r\nIt works on driver's version 2.2.3, but since 2.2.4 we have issue, described above",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @SadKirK \r\n\r\nFirst of all, I apologize for letting this PR sit so long unattended.\r\n\r\nIf you're still interested in pursuing this issue, the next step wold be to open a Jira issue at https://jira.mongodb.org/projects/CSHARP to discuss whether this is a change we should consider.  If you decide to do so, please include a link to this PR.  Until then, I'm going to close this out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad818912b45d36a09b6",
    "number": 266,
    "body": "Pull request fixes the issues described in CSHARP-1894.\r\n\r\nAdded some unit tests that demonstrate user-defined type casting and primitive types implicit conversion.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Sorry to leave this sitting for so long.  As CSHARP-1894 has been fixed and released, this PR is no longer relevant, so I'm going to close it out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fad918912b45d36a09b7",
    "number": 265,
    "body": "As few changes as possible to accomplish the same functionality without using those parts of System.Runtime.InteropServices.RuntimeInformation that will reference ntdll.dll",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This is a blocker for any folks using Mono, any ETR for getting this merged in and released?",
      "Agree with @G3N7, this is a blocker. A merge and release would be very much appreciated. ",
      "Simple change and 1 less dependency. Fixes mono compatibility (even if its not officially tested)",
      "After succesfully setting up docker with mono, I am stuck with this problem. Merging any time soon?",
      "It has been merged. See: https://jira.mongodb.org/browse/CSHARP-1875\r\n\r\nWe have not yet determined when the next release will be so the change is not yet available on Nuget.",
      "@rstam Thanks for the quick response! For the people still blocked on this issue: just roll back MongoDb driver to 2.3.0 where there is no dependency on System.RuntimeInformation and delete all packages the depend on System.RuntimeInformation and it works (at least on my ubuntu 16.04 + mono 4.6.1.5 inside docker)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fada18912b45d36a09b8",
    "number": 264,
    "body": "There is no way to determine whether a serialized in registered in the registry.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I'm going to close this PR since there is no linked Jira issue where the merits of the change was discussed, as is our policy.  If anyone is still interested in pursuing this, please open a Jira to start the discussion."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fadb18912b45d36a09b9",
    "number": 263,
    "body": "I'm trying to deserialize entire document that contains polymorphic collection to dynamic object.\r\nAnd I expect that my collection will contain dynamic objects but I've got concrete types.\r\n\r\nMaybe you would suggest better approach how to solve the issue.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fadc18912b45d36a09ba",
    "number": 262,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fadd18912b45d36a09bb",
    "number": 261,
    "body": "Remove an extra \")\" in the commands to create filters for DeleteOne and DeleteMany, which causes syntax errors.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fade18912b45d36a09bc",
    "number": 260,
    "body": "Hi!\r\n\r\nIt's a very simple improvement.\r\n\r\nLet's say we need to serialize a class like this:\r\n\r\n```\r\npublic class Customer\r\n{\r\n       public string Id { get; set; }\r\n       public string TIN { get; set; }\r\n}\r\n```\r\n\r\nCurrent `CamelCaseElementNameConvention` will serialize `Customer.TIN` as `tIN` while it should be just `TIN`.\r\n\r\nIn summary, I would say that if a property is in capital letters **it should mean that it's an *acronym*** (or leaving a property in capital letters is the intended behavior).\r\n\r\n## Solution\r\n\r\nMy proposed solution is a new `else if` in the whole convention code:\r\n\r\n```\r\nelse if (memberName == memberName.ToUpper())\r\n{\r\n        return memberName;\r\n}\r\n```\r\n\r\n---\r\n\r\nThank you in advance and I'll look forward for your comments!",
    "head_branch": "leave-element-name-when-all-caps-camelcase-convention",
    "is_a_fork": true,
    "comments": [
      "This is a good idea, but the problem is that it breaks compatibility with existing code (or data).\r\n\r\nFor your purposes you could either write your own convention or occasionally annotate a property using [BsonElement(\"TIN\")] to override the default element name when necessary.",
      "@rstam  Uhm, yes. You're right about the backwards compatibility.\r\n\r\nBTW, I can update this pull request with a `CamelCaseElementNameConvention` constructor to preserve previous behavior:\r\n\r\n`public CamelCaseElementNameConvention(bool leaveAllCaps = false)`\r\n\r\nAnd the whole `else if ` would look as follows:\r\n\r\n```\r\nelse if (LeaveAllCaps && memberName == memberName.ToUpper())\r\n{\r\n        return memberName;\r\n}\r\n```\r\n\r\nWould be this more acceptable? Let me know what's your opinion to work on the modification.\r\n\r\n> For your purposes you could either write your own convention or occasionally annotate a property using [BsonElement(\"TIN\")] to override the default element name when necessary.\r\n\r\nRight... But it seems like it should be more acceptable that no one would need to decorate all *all caps* cases across an entire project. IMHO, I believe that it's undesirable behavior (trying to turn into camel-case an *all caps* element name)...\r\n\r\n**EDIT**: I didn't see the part of implementing a custom convention. BTW, if we can include something like this as part of the official driver would be great!",
      "@rstam Well, I've already pushed these changes. See the code to review them.",
      "AFAIK, this feature will be rejected and for that reason I'm going to close it. For now, I've duplicated this convention class into a custom one with my addition in my own project... BTW, I still feel that this should come out-of-the-box in the driver. No one expects to get serialized a property name in upper-case like `TIN` as `tIN`...",
      "I wouldn't close this. It seems like a good solution. Arguably, and acronym in all caps should be all lower-case, hence \"tin\" instead of \"TIN\".\r\n\r\nRobert can comment further about anything that needs to be done for the PR though.",
      "@craiggwilson I've re-opened again... ok.\r\n\r\nLet's see what would this change require to get merged!",
      "If we're going to do this we're going to need a JIRA ticket for it.\r\n\r\nhttps://jira.mongodb.org/browse/CSHARP-883 seems related.",
      "I'm going to close this PR since there are merge conflicts and no Jira issue was ever created to continue the discussion.  If anyone is still interested in pursuing this, please open a new Jira issue to continue the discussion."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fadf18912b45d36a09bd",
    "number": 259,
    "body": "The initial problem is that property is nullable.\r\n\r\nIt could be solved by moving from using nullable fields (not sure why it needs to be nullable).\r\nAlmost all overloads of FindAndModify method work properly because specify which version need to be returned.\r\n\r\nObsolete version 'FindAndModifyResult FindAndModify(IMongoQuery query, IMongoSortBy sortBy, IMongoUpdate update)' pretty easy to modify, but it won's solve the problem, because the problem is in 'FindAndModifyArgs' class.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged manually.\r\n\r\nThanks for the pull request.",
      "I was glad to contribute to make things better."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae018912b45d36a09be",
    "number": 258,
    "body": "In case of an unknown BSON type (for example: Undefined), the driver would crash with no way to debug this case if there're a lot of result records.\r\n\r\nThis change now provides the (root-)property that failed deserialization and the previously decoded values (mainly _id) of the document to easily find it.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hi @Sebmaster I apologize for letting this sit for so long with no response.  Typically we require a Jira issue to be created before looking at a PR and perhaps that's why we missed this.  I'm going to close this out because there are now merge conflicts, but if anyone is interested in pursuing this please open a Jira issue to restart discussion."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae218912b45d36a09bf",
    "number": 257,
    "body": "While writing an `ObjectId`-like class for another project (where I needed a time-based identifier, but didn't want to bring dependency on a whole `MongoDB.Bson` package just for `ObjectId`), I was curious about performance of my implementation compared to the reference one.\n\nMy test was like serializing a million of identifiers (as strings), and then parsing them back. Here are my results:\n\n|  | `ObjectId.ToString()` | `ObjectId.Parse()` |\n| --- | --: | --: |\n| MongoDB.Bson (v2.3.0) | 3475ms | 897ms |\n| My (humble) implementation | 87ms | 81ms |\n\nSo this probably looks like a valid reason to make a pull request and improve things a little :) \n\nI'm not sure if it affects other cases where `ObjectId` is serialized, like performance of database responses' deserialization. But shouldn't hurt at least.\n",
    "head_branch": "objectid-performance",
    "is_a_fork": true,
    "comments": [
      "Please ignore the previous comments/closure, was meant for a different PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae318912b45d36a09c0",
    "number": 256,
    "body": "This fix ensures the EnumRepresentationConvention works as expected onNullable enum properties.\r\n\r\nRef: https://jira.mongodb.org/browse/CSHARP-1839\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "A different approach to fix this was committed here:\r\n\r\nhttps://github.com/mongodb/mongo-csharp-driver/commit/4bf62804c4faa566a9242cf99f0240aa62f532b3\r\n\r\nThanks for the bug report and the pull request."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae418912b45d36a09c1",
    "number": 255,
    "body": "Closing bracket in attribute `BsonKnownTypes` was missing in the code examples.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you for the pull request.\r\n\r\nI am closing this request as a duplicate of 277, which I happened to process first."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae518912b45d36a09c2",
    "number": 254,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae618912b45d36a09c3",
    "number": 253,
    "body": "While playing around with some custom serializers and complex classes, I've found a few errors and a bunch of not implemented functions, so I spent an evening trying to make the world a better place :) \n\nHope it will be helpful.\n",
    "head_branch": "better-linq",
    "is_a_fork": true,
    "comments": [
      "Hi @pieceofsummer,\n\nThanks so much for the PR. Couple things I noticed. \n1. For code consistency, we always use braces with conditional statements, even one liners.\n2. There aren't any tests. While I'm sure your implementations are perfect, we really need tests to ensure we don't break them in the future.\n\nIf you could do both those things, we'll look at pulling this in.\nThanks,\nCraig\n",
      "Hi @craiggwilson,\n\n1) No problem. I like short one-liners, but it's not too hard to sacrifice them for the sake of greater good :)\n\n2) I highly doubt they're perfect, but I already was too sleepy to think of how to set up test cluster early in the morning :) I'll add some unit tests later.\n\nThere's also that recent issue with .NET Core when connecting to DNS endpoints on Unix, which makes even existing tests to fail for me… :(\n",
      "@craiggwilson, I'm also a bit confused with the current implementation of math functions. \n\nDocs say almost all math functions (except **$pow** and **$log**, for obvious reasons) take just a single number, but the driver gives them an array (with single number inside). Furthermore, Mongo server accepts both dialects, while being rather strict about other functions' arguments.\n\nCan you please clarify this a little?\n",
      "Formally, the server wants an array as the argument. For single-valued args, they accept just a value without being in an array. I forgot what we currently do, but might as well follow whatever pattern we are currently using. \n",
      "Added some unit tests, hope it's ok now :)\n",
      "This is awesome. We'll discuss and see if there is anything left to do. Might ask you to squash and rebase on master just before the pull to ensure you get credit properly. Will let you know.\n",
      "Should I rebase or close this? \n\nI kinda see `$dateToString` implemented in 79853e2b37ad8c87501799379bb9f7a2a31d9086, do you plan to add other date functions as well?\n",
      "I have made an updated version of this PR: https://github.com/mongodb/mongo-csharp-driver/pull/351 which is based off current master.",
      "Closing as superseded by #351 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae718912b45d36a09c4",
    "number": 252,
    "body": "Fixed a typo in the documentation for the Builders class and for the IMongoDatabase class\n",
    "head_branch": "typo-fix",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae818912b45d36a09c5",
    "number": 251,
    "body": "It all started with one block of code in AuthenticationHelper, when I stumbled upon a GCHandle, which was not needed there. \nThen I've seen different encodings (BSTR/Unicode) when marshalling unmanaged strings… and then I just couldn't stop until I refactored it all.\n",
    "head_branch": "secure-string-cleanups",
    "is_a_fork": true,
    "comments": [
      "@rstam this makes sense, but not the way it is currently implemented. \n\nLines like \n\n```\npasswordBytesHandle = GCHandle.Alloc(passwordBytesHandle, GCHandleType.Pinned);\n```\n\nguard nothing, and the final buffer was never guarded to begin with.\n",
      "Returned pinning back, with all buffers being properly pinned now.\n",
      "I wasn't able to rebase your commit on master because we had done lots of work on a branch that recently got merged into master and we had both edited the same areas of code which resulted in merge conflicts.\n\nWhile I wasn't able to take your commit verbatim I did make somewhat similar changes based on the work you had done (in particular, using Unicode instead of BSTR unmanaged strings and making sure all the buffers are properly pinned and zeroed out).\n\nI also added your name to our contributors list. Thank you very much for your work.\n\nMy changes are on this branch and commit if you want to comment on them:\n\nhttps://github.com/rstam/mongo-csharp-driver/commits/csharp1727\n\nhttps://github.com/rstam/mongo-csharp-driver/commit/bc75e1229e1d614a17984fbb7662e9977dd40dec\n\nThanks again!\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fae918912b45d36a09c6",
    "number": 250,
    "body": "",
    "head_branch": "CSHARP_1704",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faea18912b45d36a09c7",
    "number": 249,
    "body": "I've checked that some IsNotNull checks were missing, so I've added. \n",
    "head_branch": "Patch4",
    "is_a_fork": true,
    "comments": [
      "At this point there are too many merge conflicts to take this further, and in practice I'm not sure the null checks will help in practice.  Closing this out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faeb18912b45d36a09c8",
    "number": 248,
    "body": "Just in case those lists comes null. Only to prevent crashes\n",
    "head_branch": "Oscarbralo-Patch3",
    "is_a_fork": true,
    "comments": [
      "This hasn't been an issue in practice, so I'm going to close this.  If anyone is still interested in this, please open a Jira issue to re-open discussion."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faec18912b45d36a09c9",
    "number": 247,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Could you submit a new or revised pull request based on current master?\r\n\r\nNote the message \"from unknown repository\" above.",
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faed18912b45d36a09ca",
    "number": 246,
    "body": "Some changes in style to make the code clean.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you for your pull request.\n\nSee comments.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faee18912b45d36a09cb",
    "number": 245,
    "body": "Changes:\n\nI've changed the var's, because is not good regarding the performance use var, because you know perfectly what thos functions are returning, so there is no need to let the program, to infere. And return that directly, there is no need to store the hash in a string and then return.\n\nAbout the CamelCase, is the string value was an empty string, the program will crash with an ArgumentOutOfRangeException, so a simple check will fix that part.\n\nAnd at the end, only to standarized, it's cleaner to standarized all the \"\" to String.Empty.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your pull request.\n\nSee the comments for why it is being closed.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faef18912b45d36a09cc",
    "number": 244,
    "body": "Submitting around as build timed out\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "As this change has already been applied in another commit, I'm going to close this out.  Sorry for leaving it sitting for so long."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf018912b45d36a09cd",
    "number": 243,
    "body": "Use compile condition 'NETSTANDARD1_5', fix the api changes according .NET Core.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks for your interest in contributing to the project.\n\nA lot of this work has already been done but has not yet been pushed to master.\n\nI will look over your work to see if there are cases where you have found a better way to support .NET Core than we have.\n",
      "Really glad to here that, expecting the official release.\n",
      "awesome to hear @rstam! As .NET Core has hit RTM now, I am looking forward to this!\n",
      "any \"beta\" package to test?\n",
      "Yes, please try this:\nhttps://www.nuget.org/packages/RaisingStudio.MongoDB.Driver\n",
      "There will also be an official beta soon.\n",
      "@zhongzf Are you able to connect to a replica set? Seeing connection issues on linux:\n\n> A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ...} \n> System.PlatformNotSupportedException: This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.\n\nConnecting directly to a single server via an IP works fine.\n",
      "@ah- see https://github.com/dotnet/corefx/issues/8768\n\nThis can be fixed by doing the DNS.Resolve inside the library and use the Connect(IPAddress) overload instead of the Connect(string).\n",
      "> There will also be an official beta soon.\n\n@rstam any updates on this?\n",
      "> > There will also be an official beta soon.\n> \n> @rstam any updates on this?\n\nLots of progress... you can monitor the status here:\n\nhttps://jira.mongodb.org/browse/CSHARP-1177\n\nWhere you can see most child tasks are resolved or in code review.\n",
      "@rstam - anyway to get access to the nightly builds?  I like being on the bleeding edge and I'm comfortable being an alpha tester.\n",
      "> @rstam - anyway to get access to the nightly builds? I like being on the bleeding edge and I'm comfortable being an alpha tester.\n\nSoon we should be pushing our work to master and you can build the driver yourself from there.\n\nWe also plan to push beta builds to NuGet as soon as possible.\n\nThanks for your interest.\n",
      "Hey @rstam you seriously should consider to leave Jira and move everything here (code, issue, nightly built ...)\n",
      "@rstam The day you committed to master, I have build and created a NuGet package for internal consumption. Have been coding and running our .Net Core project on the Mac since. Good job! Thanks!\n",
      "@tverboon is it in now?\n",
      "@tugberkugurlu yes, it is. Building and packaging works really nice also.\n",
      "2.3.0-beta1 with support for .NET Core has been released via github and NuGet.\n",
      "great, I will give it a go. It looks a bit strange though as it doesn't depend on anything: https://www.nuget.org/packages/MongoDB.Driver.Core/2.3.0-beta1. considering .NET Core has no GAC, I am not sure where it will pull its dependencies.\n\nI haven't tried it so it might be some magic going on somewhere but curious to know.\n",
      "It has probably to with the fact that the nupkg is build with the nuspec.\n\n@rstam: Maybe you should consider building the NuGet package with dotnet pack. I have created MongoDB.Driver.Core.1.0.0.nupkg by copying the project.json from MongoDB.Driver.Core.DotNet to MongoDB.Driver.Core.\n\nFrom that directory you can run:\n`dotnet pack -c release`\n\nThe generated NuSpec file inside the package contains the following dependencies:\n\n```\n    <dependency id=\"MongoDB.Bson.Dotnet\" version=\"[1.0.0, )\" />\n    <dependency id=\"NETStandard.Library\" version=\"[1.6.0, )\" />\n    <dependency id=\"System.Collections.Specialized\" version=\"[4.0.1, )\" />\n    <dependency id=\"System.Diagnostics.TraceSource\" version=\"[4.0.0, )\" />\n    <dependency id=\"System.Net.NameResolution\" version=\"[4.0.0, )\" />\n    <dependency id=\"System.Net.Security\" version=\"[4.0.0, )\" />\n    <dependency id=\"System.Security.Cryptography.Algorithms\" version=\"[4.2.0, )\" />\n    <dependency id=\"System.Security.Cryptography.X509Certificates\" version=\"[4.1.0, )\" />\n    <dependency id=\"System.Security.SecureString\" version=\"[4.0.0, )\" />\n    <dependency id=\"System.Threading\" version=\"[4.0.11, )\" />\n```\n\nOr you can use the generated *.nuspec files in your current build process.\n",
      "Thanks... we are aware of the problem. Didn't know about dotnet pack.  Might need to tweak it a little cause the MongoDB.Bson.Dotnet dependency should be just MongoDB.Bson.  Anyways, we'll figure out the best way to make sure this doesn't happen in the future.\n",
      "About the dependencies of this package....\n\nAssuming I have the following `project.json`:\n\n``` json\n{\n  \"version\": \"1.0.0-*\",\n  \"buildOptions\": {\n    \"emitEntryPoint\": true\n  },\n\n  \"dependencies\": {\n    \"Microsoft.NETCore.App\": {\n      \"type\": \"platform\",\n      \"version\": \"1.0.0\"\n    },\n    \"MongoDB.Driver\": \"2.3.0-beta1\"\n  },\n\n  \"frameworks\": {\n    \"netcoreapp1.0\": {\n      \"imports\": \"dnxcore50\"\n    }\n  }\n}\n```\n\nwith my pointless app of:\n\n``` c#\nnamespace PointlessApp\n{\n    public class Program\n    {\n        public static void Main(string[] args)\n        {\n            var client = new MongoClient();           \n        }\n    }\n}\n```\n\nthis throws an exception of:\n\n```\nSystem.TypeInitializationException: The type initializer for 'MongoDB.Bson.Serialization.BsonSerializer' threw an exception. ---> System.TypeInitializationException: The type initializer for 'MongoDB.Bson.Serialization.CollectionsSerializationProvider' threw an exception. ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.Collections.NonGeneric, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The system cannot find the file specified.\n   at MongoDB.Bson.Serialization.CollectionsSerializationProvider..cctor()\n   --- End of inner exception stack trace ---\n   at MongoDB.Bson.Serialization.BsonSerializer.CreateSerializerRegistry()\n   at MongoDB.Bson.Serialization.BsonSerializer..cctor()\n   --- End of inner exception stack trace ---\n   at MongoDB.Bson.BsonExtensionMethods.ToJson(Object obj, Type nominalType, JsonWriterSettings writerSettings, IBsonSerializer serializer, Action`1 configurator, BsonSerializationArgs args)\n   at MongoDB.Bson.BsonExtensionMethods.ToJson[TNominalType](TNominalType obj, JsonWriterSettings writerSettings, IBsonSerializer`1 serializer, Action`1 configurator, BsonSerializationArgs args)\n   at MongoDB.Bson.BsonDocument.ToString()\n   at System.Text.StringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\n   at MongoDB.Driver.MongoClientSettings.ToString()\n   at MongoDB.Driver.MongoClientSettings.Freeze()\n   at MongoDB.Driver.MongoClient..ctor(MongoClientSettings settings)\n   at PointlessApp.Program.Main(String[] args) in C:\\projects\\git\\AspNetCore\\PointlessApp\\src\\PointlessApp\\Program.cs:line 12}\n```\n\nDoes this package have implied dependencies which I am missing?\nOr is there an unexpected dependency on a .NET Framework package?\n\nSorry, but I'm very new to the C# ecosystem.\n",
      "It's currently getting fixed: https://jira.mongodb.org/browse/CSHARP-1733\n\nFor now, just add the dependencies manually...\n",
      "@craiggwilson thx for getting this out to NuGet 🎉 🎉 \n\nDependency issue seems to be fixed with https://github.com/mongodb/mongo-csharp-driver/commit/dd2b3219e42df1ef3936c212ce2e42c06bf8b265. Are you going to push an update to NuGet with that fix soon?\n",
      "Yup. Gonna try and get one out this week. Probably labeled as an RC.\n",
      "Good.news guys congrats and thanks to all efforts and contributions you\nmade.\n\nOn Tue, Aug 23, 2016, 11:33 PM Craig Wilson notifications@github.com\nwrote:\n\n> Yup. Gonna try and get one out this week. Probably labeled as an RC.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/mongodb/mongo-csharp-driver/pull/243#issuecomment-241820876,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AI2eQE1HOObdez-viQm4z2-h896TIxa6ks5qizX-gaJpZM4I-VKB\n> .\n",
      "@craiggwilson, @rstam is it possible to target `.NETStandard 1.3` or lower?\n",
      "I gave this a shot and hitting some issues while connecting to ``, the code that I am running is here: https://github.com/tugberkugurlu/Identity/blob/e86b6950073877da3ea6f3a4154faf6234d80d46/samples/IdentitySample.Mvc/Startup.cs#L60-L63\n\nI got this error:\n\n```\n      An unhandled exception has occurred: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = WritableServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 } }. Client view of cluster state is { ClusterId : \"1\", ConnectionMode : \"Automatic\", Type : \"Unknown\", State : \"Disconnected\", Servers : [{ ServerId: \"{ ClusterId : 1, EndPoint : \"Unspecified/localhost:27017\" }\", EndPoint: \"Unspecified/localhost:27017\", State: \"Disconnected\", Type: \"Unknown\", HeartbeatException: \"MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server. ---> System.PlatformNotSupportedException: This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.\n         at System.Net.Sockets.Socket.Connect(IPAddress[] addresses, Int32 port)\n         at System.Net.Sockets.Socket.Connect(String host, Int32 port)\n         at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)\n         at System.Threading.Tasks.Task.Execute()\n      --- End of stack trace from previous location where exception was thrown ---\n         at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n         at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n         at MongoDB.Driver.Core.Connections.TcpStreamFactory.<ConnectAsync>d__7.MoveNext()\n      --- End of stack trace from previous location where exception was thrown ---\n         at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n         at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n         at MongoDB.Driver.Core.Connections.TcpStreamFactory.<CreateStreamAsync>d__4.MoveNext()\n      --- End of stack trace from previous location where exception was thrown ---\n         at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n         at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n         at MongoDB.Driver.Core.Connections.BinaryConnection.<OpenHelperAsync>d__48.MoveNext()\n         --- End of inner exception stack trace ---\n         at MongoDB.Driver.Core.Connections.BinaryConnection.<OpenHelperAsync>d__48.MoveNext()\n      --- End of stack trace from previous location where exception was thrown ---\n         at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n         at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n         at MongoDB.Driver.Core.Servers.ServerMonitor.<HeartbeatAsync>d__27.MoveNext()\" }] }.\nSystem.TimeoutException: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = WritableServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 } }. Client view of cluster state is { ClusterId : \"1\", ConnectionMode : \"Automatic\", Type : \"Unknown\", State : \"Disconnected\", Servers : [{ ServerId: \"{ ClusterId : 1, EndPoint : \"Unspecified/localhost:27017\" }\", EndPoint: \"Unspecified/localhost:27017\", State: \"Disconnected\", Type: \"Unknown\", HeartbeatException: \"MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server. ---> System.PlatformNotSupportedException: This platform does not support connecting sockets to DNS endpoints via the instance Connect and ConnectAsync methods, due to the potential for a host name to map to multiple IP addresses and sockets becoming invalid for use after a failed connect attempt. Use the static ConnectAsync method, or provide to the instance methods the specific IPAddress desired.\n   at System.Net.Sockets.Socket.Connect(IPAddress[] addresses, Int32 port)\n   at System.Net.Sockets.Socket.Connect(String host, Int32 port)\n   at System.Net.Sockets.Socket.Connect(EndPoint remoteEP)\n   at System.Threading.Tasks.Task.Execute()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.<ConnectAsync>d__7.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.<CreateStreamAsync>d__4.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.Core.Connections.BinaryConnection.<OpenHelperAsync>d__48.MoveNext()\n   --- End of inner exception stack trace ---\n   at MongoDB.Driver.Core.Connections.BinaryConnection.<OpenHelperAsync>d__48.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.Core.Servers.ServerMonitor.<HeartbeatAsync>d__27.MoveNext()\" }] }.\n   at MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)\n   at MongoDB.Driver.Core.Clusters.Cluster.<WaitForDescriptionChangedAsync>d__44.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.Core.Clusters.Cluster.<SelectServerAsync>d__37.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.Core.Bindings.WritableServerBinding.<GetWriteChannelSourceAsync>d__8.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.Core.Operations.CreateIndexesOperation.<ExecuteAsync>d__15.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.OperationExecutor.<ExecuteWriteOperationAsync>d__3`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.MongoCollectionImpl`1.<ExecuteWriteOperationAsync>d__61`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.MongoCollectionImpl`1.MongoIndexManager.<CreateManyAsync>d__9.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at MongoDB.Driver.MongoIndexManagerBase`1.<CreateOneAsync>d__7.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Dnx.Identity.MongoDB.MongoUserStore`1.<EnsureIndicesCreatedImplAsync>d__53.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Dnx.Identity.MongoDB.MongoUserStore`1.<EnsureIndicesCreatedAsync>d__52.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Dnx.Identity.MongoDB.MongoUserStore`1..ctor(IMongoDatabase database, ILoggerFactory loggerFactory)\n   at IdentitySample.Startup.<>c.<ConfigureServices>b__6_0(IServiceProvider provider) in /Users/foo/apps/Identity/samples/IdentitySample.Mvc/Startup.cs:line 65\n```\n\nAm I doing something wrong or a known thing?\n",
      "BTW, I verified through robomongo that I can connect to `localhost:27017` mongodb instance:\n\n![image](https://cloud.githubusercontent.com/assets/328122/17987785/e730cd26-6b19-11e6-9575-b081e85fa871.png)\n",
      "Oh, a known issue: https://github.com/StackExchange/StackExchange.Redis/issues/463#issuecomment-241256886\n",
      "Also seems to be fixed here: https://github.com/mongodb/mongo-csharp-driver/commit/9c2097f349d5096a04ea81b0c9ceb60c7e1acee4\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf118912b45d36a09ce",
    "number": 242,
    "body": "Adding an overload for AsQueryable to allow the user to specify aggregate options, this is required on a project that I am working on.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf218912b45d36a09cf",
    "number": 241,
    "body": "Fix writing mistake.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks!\n"
    ],
    "commit_messages": [
      "Update expressions.md (#241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf318912b45d36a09d0",
    "number": 240,
    "body": "Solution for https://jira.mongodb.org/browse/CSHARP-1675\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf418912b45d36a09d1",
    "number": 239,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @MaksimSimkin,\n\nI do see the issue. This is only a partial fix though. \n1. The serialize method is still incorrect and doesn't respect the registered serializer.\n2. You've illuminated a whole portion of code that disregards a registered serializer (for instance, if someone registered a custom Int32 serializer).\n\nAlso, I don't believe that serializerRegistry.GetSerializer can ever return null. So, we'll always do this.\n\nI need to talk with my colleague and see what we think about this. Hopefully, users don't encounter this all that often. May I ask why you are using type object at all?\nCraig\n",
      "Hi @craiggwilson \n\nYes, i see, that solution i proposed is just a local fix and should be changed.  Sorry for it, it was really try to solve the problem quick and dirty.  I'l think about better way. \n\nShort description about howe we are using it:\n\nWe are storing in our db the collection of different Metadata objects  (strings, integeres and datetimes)\n\n```\n  public class AttributeValue\n    {\n        public string AttributeKey { get; set; }\n        public string AttributeName { get; set; }\n        public string ValueTypeName { get; set; }\n        public object Value { get; set; }\n    }\n```\n\nSo we have figured out, that what  we are storing in the db is not always the same, we are getting out. Now it's not a production problem,  we have a workaround, using overriden ObjectSerializer:\n\n```\n   public class CustomObjectSerializer : ObjectSerializer\n    {\n        public override object Deserialize(BsonDeserializationContext context, BsonDeserializationArgs args)\n        {\n            var bsonReader = context.Reader;\n\n            var bsonType = bsonReader.GetCurrentBsonType();\n\n            if (bsonType == BsonType.DateTime)\n            {\n                return BsonSerializer.SerializerRegistry.GetSerializer(typeof (DateTime)).Deserialize(context, args);\n            }\n\n            return base.Deserialize(context, args);\n        }\n    }\n```\n",
      "Ok. I'm going to close this PR as it doesn't fix the whole problem. Thanks so much for pointing this out and having a solution at all. It has pointed out an issue we have. Also, your use case sounds fine. I didn't envision anyone doing something like this, but now we know.\n\nCraig\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf518912b45d36a09d2",
    "number": 238,
    "body": "This feature allows consumers of the driver to inject their own object creation mechanism into the BsonClassMap through the ConventionRegistry .  This is useful in scenarios where object creation is delegated to an IOC Container (such as Autofac, etc).  \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi Joe. Thanks so much for this.\n\nMy problem with this, as is, is that it unconditionally uses the function. As you can see, this is relatively simple to write for those users who need something like this. In addition, it's not widely needed. So I'm leaning towards not doing anything here. However, we probably should enhance our documentation or provide an example of how to do this.\n\nThoughts?\nCraig\n",
      "Craig - not sure what you mean by \"unconditionally uses the function\" (I may be missing something obvious).  It will only use the creator supplied in the convention under the same conditions that it would use the compiled expression version in BsonClassMap GetCreator() (which appears to be if there are no creatorMaps defined on the classMap), and if the ConventionPack the Convention is registered with is registered with a filter that maps to the specific type requested.\n\nHowever, I do agree that this is just a more specific version of the DelegateClassMapConvention and really just serves to make it a little more clear how to do this.  However, that fact is also true for all of the other IClassMapConvention implementations.  They could all be replaced with DelegateClassMapConvention at the expense of making it a little less clear how to configure BsonClassMap. \n\nDocumentation or a 'how to integrate an IOC container' would, of course, make everything clearer as well.  Would be happy to write something up.  Where would be the best place to contribute that?\n",
      "Ah yes... you are right about the ConventionPack itself having a type filter.\n\nWhat I was indicating is that this particular class is extremely easy to write, as you noticed, once you know what hooks are necessary. I'm going to close this pull request. I've opened up a JIRA ticket for the documentation example: https://jira.mongodb.org/browse/CSHARP-1672.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf618912b45d36a09d3",
    "number": 237,
    "body": "",
    "head_branch": "v2.2.x",
    "is_a_fork": true,
    "comments": [
      "As CSHARP-1664 has already been fixed and released, I'm going to close this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf818912b45d36a09d4",
    "number": 236,
    "body": "`MongoConnectionStringBuilder` no longer exists. Don't suggest that people can use it.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faf918912b45d36a09d5",
    "number": 235,
    "body": "This attempts to fix the regression from the Driver Version 1.92 for handling Abstract Types within the Linq Statement.\n\nI've added a new Serialization Expression Called AsType. This is inserted when visiting the MemberExpression and wraps around the abstract type with the correct serializer.\n\nWhen the AsType Expression is encountered during processing it returns a FieldExpression with the concrete type Serializer.\n",
    "head_branch": "CSHARP-1542-AbstractTypes-Linq",
    "is_a_fork": true,
    "comments": [
      "Thanks Stephen... I'm going to run some tests to see if this might already be fixed. There were 2 related tickets that might have fixed this (1604 is currently in code review) that might make this unnecessary. If it turns out it's still needed, I'll take a look. Regardless, thank you so much for your effort here. It takes a lot to understand a LINQ implementation and contribute.\n",
      "Hi Stephen, I believe piggy-backing on the fix for [CSHARP-1604](https://github.com/mongodb/mongo-csharp-driver/commit/a06d0319514f213c5b0350d26c0bdd03cef1e6c7) made this simple(https://github.com/mongodb/mongo-csharp-driver/commit/de410dcf378433383e5198265f993fe0328e7a8a). Please let me know if this fixes the issues you were addressing here. \n",
      "Hi Craig,\n\nThanks for looking at this, that certainly does fix the issue much appreciated. \n\nThanks\n\nStephen\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fafa18912b45d36a09d6",
    "number": 234,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi Jake, thanks for the PR. We've merged it in. It'll show up in the 2.2.4 release.\n",
      "@craiggwilson when 2.2.4 is going to be released?\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fafb18912b45d36a09d7",
    "number": 233,
    "body": "Possible alternate is to use the same or similar code as in TypeNameDiscriminator.GetDiscriminator but I've chosen this implementation for independence.\n",
    "head_branch": "CSharp515Tests",
    "is_a_fork": true,
    "comments": [
      "I pulled this pull request, rebased on master and made some minor changes.\n\nFYI to all contributors: make sure your core.autocrlf setting is set to true to ensure that source files are committed to the repository with the proper line endings.\n\nThanks for the pull request!\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fafc18912b45d36a09d8",
    "number": 232,
    "body": "- Fixes regression, now allows serialization of dictionaries that do not have public parameterless constructors\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Commit rebased.\n\nThanks Robert for your time on this.\n",
      "Since CSHARP-1447 has been fixed and released, I'm going to close this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fafd18912b45d36a09d9",
    "number": 231,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you for your pull request.\r\n\r\nI was going to merge it in but discovered that the typo had already been independently fixed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fafe18912b45d36a09da",
    "number": 230,
    "body": "`CreateCollectionAsync` returns a `Task` in these cases.\nI guess when creating the sync version the return was dropped as there's no longer anything to return.\nThis causes a `NullReferenceException` when `options == null`\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I've created a JIRA ticket for this bug:\n\nhttps://jira.mongodb.org/browse/CSHARP-1524\n"
    ],
    "commit_messages": [
      "Merge 25e8af1ca8270c09143ef585ed2bfea2721d8b34 into 9a12e4a55adcd6c6a4f4f86140874d6963e74b43"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620faff18912b45d36a09db",
    "number": 229,
    "body": "Would it be possible to have the [IMongoQueryProvider interface ](https://github.com/mongodb/mongo-csharp-driver/blob/v2.2.0/src/MongoDB.Driver/Linq/IMongoQueryProvider.cs) marked as public?\n\nWe are building a Framework that has built-in Async LINQ support, and for our mongodb data adapter it would make for extremely cleaner code if we could access ExecuteAsync<T> directly, instead of having to rewrite all the CountAsync, SumAsync etc (that are already coded inside the core of our framework).\n\nThis interface is well documented, and does not have any properties of types that are not exposed, so it seems to me that it can be easily changed to public. Of course that means keeping backwards compatibility on the API from now on, but I think it can be useful for users of the C# driver in general to have access to it.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This would also be helpful for mocking IMongoQueryable for unit tests that hit AsQueryable(). It is extremely painful to do this right now. :(\n",
      "Is anyone going to comment on this one way or another? This has come up again for me. It is a requirement for mocking many of the linq operators that cast to this interface. (such as Any() or Count()).\n\nI'll make and maintain a fork if you aren't going to do this, but it would be nice to at least get a response.\n",
      "Hi @tetious, \n\nYou might want to follow the issue on Jira, where they did answer my original question:\n\nhttps://jira.mongodb.org/browse/CSHARP-1503\n\nBut basically, they're considering but it won't happen before v2.3.0, if at all.\n",
      "Sorry for not replying. Got lost in the shuffle.\n\nI actually don't understand how this would be useful. We don't expose this anywhere (obviously), hence mocking it shouldn't be necessary. I would assume that you could simply mock IQueryProvider and be fine. Perhaps you guys could provide an example of what exactly you are doing that would require this change?\n",
      "Thanks @craiggwilson. I'm happy to explain. It is possible I'm doing something dumb. ;)\n\nI have mocked IQueryProvider, and in most cases that works well. In a few cases, though, with some of the *Async operators, you are casting to IMongoQueryProvider, and needfully as far as I can tell, as they rely on ExecuteAsync.\n\nExample from MongoQueryable:\n\n``` csharp\n        public static Task<bool> AnyAsync<TSource>(this IMongoQueryable<TSource> source, CancellationToken cancellationToken = default(CancellationToken))\n        {\n            return ((IMongoQueryProvider)source.Provider).ExecuteAsync<bool>(\n```\n\nThis means I have to use the non-async versions in order for them to be testable. Does this make sense?\n",
      "Ah... I see what you're doing. Ok, fair enough. Well, as @potz  said, we are tracking this in the JIRA ticket. 2.3 will be the earliest it can come out as it's a public API change. 2.3 is tied to support for .NET Core, so.\n",
      "Just pinging on this again, as 2.3 came out and this may have been missed. It would be really helpful to have this to improve testability when using AsQueryable, and the change is so simple and already provided in a helpful PR. Please consider applying.",
      "Any update on this issue? I'm also in need of this in order to fully unit test async operations.",
      "Is this still going to be considered? I'm asking since I hit the same situation regarding the testability when using `AsQueryable`.",
      "Hi, @daviddesmet , \r\n\r\nThank you for the provided suggestion, but we have decided not to accept it. Mocking a third-party library - such as the MongoDB .NET Driver - is considered an anti-pattern because it hides changes in the mocked behaviour. The generally accepted solution is to encapsulate the dependency behind your own interface, which you can then mock and integration test. There has been much written on this topic, but this blog post is a good start with references to additional resources on the topic: \r\n\r\nhttps://dev.to/satansdeer/dont-mock-what-you-dont-own-cd6\r\n\r\nIf there is a particular problem that you are trying to solve that can't be solved using the encapsulation technique, please elaborate further as there may be other solutions to consider.\r\n\r\nSincerely,\r\nMongoDB .NET Driver Team",
      "Hi @DmitryLukyanov,\r\n\r\nIn my use case I'm trying to test the DAL. Here's a simple example of a method:\r\n\r\n```csharp\r\n// UserManager<TUser>\r\n\r\npublic virtual async Task<TUser> FindByPhoneNumberAsync(string phoneNumber, CancellationToken cancellationToken = default)\r\n{\r\n    return await Store.AsQueryable().Where(x => x.PhoneNumber == phoneNumber).SingleOrDefaultAsync(cancellationToken);\r\n}\r\n```\r\n\r\nAs you can see, this is a simple query that finds a User by the associated phone number (if there's any).\r\nTrying to mock the `Store.AsQueryable()` throws an exception on the `Where` clause and also on the `SingleOrDefaultAsync` one if I move the expression to there due to `IMongoQueryable<T>` and `IMongoQueryProvider` respectively.\r\n\r\nA workaround, as already stated is to use non-async versions so we can have it testable which is not desirable. Another option is to create a wrapper that I can mock but then the code inside the wrapper is not tested.\r\n\r\nI have quite a lot of repositories that ain't tested due to this limitation.\r\nIt would be nice if there's an option for us to be able to test them, if is not by making `IMongoQueryProvider` public, perhaps maybe an In-Memory only storage like EF offers so we don't have to mock them.",
      "Hey @daviddesmet ,\r\nyou still can mock the repository methods themselves and write integration tests based on this. Mocking a LINQ provider itself can hide details whether actual LINQ expression can be successfully translated into MQL or no.\r\nSo, we still think that it's better to avoid mocking 3rd party dependencies like Mongo driver."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0018912b45d36a09dc",
    "number": 228,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0118912b45d36a09dd",
    "number": 227,
    "body": "Some potential fixes for seekable download stream.\n- Checking for _chunk == null before starting.\n- added logic for cacluating the the last chunk number.\n\nhttps://jira.mongodb.org/browse/CSHARP-1489\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I ran into some trouble merging this because line feeds weren't consistent.\n\nDid you set core.autocrlf to true before cloning the repo to your machine?\n\nJust a heads up for any subsequent pull requests.\n\nThanks!\n",
      "Apologies - I didn't do that. We run with a different configuration for our environment by default. \n\nI'll change that if I submit any more pull requests.\n\nThanks for accepting my pull!\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0218912b45d36a09de",
    "number": 226,
    "body": "Exception error： MongoDB.Driver.Legacy.dll \nThe GroupBy query operator is not supported.\n\nmy code:\n public void TestMethod1()\n        {\n            var db = new MongoDbContext();\n            var query = (from c in db.GetCollection<UserLoginLog>().AsQueryable()\n                select c).GroupBy(c => c);\n            var list = query.ToList(); // execute query\n        }\n\nIt's why?\n",
    "head_branch": "v2.1.x",
    "is_a_fork": false,
    "comments": [
      "@jakey188 This isn't a great place to ask questions. You've created a pull request somehow... \n\nGroupBy is certainly supported. However, not this version of GroupBy. Why? Because MongoDB doesn't do grouping the same way that this operator is works. Hence, you'll need to do something else with it, like project a transformation. Our documentation gives an example: http://mongodb.github.io/mongo-csharp-driver/2.1/reference/driver/crud/linq/#group.\n",
      "@jakey188 I missed your stack trace. GroupBy is not supported in the Legacy API. You'll need to use the new API and it's LINQ support to use GroupBy.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0318912b45d36a09df",
    "number": 225,
    "body": "- fixed BsonClassMap.Reset() method to reflect default constructor behavior regarding IgnoreExtraElements property.\n- updated associated test to compare results of the Reset() method with a fresh instance, rather than predefined results.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I had a look at the test failures (I must admit I had only run the ones in the Bson assembly on my box). They give the impression that, before the change in BsonClassMap, these tests were working thanks to a weird side effect, as the anonymous classes throughout the fixture do not have an _id field. Why the serializer was fine with no _id field in anonymous classes despite requiring it in regular classes, I do not know yet.\n\nThe issue seems too complicated to grasp at once, I will have a deeper look this evening.\n",
      "... and how deeper it was !\n\nI have identified the following points, please correct me if I am mistaken:\n- my initial bug report was inaccurate : the common BsonClassMap constructor calls Reset() as its last line, so by definition Reset() has results identical to calling the constructor.\n- what does _not_ have identical results is calling the static methods LookupClassMap(...), or RegisterClassMap(...). Transparent creations, such as when instantiating a MongoCollection, are done this way. Indeed, this call ends up applying class-defined conventions. Since IgnoreExtraElementsConvention(flase) is present by default, any instance of BsonClassMap obtained in the \"normal\" way will have this set to false.\n- on the other hand -- and here we are coming to the failed build! -- there is one case in which BsonClassMap instances are created separately: in SerializerBuilder.BuildProjectedSerializer. There is a nice comment block explaining the rationale behind not using the global registry, and it also makes sense that conventions would not be applied for this type of objects.\n\n**Summary**\n\nThe existing implementation has BsonClassMap.IgnoreExtraElements default to true, and then being overriden to false by the default convention pack.\n\nThe only scenario I identified where defaulting to true serves a purpose is for the translation of projection expressions.\n\nIn my opinion, this should be inverted: the defaults of BsonClassMap and the default convention pack should be aligned, with translations being treated as separate, specific exceptions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0418912b45d36a09e0",
    "number": 224,
    "body": "I added an option on JsonWriterSettings, to serialize DateTimeFields using LocalTime instead of UTC. I wrote a unit test to make sure it doesn't break anything and seems ok.\n\nhttps://jira.mongodb.org/browse/CSHARP-1460\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "As mentioned on CSHARP-1460, we have a more general solution to this now, so I'm going to close this out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0618912b45d36a09e1",
    "number": 223,
    "body": "This method is faster\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks. I have a couple of questions:\n1. Have you measured it? If so, how much faster? \n2. Do the tests pass after making the change? \n3. Is there any reason to leave the comment in there?\n",
      "Closing as we never heard back from the submitter."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0618912b45d36a09e2",
    "number": 222,
    "body": "fix a typo\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0818912b45d36a09e3",
    "number": 221,
    "body": "## Force any class to be serialized as BSON class map\n\nBecause some requirements in my project, I had to create a base class derived by some domain objects which implement `IDictionary<TKey, TValue>`, but these domain objects are still POCOs and I want them to be serialized using regular BSON class map serializer. \n\nWhen I ran some test I found some issue: my domain object wasn't getting an auto-assigned GUID. After clonning the driver source code, I debugged the code step by step and I found that my domain objects were serialized as collections rather than POCOs, because they inherit a base class which implements `IDictionary<TKey, TValue>` as I mentioned above.\n\nThen, I thought, _what about a way to configure that certain types must be serialized as class maps to solve my issue?_, and I implemented a serialization provider `ForceAsBsonClassMapSerializationProvider` to fix my problem.\n\nFor example, this new provider may be used as follows:\n\n```\npublic class SomeImpl : IDictionary<string, object> \n{\n    // Imagine that I've implemented all IDictionary<string, object> members\n}\n\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(IDictionary<string, object>)));\n```\n\nIt can be also registered a concrete type to be forced as a BSON class map:\n\n```\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(SomeImpl)));\n```\n\nOr also both:\n\n```\n// Order doesn't matter...\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(IDictionary<string, object>), typeof(SomeImpl)));\n```\n## BSON class maps of classes implementing `IDictionary<string, object>`\n\nIt might happen that a class representing a domain object or an entity may also implement `IDictionary<TKey, TValue>` interface. In my case, it has happened to let my domain objects be extensible but also contain regular properties. \n\nFor now, Mongo C# driver supports _extra elements_ as a dictionary property, but what about the above feature of holding those _extra elements_ as keys of an entity implementing `IDictionary<string, object>`?\n\nIn order to get this new feature working, I've modified `BsonClassMapSerializer` to detect if a document type is also `IDictionary<string, object>` itself, and serialize its key-value pairs as regular BSON elements. The so-called feature applies to both serialization and deserialization.\n## Final thoughts\n\nBecause I feel that other developers might encounter the same limitations and they might need to workaround them, what about including these features as part of the driver _as is_?\n\nThank you in advance and I'll look forward for your comments, suggestions...!\n",
    "head_branch": "force_bsonclassmaps",
    "is_a_fork": true,
    "comments": [
      "It would be great to get news about my pull request, since this feature is a _must_ in one of my professional projects. \n\nI could implement outside the driver, but `BsonClassMapSerializationProvider` **is an internal class** and this means I should copy-paste `BsonClassMapSerializationProvider` code to avoid re-inventing the wheel... and since `ForceAsBsonClassMapSerializationProvider` (my contribution) is just a wrapper of `BsonClassMapSerializationProvider`, copy-pasting it can be a bad idea, since I want to stick with your code base...\n\nIn fact, there're many internal classes, even methods and properties... It seems like I would require a lot of effort to implement the same feature absolutely decoupled from driver's code base, while the feature as part of the whole code base requires these few modifications.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0918912b45d36a09e4",
    "number": 220,
    "body": "## Force any class to be serialized as BSON class map\n\nBecause some requirements in my project, I had to create a base class derived by some domain objects which implement `IDictionary<TKey, TValue>`, but these domain objects are still POCOs and I want them to be serialized using regular BSON class map serializer. \n\nWhen I ran some test I found some issue: my domain object wasn't getting an auto-assigned GUID. After clonning the driver source code, I debugged the code step by step and I found that my domain objects were serialized as collections rather than POCOs, because they inherit a base class which implements `IDictionary<TKey, TValue>` as I mentioned above.\n\nThen, I thought, _what about a way to configure that certain types must be serialized as class maps to solve my issue?_, and I implemented a serialization provider `ForceAsBsonClassMapSerializationProvider` to fix my problem.\n\nFor example, this new provider may be used as follows:\n\n```\npublic class SomeImpl : IDictionary<string, object> \n{\n    // Imagine that I've implemented all IDictionary<string, object> members\n}\n\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(IDictionary<string, object>)));\n```\n\nIt can be also registered a concrete type to be forced as a BSON class map:\n\n```\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(SomeImpl)));\n```\n\nOr also both:\n\n```\n// Order doesn't matter...\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(IDictionary<string, object>), typeof(SomeImpl)));\n```\n## BSON class maps of classes implementing `IDictionary<string, object>`\n\nIt might happen that a class representing a domain object or an entity may also implement `IDictionary<TKey, TValue>` interface. In my case, it has happened to let my domain objects be extensible but also contain regular properties. \n\nFor now, Mongo C# driver supports _extra elements_ as a dictionary property, but what about the above feature of holding those _extra elements_ as keys of an entity implementing `IDictionary<string, object>`?\n\nIn order to get this new feature working, I've modified `BsonClassMapSerializer` to detect if a document type is also `IDictionary<string, object>` itself, and serialize its key-value pairs as regular BSON elements. The so-called feature applies to both serialization and deserialization.\n## Final thoughts\n\nBecause I feel that other developers might encounter the same limitations and they might need to workaround them, what about including these features as part of the driver _as is_?\n\nThank you in advance and I'll look forward for your comments, suggestions...!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Sorry, I'll add a new pull request in a better way (using a feature branch in my repo).\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0a18912b45d36a09e5",
    "number": 219,
    "body": "Because some requirements in my project, I had to create a base class derived by some domain objects which implement `IDictionary<TKey, TValue>`, but these domain objects are still POCOs and I want them to be serialized using regular BSON class map serializer. \n\nWhen I ran some test I found some issue: my domain object wasn't getting an auto-assigned GUID. After clonning the driver source code, I debugged the code step by step and I found that my domain objects were serialized as collections rather than POCOs, because they inherit a base class which implements `IDictionary<TKey, TValue>` as I mentioned above.\n\nThen, I thought, _what about a way to configure that certain types must be serialized as class maps to solve my issue?_, and I implemented a serialization provider `ForceAsBsonClassMapSerializationProvider` to fix my problem.\n\nFor example, this new provider may be used as follows:\n\n```\npublic class SomeImpl : IDictionary<string, object> \n{\n    // Imagine that I've implemented all IDictionary<string, object> members\n}\n\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(IDictionary<string, object>)));\n```\n\nIt can be also registered a concrete type to be forced as a BSON class map:\n\n```\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(SomeImpl)));\n```\n\nOr also both:\n\n```\n// Order doesn't matter...\nBsonSerializer.RegisterSerializationProvider(new ForceAsBsonClassMapSerializationProvider(typeof(IDictionary<string, object>), typeof(SomeImpl)));\n```\n\nBecause I feel that other developers might encounter the same limitation, I believe that it would be a good point merging this simple serialization provider. \n\nThank you in advance and I'll look forward for your comments, suggestions...!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This is an interesting approach and the code looks OK to me.\n\nWe're not sure at this point whether this is something that should be in the official driver or not. This might be the kind of thing that makes more sense to have in your application.\n",
      "@rstam Hey, thank you for your comments.\n\nBTW, now I'm going to drop this pull request and add a new one which also includes another feature, and I believe that it will add more value to the current one, and if you want, we can continue this discussion in the new pull request.\n",
      "@rstam  See #220 . If you want, you can copy-paste your comment, and we can continue the discussion there :+1: \n",
      "@rstam Hey, please review #221 . I'm sorry but I had to close the other pull request because I was contributing in the wrong way. Now I've forked and created a feature branch to keep things simpler and be able to contribute more in the future. You'll also note that #221 provides an additional feature compared to #219.\n\nThanks in advance and I'll look forward for your comments there...\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0b18912b45d36a09e6",
    "number": 218,
    "body": "Looks like a copy & paste oopsie. I just changed the link to the primary Travis page for the project.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "> changed the link to the primary Travis page for the project.\n\nlooks like you changed it to the github page, though?\n",
      "Weird, you're right. Grabbing lappy to fix it. \n",
      "Closing as we no longer rely on Travis."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0c18912b45d36a09e7",
    "number": 217,
    "body": "I'm aware that [CSHARP-837](https://jira.mongodb.org/browse/CSHARP-837) has already closed, but I would like to add it to the legacy version of the driver since it's useful not just to `string`, but also to all types that use `CompareTo`, e.g. `Guid`.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks @Nashenas88.  We'll discuss whether or not we want to make these types of adjustments to the legacy API. You're PR looks great though, and thanks for including tests!\n",
      "I fixed the tests to reference the right variable. There are other errors in the commit  that seem completely unrelated to my change.\n\n@craiggwilson Thank you! For what it's worth, we have some concerns with the API of the 2.0 non-legacy version of the driver, (mainly [this one](https://jira.mongodb.org/browse/CSHARP-1428)). Not having the `WriteResult` really makes the code for handling errors and logging more complicated.\n",
      "Hi @Nashenas88 sorry to leave this sitting for such a long time.  At this point we don't plan to make any further changes in the legacy LINQ implementation."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0d18912b45d36a09e8",
    "number": 216,
    "body": "Demo Code Bug\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0e18912b45d36a09e9",
    "number": 215,
    "body": "As I known, MongoDB collection's update function has four parameters, it just like this:\n\ndb.users.update({\"birthday\" : \"10/13/1978\"}, {\"$set\" : {\"gift\" : \"Happy Birthday!\"}}, false, true)\n\nbut in the Driver code, it put the third and fourth parameters in UpdateFlags enum. I think this is wrong to put two irrelevant parameters in the same enum, it is difficult to distinguish their function. In addition, MongoCollection‘s Update function below：\n\npublic virtual WriteConcernResult Update(IMongoQuery query, IMongoUpdate update, MongoUpdateOptions options)\n\nIt has a Bug too. It use UpdateFlags to initinal \"isMulti\" and \"isUpsert\" options in the UpdateRequest class.\n\n```\n        var isMulti = (options.Flags & UpdateFlags.Multi) == UpdateFlags.Multi; //Bug。\n        var isUpsert = (options.Flags & UpdateFlags.Upsert) == UpdateFlags.Upsert; //Bug。\n        var writeConcern = options.WriteConcern ?? _settings.WriteConcern ?? WriteConcern.Acknowledged;\n\n        var request = new UpdateRequest(UpdateType.Unknown, queryDocument, updateDocument)\n        {\n            IsMulti = isMulti,\n            IsUpsert = isUpsert\n        };\n```\n\nThere is impossible to set update multi exist documents in MongoDB, or insert a new document into Collection. because options \"IsMulti\" and \"IsUpsert \" are always just one to be true.\n",
    "head_branch": "v2.0.x",
    "is_a_fork": false,
    "comments": [
      "Hi Alex,\n\nBug reports should be filed here: https://jira.mongodb.org. \n\nIn this particular case, I believe our code is correct. [UpdateFlags](https://github.com/mongodb/mongo-csharp-driver/blob/master/src/MongoDB.Driver.Legacy/UpdateFlags.cs) is a [Flags enum](https://msdn.microsoft.com/en-us/library/system.flagsattribute%28v=vs.110%29.aspx), which means both options can be set to it at the same time. Checking to see if any one option is set is done with a bitwise AND of the correct flag and checking it's equality. As such, this is what we've done. In order to pass both flags in at the same time, you would call Update(query, update, UpdateFlags.Multi | UpdateFlags.Upsert);\n\nI don't totally disagree regarding your assessement. In fact, the API for this is totally different in the non-legacy code of 2.0. However, this exists in the legacy package of our 2.x codebase (and in the 1.x branch) and therefore has been technically deprecated. We will not be making improvements on this part of the code. \n\nIf you still feel this is a bug, please file a ticket at https://jira.mongodb.org under the CSHARP project and we'll happily take a look.\n\nThanks,\nCraig\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb0f18912b45d36a09ea",
    "number": 214,
    "body": "Updated the note at the end of the description to make it clear it applies to all stages.\n\nAdded an example showing how conventions can be used to serialize generic types.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This looks very nice. We'll make sure to pull it in for our 2.1 release. Thanks.\n",
      "How do I tell if this has been pulled in?  I want to make sure this gets merged before I close it.",
      "@JamesKovacs please see if this still needs to be merged.",
      "Thank you for your PR and apologies for not reviewing it sooner. We realize that it has been sitting without comment for too long.\r\n\r\nWe believe that our current documentation on custom conventions clearly articulates the four convention stages and that ordering only matters within each stage. While the additional note on using an `IClassMapConvention` to register open generic types is an interesting and valid use case, it is not a common enough idiom to warrant inclusion in the documentation. This type of information would be better suited to a blog post."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1018912b45d36a09eb",
    "number": 213,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you for your pull request.\r\n\r\nWhile attempting to merge this pull request I discovered that this fix had already been independently made."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1118912b45d36a09ec",
    "number": 212,
    "body": "Fixed what appears to be a grammatical mistake.  \"...it value is...\" to \"...its value is...\"\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Rebased on master and merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1218912b45d36a09ed",
    "number": 211,
    "body": "The only documentation on \"Bulk Writing\" is currently under \"quick tour\" which makes it difficult to find. It would be more accesible in the \"Writing\" section under reference.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi phber,\n\nThanks for pointing this out. It was an oversight.  Rather than move the documentation, for now it'd be best to just copy it. I've created a [ticket](https://jira.mongodb.org/browse/CSHARP-1377) to improve this. If you'd like to resubmit with the content copied, we can pull it in.\n\nCraig\n",
      "Added commit with a temporary copy instead.\n\n/Phber\n"
    ],
    "commit_messages": [
      "Merge 718bb8b25c2e7ae9455ed663db90ed51dce7b246 into 3ba249457da64decc9a877629a87b08e64f840c4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1418912b45d36a09ee",
    "number": 210,
    "body": "> **NOTE: THIS IS NOWHERE NEAR READY!**\n\nI have done the initial infrastructure work to move MongoDB.Driver to DNX project structure. This pull request is not here to be merged in as I have done bunch of controversial changes (opps :smile:). However, as the issues section here on GitHub for this project is removed and I wanted to preserve my sanity by not using Jira :trollface:, I am opening this pull request to discuss the CoreCLR support for MongoDB .NET Driver. This is also potentially useful for anyone who is interested in this.\n## Why\n- To support CoreCLR.\n- Moving to DNX project structure which will make it easy to develop the project anywhere thanks to OmniSharp powered code editors.\n## What I have Done\n- Added **global.json** file to root of the solution to specify project folders and sdk version (beta5) \n- Added **NuGet.Config** files to root of the solution to specify official nuget feed\n- git-ignored `project.lock.json` files.\n- Moved tests under `test` folder.\n- Moved samples under `samples` folder.\n- Introduced project.json for every project.\n- Made every project successfully compile on `dnx451` target framework.\n- Added the `MongoDB.Driver.sln` file to root of the solution and xproj file for every project to satisfy VS 2015 needs.\n- **Removed legacy project all together as I don't think there is point to maintain them on CoreCLR.**\n## What We Need to Do\n- [ ] Make tests work with xUnit and successfully run them.\n- [ ] Add assembly signing stuff.\n- [ ] Make build scripts work with DNX tools to build the project.\n- [ ] Support `dnxcore50` framework target.\n- [ ] Rebase commits.\n",
    "head_branch": "dnx",
    "is_a_fork": true,
    "comments": [
      "Thanks for starting this. I'd love to help!\n",
      "@jtbennett awesome! I think the most sensible thing to do at this stage first is to get tests working with xUnit as it's the only unit testing framework which has DNX support. Not sure if NUnit has it though. However, I am also not sure what to do with FluentAssertions and NSubstitute at the later stages as they don't have `dnxcore50` support.\n",
      "We've thought a little bit about this. Before you guys go off converting tests to use another framework(xUnit, etc...) which would be a whole lot of work, we should have a discussion. I'd hate for you guys to pour a bunch of work into something that doesn't coincide with our needs. For instance, I love xUnit, but we've been using NUnit and it might be better to wait a little bit for them to have .NET core support than to completely switch testing frameworks. .NET Core is still in beta (unless I missed some announcement), so there is still time for our dependencies to include support.\n",
      "@craiggwilson let's move NUnit to CoreCLR first then :smile: :trollface: I personally don't care which unit testing framework is being used and I don't think there is much diff between any of them.\n\nI think waiting for CoreCLR to go RTM before starting to move would be too late. I personally care about having MongoDB Driver to be available as soon as CoreCLR has go-live license as I will plan to use this driver on prod in Linux on CoreCLR at that time :disappointed: \n",
      ":+1: for @tugberkugurlu \n\nWill be great to have MongoDb Driver (CoreCRL version) almost in the same time of the RTM of CoreCLR\n",
      "I agree with @imperugo , Right now they are delivering a beta version almost every month, these version can include a lot of breaking changes. We are working with a project and we start working with beta 2 so far they are working on beta 6 and we change so much code between each beta release. \n\nSee road map here https://github.com/aspnet/Home/wiki/Roadmap \n",
      "Would it make sense to start this in earnest in late September?  They say\nthat the last beta (8) will be feature complete and released on Sept 21,\nwith the RC to follow in November. See:\nhttps://github.com/aspnet/home/wiki/roadmap\n\nOn Fri, Jul 31, 2015 at 9:53 AM, Adolfo Foliaco notifications@github.com\nwrote:\n\n> I agree with @imperugo https://github.com/imperugo , Right now they are\n> delivering a beta version almost every month, these version can include a\n> lot of breaking changes. We are working with a project and we start working\n> with beta 2 so far they are working on beta 6 and we change so much code\n> between each beta release.\n> \n> See road map here https://github.com/aspnet/Home/wiki/Roadmap\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/mongodb/mongo-csharp-driver/pull/210#issuecomment-126697966\n> .\n",
      "So not sure if you have been following NUnit but it looks like  NUnit is close to releasing v3 which is a complete re-write and would probably require as much upgrading as moving from NUnit to xUnit\n",
      "Just as another possible version, it also can be made to support both nUnit and xUnit. A common attribute `TestAttrtibute` can be made, and it will inherit nUnit's `TestAttribute` or xUnit's `FactAttribute`, and base inheritor class can be specified with `#if CoreCLR`. \n\nI'm not sure that it's a good way as it's a bit ugly, and also will require supporting of two unit test framework that might be a pain, but at least it won't require waiting while nUnit supports CoreCLR...\n\nnUnit has an issue about adding CoreCLR support in v3 - https://github.com/nunit/nunit/issues/575 , but as CharliePoole says:\n\n> Our use of milestone 3.0 means we would like to get it into the 3.0 final release but that it's not currently planned in any of the betas. Our plates are pretty full.\n\nSo there is no any guaranties that it will be shipped with nUnit 3.0\n",
      "@sergey-litvinov\n\n> I'm not sure that it's a good way as it's a bit ugly, and also will require supporting of two unit test framework that might be a pain, but at least it won't require waiting while nUnit supports CoreCLR...\n\nYou will probably do the same amount of upgrade to make that work. Why not move to xUnit then?\n",
      "Just wanted to update here that [.NET Core has hit RC1 yesterday](http://www.hanselman.com/blog/ASPNET5AndNETCoreRC1InContextPlusAllTheConnect2015News.aspx) and it has go live license. API changes will be minimum from this point. Not sure if that would make this issue more attractive.\n",
      "The RC1 release of .NET Core is great news. We are planning on targeting .NET Core soon.\n",
      ":+1: Great work! We are about to start project on Core CLR and this is really important for us now. What's the status? Is there any possibility to start working right away (experimental branch or something)? \n",
      "@tugberkugurlu What is the status with this? Do you require any help?\n",
      "@jamestoyer this issue requires some decisions from the maintainers. From @rstam comment, I understand that they are looking at supporting it but discussions on this don't happen here on Github I assume.\n",
      "There are any info about this? Support CoreCLR is important to me :/\n",
      "We have begun work on this but there are some obstacles to overcome.\n\nWe don't yet have a release date for this, but it's more on the order of months than weeks away.\n",
      "@rstam It would be really useful if this is being done more openly here on GitHub so that we can also see the progress. It would be a good start to learn more about those obstacles.\n",
      "@tugberkugurlu  we actually do all our work here on github. All changes are made first in a branch on a fork and later merged into the master branch (or other appropriate branch) when ready.\n\nThe two forks where you are most likely to see work being done are:\n\nhttps://github.com/rstam/mongo-csharp-driver\nhttps://github.com/craiggwilson/mongo-csharp-driver\n\nThe most recent work related to porting to .NET Core is on this branch:\n\nhttps://github.com/rstam/mongo-csharp-driver/commits/csharp1504\n\nWhich is related to this JIRA ticket:\n\nhttps://jira.mongodb.org/browse/CSHARP-1504\n\nAt this point in this work what we are doing is using the .NET Portability Analyzer against the BSON library to identify where we are using APIs that are not supported by .NET Core and coding around them. This is a good starting point because it gets us closer to where we need to be while still developing against .NET 4.5 where all the tooling is stable (and where we can run our unit tests!).\n\nI've found attempting to use the tooling for .NET Core frustrating and am hoping that things will soon settle down and be stable and well documented. We are also dependent on some third party libraries for our unit tests that need to support .NET Core first, although there has been some progress on that front recently. NUnit 3.0 has partial support for .NET Core (limited to running tests from the command according to the release notes), FluentAssertions release notes claim support for .NET Core, but NSubstitute apparently does not yet support .NET Core (and may in turn be waiting on some of their third party dependencies to support .NET Core).\n",
      "I agree with @tugberkugurlu. I'm just starting another long term project which should use CoreCLR and MongoDb. Having an unstable driver would be better than having nothing. Node.js is not an option in this particular case and .NET 4.6 neither is.\n",
      "How is this going? Any progress?\n",
      "Yes. We have been making progress.\n\nThe main obstacles remain that some of our dependencies do not yet support .NET Core.\n\nNUnit partially supports .NET Core, but has very poor support for actually running tests against .NET Core.\n\nNSubstitute doesn't seem like it's likely to support .NET Core any time soon...\n\nWe are considering migrating our tests to XUnit and Moq which are both better supported in .NET Core. We have been hoping not to have to make this migration, but it might be the only way to get there.\n\nAt this time we are not planning to release any betas that would target .NET Core RC1. We are hoping that .NET Core RC2 will come out in a timely fashion.\n",
      "Oh, that sounds great! RC2 is the way to go.\n\nCastle Core just got support for .NET Core, which means NSubstitute is a bit closer. And yes the NUnit situation is a bit annoying, I think I've even seen people put in a wrapping layer that faked NUnit on top of XUnit.\n",
      "Good to hear the progress. Closing this as there is a seperate work going on for this.\n",
      "Hey @rstam what's the status on a C# driver for .NET Core. We are waiting with much anticipation. ;)\n",
      ".NET Core RC2 just got released!\n",
      "Any update on this one?\n",
      "Any update on this one?\n",
      "I found this : https://github.com/mongodb/mongo-csharp-driver/commit/2c4caba61ed3d6b130288fe3805e7a97c53b3c9f\n",
      "It has been released in beta form on nuget. There is a dependency issue where you'll need to manually resolve certain dependencies until beta2, but all should be working.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1518912b45d36a09ef",
    "number": 209,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1618912b45d36a09f0",
    "number": 208,
    "body": "There is not so convenient to make calls like `colleciton.Find(new BsonDocument())` and generates load of redundant code. So to make calls cleaner I've added overloads for `Find()`, `CountAsync()` and `DeleteManyAsync()` methods.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1718912b45d36a09f1",
    "number": 207,
    "body": "Compound index should be descending on zipcode field for the getting started guide\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1818912b45d36a09f2",
    "number": 206,
    "body": "…ation pipeline, via Where() +test\n\nTried to keep implementation as similar in style to existing code as possible; TryBuildFilter() in particular is a close copy of TryBuildMap(), used by Select().  This includes the \"// HACK\" for adding a single additional $ to the param replacement.\n\nAny questions or problems let me know!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1918912b45d36a09f3",
    "number": 205,
    "body": "CSHARP-1316\nadded DictionarySerializer support in\nBsonSerializationInfoFinder.VisitGetItem\nadded public GetValueSerializer to DictionarySerializer\n",
    "head_branch": "v1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1a18912b45d36a09f4",
    "number": 204,
    "body": "Added `DropAsync` extensions methods for both `IMongoDatabase` and `IMongoCollection` to make it easy to reach them. Not sure if this is the desired but I keep having this in my projects as it's easier to type.\n",
    "head_branch": "extensions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1b18912b45d36a09f5",
    "number": 203,
    "body": "as title says :smile: \n",
    "head_branch": "MissingConfigureAwait",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1c18912b45d36a09f6",
    "number": 202,
    "body": "This fixes most issues like System.InvalidOperationException while trying to convert ObjectId to string and vice-versa with binding MongoDb objects in ASP.NET data controls.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1d18912b45d36a09f7",
    "number": 201,
    "body": "Hello, I'm working an a static analysis tool that can find missing null checks.  It suggested you add these checks.  There are a couple methods in ClusterBuilder that take a function (called configurator) as the argument.  ConfigureServer and ConfigureSsl don't check if configurator is null, but the others do.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1e18912b45d36a09f8",
    "number": 200,
    "body": "Grabbing latest changes\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb1f18912b45d36a09f9",
    "number": 199,
    "body": "According to http://mongodb.github.io/mongo-csharp-driver/2.0/upgrading/ the method SetRepresentation has been removed.  I am trying to find out how to set an Enum to be represented as a string once stored and can't see how to do so but I do keep finding where your documentation shows you how to use the removed methods....\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2118912b45d36a09fa",
    "number": 198,
    "body": "Fixed small typo in README\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2218912b45d36a09fb",
    "number": 197,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0b94545542b8ae5782727335a697c8fb585689eb into a33c30dd11c0f1cd533fcbf8c6b01e0f834e6ce8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2318912b45d36a09fc",
    "number": 196,
    "body": "removed the `IMongoGeoNearOptions.Null` reference as this was causing a \"warning as error\" result during local build.  Used `null` instead.\n",
    "head_branch": "geoNearArgs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2418912b45d36a09fd",
    "number": 195,
    "body": "Added the support of the OfType linq method to support automatically filtering on subdocument type\nAll advices and/or remarks are welcome :)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2518912b45d36a09fe",
    "number": 194,
    "body": "Added the support of the OfType linq method to support automatically filtering on subdocument type\nAll advices and/or remarks are welcome :)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2618912b45d36a09ff",
    "number": 193,
    "body": "conditions that both exist in a in an array of objects.\n\nAssuming a document like this\n{\n    _objectid:...,\n    Item:555,\n    MetaData: [{\n        Foo: Bar\n    },\n    {\n        Baz: Bat\n    }]...\n}\nQuery.And with two conditons in that array would generate invalid syntax.\nI found the solution was to promote to $and everytime. There is certainly\na more elegant solution, but this solved my immediate problem with no ill\neffects.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2718912b45d36a0a00",
    "number": 192,
    "body": "Robomongo defaults to UUIDs being called NUUID, even though it does not support that class, it needs this script\nThe toNUUID function is exactly the same as toCSUUID except the string concat, so they could easily call a common function to convert the binary, but I neglected to make that change.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2818912b45d36a0a01",
    "number": 191,
    "body": "Merge pull request\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2918912b45d36a0a02",
    "number": 190,
    "body": "https://jira.mongodb.org/browse/CSHARP-1080\n\nI want to serialize following class:\n\n``` csharp\npublic class TestModel_CustomNotId\n{\n    [BsonElement(\"id\")]\n    public ObjectId Id { get; set; }\n}\n```\n\nI expected Id field to be serialized as \"id\",\nbut the result BSON document is containing \"_id\" field.\n",
    "head_branch": "v1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2a18912b45d36a0a03",
    "number": 189,
    "body": "Per Robert's suggestion, adding explicit type parameters made the Xamarin compiler stop complaining.\n",
    "head_branch": "xamarin-workarounds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2b18912b45d36a0a04",
    "number": 188,
    "body": "For further information read: https://jira.mongodb.org/browse/CSHARP-1047\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2c18912b45d36a0a05",
    "number": 187,
    "body": "",
    "head_branch": "positionalupdate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2d18912b45d36a0a06",
    "number": 186,
    "body": "Make properties virtual, so they can be mocked for unit testing IBsonSerializer implementation.\n",
    "head_branch": "virtualprops",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2e18912b45d36a0a07",
    "number": 185,
    "body": "//throw new ArgumentOutOfRangeException(\"queries\", \"One of the queries is null.\");\nto :: continue;\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb2f18912b45d36a0a08",
    "number": 184,
    "body": "//throw new ArgumentOutOfRangeException(\"queries\", \"One of the queries is null.\");\nto :: continue;\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3018912b45d36a0a09",
    "number": 183,
    "body": "SetMaxScan method added $maxscan option instead of $maxScan option which resulted in that option being ignored by mongod.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3118912b45d36a0a0a",
    "number": 182,
    "body": "All writing of memory streams should be done in the MongoConnection... the abstraction was leaking before.  This will also enable us to instrument the drive for tracing, metrics and logging.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3318912b45d36a0a0b",
    "number": 181,
    "body": "Minor improvement at the codebase: removed private fields on `MongoDB.Driver.Tests.Configuration` class and made the setters of public static properties private.\n",
    "head_branch": "TestConfiguration-Remove-Fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3418912b45d36a0a0c",
    "number": 180,
    "body": "expose the OplogReplay query flag to uses of mongos driver for cases where they want to be able to replicate the oplog.\n",
    "head_branch": "feature/support_oplog_replay_flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3518912b45d36a0a0d",
    "number": 179,
    "body": "if (unaryExpression.Type == Enum.GetUnderlyingType(enumType)) is false in case of byte, short etc, because you convert these type to int\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3618912b45d36a0a0e",
    "number": 178,
    "body": "https://jira.mongodb.org/browse/CSHARP-930\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3718912b45d36a0a0f",
    "number": 177,
    "body": "Adds strongly typed explain method to LinqToMongo explain methods. Addresses JIRA issue: C# DriverCSHARP-920.\n\nI have added one new method (with two overrides) to LinqToMongo.cs. These return a new object graph of strongly typed objects representing the explain response document.\n\nI have added several unit tests for these methods and I have added as much documentation as I was able to find on the website related to the explain response.\n\nI'm happy to make tweaks if necessary.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3818912b45d36a0a10",
    "number": 176,
    "body": "Not sure if/where to create a test for this, it seems a very simple change?\n",
    "head_branch": "mongocursor-query-setter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3918912b45d36a0a11",
    "number": 175,
    "body": "mirrored from EnumRepresentationConvention\n\nSeveral people have asked for this, although they might want to consider using doubles to avoid mismatch in precision, I figured they might as well have the ability to change it globally if they still want to use decimals.\n",
    "head_branch": "decimalRepresentationConvention",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3a18912b45d36a0a12",
    "number": 174,
    "body": "See https://github.com/mongodb/mongo-csharp-driver/pull/173 for dicussion\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3b18912b45d36a0a13",
    "number": 173,
    "body": "Should help consumer code readability.\n\nhttps://jira.mongodb.org/browse/CSHARP-797\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3c18912b45d36a0a14",
    "number": 172,
    "body": "I ran into this issue and was able to get around it with the minor change in this pull request. Compilation requires the downcast, but it appears we just need to ignore the \"convert\" and create the appropriate Query regardless.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3d18912b45d36a0a15",
    "number": 171,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3e18912b45d36a0a16",
    "number": 170,
    "body": "The slow count performance of TokuMX was causing the C# Driver to perform when badly when inserting large amounts of data into GridFS, as the driver was doing a count every time it was ensuring the index was in place. I implemented the suggestion here in this discussion:\n\nhttps://groups.google.com/forum/#!topic/tokumx-user/FcbYoFugNFM\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb3f18912b45d36a0a17",
    "number": 169,
    "body": "I hope you conside.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4018912b45d36a0a18",
    "number": 168,
    "body": "Whenever a ping fails (\"MongoServerInstance.Ping\"), the connection is set to Disconnected by \"SetState(MongoServerState.Disconnected);\".\n\nSo subsequent \"AcquireConnection\" calls fails with the message \"Server instance {0} is no longer connected.\" instead of trying to reconnect. So a brief connection problem can stop all future operations...\n\nProblem description:\nC# Driver fails to reconnect with the server in some situations when the MongoDb server is slow to respond and the connection times out or momentarily fails to connect to the server due to some temporary cluster unavailability. The error message in most cases is \"Server instance {0} is no longer connected.\".\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4118912b45d36a0a19",
    "number": 167,
    "body": "These changes I have made allows mongocsharpdriver to run in Medium Trust environments like Rackspace Cloudsites.\n\nThe key problem that was preventing medium trust was TransformFinalBlock method.\n\nNow, for medium trust environments, when declaring your MongoClient, you can add the optional parameter of 'true' to not use secure strings. This is similar to AWS's c# library for anyone who is familiar with it.\n\n```\n        client = new MongoClient(connectionString, true);\n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4318912b45d36a0a1a",
    "number": 166,
    "body": "",
    "head_branch": "master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4418912b45d36a0a1b",
    "number": 165,
    "body": "is the max bson document size for mongo db 16MB right now? So in my project i wrote a 4+MB bson file into mongo db but i cannot read it out from the db via C# API.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4518912b45d36a0a1c",
    "number": 164,
    "body": "If the enumerable is an ICollection, then test if it's empty before executing the insert operation.  Before this change, the exception \"Message contains no documents\" is thrown.  See the JIRA issue for details.  Unit tests included.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4618912b45d36a0a1d",
    "number": 163,
    "body": "The question \"How do I pass json style queries in to the C# driver\" pops up on Stackoverflow quite often. This seems like a reasonably elegant way to add it (perhaps we could look into creating a specific call, to improve error handling for when people get the query wrong though)\n\ne.g. \nhttp://stackoverflow.com/questions/17220959/c-sharp-mongo-queries-with-json-strings/17221345\nhttp://stackoverflow.com/questions/6120629/can-i-do-a-text-query-with-the-mongodb-c-sharp-driver\n\nUsage:\ncollection.Find(new JSQueryDocument(\"{ SendId: 4, 'Events.Code' : { $all : [2], $nin : [3] } }\"));\n\nI also ended up writing wrappers around all the MongoCollection methods that take in IQueryDocuments so that you can just provide strings instead - e.g.\n\ncollection.Find(\"{ SendId: 4, 'Events.Code' : { $all : [2], $nin : [3] } }\");\n\nSee comments below as to why we went with that signature\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4718912b45d36a0a1e",
    "number": 162,
    "body": "Currently the library provides no way of using geoWithin this is one way of adding it.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4818912b45d36a0a1f",
    "number": 161,
    "body": "Unit tests are included. See JIRA item for more detail.\n",
    "head_branch": "ArraySizeGreaterThanLessThanComparison",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4918912b45d36a0a20",
    "number": 160,
    "body": "All unit tests still pass, this solves the bug as experienced by ourselves.\n",
    "head_branch": "BooleanMethodCallFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4a18912b45d36a0a21",
    "number": 159,
    "body": "When serializing array of value types there is no need to lookup for serializer for every item, because it is homogeneous. This saves us some cpu cycles but most benefit may be achieved when multiple threads are doing serialization, like in my multi-threaded insert benchmark. The suggested fix allows to avoid extra-contention on ReaderWriterLockSlim inside BsonSerializer.\n",
    "head_branch": "CSHARP-750",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4b18912b45d36a0a22",
    "number": 158,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4c18912b45d36a0a23",
    "number": 157,
    "body": "1. add new datetime format 'yyyy-MM-dd HH:mm:ss';\n2. remove the \"One of the queries is null\" exception mechanism and the relational unit-tests. when some query is null, the foreach will keep continue. it's very usefull;\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4d18912b45d36a0a24",
    "number": 156,
    "body": "Change to BsonSerializationInfoFinder.cs so that when visiting a GetItem call, it will attempt to use Document Serialization info no Array Serializer is matched.\n\nPlease forgive the lack of tests, I am unable to run them on my local machine.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4e18912b45d36a0a25",
    "number": 155,
    "body": "https://jira.mongodb.org/browse/CSHARP-721\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb4f18912b45d36a0a26",
    "number": 154,
    "body": "I think I found a missing use case:\n1. Map a private instance collection variable, which backs a public read-only collection property\n2. Use a linq query against the public read-only collection.\n\nThe problem here is that the class map's MemberName equals the instance variable name, and not the public property collection name..\n\nThe change here is that I am checking against both the class map's MemberName and Element name values.\n\nThis allows you to map an instance field and set the element name as the public property on the class.  This seems to be enough to get the Linq queries to work (Although I'm not sure if there is a more elaborate way to achieve this functionality).  \n\nI know with something like FluentNHibernate, you map the public property, and set the backing field:\nMap(x => x.Collection).Access.ReadOnlyPropertyThroughCamelCaseField();\n\nThis allows the same functionality if you map the field and set the Element name to be the name of the public property which will be used by Linq.\n\nhttps://groups.google.com/forum/?fromgroups=#!topic/mongodb-csharp/hnumCgDD9-M\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5018912b45d36a0a27",
    "number": 153,
    "body": "I've simply changed two lines of code so all tests can run successfully on a PC with \",\" (or any other apart from \".\") as decimal separator\n",
    "head_branch": "CSHARP-624-Regional-Settings-Issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5218912b45d36a0a28",
    "number": 152,
    "body": "Adds support for setting the $comment option on a MongoCursor, and to use it in a LINQ query. This can be very useful during profiling to tag queries with a comment that shows up in system.profile.\n\nExample usage:\n\n``` csharp\nvar result = collection.FindAll().SetComment(\"querytag\").ToList();\n```\n\nand for LINQ:\n\n``` csharp\nvar result = collection.AsQueryable()\n                       .Where(o => o.Field == 1)\n                       .WithComment(\"querytag\")\n                       .ToList();\n```\n\nOur use case for this is basically that we have a lot of different clients accessing the same database. In some cases we see slow queries and we'd like to know which app, and which class is generating the query. We'd like to just use the logged in user name to distinguish between apps, but we go through mongos, and because of [SERVER-7538](https://jira.mongodb.org/browse/SERVER-7538) we can't get that info. So, instead we'd like to just tag all our queries with a $comment to be able to trace where they're coming from.\n",
    "head_branch": "add-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5318912b45d36a0a29",
    "number": 151,
    "body": "There should not be any difference now on how Timestamp fields are filled by server in documents with and without discriminator. \nOnly if SerializeIdFirst option is on.\n",
    "head_branch": "CSHARP-672",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5418912b45d36a0a2a",
    "number": 150,
    "body": "",
    "head_branch": "CSHARP-650",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5518912b45d36a0a2b",
    "number": 149,
    "body": "If the value of a KeyValuePair is null, use the Object serializer; otherwise, grab the serializer for the value type.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8b2c494b42760a5f10b21629c4436c6c47526a0b into 25e1ef3db3f595af104b20e990e889fdebb32460"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5618912b45d36a0a2c",
    "number": 148,
    "body": "The problem is caused by the cast expression generated in comparisons between types that can be implicitly converted in each other. In this case it is enough to use the underlying expression without cast for JSON serialization.\n",
    "head_branch": "CSHARP-613",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5718912b45d36a0a2d",
    "number": 147,
    "body": "This is to support creation of the text indexes as per:\nhttp://docs.mongodb.org/manual/release-notes/2.4/#text-indexes\n\nI used the same pattern from `IndexKeysBuilder` to implement `IndexOptions<TDocument>` and `IndexOptionsBuilder<TDocument>` to allow specifying the text weights using plain string names or strongly-typed expressions.\n",
    "head_branch": "full-text-indexing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5818912b45d36a0a2e",
    "number": 146,
    "body": "This is a relatively simple update.\n\nImplemented CSHARP-554 - CopyDatabase in MongoServer. Did not include a fromHost parameter for now, as I figured we could add an overload in the future. To do that, we'd need a way to handle authentication on the host server of the original database. I added a test to the MongoServerTests.\n\nSorry about the previous aborted request - I needed to rebase my repo.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5918912b45d36a0a2f",
    "number": 145,
    "body": "This is a relatively simple update.\n\n1) Fixed a compilation issue in UpdateBuilder that was breaking the build. Updated references to \"document\" to the instance-level \"_document\" object in the Pull method.\n\n2) Implemented CSHARP-554 - CopyDatabase in MongoServer. Did not include a fromHost parameter for now, as I figured we could add an overload in the future. To do that, we'd need a way to handle authentication on the host server of the original database. I added a test to the MongoServerTests.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5a18912b45d36a0a30",
    "number": 144,
    "body": "Problems:\n1. The SystemProfileInfoSerializer used the name \"lockStatMillis\" for the lock statistics key name. At least in MongoDB 2.2 the correct name is \"lockStats\"\n2. The SystemProfileLockStatisticsSerializer used the names \"timeAcquiring\" and \"timeLocked\" where the right names are \"timeAcquiringMicros\" and \"timeLockedMicros\".\n3. The timespan units used were milliseconds, where the correct units are microseconds. Added the option MicroSeconds to the TimeSpanSerializer and set the SystemProfileReadWriteLockStatisticsSerializer to use Microseconds.\n4. NOT FIXED: The TimeSpanUnits.Nanoseconds is wrong. 1 millisecond is not 1000 nanoseconds, its 1000000 nanoseconds. This option should probably be removed since TimeSpan doesn't have nanosecond precision (most accurate precision is ticks, where 10000 ticks are one millisecond).\n",
    "head_branch": "deserialize-profiling-lockstats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5b18912b45d36a0a31",
    "number": 143,
    "body": "The field \"nupdated\" that shows the number of documents updated by an update operation was missing from the SystemProfileInfo class. It is now added as a .NumberUpdated property.\n",
    "head_branch": "add-updated-count-to-system-profile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5c18912b45d36a0a32",
    "number": 142,
    "body": "Accidental regression from https://github.com/mongodb/mongo-csharp-driver/commit/5a62ca86fba984803e445a1d182bc125a56c7714 caused generic interface member mappings to throw.\n",
    "head_branch": "staging2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5d18912b45d36a0a33",
    "number": 141,
    "body": "https://jira.mongodb.org/browse/CSHARP-635\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5e18912b45d36a0a34",
    "number": 140,
    "body": "When using an expression that uses an expression tree with a reference\ntype return type (System.Object, IComparable, etc.) and an actual return\nvalue that's a value type (System.Int64, System.DateTime, etc), the\nExpressionVisitor strips out  the `Convert(c => c.LX)` to just `c => c.LX`.\n\nfixes CSHARP-632\n",
    "head_branch": "no-convert-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb5f18912b45d36a0a35",
    "number": 139,
    "body": "Couple of features for the Linq provider to make it more powerful, and more on par with the lower level API:\n1. Explain extension method on IQueryable<T>\n\n```\nBsonDocument plan = \n    collection.AsQueryable<T>().Where(o=>o.Name == \"test\").Explain();\n```\n1. WithIndex extension method on IQueryable<T>, for index hinting. Can take a string or BsonDocument:\n\n```\ncollection.AsQueryable<T>().Where(o=>o.Name == \"test\").WithIndex(\"foo\").ToList();\ncollection.AsQueryable<T>().Where(o=>o.Name == \"test\").WithIndex(new BsonDocument(\"Name\",1).ToList();\n\n```\n",
    "head_branch": "linq-index",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6018912b45d36a0a36",
    "number": 138,
    "body": "The invariant methods of \"ToLower\" and \"ToUpper\" were added, along with all applicable unit tests.\n\nCorresponds to Jira issue CSHARP-626.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6218912b45d36a0a37",
    "number": 137,
    "body": "This is a very simple change that I made as part of our current project to allow us to do basic linq queries against weakly typed documents. The limitation is that it does not support nested documents so you can only write queries against bson elements in the root.\n\nI don't know if this is something that you would consider including as it may have implications for other functionality that I'm not aware of, but as it was such a small change I thought I'd send a PR anyway!\n\nAlso apologies for the line endings but I did not notice until I pushed.\n\nPredicate Translator\\BsonInfoFinder will now attempt to look for a BsonDocumentSerializer in VisitGetItem.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6318912b45d36a0a38",
    "number": 136,
    "body": "By being able to support conversion to String, you insulate any wrapper/test classes from having to directly reference the BSON assembly.  Your domain class can expose a String property called ObjectId which simply returns the Id property as a string.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6418912b45d36a0a39",
    "number": 135,
    "body": "By default the driver uses JsonOutputMode.Shell when calling .ToJson() and that causes all guids to come out as a guid string wrapped in a function which is on the utilities for the shell that transforms it into its binary counterpart, but when calling .ToJson() with JsonOutputMode.JavaScript it outputs all guids as a separate object with \"$binary\" and \"$type\" attributes being \"$binary\" a base64 value. With the current \"fix\" an exception was added so that on JsonOutputMode.JavaScript the guid comes as a string which is far way simpler to use.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6518912b45d36a0a3a",
    "number": 134,
    "body": "Fixes the FormatException message in the path in\nMongoServerAddress::Parse where the provided 'url' does not pass\nthe ::TryParse criteria for correctness. The intent was to provide\nthe offending value in the message, but the developer forgot to\nfill in the {0} placeholder.\n\nMongoServerAddress::{Parse,TryParse} could use some more hardening\nand testing but that should be a separate improvement I suppose.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6618912b45d36a0a3b",
    "number": 133,
    "body": "I faced an issue, when tried to pass _QueryDocument_ as an element of array to **Database.Eval()** method.\nInternally it called **BsonArray.Create()**, which in turn called **TryMapToBsonValue()** method for each of array elements.\nIt failed to convert _QueryDocument_ to _BsonValue_ although it is already a _BsonValue_. So, I added few lines of code to the very beginning of the method to cover that simple case.\n",
    "head_branch": "9749b71be6bbbb9778f9e4cb4fd0f85e3ab85c74",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6718912b45d36a0a3c",
    "number": 132,
    "body": "This change to the Product.wxs installer file means that the DLL files will automatically be added to the Global Assembly Cache by the installer.\n\nIt's achieved by using the 'Assembly=\".net' attribute on the File tag, however it can't just be added to the existing file declarations as it seems to be an either/or whether the file gets written to the disk or to the GAC. Therefore they have been redeclared for adding to the Gac. \n\nEven though in reality there is no file location for the Gac file declarations, a location still has to be specified though it cannot be the same location as the file versions of the DLLs or it complains about conflicts.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6818912b45d36a0a3d",
    "number": 131,
    "body": "One commit makes it easier to use PODOs in powershell. The other adds a unit test in powershell for the Bson assembly.\n",
    "head_branch": "PowerShell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6918912b45d36a0a3e",
    "number": 130,
    "body": "Robert et al,\n\nDo you feel this is desirable? It adds hyperlinks when you generate documentation in sandcastle.\n\nWanted to discuss before I did a more thorough job.\n\nJustin\n",
    "head_branch": "Documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6a18912b45d36a0a3f",
    "number": 129,
    "body": "Allows us to get all class maps out of BsonClassMap.\n",
    "head_branch": "allClassMaps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6b18912b45d36a0a40",
    "number": 128,
    "body": "Just added yet another simple member element name convention turning everything to lower-case.\n\n//Daniel\n",
    "head_branch": "x2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6c18912b45d36a0a41",
    "number": 127,
    "body": "For some reason MongoConnectionStringBuilder can't properly parse connection string that contains '=' (equal) symbol and fails with ArgumentException.\n\nFor connection string: mongodb://localhost/testDb?safe=true\nIt says: System.ArgumentException : Invalid keyword 'mongodb://localhost/testdb?safe'.\n\nI can't find how to create an Issue, so decided to highlight this via pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6d18912b45d36a0a42",
    "number": 126,
    "body": "If no collection name is specified, the collection name will be inferred from the type name.\n\nAlso added passing unit tests\n",
    "head_branch": "GetCollection_without_specifying_name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6e18912b45d36a0a43",
    "number": 125,
    "body": "A typeconverter allows webapi and mvc to automatically bind HttpRequest parameters/payloads to ObjectIds.\nThis converter support converting from a string to an ObjectId, and from an ObjectId to a string or DateTime.\n\nThis modification needs to be done at the driver level since the 'TypeConverter' attribute needs to be applied to the ObjectId class definition.\n\nThese enhancements are accompanied by unit tests.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb6f18912b45d36a0a44",
    "number": 124,
    "body": "This pull request adds additional And overloads in the strongly typed QueryBuilder, which allows each query to be defined in lambda expressions.  Here is a sample usage:\n\n``` csharp\nvar people = GetPersonCollection(); // type = MongoCollection<Person>\nvar queryBuilder = new QueryBuilder<Person>();\npeople.Find(queryBuilder.And(query => query.EQ(p => p.FirstName, \"Test\"), query => query.NE(p => p.LastName, \"User\")));\n```\n\nOr with the enhancements in #123, this would be possible:\n\n``` csharp\nvar people = GetPersonCollection(); // type = MongoCollection<Person>\npeople.Find(people.QueryBuilder.And(query => query.EQ(p => p.FirstName, \"Test\"), query => query.NE(p => p.LastName, \"User\")));\n```\n",
    "head_branch": "NewQueryBuilderAndOverloads",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7018912b45d36a0a45",
    "number": 123,
    "body": "Added properties for instances of QueryBuilder<TDefaultDocument> and UpdateBuilder<TDefaultDocument> in the MongoCollection<TDefaultDocument> class.\n",
    "head_branch": "BuiltInBuilders",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7118912b45d36a0a46",
    "number": 122,
    "body": "1. Ongoing profiling of the driver revealed that refactoring discriminator handling code was a strong candidate for performance improvement.\n   - A fair bit of time was being spent in Type verification, DiscriminatorConvention lookup, Serializer lookup, and the associated locking code.\n   - Of note, discriminator code was being executed during deserialization regardless of whether it was appropriate for the Type.\n     - Specifically, only unsealed class types can have useful discriminators in .Net as only these types can be inherited.\n     - Additionally, the implementation of the StandardDiscriminator was always evaluating for primitive types, however the only nominal type that is assignable at the CLR layer is System.Object, making much of the computation unnecessary.\n2. To achieve performance and maintainability improvements the following was done:\n   - Factor out discriminator code into a DiscriminatorSerializer wrapper serializer.\n   - Only wrap serializers that can be discriminated.\n   - Factored out previous performance related serializer caching work into a SerializerHolder class\n     - Replaced lots of duplicate discriminator lookup -> serializer lookup -> serializer caching code with this class.\n     - Also applied this class to generic collections that had been missed in previous rounds of performance improvement as they were not covered by benchmarks.\n     - In several cases this reduced class size as these holders could be made static relative to the generic class types.\n3. To improve the performance of discriminator lookups the following was done:\n   - Combine BsonSerializer.__discriminatedTypes and BsonSerializer.__typesWithRegisteredKnownTypes into a single dictionary.\n   - Make accesses to the new dictionary only require a lock for updating\n4. Another minor performance improvement to reduce the overhead of BsonClassMapSerializer.DeserializeMember (one of the hottest methods)\n   - Move the try/catch setup to outside the member loop in BsonClassMapSerializer.Deserialize, this way the try/catch only needs to be setup once per instance rather than once per member.\n5. Another minor performance improvement to reduce the overhead of DictionaryGenericSerializer\n   - Call dictionary.Add(key, value) instead of .Add(keyValuePair) as the second requires cloning a struct on the stack as the struct is passed by value\n6. Net is that classes with primitive properties (i.e. almost all) benefit from this, as well as all generic collection types.\n7. Finally, care was taken not to disturb any publicly facing APIs, as the aim was to make improvements turnkey.\n\nRaw profiling data, I can provide hard VS profiler results and benchmark code as well if needed.\n\nIterations  master  optimiz3    Improvement\n25000   10.3441722  9.3571325   10%\n25000   10.4369589  9.4071719   10%\n25000   10.5356442  9.4646407   10%\n25000   10.4389251  9.409648367 10%\n",
    "head_branch": "staging3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7318912b45d36a0a47",
    "number": 121,
    "body": "Fix for CSHARP-541: Make BsonClassMap<TClass>.MapMember Typesafe\n- Rebased on top latest changes from master\n- Added a strongly typed BsonMemberMap\n- Made MapMember variants return a strongly typed BsonMemberMap\n  - This made it simpler to write member mapping code\n    - Before: BsonClassMap.RegisterClassMap<MyType>(classMap => { classMap.AutoMap(); classMap.MapMember(myType => myType.MyField).SetShouldSerializeMethod(obj => !((MyType)obj).MyField != null); });\n    - After: BsonClassMap.RegisterClassMap<MyType>(classMap => { classMap.AutoMap(); classMap.MapMember(myType => myType.MyField).SetShouldSerializeMethod(myType => myType.MyField != null); });\n- Deprecated MapField, MapProperty, MapIdField, MapIdProperty, MapExtraElementsField, MapExtraElementsProperty, UnmapField, and UnmapProperty\n  - In .Net it is forbidden to have have a property and field with the same name; having both *Field and *Property versions when the API was capable of determining what to do needlessly complicated the API.\n  - The lambda versions were semantically incorrect as they were calling MapMember, which does not distinguish between fields and properties.\n  - All of this code was refactored to a few small versions, which reduced bloat (for example, all versions called MapMember, which performs argument validation and freeze checking).\n- Fixed a small validation bug in SetSerializeDefaultValue\n- Eliminated the custom GetDefaultValue code in BsonMemberMap and replaced it with default(TMember)\n",
    "head_branch": "staging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7418912b45d36a0a48",
    "number": 120,
    "body": "Dear Maintainers,\n\nPlease consider following small addition as it is an really blocking issue for one of the projects I'm working on.\n\nHere is some background:\n\nWe're implementing RESTful API for our system backed by MongoDB. In fact it is an enhanced OData protocol implementation. One of the crucial OData feature we're trying to benefit of is the querying capabilities which matches very good with what mongo provides. See http://www.odata.org/documentation/uri-conventions#FilterSystemQueryOption for examples.\n\nSo we're parsing `$filter` URI parameter and building corresponding `Expression` in order to apply it to queryable mongo collection. And most of the times those expressions are of types `Expression.And` and `Expression.Or` (see MSDN article \"ExpressionType Enumeration\" at http://msdn.microsoft.com/en-us/library/bb361179). But current mongo C# driver does not support this.\n\nFrom aforementiond MSDN topic\n\n> **And**: A bitwise or logical AND operation, such as (a & b) in C# and (a And b) in Visual Basic.\n\nwhile\n\n> **AndAlso**: A conditional AND operation that evaluates the second operand only if the first operand evaluates to true. It corresponds to (a && b) in C# and (a AndAlso b) in Visual Basic.\n\nlooks like the first expression type (And) is more semantically correct in most of the cases. (Despite of the fact that in most of the cases `&&` operator will be used by developers from the C# code, what makes sense for in-memory collections but not LINQ providers for databases).\n\nI'd be pleased to provide more details in case you need or contribute in any other way.\n\nRegards,\nIgor Toporet\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7518912b45d36a0a49",
    "number": 119,
    "body": "Hello\n\nI have created 6 new interfaces..\n- IMongoServer\n- IMongoDatabase\n- IMongoCollection\n- IMongoCollectionT\n- IMongoCursor\n- IMongoCursorT\n\n..to enable mocking and thus unit testing of MongoDB client apps.  There is much more of the API that IMHO could benefit from interfaces for this purpose but this was enough for my current requirement.\n\nI previously achieved the same thing with a separate lib (https://github.com/myles-mcdonnell/DCouple.Mongo) which includes a client demo app. but I think it's better to enhance the driver rather than manage a separate lib.\n\nI also removed the explicit interface definition of GetEnumerator() on MongoCursor as I don't think it is required.  In this case defining the generic GetEnumerator on the concrete MongoCursor<T> as new is ok as IEnumerable<T> implements IEnumerable so it doesn't break polymorphism.\n\nI hope you like the changes!\n\nKind Regards\nMyles\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7618912b45d36a0a4a",
    "number": 118,
    "body": "MongoUrl.Create() was taking a lock on each call, whether read or write.\nImplemented lockcless read to reduce cost of Create when the MongoUrl is already in cache.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7718912b45d36a0a4b",
    "number": 117,
    "body": "Will not call ensureIndex for Open-FileModes. Thanks to @KBBA\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7818912b45d36a0a4c",
    "number": 116,
    "body": "Change help to install by default\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7918912b45d36a0a4d",
    "number": 115,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a3ffbf675320092b778b3ffc638aea3a816eefaf into 1ee555a2d652e7653c99cca16994e7401204fe80"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7a18912b45d36a0a4e",
    "number": 114,
    "body": "1. Factored out four branches in BsonTrieNode.GetChild\n   a. Eliminated the need to check _isFrozen\n   b. Eliminated the need to check _minKeyByte\n   c. Eliminated a CLR bounds check on _keyByteIndexes\n   d. Eliminated a CLR bounds check on _children\n2. Factored out the maxKeyByte member in BsonTrieNode\n3. Refactored a foreach into a for in BsonTrie.TryGetValue (for is faster than foreach on arrays due to better CLR support)\n4. Made BsonBuffer.DecodeUtf8String static\n5. Factored out a branch in BsonBuffer.DecodeUtf8String\n   a. Eliminated a CLR bounds check on __asciiStringTable\n6. Updated BsonBuffer.ReadCString to use an Int32 instead of an Object for the default type (carries no GC checking overhead and is the default .Net register type)\n7. Fixed a comment typo in BsonTrie.TryGetValue\n8. Fixed an XML comment error\n9. Switched BsonTrieNode._children from List to Array (Lists are slower than Arrays)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b36ad3099c401960059d6a128ef459b79a2ab90a into 6c270e278071335a2140a06746d98e450b92e083"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb7b18912b45d36a0a4f",
    "number": 113,
    "body": "Profiling showed that during deserialization, significant time was being spent in the following functions:\n1. System.Type.IsAssignableFrom(class System.Type)  14.35%\n2. MongoDB.Bson.IO.BsonBinaryReader.ReadBsonType() 11.46%\n3. MongoDB.Bson.Serialization.BsonClassMap.GetMemberMapIndexForElement(string) 7.68%\n\nThis change addresses all 3 items:\n1. Fixed by placing a quick type check before the hot path IsAssignableFrom calls. In most cases the types are equivalent which eliminates the call to IsAssignableFrom.\n2/3. Most of the time in ReadBsonType is due to a call to ReadCString. All of the calls to GetMemberMapIndexForElement use the value returned by ReadCString. To improve this, I've implemented a trie (http://en.wikipedia.org/wiki/Trie) optimized for mapping input bytes sequences directly to result values specified by the caller. In the case of BsonClassMapSerializer, the trie directly maps the input binary UTF8 representation of element names to member map indexes. This completely eliminates all dictionary lookups, UTF8 string conversions, intermediary memory allocation, and does so in O(m) time where m is the length of the input string. Contrast this with the existing implementation where there are 5 (!!!) O(m) operations (1. Find the null byte, 2. Count the number of UTF8 characters, 3. Decode the UTF8 characters into a string, 4. Hash the string, 5. Compare the string the key in the hashtable bucket).  Additionally, I’ve factored the trie so any deserializer can make use of one when decoding to immediately switch to the correct state when decoding.\n\nAdditionally I’ve also implemented two other minor improvements:\n1. Replaced the lookup table based GetLeastSignificantBit implementation in BsonClassMapSerializer with a binary search based one.  This is significantly faster on .Net because array accesses require an indirection and a managed bounds check.  In my own side by side testing, the binary search based one is 40-50% faster.\n2. Added the readonly attribute to _declaredMemberMaps in BsonClassMap and cleaned up the initialization of this value. Minor improvement but the field is now consistent with _allMemberMaps and fewer copies happen during construction.\n\nRaw performance profiling data:\n\nRun Iterations  master  optimiz3    Improvement master_multi    optimiz3_multi  Improvement\n1   50000   15.1557587  11.1471546  26% 19.5359217  11.3929297  42%\n2   50000   14.8104048  11.2266639  24% 19.579202   11.3677135  42%\n3   50000   14.8222835  10.9488162  26% 19.5564535  11.6768085  40%\nAverage 50000   14.92948233 11.1075449  26% 19.5571924  11.47915057 41%\n\nmaster/optimiz3 = runs with single character field names; master_multi/optimiz3_multi = runs with multi-character field names.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge adcaff5791a837c796de096ce035b8c263d7da20 into f74ddc37b83dfb379b8f90ae30bb24b7b1bb5eed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb7c18912b45d36a0a50",
    "number": 112,
    "body": "Hi there,\n\nthis is a small fix to the BsonTypeMapper to accept custom type mappers for enum types. I added a unit test for this scenario as well.\n\nCheers,\nGregor\n",
    "head_branch": "fix_custom_type_mapper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7d18912b45d36a0a51",
    "number": 111,
    "body": "Wix installer. This assumes you have the help file built. Also the supplied bat file can be run to create the installer. You should not need to change the wxs file for subsequent version. Just edit the bat file.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7e18912b45d36a0a52",
    "number": 110,
    "body": "Only modified 2 files, PredicateTranslator, and SelectQueryTests. Not sure why the others are included in this request- not a git expert.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb7f18912b45d36a0a53",
    "number": 109,
    "body": "Non-exceptional parse failures in MongoUrlBuilder (e.g. attempting to parse a numeric 'w' value from \"w=majority\") no longer cause and swallow first-chance exceptions.  The behavior of the XmlConvert methods used previously has been preserved for compatibility.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8018912b45d36a0a54",
    "number": 108,
    "body": "...iosyncracies in expression tree generation.\n\nThe MyProject directory is not orphaned and cannot be deleted (I tried).  Apparently, the VB project uses it underneath to keep track of things that it doesn't want the developer to be able to touch except through a designer.  VB is being helpful and hiding stuff (boo).\n",
    "head_branch": "vblinq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 78869e1a6e3f5806dd5e8070c8318e14890b21e4 into 3fac6fec6ff26df3e36e40a8271910e5889958ac"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb8118912b45d36a0a55",
    "number": 107,
    "body": "This essentially unsets any default values applied in the ctor and is completely unexpected.  This will break anyone depending on values they set in the constructor not getting set.  If anyone is depending on that, then...\n",
    "head_branch": "csharp_467",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 01c9058cde28ea9cabd53817864ef1bcc70d4fc3 into 4517ce32dcdd51412624e3a03d5e4bfbac56abb3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb8318912b45d36a0a56",
    "number": 106,
    "body": "...ranslating into In queries.\n",
    "head_branch": "csharp_462",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9abd747332f87751a9296191120df5899379afd5 into 4517ce32dcdd51412624e3a03d5e4bfbac56abb3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8418912b45d36a0a57",
    "number": 105,
    "body": "ReadCString is one of the top CPU consumers during deserialization because 2 O(N) passes are performed to calculate string length plus an additional O(N) pass to copy memory. Performance can be significantly improved by special casing empty, single character, and the \"_id\" strings during deserialization. Doing so eliminates transient string memory allocations, and is done using a single O(1) lookup. This improves Dictionaries encoded as ArrayOfDocuments ({ k, v }) and general purpose users that are already following the MongoDB performance best practice of using single character field names.\n\nThis following scenario is special cased in ReadCString:\n1. The \"_id\" string\n\nThis following scenarios are special cased in both ReadCString and ReadString:\n1. Empty strings\n2. Single character strings (by definition ASCII when dealing with UTF8)\n\nOther notes:\n1. Fixed an off-by-one bug in ReadString in a call to EnsureDataAvailable.\n2. Switched to a UTF8Encoding that will throw on invalid characters rather than corrupting the returned data.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8518912b45d36a0a58",
    "number": 104,
    "body": "Adds in linq tests around vblinq that mimic their C# counterparts.  This pull request needs to be merged after the refactor pull request.\n",
    "head_branch": "vblinq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8618912b45d36a0a59",
    "number": 103,
    "body": "This is a bunch of work for CSHARP-453 reorganizing and refactoring the bson library.\n",
    "head_branch": "refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8718912b45d36a0a5a",
    "number": 102,
    "body": "Fixes and adds a unit test to cover an edge case and where a readonly member not present in the input stream could result in an infinite loop.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 29672a759795d5166dc389bd11c8611b3fbc2029 into 2a6e37dd9316470abaf7949e3fcf4be8b45905aa"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8818912b45d36a0a5b",
    "number": 101,
    "body": "Robert and I had been discussing CHARP-4522 and we accidentally both implemented this separately. This merges the best parts from both of our work. (My original implementation can be found here https://github.com/optimiz3/mongo-csharp-driver/commit/f1652202981ff87c715caf9ca8777cf9718a65d4.)\n\nThis change uses an O(1) bit array when determining which elements have been deserialized. One trick it uses is leveraging how .Net default initializes array values to 0 for the bit array. It also significantly enhances sparse structure processing.\n\nAfter running several tests I found this improved deserialization performance by an average 7% in the dense structure case and an average 27% in the sparse structure case over the current build in mainline.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c831935d66e5e2524a7062f94a20283a857a7131 into 2ab98cef79dcbecd72e30ac1c9f7bcf3a75536d3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb8918912b45d36a0a5c",
    "number": 100,
    "body": "I needed standalone support for ToLower() == \"constant\" to support hosting a nuget feed over mongodb.\n\nThis adds support for things such as collection.AsQueryable<Product>().Where(p => P.Category.ToLower() == \"some category\"). \n\nIncluded tests for:\nToLower() == \"lower\"\nToLower() == \"Not Lower\"\nToLower() == null\nToLower() != \"lower\"\nToLower() != \"Not Lower\"\nToLower() == null\nToUpper() == \"UPPER\"\nToUpper() == \"Not Upper\"\nToUpper() == null\nToUpper() != \"UPPER\"\nToUpper() != \"Not Upper\"\nToUpper() != null\n\nTranslation is to regex in the form of /%constantvalue$/i except in the never-match or match-all scenerios. Translation also includes use of Query.Exists so an expression testing FooBar.ToLower()/ToUpper() will never be evaulated on a doc where FooBar element does not exist.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8a18912b45d36a0a5d",
    "number": 99,
    "body": "Deserialization CPU performance was suffering because both LookupDiscriminatorConvention and LookupSerializer were being called for nearly every class member. Both functions take out and release the global config read-lock. Profiling showed that around 22% of all CPU time was being spent in ReaderWriterLockSlim.TryEnterReadLock and ReaderWriterLockSlim.ExitReadLock due to these functions.\nFix makes the BsonClassMap and BsonMemberMap cache references to the appropriate IDiscriminatorConvention and IBsonSerializer instances. By doing this, lookups are avoided while maintaining semantic correctness due to the associated BsonClassMap and BsonMemberMap types never changing once constructed. Incorporated much feedback from discussion with Robert to simplify changes.\n\nOther issues addressed:\n1. BsonSerializer.Serialize had a bug where a class implementing IBsonSerializable would always be serialized using the IBsonSerializable implemention, even if the implementation was overridden by a registered IBsonSerializer.\n2. Modified BsonSerializer to allow only one custom serializer to be registered. This prevents cache consistency issues when a serializer instance is cached within a BsonMemberMap.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 288471f1da15040e0ca1f3f915900fedfb452c8c into b2e03c7f6fbd9b7d8cc97c7d45c5bea5e65ca890"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb8b18912b45d36a0a5e",
    "number": 98,
    "body": "Deserialization CPU performance was suffering because both LookupDiscriminatorConvention and LookupSerializer were being called for nearly every class member. Both functions take out and release the global config read-lock. Profiling showed that around 22% of all CPU time was being spent in ReaderWriterLockSlim.TryEnterReadLock and ReaderWriterLockSlim.ExitReadLock due to these functions.\nFix makes the BsonClassMap and BsonMemberMap cache references to the appropriate IDiscriminatorConvention and IBsonSerializer instances. By doing this, lookups are avoided while maintaining semantic correctness due to the associated BsonClassMap and BsonMemberMap types never changing once constructed. Incorporated much feedback from discussion with Robert to simplify changes.\n\nOther issues addressed:\n1. BsonSerializer.Serialize had a bug where a class implementing IBsonSerializable would always be serialized using the IBsonSerializable implemention, even if the implementation was overridden by a registered IBsonSerializer.\n2. Modified BsonSerializer to allow only one custom serializer to be registered. This prevents cache consistency issues when a serializer instance is cached within a BsonMemberMap.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8c18912b45d36a0a5f",
    "number": 97,
    "body": "Deserialization CPU performance was suffering because both LookupDiscriminatorConvention and LookupSerializer were being called for nearly each class member. Both functions take out and release the global config read-lock. Profiling showed that around 25% of all CPU time was being spent in ReaderWriterLockSlim.TryEnterReadLock and ReaderWriterLockSlim.ExitReadLock due to these functions.\n\nFix makes the BsonClassMap and BsonMemberMap persist references to the appropriate IDiscriminatorConvention and IBsonSerializer singletons.  By doing this, lookups are avoided while maintaining semantic correctness due to the associated BsonClassMap and BsonMemberMap types never changing once constructed.\n\nAlso introduced is the FastSingleton class, which extends the existing runtime singleton logic as follows:\n1.  Enables more static singleton binding both at compile time and when using generics.\n2.  Enables lazy singleton instantiation\n3.  Decouples singleton data structure logic from type-specific instantiation logic.\n4.  Provides structural performance advantages by isolating runtime binding reader/writer locks and dictionaries by use-case.\nOther issues addressed:\n1.  DefaultSerializers are now always lazy-bound. This simplified the implementation by ensuring singletons are only set once in the case where a user has specified a custom serializer.\n2.  BsonSerializer.Serialize had a bug where a class implementing IBsonSerializable would always be serialized using the IBsonSerializable implemention, even if the implementation was overridden by a registered IBsonSerializer.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8d18912b45d36a0a60",
    "number": 96,
    "body": "Fix for CSHARP-448 and CSHARP-449.  Accidentally got them tangled up in the same branch.\n",
    "head_branch": "csharp_448",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 22807e2d6265a1917b63a2bf67a2382978c69d8a into 3eb904b1adcb46bc97ebb9184f5b04cc6a01e1ad"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb8e18912b45d36a0a61",
    "number": 95,
    "body": "I'm writing a limited security framework, where I do some authorization then filter down an IQueryable to ensure people don't get back stuff they shouldn't be allowed to see. Common stuff. Problem I have is they can belong to multiple groups, and I want the where to focus that, here's the code I'm using now.\n\nvar restriction1 = restriction;  \nsource = source.Where(i => i.DivisionIds.Any(y => y == restriction1.AppliedTo.Qualifier.Id));\n\nSo this is to allow this incredibly contrived example, I don't think my implementation is good in any way, but it works and might give you some direction in a way you might like to implement it. Added a test that should be 3.5 compatible as well. Broke 1 test that was expecting a NotSupportedException.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb8f18912b45d36a0a62",
    "number": 94,
    "body": "When reading large amounts of data BsonBuffer.ReadCString is one of the top two most CPU costly functions. This is because 3 passes have to happen over the input data:\n1. Array.IndexOf to find the null character\n2. Encoding.GetString\n   a. UTFEncoding.GetCharCount (internally) to size the string\n   b. UTFEncoding.GetChars (internally) to populate the string\n\nCStrings are almost exclusively used for BSON field names, meaning they are almost always short ASCII strings:\n\nBy leveraging step 1 to detect if the string is ASCII only, we can use ASCIIEncoder to reduce step 2a from O(N) to O(1) when the string is ASCII only.\n\nWhile in theory step 2 could be eliminated if we did direct conversion during step 1, this would require a temporary char[] array because .Net does not permit strings to be modified directly (resulting in another copy), thus negating the benefit.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9018912b45d36a0a63",
    "number": 93,
    "body": "...elated to mapping readonly fields and properties.  added support for persisting readonly fields and properties and not deserializing them.\n",
    "head_branch": "csharp_441",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 24813c21ad9f1ae328b4f9aae9f08ce0c91a582e into ca00451b8977c1e19e39466856e4384c44c4b412"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb9118912b45d36a0a64",
    "number": 92,
    "body": "...on to remove the redundant type specification requirement.\n",
    "head_branch": "csharp_438",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 16de376dee5db79dadce2197fbd7e6aaaf8ed829 into b8f2a4b6ba0e63bbbb364032f6da4c8fe35b3096"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb9218912b45d36a0a65",
    "number": 91,
    "body": "Currently, if I filter an IQueryable<T> with a Where from a set of interface types, I get a NullReferenceException, this scenario should be allowed. Fix and test are attached.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9318912b45d36a0a66",
    "number": 90,
    "body": "Would be nice to have a link to the tutorial. Took me a bit to figure out it was on the mongo site.\n\nthx!\n",
    "head_branch": "tutoriallink",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9418912b45d36a0a67",
    "number": 89,
    "body": "Attached is a potential fix for CSHARP-420.\n\nThe details can be found here:\n\nhttps://jira.mongodb.org/browse/CSHARP-420\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9518912b45d36a0a68",
    "number": 88,
    "body": "Using the method SetConstructor in BsonClassMap, you'll be able to inject object creation (low coupling into IoC frameworks). \nThis way you can inject services, configuration dependencies and other objects making rich objects instead POCO\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fa544b80f17de277d4e1fb3edd8666e052403fb6 into 2f4ab7870bf416186bc5d3749b71ac956467c045"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb9618912b45d36a0a69",
    "number": 87,
    "body": "Adding overloads for Remove on MongoCollection to allow for the removing by id similar to the FindById overloads.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9718912b45d36a0a6a",
    "number": 86,
    "body": "Specifically, these changes make it possible to inject lazy-loading dynamic proxies (i.e. Castle DynamicProxy) at deserialization time, while still taking advantage of BsonClassMapSerializer.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9818912b45d36a0a6b",
    "number": 85,
    "body": "Unify Driver.Builder APIs so callers do not need explicitly deal with BsonValues or Wrappers in most cases.\n1. Improve the existing BsonValue.Create factory method to be able to generate document wrappers when presented with a document.\n2. Improve BsonArray to call BsonValue.Create when presented with the object type.\n3. Improve BsonArray to support variable parameter lists.\n4. Refactor redundant API error checking by leveraging existing BsonArray error checking. Also improve performance by eliminating calls to Contains.\n5. Reduce code complexity by having APIs that take lists call the BsonArray version rather than reimplementing logic in multiple places.\n6. Deprecate UpdateBuilder Wrapped APIs as now regular UpdateBuilder APIs that take objects can be used.\n7. Augmented query APIs: All, EQ, In, NE, NotIn to allow complex user types\n8. Augmented update APIs: AddToSet, AddToSetEach, Pull, PullAll, Push, PushAll, Set to allow complex user types\n9. Simplifies caller code by not pushing Wrapper and BsonValue complexity up the stack.\n10. Enables callers to pass in BsonSerializable custom types.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9a18912b45d36a0a6c",
    "number": 84,
    "body": "",
    "head_branch": "serialization_convention",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 20e9daf7e270eb04f1015555e682cc3f5bad890e into fb494900d0b1590cd059ae514018d47a24c24c48"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb9b18912b45d36a0a6d",
    "number": 83,
    "body": "Created a constant for the field \"_id\" which is used frequently and exposed it publicly as BsonDocument.ID_FIELD.  Should help users when building queries against the _id field to remove another magic string.  Especially since the IdConvention allows them to use \"Id\" as a field-name.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9c18912b45d36a0a6e",
    "number": 82,
    "body": "Improve BsonMemberMap.GetDefaultValue to not need to call Activator.CreateInstance for simple cases.\nImprove BsonClassMap<TClass>.GetMemberInfoFromLambda and BsonClassMap<TClass>.GetMemberNameFromLambda to not need to perform extra reflection.\nUpdate several failing DriverOnline unit tests.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5a62ca86fba984803e445a1d182bc125a56c7714 into 48c13f0c3e995a74bbbd71b4b5e31153823dd0be"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9d18912b45d36a0a6f",
    "number": 81,
    "body": "In .Net null is a subset of default(T), as null is the default value for reference types.  Providing BsonIgnoreIfDefaultAttribute generalizes this functionality and extends it to value types.  As a result, BsonIgnoreIfNullAttribute is deprecated and superseded with BsonIgnoreIfDefaultAttribute.\n\nAdditionally, BsonDefaultValueAttribute.SerializeDefaultValue is also deprecated as it requires the user to define a default value, even if there was no user intent to override the default value. BsonDefaultValueAttribute.SerializeDefaultValue is also problematic because it requires the user to have access to a constant, which makes usage with non-constant defaults such as DateTime.MinValue impossible due to DateTime.MinValue being a readonly instance.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dbdcccdcc8751a96b08afff626bdd8b421e89ef5 into c61336503dbf9f394c83b07274f76e929574a8d1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fb9e18912b45d36a0a70",
    "number": 80,
    "body": "Not much code to handle this.  Let's the consumer decide what and how they want to deal with this type of scenario without using reflection on the serializer side.\n",
    "head_branch": "supportinitialize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e389213836f298a2d561517ac3f7223cde1da491 into ba81ea001f45d1bd65068b1f267a765925a26859"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fb9f18912b45d36a0a71",
    "number": 79,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba018912b45d36a0a72",
    "number": 78,
    "body": "Should make things just a little bit faster!\n\nSee: http://blogs.msdn.com/b/ericlippert/archive/2009/06/11/what-does-the-optimize-switch-do.aspx\n",
    "head_branch": "nuget_release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba118912b45d36a0a73",
    "number": 77,
    "body": "Prevents the url being subtly changed e.g. http://domainonly -> http://domainonly/ (with trailing forward slash)\nAlso allows relative urls to be persisted and loaded\n",
    "head_branch": "uri_serialization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 36b2a5441105b27055592023270c250a1b57ee30 into f52c26d9dab07ed62bb41e215f6f45df10cd59f3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba218912b45d36a0a74",
    "number": 76,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 27bb8323ad4f94d6190f1b2f367b424fe260e823 into 1006e4fc2a5034b7515ff1a8b522d6163abfe431"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba318912b45d36a0a75",
    "number": 75,
    "body": "Draft for ping buckets to select instance based on ping time.\nThe change is based on https://jira.mongodb.org/browse/JAVA-428 proposal : \ninstance are put in exponentially growing buckets and instance selection is done on the fastest non-empty bucket.\n\nNOT properly tested yet, tell me if you are interested in more tests.\n\nIs useful onyl when connected to a replicaset, I don\"t know yet what to do when connected to several mongos.\n",
    "head_branch": "pingBucket",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba418912b45d36a0a76",
    "number": 74,
    "body": "Even if details are not discussed yet, here is a draft for an implementation of ReadPreference in csharp driver.\n\nFurther work needs to apply whatever implementation choice are decided to talk to mongos. \nThe following document can be used : https://jira.mongodb.org/browse/JAVA-428\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba518912b45d36a0a77",
    "number": 73,
    "body": "This separates out the bson and driver DLLs into separate packages. I actually do use the bson dll in projects that have nothing to do with mongo for JSON serialization. The extension methods are simple than json.net.\n",
    "head_branch": "csharp-305",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba618912b45d36a0a78",
    "number": 72,
    "body": "Commit 6f59517f / CSHARP 366 - Use finally instead of catch when rethrowing the original exception.\nReason: Developers consuming the MongoDB CSharp driver with “break on first chance exception” enabled get many false breakpoints due to internal exceptions being thrown and caught which harms the development experience.\n\nCommit df932385 / CSHARP 367 - Make collection parameter optional in constructor for MongoInsertOptions and MongoUpdateOptions.\nReason: Collection operation option classes require the collection instance in order to initialize default values. This violates the API design best practice of not requiring a caller to provide something implicit to the current context. The collection instance is unnecessary as it is being provided to functions that are methods on the collection instance. Did this in a backwards compatible way, where old methods are marked with the ObsoleteAttribute which will generate a warning instructing callers to upgrade.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge df9323857ce14b64e15ec693d7c3cdcec69ff3bc into 4ca3735f8bea6e50fa08b6f57cda7f00b2ca5945"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fba718912b45d36a0a79",
    "number": 71,
    "body": " This version adds support for LINQ to the mongo drivers.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba818912b45d36a0a7a",
    "number": 70,
    "body": "Contains the set of API improvements rstam and I discussed over email:\n\nCommit 63e2d51e - Improve first-chance-exception debugging experience by factoring out …\n    Reason: Developers consuming the MongoDB CSharp driver with “break on first chance exception” enabled get many false breakpoints due to internal exceptions being thrown and caught which harms the development experience.\n\nCommit 2256571c - Improve MongoUpdate and MongoInsert options to not need the class ins…\n    Reason: Collection operation option classes require the collection instance in order to initialize default values.  This violates the API design best practice of not requiring a caller to provide something implicit to the current context.  The collection instance is unnecessary as it is being provided to functions that are methods on the collection instance.\n\nCommit f2925be2 - Unify IgnoreIfNull and SerializeDefaultValue into IgnoreIfDefault. nu…\n    Reason: The Ignore-If-Null semantic is a subset of Ignore-If-Default in .Net.  The default for any reference type in .Net is always null; so and changing this to Ignore-If-Default makes the functionality more useful for value types without any additional API complexity.  \n    Note: This merges the functionality of IgnoreIfNull and SerializeDefaultValue into IgnoreIfDefault.  Doing this greatly simplifies the API as now a caller only has to specify IgnoreIfDefault rather than mixing and matching.  [DefaultValue(<CustomDefaultValue>)] functionality is preserved to enable the default value to be overridden however.\n\nHave verified this passes all unit tests, and have also tested this against our development site.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fba918912b45d36a0a7b",
    "number": 69,
    "body": "Resolved CSHARP-296: Update.Pull doesn't support queries on scalar elements. Added an overloaded method to Update.Pull and UpdateBuilder.Pull to allow IMongoQuery objects to be passed in without a name.  This allows the desired behaviour to be accomplished.  A new unit test was also added to test the overloaded method.\n\nAdditionally, a warning suppression was added to BsonUnitTests.Jira.CSharp310Tests to prevent a warning on a class property being not explicitly set.  The test was verifying that a property in that state would serialize according to convention.\n",
    "head_branch": "6615e2a600fe1686840bfeebd66adb5832fc9dfb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbab18912b45d36a0a7c",
    "number": 68,
    "body": "I made a very simple change to BsonClassMap to resolve bug CSHARP-310: Problems using NeverSerializeDefaultValueConvention. I changed the AutoMapMember method to use the overloaded BsonMemberMap.SetDefaultValue method, passing in a Boolean for serializeDefaultValue based on the convention value already set in the member map. Previously, the other SetDefaultValue method was used, which set the SerializeDefaultValue property of the map to true in all cases. A unit test is included in the BsonUnitTests.Jira namespace. All tests pass.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbac18912b45d36a0a7d",
    "number": 67,
    "body": "I've added a GetProfilingStatus() method to MongoDatabase.  If this looks good, I'll also take a look at SetProfilingStatus(). And after that, maybe CSHARP-318 to add strongly-typed profiler results.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbad18912b45d36a0a7e",
    "number": 66,
    "body": "Robert,\n\nThis takes care of all scalar values. Arrays will be trickier, so I think I should open a separate ticket for them.\n",
    "head_branch": "csharp-313",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbae18912b45d36a0a7f",
    "number": 65,
    "body": "Fixed CSHARP-297. Implemented IsCapped method on MongoDB.Driver.MongoCollection and added Capped property to MongoDB.Driver.CollectionStatsResult. MongoCollectionTests updated with an online test.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbaf18912b45d36a0a80",
    "number": 64,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb018912b45d36a0a81",
    "number": 63,
    "body": "if database has collection named with `newCollectionName', drop it\nbefore rename in atomic way.\n",
    "head_branch": "renameCollectionDropTarget",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 755a7ea44649cc1137e415632babccef0f1aec2f into 3b4b45f66cd682a766c77dc75bbf4295ef24fc64"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fbb118912b45d36a0a82",
    "number": 62,
    "body": "Hi Robert\n\nI'm not sure this is really the right way to solve this but it should demonstrate the issue.\n\nIf you use `[object].ToBsonDocument()` then this converts the bytes of the Guid correctly based on the `BsonDefaults.GuidByteOrder` but the `BsonBinaryData` created ends up with `GuidByteOrder.Unspecified`.\n\nWhen you attempt to write the document (using `.ToJson()` or maybe in an Update command) it causes the `GuidConverter` to raise the `InvalidOperationException(\"Unable to convert byte array to Guid because GuidByteOrder is Unspecified.\")`.\n\nI think a proper fix would be to have the `BsonDocumentWriter` pass the GuidByteOrder to the `BsonBinaryData` instance it creates via an overloaded `WriteBinaryData` method so that the resulting BsonDocument should be the same as it if was created via the initializer:\n\n```\nvar document = new BsonDocument {\n    { \"guid\", new Guid(\"B5F21E0C2A0D42d6AD03D827008D8AB6\") }\n};\n```\n\nHope that makes sense!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb218912b45d36a0a83",
    "number": 61,
    "body": "I added a source of custom bson type mappers to BsonTypeMapper to create custom mappers for custom types, an example might be a custom Date struct to hold only dates instead of using DateTime in code.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb318912b45d36a0a84",
    "number": 60,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb418912b45d36a0a85",
    "number": 59,
    "body": "To test please see https://gist.github.com/854911/7def1047479f5627f492c837992b9776bee4255e\n\nLong story short is I added a constror that converts a non-generic IDictionary into an UpdateDocument and a QueryDocument,\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb518912b45d36a0a86",
    "number": 58,
    "body": "Currently if you call GridFS.OpenWrite(filename, options), and the MongoGridFSCreateOptions class contains a metadata BsonDocument, the information in the metadata BsonDocument does not get persisted to Mongo.  This is because the Metadata property does not get added to the BsonDocument which gets stored in the files collection.  \n\nI've added the metadata property to this BsonDocument in the MongoGridFSStream class.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fdfcc71f4ae2580f952eb6c274b0a2f653b052cb into 988a4a95a028f92a5c08b435900fbf0a5b018999"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb618912b45d36a0a87",
    "number": 57,
    "body": "Hi Robert\n\nLet me know if this makes sense or I'm just mis-using GridFS ...\n\nI'm using http://www.plupload.com/ to upload files which sends them to the web-server in multiple chunks. Each request needs to open a separate instance of MongoGridFSStream to append its piece. I was finding that, especially for larger files, the update of the MD5 hash when closing each stream was really impacting performance with the MongoDB server:\n\n```\nTue May 03 09:59:35 [conn129] query webUpload.$cmd ntoreturn:1 command: { filemd5: ObjectId('4dc0265f06d4901420628f4c'), root: \"fs\" } reslen:110 110ms\nTue May 03 09:59:35 [conn129] query webUpload.$cmd ntoreturn:1 command: { filemd5: ObjectId('4dc0265f06d4901420628f4c'), root: \"fs\" } reslen:110 126ms\nTue May 03 09:59:35 [conn129] query webUpload.$cmd ntoreturn:1 command: { filemd5: ObjectId('4dc0265f06d4901420628f4c'), root: \"fs\" } reslen:110 120ms\n```\n\nSo, I've added an extra option on the constructor to enable the MD5 update to be disabled. The idea would be that it's either enabled when opening a stream to write the last piece or a Complete() method can be called to indicate that the file is complete. e.g.:\n\n``` c#\nvar fileInfo = new MongoGridFSFileInfo(gridFs, name);\nvar complete = UploadWasntChunkedOrLastChunkWasReceived(chunk, chunks);\ngridFsStream = new MongoGridFSStream(fileInfo, FileMode.Append, FileAccess.Write, complete);\n```\n\nor\n\n``` c#\nif (UploadWasntChunkedOrLastChunkWasReceived(chunk, chunks))\n    gridFsStream.Complete();\n```\n\nA side-effect is that you can tell if a GridFS file is still being written to (because the MD5 hash is empty until its complete).\n\nLet me know what you think. I didn't add the parameter to the MongoGridFS Open() methods yet in-case the approach is fundamentally wrong.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb718912b45d36a0a88",
    "number": 56,
    "body": "ShouldSerializeXXX is a feature in .Net Framework to provide control of Serialization and Deserialization of Properties/members at runtime instead of compile time.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb818912b45d36a0a89",
    "number": 55,
    "body": "Implement CSHARP-205: Added generic inert methods to make powershell work.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbb918912b45d36a0a8a",
    "number": 54,
    "body": "Changed IIdGenerator to accept the original document. This supports the scenario where the IIdGenerator implementation requires access to the document for which the id is being generated.\n\nWe are using this in the case where id's are generated on the server (such as with \"hilo\") where the deserialised instance of the document is useful for determining the scope for id generation.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merged 2bd811720854492f3575dd6cb49078374e57c1ee into b4f7aa9b1d70f227c348af24f86a8fab1d3e792c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6620fbba18912b45d36a0a8b",
    "number": 53,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbbb18912b45d36a0a8c",
    "number": 52,
    "body": "I was getting an error in my development environment which was causing me security exceptions. I have added a line to the assembly info which fixed the problem.\n\nI don't want to enable this by default for everyone, but I did want to note it in the drivers in case someone ran into this issue.\n",
    "head_branch": "partially-trusted-callers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbbc18912b45d36a0a8d",
    "number": 51,
    "body": "Since their signed, they should go into the GAC.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbbd18912b45d36a0a8e",
    "number": 50,
    "body": "To support capped collections greater than 2Gb size\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbbf18912b45d36a0a8f",
    "number": 49,
    "body": "Made it a constructor.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc018912b45d36a0a90",
    "number": 48,
    "body": "CSHARP-179\n",
    "head_branch": "bae9c497a9f93360b51458f9dc55a71ed7723687",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc118912b45d36a0a91",
    "number": 47,
    "body": "This new setting works in Visual Studio 2008 and 2010 as well as SharpDevelop\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc218912b45d36a0a92",
    "number": 46,
    "body": "Looked like SetHint() only allowed full-index definition to set the hint like:\n\ndb.collection.find({a:4,b:5,c:6}).hint({a:1,b:1});\n\nNow can SetHint() with the index name like:\n\ndb.collection.find({a:4,b:5,c:6}).hint(\"a_1_b_1\");\n\nI think this is useful and more consistent with the shell\nhttp://www.mongodb.org/display/DOCS/Optimization#Optimization-Hint\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc318912b45d36a0a93",
    "number": 45,
    "body": "ObservableCollection<T> instances are not serializing correctly by default.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc418912b45d36a0a94",
    "number": 44,
    "body": "The EnsureIndex calls in GridFS were causing exceptions when connected to a non-master database.\n\n```\nSafemode detected an error: not master (response: { \"err\" : \"not master\", \"code\" : 10058, \"n\" : 0, \"ok\" : 1 })\n```\n\nIdeally, it should be able to operate in read-only mode.\n\nThis is an attempt to fix it - not sure if the change should really go in the MongoGridFS class instead whenever EnsureIndex is called (to only call it if connected to a master database) but hopefully the tests demonstrate the issue.\n\nI start a master + slave on the same machine using:\n\n```\nstart bin\\mongod --master\nstart bin\\mongod --slave --source localhost:27017 --dbpath slave --port 27018\n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc518912b45d36a0a95",
    "number": 43,
    "body": "The best example of such properties are properties of type IEnumerables in which you can store some internal LINQ implementations of IEnumerable.\n\nYou can look at the commit that I'am pulling - it has a test that shows the bugy use case. Additional in the fixed class (BsonClassMapSerializer) you will find some info's that explain why the previous implementation was incorrect.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc618912b45d36a0a96",
    "number": 42,
    "body": "Proposed fix to support nullable enums.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc718912b45d36a0a97",
    "number": 41,
    "body": "A nullable enum will appear in the serializer as a normal enum and will thus not have actualType == nominalType. Added an extra check for the Nullable<enum>.\n\nThis should probably be implemented for all structs, but I'm not sure if there would be a central place to do this.\n",
    "head_branch": "f9a4e373ccde47758fa4e098d7f97b724c1f5750",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc818912b45d36a0a98",
    "number": 40,
    "body": "Hi Robert\n\nI added an extra flag to support the 'upsert' option for FindAndModify as described here:\nhttp://www.mongodb.org/display/DOCS/findAndModify+Command\n\nRegards\n- Simon\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbc918912b45d36a0a99",
    "number": 39,
    "body": "I am working on a dynamic library allowing access to mongodb.  I have created an IBsonSerializationProvider that simply wraps the BsonDefaultSerializer but calls out early if the type is dynamic.  Anyways, I feel this is a bit overly complicated, particularly when I want to work with the default serializer.  Anyways, I added a missingSerializerCallback to handle this in which I can provided missing serializers at runtime based on more than a type.\n\nIt's a simple implementation that should not cause any issues.\n",
    "head_branch": "missingserializer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbca18912b45d36a0a9a",
    "number": 38,
    "body": "There are operations on the reader that will change the state of bookmarks that were returned earlier from GetBookmark(). This is probably not intended behavior. I have created a fix by cloning the Context property before passing it out and when passing it in (the reverse case should also not be possible). Unit test added.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbcb18912b45d36a0a9b",
    "number": 37,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbcc18912b45d36a0a9c",
    "number": 36,
    "body": "Allows Query.And to work with multiple conditions for the same field. For example, Query.And(Query.GT(\"xzy\", 5), Query.LT(\"xyz\", 20)) is now allowed.\n\nMore detailed exceptions are thrown for invalid conditions, such as Query.And(Query.EQ(\"xzy\", 5), Query.EQ(\"xyz\", 20)).\n\nSee http://jira.mongodb.org/browse/CSHARP-137\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbcd18912b45d36a0a9d",
    "number": 35,
    "body": "Hello.\nOur project use Mongo as primary database.\nDuring development we have implemented strongly-typed wrapper for QueryBuilder and UpdateBuilder.\nI thought it might be useful to others. :)\n\nThe use cases are available at TypedQueryBuilderTests.cs.\n\nIt's not complete yet, but it satisfy our current project needs.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbce18912b45d36a0a9e",
    "number": 34,
    "body": "Serialize dates as ISO UTC strings is useful in some scenarios\nSome unit tests will fail if developer has regional settings that use comma as decimal separator\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd018912b45d36a0a9f",
    "number": 33,
    "body": "Sorry, I guess my git newby-ness shows a bit. I forgot the autocrlf setting again, so I reverted that commit and committed again.\n\nI have to work on my git karma.\n\nTeun\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd118912b45d36a0aa0",
    "number": 32,
    "body": "skip 'null' query on Query.And()\nskip 'null' query on Query.Or()\n\nthese modify is very useful.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd218912b45d36a0aa1",
    "number": 31,
    "body": "In both cases, I'm not quite sure if my fixes are fitting with the current architecture. They both help in my project and seem to work, but maybe fixes could be done better in another part of the code.\n\nThanks for the great work,\nTeun\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd318912b45d36a0aa2",
    "number": 30,
    "body": "Hi Robert\n\nYour work on this driver is awesome!\n\nI just came across this minor issue when trying to use a complex query with a compound key. Sorry it just missed a release but it's probably an edge case.\n\nCheers\n- Simon\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd418912b45d36a0aa3",
    "number": 29,
    "body": "I added a test and filled out the implementation for GeoNearResult. \n\nNotes:\n- The codebase is new to me and the implementation needs work, hopefully a starting point though.\n- My use of deserialization seems suboptimal. This was the best way I could find without digging into the driver internals.\n- Seems slow, not sure which layer is causing that yet. (Had verbose logging turned on for mongod. All better now.)\n- Based on the mongo docs it looks like there should be more parameters on the GeoNear call.\n- First time using git. Please let me know if I did something wrong.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd518912b45d36a0aa4",
    "number": 28,
    "body": "This will allow 3rd party libraries to store additional information in class maps or globally in a convention profile.  This is needed for things like my linq provider and future ideas I have related to change tracking.\n",
    "head_branch": "convention_extensions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd618912b45d36a0aa5",
    "number": 27,
    "body": "Initial LINQ implementation based off Craig's work\n",
    "head_branch": "linq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd718912b45d36a0aa6",
    "number": 24,
    "body": "Code and idea borrowed from NoRM...  Having implicit conversions between ObjectId and String allows for easier object mappings with frameworks like AutoMapper or ASP.NET MVC Model data binding.  \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd818912b45d36a0aa7",
    "number": 22,
    "body": "Adds a quick-and-dirty compatibility fix for mono, verified on mac.\n\nBasically, what's happening is that the driver defaults to send and receive buffer sizes that are 4 megs. This is too big for Mono, so the driver will error out.\n\nThis fix detects mono and sets the default buffer size to 2 megs. Verified on mac, untested on Linux.\n",
    "head_branch": "c33f39f0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbd918912b45d36a0aa8",
    "number": 21,
    "body": "I forgot to make this part of the original commit. (I don't use git very often)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbdb18912b45d36a0aa9",
    "number": 20,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbdc18912b45d36a0aaa",
    "number": 19,
    "body": "",
    "head_branch": "perf2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbdd18912b45d36a0aab",
    "number": 17,
    "body": "fix large batch insert\n",
    "head_branch": "largeinsert",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbde18912b45d36a0aac",
    "number": 16,
    "body": "",
    "head_branch": "perf1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbdf18912b45d36a0aad",
    "number": 15,
    "body": "This is to allow for fields to be mapped in addition to properties.\n",
    "head_branch": "proptomem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe018912b45d36a0aae",
    "number": 14,
    "body": "This makes it easier to bootstrap into the code\n\nI will (sometime soon) add the package target based on the script in \"packages\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe118912b45d36a0aaf",
    "number": 13,
    "body": "I added a fix for CSHARP-70.  At the same time, I added an IPropertyFinderConvention to allow for customization of finding which properties to map.\n",
    "head_branch": "csharp70",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe218912b45d36a0ab0",
    "number": 12,
    "body": "I fixed an issue when the id property was discovered late in the mapping cycle.  It wouldn't get it's element name changed to \"_id\" which would break the deserialization process.\n\nI also changed the IIdPropertyConvention to take a type and return a property info so as to allow the possibility of discovering an Id property that wasn't necessarily mapped (like a private property).  In addition, it allows for better future extensibility and easier to write custom IIdPropertyConventions.\n",
    "head_branch": "idconvention",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe318912b45d36a0ab1",
    "number": 11,
    "body": "I needed this primarily for the element names so I wouldn't have to go add attributes to all my objects.  \n\nDetails:\n\nI added a convention based approach to configure globally how things work by default.  For instance, there is now an IElementNameConvention that, given a property, will give you back the element name to use.  By default, it simply uses the property name.  There is also a camelCase version that will camel case the property name instead.\n\nThe conventions are housed in a ConventionProfile object.  There is always a default profile object in the BsonClassMap.  In addition, there is a list of (possibly) more profiles as well that each are associated with a filter.  So, in effect, I could ask for all classes in the My.Other.Namespace to be mapped differently than every other class by registering a different convention profile filtered to only types in the My.Other.Namespace namespace.\n\nOne of the other conventions is the IdPropertyConvention that pulls the logic of figuring out which property map is the id.  In doing so, while it would have been easy to keep the existing logic, I forced it to only recognize a property with the name Id as an id attribute. I did read CSHARP-77 and simply disagree with the reporter's idea.  No one uses public properties with underscores in them in C# (except for this guy), and I don't believe a library should promote this type of coding.  That being said, using a convention, the reporter of CSHARP-77 can create his own IdPropertyConvention that finds his _id properties and maps them appropriately.  You can see how the problem is solved at http://github.com/craiggwilson/mongo-csharp-driver/blob/3ebaef6ce85c667014d38060ad163e01dad98d3f/DriverOnlineTests/Jira/CSharp77Tests.cs (obviously, most conventions would be more global than per type, but you can see the power).\n",
    "head_branch": "conventions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe418912b45d36a0ab2",
    "number": 10,
    "body": "added explicit conversion for .NET types for scenarios specifically in map/reduce when the server returns a double that is expected as an integer.  In addition, added support to handle single character string conversion to characters.\n",
    "head_branch": "conversion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe518912b45d36a0ab3",
    "number": 9,
    "body": "Added a sequential guid generator to aid in sorting and disc optimization.\n",
    "head_branch": "idgenerator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe618912b45d36a0ab4",
    "number": 8,
    "body": "I added a comb guid generator to create sequential ids.\n",
    "head_branch": "idgenerator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe718912b45d36a0ab5",
    "number": 7,
    "body": "I have added tests and implemented the fixes for explicit conversion between double, int, and long.  This is to account for map/reduce result problems when expecting an integer but result is a double.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe818912b45d36a0ab6",
    "number": 2,
    "body": "Greetings these two commits will allow those people using Visual Studio 2010 to compile this driver without having to go through project upgrade, and it should have no impact to your existing solutions at all.  Also included is moving the nunit.framework.dll directly into the dependencies folder so that when you get the project it is possible to immediately build.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6620fbe918912b45d36a0ab7",
    "number": 1,
    "body": "The installer will now add the installed folder to the AssemblyFolder path.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66217f94cec3162d1a999741",
    "number": 1312,
    "body": "### Add error handling information to withTransaction docs\r\nThe withTransaction function docs now has more information on error handling to avoid an application entering an infinite loop in the event that a failed command aborts the transaction and causes the transaction to be retried. I've added \"Docs Changes Needed\" to the ticket description, asking the docs team to call this out when the transaction page is created.\r\n\r\n",
    "head_branch": "csharp4828",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66217f95cec3162d1a999742",
    "number": 1311,
    "body": "PR https://github.com/mongodb/mongo-csharp-driver/pull/1305 was accidentally merged when there was a failing test in evergreen. The merged was reverted and this PR is essentially same but with the fix for the failing test.",
    "head_branch": "csharp5021",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66217f96cec3162d1a999743",
    "number": 1310,
    "body": "Reverts mongodb/mongo-csharp-driver#1305",
    "head_branch": "revert-1305-csharp5021",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"CSHARP-5021: Replace use of DisposableEnvironmentVariable with Enviro…\" (#1310)\n\nThis reverts commit b2b672550cf7a523c234b9657ab5e9694c31726b."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]